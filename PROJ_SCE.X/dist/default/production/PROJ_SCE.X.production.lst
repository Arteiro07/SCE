

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sun Nov 15 21:10:49 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    17                           	psect	cinit,global,class=CODE,merge=1,delta=2
    18                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    20                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    21                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    23                           	psect	clrtext,global,class=CODE,delta=2
    24                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    25                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    26                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    27                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    28                           	psect	text1,local,class=CODE,merge=1,delta=2
    29                           	psect	text2,local,class=CODE,merge=1,delta=2
    30                           	psect	text3,local,class=CODE,merge=1,delta=2
    31                           	psect	text4,local,class=CODE,merge=1,delta=2
    32                           	psect	text5,local,class=CODE,merge=1,delta=2
    33                           	psect	text6,local,class=CODE,merge=1,delta=2
    34                           	psect	text7,local,class=CODE,merge=1,delta=2
    35                           	psect	text8,local,class=CODE,merge=1,delta=2
    36                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    38                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    40                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    41                           	psect	text14,local,class=CODE,merge=1,delta=2
    42                           	psect	text15,local,class=CODE,merge=1,delta=2
    43                           	psect	text16,local,class=CODE,merge=1,delta=2
    44                           	psect	text17,local,class=CODE,merge=1,delta=2
    45                           	psect	text18,local,class=CODE,merge=1,delta=2
    46                           	psect	text19,local,class=CODE,merge=1,delta=2
    47                           	psect	text20,local,class=CODE,merge=1,delta=2
    48                           	psect	text21,local,class=CODE,merge=1,delta=2
    49                           	psect	text22,local,class=CODE,merge=1,delta=2
    50                           	psect	text23,local,class=CODE,merge=1,delta=2
    51                           	psect	text24,local,class=CODE,merge=1,delta=2
    52                           	psect	text25,local,class=CODE,merge=1,delta=2
    53                           	psect	text26,local,class=CODE,merge=1,delta=2
    54                           	psect	text27,local,class=CODE,merge=1,delta=2
    55                           	psect	text28,local,class=CODE,merge=1,delta=2
    56                           	psect	text29,local,class=CODE,merge=1,delta=2
    57                           	psect	text30,local,class=CODE,merge=1,delta=2
    58                           	psect	text31,local,class=CODE,merge=1,delta=2
    59                           	psect	text32,local,class=CODE,merge=1,delta=2
    60                           	psect	text33,local,class=CODE,merge=1,delta=2
    61                           	psect	text34,local,class=CODE,merge=1,delta=2
    62                           	psect	text35,local,class=CODE,merge=1,delta=2
    63                           	psect	text36,local,class=CODE,merge=1,delta=2
    64                           	psect	text37,local,class=CODE,merge=1,delta=2
    65                           	psect	text38,local,class=CODE,merge=1,delta=2
    66                           	psect	text39,local,class=CODE,merge=1,delta=2
    67                           	psect	text40,local,class=CODE,merge=1,delta=2
    68                           	psect	text41,local,class=CODE,merge=1,delta=2
    69                           	psect	text42,local,class=CODE,merge=1,delta=2
    70                           	psect	text43,local,class=CODE,merge=1,delta=2
    71                           	psect	text44,local,class=CODE,merge=1,delta=2
    72                           	psect	intentry,global,class=CODE,delta=2
    73                           	psect	text46,local,class=CODE,merge=1,delta=2
    74                           	psect	text47,local,class=CODE,merge=1,delta=2
    75                           	psect	text48,local,class=CODE,merge=1,delta=2
    76                           	psect	text49,local,class=CODE,merge=1,delta=2
    77                           	psect	text50,local,class=CODE,merge=1,delta=2
    78                           	psect	text51,local,class=CODE,merge=1,delta=2
    79                           	psect	text52,local,class=CODE,merge=1,delta=2
    80                           	psect	text53,local,class=CODE,merge=1,delta=2
    81                           	psect	text54,local,class=CODE,merge=1,delta=2
    82                           	psect	text55,local,class=CODE,merge=1,delta=2
    83                           	psect	text56,local,class=CODE,merge=1,delta=2
    84                           	psect	text57,local,class=CODE,merge=1,delta=2
    85                           	psect	text58,local,class=CODE,merge=1,delta=2,group=2
    86                           	psect	text59,local,class=CODE,merge=1,delta=2,group=2
    87                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    88                           	dabs	1,0x620,48
    89                           	dabs	1,0x5A3,77
    90                           	dabs	1,0x2373,0,_reg
    91                           	dabs	1,0x7E,2
    92  0000                     
    93                           ; Version 2.20
    94                           ; Generated 30/04/2020 GMT
    95                           ; 
    96                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    97                           ; All rights reserved.
    98                           ; 
    99                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   100                           ; 
   101                           ; Redistribution and use in source and binary forms, with or without modification, are
   102                           ; permitted provided that the following conditions are met:
   103                           ; 
   104                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   105                           ;        conditions and the following disclaimer.
   106                           ; 
   107                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   108                           ;        of conditions and the following disclaimer in the documentation and/or other
   109                           ;        materials provided with the distribution.
   110                           ; 
   111                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   112                           ;        software without specific prior written permission.
   113                           ; 
   114                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   115                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   116                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   117                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   118                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   119                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   120                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   121                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   122                           ; 
   123                           ; 
   124                           ; Code-generator required, PIC16F18875 Definitions
   125                           ; 
   126                           ; SFR Addresses
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001C                     	;# 
   155  001C                     	;# 
   156  001D                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  008C                     	;# 
   161  008C                     	;# 
   162  008D                     	;# 
   163  008E                     	;# 
   164  008E                     	;# 
   165  008F                     	;# 
   166  0090                     	;# 
   167  0090                     	;# 
   168  0091                     	;# 
   169  0093                     	;# 
   170  0094                     	;# 
   171  0095                     	;# 
   172  0096                     	;# 
   173  0097                     	;# 
   174  0098                     	;# 
   175  0099                     	;# 
   176  009A                     	;# 
   177  009B                     	;# 
   178  009C                     	;# 
   179  009D                     	;# 
   180  009E                     	;# 
   181  010C                     	;# 
   182  010D                     	;# 
   183  010E                     	;# 
   184  010E                     	;# 
   185  010F                     	;# 
   186  0110                     	;# 
   187  0110                     	;# 
   188  0111                     	;# 
   189  0112                     	;# 
   190  0112                     	;# 
   191  0113                     	;# 
   192  0114                     	;# 
   193  0114                     	;# 
   194  0115                     	;# 
   195  0116                     	;# 
   196  0116                     	;# 
   197  0117                     	;# 
   198  0119                     	;# 
   199  0119                     	;# 
   200  0119                     	;# 
   201  011A                     	;# 
   202  011A                     	;# 
   203  011A                     	;# 
   204  011B                     	;# 
   205  011B                     	;# 
   206  011B                     	;# 
   207  011B                     	;# 
   208  011B                     	;# 
   209  011C                     	;# 
   210  011C                     	;# 
   211  011C                     	;# 
   212  011D                     	;# 
   213  011D                     	;# 
   214  011D                     	;# 
   215  011E                     	;# 
   216  011E                     	;# 
   217  011E                     	;# 
   218  011F                     	;# 
   219  011F                     	;# 
   220  011F                     	;# 
   221  011F                     	;# 
   222  011F                     	;# 
   223  018C                     	;# 
   224  018D                     	;# 
   225  018E                     	;# 
   226  018F                     	;# 
   227  0190                     	;# 
   228  0191                     	;# 
   229  0192                     	;# 
   230  0196                     	;# 
   231  0197                     	;# 
   232  0198                     	;# 
   233  0199                     	;# 
   234  019A                     	;# 
   235  019B                     	;# 
   236  019C                     	;# 
   237  020C                     	;# 
   238  020C                     	;# 
   239  020D                     	;# 
   240  020E                     	;# 
   241  020F                     	;# 
   242  020F                     	;# 
   243  0210                     	;# 
   244  0210                     	;# 
   245  0211                     	;# 
   246  0211                     	;# 
   247  0212                     	;# 
   248  0212                     	;# 
   249  0213                     	;# 
   250  0214                     	;# 
   251  0215                     	;# 
   252  0215                     	;# 
   253  0216                     	;# 
   254  0216                     	;# 
   255  0217                     	;# 
   256  0217                     	;# 
   257  0218                     	;# 
   258  0218                     	;# 
   259  0219                     	;# 
   260  021A                     	;# 
   261  021B                     	;# 
   262  021B                     	;# 
   263  021C                     	;# 
   264  021C                     	;# 
   265  021D                     	;# 
   266  021D                     	;# 
   267  021E                     	;# 
   268  021F                     	;# 
   269  028C                     	;# 
   270  028C                     	;# 
   271  028D                     	;# 
   272  028D                     	;# 
   273  028E                     	;# 
   274  028F                     	;# 
   275  0290                     	;# 
   276  0290                     	;# 
   277  0291                     	;# 
   278  0292                     	;# 
   279  0292                     	;# 
   280  0293                     	;# 
   281  0293                     	;# 
   282  0294                     	;# 
   283  0295                     	;# 
   284  0296                     	;# 
   285  0296                     	;# 
   286  0297                     	;# 
   287  0298                     	;# 
   288  0298                     	;# 
   289  0299                     	;# 
   290  0299                     	;# 
   291  029A                     	;# 
   292  029B                     	;# 
   293  029C                     	;# 
   294  029C                     	;# 
   295  029D                     	;# 
   296  030C                     	;# 
   297  030C                     	;# 
   298  030D                     	;# 
   299  030E                     	;# 
   300  030F                     	;# 
   301  0310                     	;# 
   302  0310                     	;# 
   303  0311                     	;# 
   304  0312                     	;# 
   305  0313                     	;# 
   306  0314                     	;# 
   307  0314                     	;# 
   308  0315                     	;# 
   309  0316                     	;# 
   310  0317                     	;# 
   311  0318                     	;# 
   312  0318                     	;# 
   313  0319                     	;# 
   314  031A                     	;# 
   315  031B                     	;# 
   316  031C                     	;# 
   317  031C                     	;# 
   318  031D                     	;# 
   319  031E                     	;# 
   320  031F                     	;# 
   321  038C                     	;# 
   322  038C                     	;# 
   323  038D                     	;# 
   324  038E                     	;# 
   325  0390                     	;# 
   326  0390                     	;# 
   327  0391                     	;# 
   328  0392                     	;# 
   329  040C                     	;# 
   330  040D                     	;# 
   331  040E                     	;# 
   332  040F                     	;# 
   333  0410                     	;# 
   334  0411                     	;# 
   335  0416                     	;# 
   336  0416                     	;# 
   337  0417                     	;# 
   338  0418                     	;# 
   339  0418                     	;# 
   340  0419                     	;# 
   341  041A                     	;# 
   342  041A                     	;# 
   343  041B                     	;# 
   344  041C                     	;# 
   345  041C                     	;# 
   346  041D                     	;# 
   347  041E                     	;# 
   348  041F                     	;# 
   349  048C                     	;# 
   350  048C                     	;# 
   351  048D                     	;# 
   352  048E                     	;# 
   353  048F                     	;# 
   354  048F                     	;# 
   355  0490                     	;# 
   356  0491                     	;# 
   357  0492                     	;# 
   358  0492                     	;# 
   359  0493                     	;# 
   360  0494                     	;# 
   361  0495                     	;# 
   362  0495                     	;# 
   363  0496                     	;# 
   364  0497                     	;# 
   365  0498                     	;# 
   366  0499                     	;# 
   367  049A                     	;# 
   368  049B                     	;# 
   369  049C                     	;# 
   370  049D                     	;# 
   371  050C                     	;# 
   372  050C                     	;# 
   373  050D                     	;# 
   374  050E                     	;# 
   375  050F                     	;# 
   376  050F                     	;# 
   377  0510                     	;# 
   378  0511                     	;# 
   379  0512                     	;# 
   380  0512                     	;# 
   381  0513                     	;# 
   382  0514                     	;# 
   383  0515                     	;# 
   384  0515                     	;# 
   385  0516                     	;# 
   386  0517                     	;# 
   387  0518                     	;# 
   388  0519                     	;# 
   389  051A                     	;# 
   390  051B                     	;# 
   391  051C                     	;# 
   392  051D                     	;# 
   393  058C                     	;# 
   394  058C                     	;# 
   395  058D                     	;# 
   396  058E                     	;# 
   397  058F                     	;# 
   398  058F                     	;# 
   399  0590                     	;# 
   400  0591                     	;# 
   401  0592                     	;# 
   402  0593                     	;# 
   403  060C                     	;# 
   404  060D                     	;# 
   405  060E                     	;# 
   406  060F                     	;# 
   407  0610                     	;# 
   408  0611                     	;# 
   409  0612                     	;# 
   410  0613                     	;# 
   411  0614                     	;# 
   412  0616                     	;# 
   413  0617                     	;# 
   414  0618                     	;# 
   415  0619                     	;# 
   416  061A                     	;# 
   417  061B                     	;# 
   418  061C                     	;# 
   419  061D                     	;# 
   420  061E                     	;# 
   421  068C                     	;# 
   422  068D                     	;# 
   423  068E                     	;# 
   424  068F                     	;# 
   425  0690                     	;# 
   426  0691                     	;# 
   427  0692                     	;# 
   428  0693                     	;# 
   429  0694                     	;# 
   430  070C                     	;# 
   431  070D                     	;# 
   432  070E                     	;# 
   433  070F                     	;# 
   434  0710                     	;# 
   435  0711                     	;# 
   436  0712                     	;# 
   437  0713                     	;# 
   438  0714                     	;# 
   439  0716                     	;# 
   440  0717                     	;# 
   441  0718                     	;# 
   442  0719                     	;# 
   443  071A                     	;# 
   444  071B                     	;# 
   445  071C                     	;# 
   446  071D                     	;# 
   447  071E                     	;# 
   448  0796                     	;# 
   449  0797                     	;# 
   450  0798                     	;# 
   451  0799                     	;# 
   452  079A                     	;# 
   453  079B                     	;# 
   454  080C                     	;# 
   455  080D                     	;# 
   456  080E                     	;# 
   457  080F                     	;# 
   458  0810                     	;# 
   459  0811                     	;# 
   460  0812                     	;# 
   461  0813                     	;# 
   462  0814                     	;# 
   463  081A                     	;# 
   464  081B                     	;# 
   465  081C                     	;# 
   466  081D                     	;# 
   467  081E                     	;# 
   468  081F                     	;# 
   469  088C                     	;# 
   470  088D                     	;# 
   471  088E                     	;# 
   472  088F                     	;# 
   473  0890                     	;# 
   474  0891                     	;# 
   475  0892                     	;# 
   476  0893                     	;# 
   477  0895                     	;# 
   478  0896                     	;# 
   479  0897                     	;# 
   480  0898                     	;# 
   481  0899                     	;# 
   482  089A                     	;# 
   483  089B                     	;# 
   484  090C                     	;# 
   485  090E                     	;# 
   486  090F                     	;# 
   487  091F                     	;# 
   488  091F                     	;# 
   489  098F                     	;# 
   490  098F                     	;# 
   491  0990                     	;# 
   492  0991                     	;# 
   493  0992                     	;# 
   494  0993                     	;# 
   495  0994                     	;# 
   496  0995                     	;# 
   497  0996                     	;# 
   498  0997                     	;# 
   499  0E0F                     	;# 
   500  0E10                     	;# 
   501  0E11                     	;# 
   502  0E12                     	;# 
   503  0E13                     	;# 
   504  0E14                     	;# 
   505  0E15                     	;# 
   506  0E16                     	;# 
   507  0E17                     	;# 
   508  0E18                     	;# 
   509  0E19                     	;# 
   510  0E1A                     	;# 
   511  0E1B                     	;# 
   512  0E1C                     	;# 
   513  0E1D                     	;# 
   514  0E1E                     	;# 
   515  0E1F                     	;# 
   516  0E20                     	;# 
   517  0E21                     	;# 
   518  0E22                     	;# 
   519  0E23                     	;# 
   520  0E24                     	;# 
   521  0E25                     	;# 
   522  0E26                     	;# 
   523  0E27                     	;# 
   524  0E28                     	;# 
   525  0E29                     	;# 
   526  0E2A                     	;# 
   527  0E2B                     	;# 
   528  0E2C                     	;# 
   529  0E2D                     	;# 
   530  0E2E                     	;# 
   531  0E2F                     	;# 
   532  0E30                     	;# 
   533  0E31                     	;# 
   534  0E32                     	;# 
   535  0E33                     	;# 
   536  0E34                     	;# 
   537  0E35                     	;# 
   538  0E36                     	;# 
   539  0E37                     	;# 
   540  0E8F                     	;# 
   541  0E90                     	;# 
   542  0E91                     	;# 
   543  0E92                     	;# 
   544  0E93                     	;# 
   545  0E94                     	;# 
   546  0E95                     	;# 
   547  0E96                     	;# 
   548  0E97                     	;# 
   549  0E9C                     	;# 
   550  0E9D                     	;# 
   551  0E9E                     	;# 
   552  0EA1                     	;# 
   553  0EA2                     	;# 
   554  0EA3                     	;# 
   555  0EA4                     	;# 
   556  0EA5                     	;# 
   557  0EA9                     	;# 
   558  0EAA                     	;# 
   559  0EAB                     	;# 
   560  0EAC                     	;# 
   561  0EB1                     	;# 
   562  0EB2                     	;# 
   563  0EB3                     	;# 
   564  0EB8                     	;# 
   565  0EB9                     	;# 
   566  0EBA                     	;# 
   567  0EBB                     	;# 
   568  0EBC                     	;# 
   569  0EBD                     	;# 
   570  0EBE                     	;# 
   571  0EC3                     	;# 
   572  0EC5                     	;# 
   573  0EC6                     	;# 
   574  0EC7                     	;# 
   575  0EC8                     	;# 
   576  0EC9                     	;# 
   577  0ECA                     	;# 
   578  0ECB                     	;# 
   579  0ECC                     	;# 
   580  0F10                     	;# 
   581  0F11                     	;# 
   582  0F12                     	;# 
   583  0F13                     	;# 
   584  0F14                     	;# 
   585  0F15                     	;# 
   586  0F16                     	;# 
   587  0F17                     	;# 
   588  0F18                     	;# 
   589  0F19                     	;# 
   590  0F1A                     	;# 
   591  0F1B                     	;# 
   592  0F1C                     	;# 
   593  0F1D                     	;# 
   594  0F1E                     	;# 
   595  0F1F                     	;# 
   596  0F20                     	;# 
   597  0F21                     	;# 
   598  0F22                     	;# 
   599  0F23                     	;# 
   600  0F24                     	;# 
   601  0F25                     	;# 
   602  0F26                     	;# 
   603  0F27                     	;# 
   604  0F28                     	;# 
   605  0F29                     	;# 
   606  0F2A                     	;# 
   607  0F2B                     	;# 
   608  0F2C                     	;# 
   609  0F2D                     	;# 
   610  0F2E                     	;# 
   611  0F2F                     	;# 
   612  0F30                     	;# 
   613  0F31                     	;# 
   614  0F32                     	;# 
   615  0F38                     	;# 
   616  0F39                     	;# 
   617  0F3A                     	;# 
   618  0F3B                     	;# 
   619  0F3C                     	;# 
   620  0F3D                     	;# 
   621  0F3E                     	;# 
   622  0F3F                     	;# 
   623  0F40                     	;# 
   624  0F41                     	;# 
   625  0F43                     	;# 
   626  0F44                     	;# 
   627  0F45                     	;# 
   628  0F46                     	;# 
   629  0F47                     	;# 
   630  0F48                     	;# 
   631  0F49                     	;# 
   632  0F4A                     	;# 
   633  0F4B                     	;# 
   634  0F4C                     	;# 
   635  0F4E                     	;# 
   636  0F4F                     	;# 
   637  0F50                     	;# 
   638  0F51                     	;# 
   639  0F52                     	;# 
   640  0F53                     	;# 
   641  0F54                     	;# 
   642  0F55                     	;# 
   643  0F56                     	;# 
   644  0F57                     	;# 
   645  0F59                     	;# 
   646  0F5A                     	;# 
   647  0F5B                     	;# 
   648  0F5C                     	;# 
   649  0F5D                     	;# 
   650  0F61                     	;# 
   651  0F62                     	;# 
   652  0F64                     	;# 
   653  0F65                     	;# 
   654  0F66                     	;# 
   655  0F67                     	;# 
   656  0F68                     	;# 
   657  0F69                     	;# 
   658  0F6A                     	;# 
   659  0F6B                     	;# 
   660  0F6C                     	;# 
   661  0F6D                     	;# 
   662  0FE4                     	;# 
   663  0FE5                     	;# 
   664  0FE6                     	;# 
   665  0FE7                     	;# 
   666  0FE8                     	;# 
   667  0FE9                     	;# 
   668  0FEA                     	;# 
   669  0FEB                     	;# 
   670  0FED                     	;# 
   671  0FEE                     	;# 
   672  0FEF                     	;# 
   673  0000                     	;# 
   674  0001                     	;# 
   675  0002                     	;# 
   676  0003                     	;# 
   677  0004                     	;# 
   678  0005                     	;# 
   679  0006                     	;# 
   680  0007                     	;# 
   681  0008                     	;# 
   682  0009                     	;# 
   683  000A                     	;# 
   684  000B                     	;# 
   685  000C                     	;# 
   686  000D                     	;# 
   687  000E                     	;# 
   688  000F                     	;# 
   689  0010                     	;# 
   690  0011                     	;# 
   691  0012                     	;# 
   692  0013                     	;# 
   693  0014                     	;# 
   694  0015                     	;# 
   695  0016                     	;# 
   696  0017                     	;# 
   697  0018                     	;# 
   698  0019                     	;# 
   699  001A                     	;# 
   700  001C                     	;# 
   701  001C                     	;# 
   702  001D                     	;# 
   703  001D                     	;# 
   704  001E                     	;# 
   705  001F                     	;# 
   706  008C                     	;# 
   707  008C                     	;# 
   708  008D                     	;# 
   709  008E                     	;# 
   710  008E                     	;# 
   711  008F                     	;# 
   712  0090                     	;# 
   713  0090                     	;# 
   714  0091                     	;# 
   715  0093                     	;# 
   716  0094                     	;# 
   717  0095                     	;# 
   718  0096                     	;# 
   719  0097                     	;# 
   720  0098                     	;# 
   721  0099                     	;# 
   722  009A                     	;# 
   723  009B                     	;# 
   724  009C                     	;# 
   725  009D                     	;# 
   726  009E                     	;# 
   727  010C                     	;# 
   728  010D                     	;# 
   729  010E                     	;# 
   730  010E                     	;# 
   731  010F                     	;# 
   732  0110                     	;# 
   733  0110                     	;# 
   734  0111                     	;# 
   735  0112                     	;# 
   736  0112                     	;# 
   737  0113                     	;# 
   738  0114                     	;# 
   739  0114                     	;# 
   740  0115                     	;# 
   741  0116                     	;# 
   742  0116                     	;# 
   743  0117                     	;# 
   744  0119                     	;# 
   745  0119                     	;# 
   746  0119                     	;# 
   747  011A                     	;# 
   748  011A                     	;# 
   749  011A                     	;# 
   750  011B                     	;# 
   751  011B                     	;# 
   752  011B                     	;# 
   753  011B                     	;# 
   754  011B                     	;# 
   755  011C                     	;# 
   756  011C                     	;# 
   757  011C                     	;# 
   758  011D                     	;# 
   759  011D                     	;# 
   760  011D                     	;# 
   761  011E                     	;# 
   762  011E                     	;# 
   763  011E                     	;# 
   764  011F                     	;# 
   765  011F                     	;# 
   766  011F                     	;# 
   767  011F                     	;# 
   768  011F                     	;# 
   769  018C                     	;# 
   770  018D                     	;# 
   771  018E                     	;# 
   772  018F                     	;# 
   773  0190                     	;# 
   774  0191                     	;# 
   775  0192                     	;# 
   776  0196                     	;# 
   777  0197                     	;# 
   778  0198                     	;# 
   779  0199                     	;# 
   780  019A                     	;# 
   781  019B                     	;# 
   782  019C                     	;# 
   783  020C                     	;# 
   784  020C                     	;# 
   785  020D                     	;# 
   786  020E                     	;# 
   787  020F                     	;# 
   788  020F                     	;# 
   789  0210                     	;# 
   790  0210                     	;# 
   791  0211                     	;# 
   792  0211                     	;# 
   793  0212                     	;# 
   794  0212                     	;# 
   795  0213                     	;# 
   796  0214                     	;# 
   797  0215                     	;# 
   798  0215                     	;# 
   799  0216                     	;# 
   800  0216                     	;# 
   801  0217                     	;# 
   802  0217                     	;# 
   803  0218                     	;# 
   804  0218                     	;# 
   805  0219                     	;# 
   806  021A                     	;# 
   807  021B                     	;# 
   808  021B                     	;# 
   809  021C                     	;# 
   810  021C                     	;# 
   811  021D                     	;# 
   812  021D                     	;# 
   813  021E                     	;# 
   814  021F                     	;# 
   815  028C                     	;# 
   816  028C                     	;# 
   817  028D                     	;# 
   818  028D                     	;# 
   819  028E                     	;# 
   820  028F                     	;# 
   821  0290                     	;# 
   822  0290                     	;# 
   823  0291                     	;# 
   824  0292                     	;# 
   825  0292                     	;# 
   826  0293                     	;# 
   827  0293                     	;# 
   828  0294                     	;# 
   829  0295                     	;# 
   830  0296                     	;# 
   831  0296                     	;# 
   832  0297                     	;# 
   833  0298                     	;# 
   834  0298                     	;# 
   835  0299                     	;# 
   836  0299                     	;# 
   837  029A                     	;# 
   838  029B                     	;# 
   839  029C                     	;# 
   840  029C                     	;# 
   841  029D                     	;# 
   842  030C                     	;# 
   843  030C                     	;# 
   844  030D                     	;# 
   845  030E                     	;# 
   846  030F                     	;# 
   847  0310                     	;# 
   848  0310                     	;# 
   849  0311                     	;# 
   850  0312                     	;# 
   851  0313                     	;# 
   852  0314                     	;# 
   853  0314                     	;# 
   854  0315                     	;# 
   855  0316                     	;# 
   856  0317                     	;# 
   857  0318                     	;# 
   858  0318                     	;# 
   859  0319                     	;# 
   860  031A                     	;# 
   861  031B                     	;# 
   862  031C                     	;# 
   863  031C                     	;# 
   864  031D                     	;# 
   865  031E                     	;# 
   866  031F                     	;# 
   867  038C                     	;# 
   868  038C                     	;# 
   869  038D                     	;# 
   870  038E                     	;# 
   871  0390                     	;# 
   872  0390                     	;# 
   873  0391                     	;# 
   874  0392                     	;# 
   875  040C                     	;# 
   876  040D                     	;# 
   877  040E                     	;# 
   878  040F                     	;# 
   879  0410                     	;# 
   880  0411                     	;# 
   881  0416                     	;# 
   882  0416                     	;# 
   883  0417                     	;# 
   884  0418                     	;# 
   885  0418                     	;# 
   886  0419                     	;# 
   887  041A                     	;# 
   888  041A                     	;# 
   889  041B                     	;# 
   890  041C                     	;# 
   891  041C                     	;# 
   892  041D                     	;# 
   893  041E                     	;# 
   894  041F                     	;# 
   895  048C                     	;# 
   896  048C                     	;# 
   897  048D                     	;# 
   898  048E                     	;# 
   899  048F                     	;# 
   900  048F                     	;# 
   901  0490                     	;# 
   902  0491                     	;# 
   903  0492                     	;# 
   904  0492                     	;# 
   905  0493                     	;# 
   906  0494                     	;# 
   907  0495                     	;# 
   908  0495                     	;# 
   909  0496                     	;# 
   910  0497                     	;# 
   911  0498                     	;# 
   912  0499                     	;# 
   913  049A                     	;# 
   914  049B                     	;# 
   915  049C                     	;# 
   916  049D                     	;# 
   917  050C                     	;# 
   918  050C                     	;# 
   919  050D                     	;# 
   920  050E                     	;# 
   921  050F                     	;# 
   922  050F                     	;# 
   923  0510                     	;# 
   924  0511                     	;# 
   925  0512                     	;# 
   926  0512                     	;# 
   927  0513                     	;# 
   928  0514                     	;# 
   929  0515                     	;# 
   930  0515                     	;# 
   931  0516                     	;# 
   932  0517                     	;# 
   933  0518                     	;# 
   934  0519                     	;# 
   935  051A                     	;# 
   936  051B                     	;# 
   937  051C                     	;# 
   938  051D                     	;# 
   939  058C                     	;# 
   940  058C                     	;# 
   941  058D                     	;# 
   942  058E                     	;# 
   943  058F                     	;# 
   944  058F                     	;# 
   945  0590                     	;# 
   946  0591                     	;# 
   947  0592                     	;# 
   948  0593                     	;# 
   949  060C                     	;# 
   950  060D                     	;# 
   951  060E                     	;# 
   952  060F                     	;# 
   953  0610                     	;# 
   954  0611                     	;# 
   955  0612                     	;# 
   956  0613                     	;# 
   957  0614                     	;# 
   958  0616                     	;# 
   959  0617                     	;# 
   960  0618                     	;# 
   961  0619                     	;# 
   962  061A                     	;# 
   963  061B                     	;# 
   964  061C                     	;# 
   965  061D                     	;# 
   966  061E                     	;# 
   967  068C                     	;# 
   968  068D                     	;# 
   969  068E                     	;# 
   970  068F                     	;# 
   971  0690                     	;# 
   972  0691                     	;# 
   973  0692                     	;# 
   974  0693                     	;# 
   975  0694                     	;# 
   976  070C                     	;# 
   977  070D                     	;# 
   978  070E                     	;# 
   979  070F                     	;# 
   980  0710                     	;# 
   981  0711                     	;# 
   982  0712                     	;# 
   983  0713                     	;# 
   984  0714                     	;# 
   985  0716                     	;# 
   986  0717                     	;# 
   987  0718                     	;# 
   988  0719                     	;# 
   989  071A                     	;# 
   990  071B                     	;# 
   991  071C                     	;# 
   992  071D                     	;# 
   993  071E                     	;# 
   994  0796                     	;# 
   995  0797                     	;# 
   996  0798                     	;# 
   997  0799                     	;# 
   998  079A                     	;# 
   999  079B                     	;# 
  1000  080C                     	;# 
  1001  080D                     	;# 
  1002  080E                     	;# 
  1003  080F                     	;# 
  1004  0810                     	;# 
  1005  0811                     	;# 
  1006  0812                     	;# 
  1007  0813                     	;# 
  1008  0814                     	;# 
  1009  081A                     	;# 
  1010  081B                     	;# 
  1011  081C                     	;# 
  1012  081D                     	;# 
  1013  081E                     	;# 
  1014  081F                     	;# 
  1015  088C                     	;# 
  1016  088D                     	;# 
  1017  088E                     	;# 
  1018  088F                     	;# 
  1019  0890                     	;# 
  1020  0891                     	;# 
  1021  0892                     	;# 
  1022  0893                     	;# 
  1023  0895                     	;# 
  1024  0896                     	;# 
  1025  0897                     	;# 
  1026  0898                     	;# 
  1027  0899                     	;# 
  1028  089A                     	;# 
  1029  089B                     	;# 
  1030  090C                     	;# 
  1031  090E                     	;# 
  1032  090F                     	;# 
  1033  091F                     	;# 
  1034  091F                     	;# 
  1035  098F                     	;# 
  1036  098F                     	;# 
  1037  0990                     	;# 
  1038  0991                     	;# 
  1039  0992                     	;# 
  1040  0993                     	;# 
  1041  0994                     	;# 
  1042  0995                     	;# 
  1043  0996                     	;# 
  1044  0997                     	;# 
  1045  0E0F                     	;# 
  1046  0E10                     	;# 
  1047  0E11                     	;# 
  1048  0E12                     	;# 
  1049  0E13                     	;# 
  1050  0E14                     	;# 
  1051  0E15                     	;# 
  1052  0E16                     	;# 
  1053  0E17                     	;# 
  1054  0E18                     	;# 
  1055  0E19                     	;# 
  1056  0E1A                     	;# 
  1057  0E1B                     	;# 
  1058  0E1C                     	;# 
  1059  0E1D                     	;# 
  1060  0E1E                     	;# 
  1061  0E1F                     	;# 
  1062  0E20                     	;# 
  1063  0E21                     	;# 
  1064  0E22                     	;# 
  1065  0E23                     	;# 
  1066  0E24                     	;# 
  1067  0E25                     	;# 
  1068  0E26                     	;# 
  1069  0E27                     	;# 
  1070  0E28                     	;# 
  1071  0E29                     	;# 
  1072  0E2A                     	;# 
  1073  0E2B                     	;# 
  1074  0E2C                     	;# 
  1075  0E2D                     	;# 
  1076  0E2E                     	;# 
  1077  0E2F                     	;# 
  1078  0E30                     	;# 
  1079  0E31                     	;# 
  1080  0E32                     	;# 
  1081  0E33                     	;# 
  1082  0E34                     	;# 
  1083  0E35                     	;# 
  1084  0E36                     	;# 
  1085  0E37                     	;# 
  1086  0E8F                     	;# 
  1087  0E90                     	;# 
  1088  0E91                     	;# 
  1089  0E92                     	;# 
  1090  0E93                     	;# 
  1091  0E94                     	;# 
  1092  0E95                     	;# 
  1093  0E96                     	;# 
  1094  0E97                     	;# 
  1095  0E9C                     	;# 
  1096  0E9D                     	;# 
  1097  0E9E                     	;# 
  1098  0EA1                     	;# 
  1099  0EA2                     	;# 
  1100  0EA3                     	;# 
  1101  0EA4                     	;# 
  1102  0EA5                     	;# 
  1103  0EA9                     	;# 
  1104  0EAA                     	;# 
  1105  0EAB                     	;# 
  1106  0EAC                     	;# 
  1107  0EB1                     	;# 
  1108  0EB2                     	;# 
  1109  0EB3                     	;# 
  1110  0EB8                     	;# 
  1111  0EB9                     	;# 
  1112  0EBA                     	;# 
  1113  0EBB                     	;# 
  1114  0EBC                     	;# 
  1115  0EBD                     	;# 
  1116  0EBE                     	;# 
  1117  0EC3                     	;# 
  1118  0EC5                     	;# 
  1119  0EC6                     	;# 
  1120  0EC7                     	;# 
  1121  0EC8                     	;# 
  1122  0EC9                     	;# 
  1123  0ECA                     	;# 
  1124  0ECB                     	;# 
  1125  0ECC                     	;# 
  1126  0F10                     	;# 
  1127  0F11                     	;# 
  1128  0F12                     	;# 
  1129  0F13                     	;# 
  1130  0F14                     	;# 
  1131  0F15                     	;# 
  1132  0F16                     	;# 
  1133  0F17                     	;# 
  1134  0F18                     	;# 
  1135  0F19                     	;# 
  1136  0F1A                     	;# 
  1137  0F1B                     	;# 
  1138  0F1C                     	;# 
  1139  0F1D                     	;# 
  1140  0F1E                     	;# 
  1141  0F1F                     	;# 
  1142  0F20                     	;# 
  1143  0F21                     	;# 
  1144  0F22                     	;# 
  1145  0F23                     	;# 
  1146  0F24                     	;# 
  1147  0F25                     	;# 
  1148  0F26                     	;# 
  1149  0F27                     	;# 
  1150  0F28                     	;# 
  1151  0F29                     	;# 
  1152  0F2A                     	;# 
  1153  0F2B                     	;# 
  1154  0F2C                     	;# 
  1155  0F2D                     	;# 
  1156  0F2E                     	;# 
  1157  0F2F                     	;# 
  1158  0F30                     	;# 
  1159  0F31                     	;# 
  1160  0F32                     	;# 
  1161  0F38                     	;# 
  1162  0F39                     	;# 
  1163  0F3A                     	;# 
  1164  0F3B                     	;# 
  1165  0F3C                     	;# 
  1166  0F3D                     	;# 
  1167  0F3E                     	;# 
  1168  0F3F                     	;# 
  1169  0F40                     	;# 
  1170  0F41                     	;# 
  1171  0F43                     	;# 
  1172  0F44                     	;# 
  1173  0F45                     	;# 
  1174  0F46                     	;# 
  1175  0F47                     	;# 
  1176  0F48                     	;# 
  1177  0F49                     	;# 
  1178  0F4A                     	;# 
  1179  0F4B                     	;# 
  1180  0F4C                     	;# 
  1181  0F4E                     	;# 
  1182  0F4F                     	;# 
  1183  0F50                     	;# 
  1184  0F51                     	;# 
  1185  0F52                     	;# 
  1186  0F53                     	;# 
  1187  0F54                     	;# 
  1188  0F55                     	;# 
  1189  0F56                     	;# 
  1190  0F57                     	;# 
  1191  0F59                     	;# 
  1192  0F5A                     	;# 
  1193  0F5B                     	;# 
  1194  0F5C                     	;# 
  1195  0F5D                     	;# 
  1196  0F61                     	;# 
  1197  0F62                     	;# 
  1198  0F64                     	;# 
  1199  0F65                     	;# 
  1200  0F66                     	;# 
  1201  0F67                     	;# 
  1202  0F68                     	;# 
  1203  0F69                     	;# 
  1204  0F6A                     	;# 
  1205  0F6B                     	;# 
  1206  0F6C                     	;# 
  1207  0F6D                     	;# 
  1208  0FE4                     	;# 
  1209  0FE5                     	;# 
  1210  0FE6                     	;# 
  1211  0FE7                     	;# 
  1212  0FE8                     	;# 
  1213  0FE9                     	;# 
  1214  0FEA                     	;# 
  1215  0FEB                     	;# 
  1216  0FED                     	;# 
  1217  0FEE                     	;# 
  1218  0FEF                     	;# 
  1219  0000                     	;# 
  1220  0001                     	;# 
  1221  0002                     	;# 
  1222  0003                     	;# 
  1223  0004                     	;# 
  1224  0005                     	;# 
  1225  0006                     	;# 
  1226  0007                     	;# 
  1227  0008                     	;# 
  1228  0009                     	;# 
  1229  000A                     	;# 
  1230  000B                     	;# 
  1231  000C                     	;# 
  1232  000D                     	;# 
  1233  000E                     	;# 
  1234  000F                     	;# 
  1235  0010                     	;# 
  1236  0011                     	;# 
  1237  0012                     	;# 
  1238  0013                     	;# 
  1239  0014                     	;# 
  1240  0015                     	;# 
  1241  0016                     	;# 
  1242  0017                     	;# 
  1243  0018                     	;# 
  1244  0019                     	;# 
  1245  001A                     	;# 
  1246  001C                     	;# 
  1247  001C                     	;# 
  1248  001D                     	;# 
  1249  001D                     	;# 
  1250  001E                     	;# 
  1251  001F                     	;# 
  1252  008C                     	;# 
  1253  008C                     	;# 
  1254  008D                     	;# 
  1255  008E                     	;# 
  1256  008E                     	;# 
  1257  008F                     	;# 
  1258  0090                     	;# 
  1259  0090                     	;# 
  1260  0091                     	;# 
  1261  0093                     	;# 
  1262  0094                     	;# 
  1263  0095                     	;# 
  1264  0096                     	;# 
  1265  0097                     	;# 
  1266  0098                     	;# 
  1267  0099                     	;# 
  1268  009A                     	;# 
  1269  009B                     	;# 
  1270  009C                     	;# 
  1271  009D                     	;# 
  1272  009E                     	;# 
  1273  010C                     	;# 
  1274  010D                     	;# 
  1275  010E                     	;# 
  1276  010E                     	;# 
  1277  010F                     	;# 
  1278  0110                     	;# 
  1279  0110                     	;# 
  1280  0111                     	;# 
  1281  0112                     	;# 
  1282  0112                     	;# 
  1283  0113                     	;# 
  1284  0114                     	;# 
  1285  0114                     	;# 
  1286  0115                     	;# 
  1287  0116                     	;# 
  1288  0116                     	;# 
  1289  0117                     	;# 
  1290  0119                     	;# 
  1291  0119                     	;# 
  1292  0119                     	;# 
  1293  011A                     	;# 
  1294  011A                     	;# 
  1295  011A                     	;# 
  1296  011B                     	;# 
  1297  011B                     	;# 
  1298  011B                     	;# 
  1299  011B                     	;# 
  1300  011B                     	;# 
  1301  011C                     	;# 
  1302  011C                     	;# 
  1303  011C                     	;# 
  1304  011D                     	;# 
  1305  011D                     	;# 
  1306  011D                     	;# 
  1307  011E                     	;# 
  1308  011E                     	;# 
  1309  011E                     	;# 
  1310  011F                     	;# 
  1311  011F                     	;# 
  1312  011F                     	;# 
  1313  011F                     	;# 
  1314  011F                     	;# 
  1315  018C                     	;# 
  1316  018D                     	;# 
  1317  018E                     	;# 
  1318  018F                     	;# 
  1319  0190                     	;# 
  1320  0191                     	;# 
  1321  0192                     	;# 
  1322  0196                     	;# 
  1323  0197                     	;# 
  1324  0198                     	;# 
  1325  0199                     	;# 
  1326  019A                     	;# 
  1327  019B                     	;# 
  1328  019C                     	;# 
  1329  020C                     	;# 
  1330  020C                     	;# 
  1331  020D                     	;# 
  1332  020E                     	;# 
  1333  020F                     	;# 
  1334  020F                     	;# 
  1335  0210                     	;# 
  1336  0210                     	;# 
  1337  0211                     	;# 
  1338  0211                     	;# 
  1339  0212                     	;# 
  1340  0212                     	;# 
  1341  0213                     	;# 
  1342  0214                     	;# 
  1343  0215                     	;# 
  1344  0215                     	;# 
  1345  0216                     	;# 
  1346  0216                     	;# 
  1347  0217                     	;# 
  1348  0217                     	;# 
  1349  0218                     	;# 
  1350  0218                     	;# 
  1351  0219                     	;# 
  1352  021A                     	;# 
  1353  021B                     	;# 
  1354  021B                     	;# 
  1355  021C                     	;# 
  1356  021C                     	;# 
  1357  021D                     	;# 
  1358  021D                     	;# 
  1359  021E                     	;# 
  1360  021F                     	;# 
  1361  028C                     	;# 
  1362  028C                     	;# 
  1363  028D                     	;# 
  1364  028D                     	;# 
  1365  028E                     	;# 
  1366  028F                     	;# 
  1367  0290                     	;# 
  1368  0290                     	;# 
  1369  0291                     	;# 
  1370  0292                     	;# 
  1371  0292                     	;# 
  1372  0293                     	;# 
  1373  0293                     	;# 
  1374  0294                     	;# 
  1375  0295                     	;# 
  1376  0296                     	;# 
  1377  0296                     	;# 
  1378  0297                     	;# 
  1379  0298                     	;# 
  1380  0298                     	;# 
  1381  0299                     	;# 
  1382  0299                     	;# 
  1383  029A                     	;# 
  1384  029B                     	;# 
  1385  029C                     	;# 
  1386  029C                     	;# 
  1387  029D                     	;# 
  1388  030C                     	;# 
  1389  030C                     	;# 
  1390  030D                     	;# 
  1391  030E                     	;# 
  1392  030F                     	;# 
  1393  0310                     	;# 
  1394  0310                     	;# 
  1395  0311                     	;# 
  1396  0312                     	;# 
  1397  0313                     	;# 
  1398  0314                     	;# 
  1399  0314                     	;# 
  1400  0315                     	;# 
  1401  0316                     	;# 
  1402  0317                     	;# 
  1403  0318                     	;# 
  1404  0318                     	;# 
  1405  0319                     	;# 
  1406  031A                     	;# 
  1407  031B                     	;# 
  1408  031C                     	;# 
  1409  031C                     	;# 
  1410  031D                     	;# 
  1411  031E                     	;# 
  1412  031F                     	;# 
  1413  038C                     	;# 
  1414  038C                     	;# 
  1415  038D                     	;# 
  1416  038E                     	;# 
  1417  0390                     	;# 
  1418  0390                     	;# 
  1419  0391                     	;# 
  1420  0392                     	;# 
  1421  040C                     	;# 
  1422  040D                     	;# 
  1423  040E                     	;# 
  1424  040F                     	;# 
  1425  0410                     	;# 
  1426  0411                     	;# 
  1427  0416                     	;# 
  1428  0416                     	;# 
  1429  0417                     	;# 
  1430  0418                     	;# 
  1431  0418                     	;# 
  1432  0419                     	;# 
  1433  041A                     	;# 
  1434  041A                     	;# 
  1435  041B                     	;# 
  1436  041C                     	;# 
  1437  041C                     	;# 
  1438  041D                     	;# 
  1439  041E                     	;# 
  1440  041F                     	;# 
  1441  048C                     	;# 
  1442  048C                     	;# 
  1443  048D                     	;# 
  1444  048E                     	;# 
  1445  048F                     	;# 
  1446  048F                     	;# 
  1447  0490                     	;# 
  1448  0491                     	;# 
  1449  0492                     	;# 
  1450  0492                     	;# 
  1451  0493                     	;# 
  1452  0494                     	;# 
  1453  0495                     	;# 
  1454  0495                     	;# 
  1455  0496                     	;# 
  1456  0497                     	;# 
  1457  0498                     	;# 
  1458  0499                     	;# 
  1459  049A                     	;# 
  1460  049B                     	;# 
  1461  049C                     	;# 
  1462  049D                     	;# 
  1463  050C                     	;# 
  1464  050C                     	;# 
  1465  050D                     	;# 
  1466  050E                     	;# 
  1467  050F                     	;# 
  1468  050F                     	;# 
  1469  0510                     	;# 
  1470  0511                     	;# 
  1471  0512                     	;# 
  1472  0512                     	;# 
  1473  0513                     	;# 
  1474  0514                     	;# 
  1475  0515                     	;# 
  1476  0515                     	;# 
  1477  0516                     	;# 
  1478  0517                     	;# 
  1479  0518                     	;# 
  1480  0519                     	;# 
  1481  051A                     	;# 
  1482  051B                     	;# 
  1483  051C                     	;# 
  1484  051D                     	;# 
  1485  058C                     	;# 
  1486  058C                     	;# 
  1487  058D                     	;# 
  1488  058E                     	;# 
  1489  058F                     	;# 
  1490  058F                     	;# 
  1491  0590                     	;# 
  1492  0591                     	;# 
  1493  0592                     	;# 
  1494  0593                     	;# 
  1495  060C                     	;# 
  1496  060D                     	;# 
  1497  060E                     	;# 
  1498  060F                     	;# 
  1499  0610                     	;# 
  1500  0611                     	;# 
  1501  0612                     	;# 
  1502  0613                     	;# 
  1503  0614                     	;# 
  1504  0616                     	;# 
  1505  0617                     	;# 
  1506  0618                     	;# 
  1507  0619                     	;# 
  1508  061A                     	;# 
  1509  061B                     	;# 
  1510  061C                     	;# 
  1511  061D                     	;# 
  1512  061E                     	;# 
  1513  068C                     	;# 
  1514  068D                     	;# 
  1515  068E                     	;# 
  1516  068F                     	;# 
  1517  0690                     	;# 
  1518  0691                     	;# 
  1519  0692                     	;# 
  1520  0693                     	;# 
  1521  0694                     	;# 
  1522  070C                     	;# 
  1523  070D                     	;# 
  1524  070E                     	;# 
  1525  070F                     	;# 
  1526  0710                     	;# 
  1527  0711                     	;# 
  1528  0712                     	;# 
  1529  0713                     	;# 
  1530  0714                     	;# 
  1531  0716                     	;# 
  1532  0717                     	;# 
  1533  0718                     	;# 
  1534  0719                     	;# 
  1535  071A                     	;# 
  1536  071B                     	;# 
  1537  071C                     	;# 
  1538  071D                     	;# 
  1539  071E                     	;# 
  1540  0796                     	;# 
  1541  0797                     	;# 
  1542  0798                     	;# 
  1543  0799                     	;# 
  1544  079A                     	;# 
  1545  079B                     	;# 
  1546  080C                     	;# 
  1547  080D                     	;# 
  1548  080E                     	;# 
  1549  080F                     	;# 
  1550  0810                     	;# 
  1551  0811                     	;# 
  1552  0812                     	;# 
  1553  0813                     	;# 
  1554  0814                     	;# 
  1555  081A                     	;# 
  1556  081B                     	;# 
  1557  081C                     	;# 
  1558  081D                     	;# 
  1559  081E                     	;# 
  1560  081F                     	;# 
  1561  088C                     	;# 
  1562  088D                     	;# 
  1563  088E                     	;# 
  1564  088F                     	;# 
  1565  0890                     	;# 
  1566  0891                     	;# 
  1567  0892                     	;# 
  1568  0893                     	;# 
  1569  0895                     	;# 
  1570  0896                     	;# 
  1571  0897                     	;# 
  1572  0898                     	;# 
  1573  0899                     	;# 
  1574  089A                     	;# 
  1575  089B                     	;# 
  1576  090C                     	;# 
  1577  090E                     	;# 
  1578  090F                     	;# 
  1579  091F                     	;# 
  1580  091F                     	;# 
  1581  098F                     	;# 
  1582  098F                     	;# 
  1583  0990                     	;# 
  1584  0991                     	;# 
  1585  0992                     	;# 
  1586  0993                     	;# 
  1587  0994                     	;# 
  1588  0995                     	;# 
  1589  0996                     	;# 
  1590  0997                     	;# 
  1591  0E0F                     	;# 
  1592  0E10                     	;# 
  1593  0E11                     	;# 
  1594  0E12                     	;# 
  1595  0E13                     	;# 
  1596  0E14                     	;# 
  1597  0E15                     	;# 
  1598  0E16                     	;# 
  1599  0E17                     	;# 
  1600  0E18                     	;# 
  1601  0E19                     	;# 
  1602  0E1A                     	;# 
  1603  0E1B                     	;# 
  1604  0E1C                     	;# 
  1605  0E1D                     	;# 
  1606  0E1E                     	;# 
  1607  0E1F                     	;# 
  1608  0E20                     	;# 
  1609  0E21                     	;# 
  1610  0E22                     	;# 
  1611  0E23                     	;# 
  1612  0E24                     	;# 
  1613  0E25                     	;# 
  1614  0E26                     	;# 
  1615  0E27                     	;# 
  1616  0E28                     	;# 
  1617  0E29                     	;# 
  1618  0E2A                     	;# 
  1619  0E2B                     	;# 
  1620  0E2C                     	;# 
  1621  0E2D                     	;# 
  1622  0E2E                     	;# 
  1623  0E2F                     	;# 
  1624  0E30                     	;# 
  1625  0E31                     	;# 
  1626  0E32                     	;# 
  1627  0E33                     	;# 
  1628  0E34                     	;# 
  1629  0E35                     	;# 
  1630  0E36                     	;# 
  1631  0E37                     	;# 
  1632  0E8F                     	;# 
  1633  0E90                     	;# 
  1634  0E91                     	;# 
  1635  0E92                     	;# 
  1636  0E93                     	;# 
  1637  0E94                     	;# 
  1638  0E95                     	;# 
  1639  0E96                     	;# 
  1640  0E97                     	;# 
  1641  0E9C                     	;# 
  1642  0E9D                     	;# 
  1643  0E9E                     	;# 
  1644  0EA1                     	;# 
  1645  0EA2                     	;# 
  1646  0EA3                     	;# 
  1647  0EA4                     	;# 
  1648  0EA5                     	;# 
  1649  0EA9                     	;# 
  1650  0EAA                     	;# 
  1651  0EAB                     	;# 
  1652  0EAC                     	;# 
  1653  0EB1                     	;# 
  1654  0EB2                     	;# 
  1655  0EB3                     	;# 
  1656  0EB8                     	;# 
  1657  0EB9                     	;# 
  1658  0EBA                     	;# 
  1659  0EBB                     	;# 
  1660  0EBC                     	;# 
  1661  0EBD                     	;# 
  1662  0EBE                     	;# 
  1663  0EC3                     	;# 
  1664  0EC5                     	;# 
  1665  0EC6                     	;# 
  1666  0EC7                     	;# 
  1667  0EC8                     	;# 
  1668  0EC9                     	;# 
  1669  0ECA                     	;# 
  1670  0ECB                     	;# 
  1671  0ECC                     	;# 
  1672  0F10                     	;# 
  1673  0F11                     	;# 
  1674  0F12                     	;# 
  1675  0F13                     	;# 
  1676  0F14                     	;# 
  1677  0F15                     	;# 
  1678  0F16                     	;# 
  1679  0F17                     	;# 
  1680  0F18                     	;# 
  1681  0F19                     	;# 
  1682  0F1A                     	;# 
  1683  0F1B                     	;# 
  1684  0F1C                     	;# 
  1685  0F1D                     	;# 
  1686  0F1E                     	;# 
  1687  0F1F                     	;# 
  1688  0F20                     	;# 
  1689  0F21                     	;# 
  1690  0F22                     	;# 
  1691  0F23                     	;# 
  1692  0F24                     	;# 
  1693  0F25                     	;# 
  1694  0F26                     	;# 
  1695  0F27                     	;# 
  1696  0F28                     	;# 
  1697  0F29                     	;# 
  1698  0F2A                     	;# 
  1699  0F2B                     	;# 
  1700  0F2C                     	;# 
  1701  0F2D                     	;# 
  1702  0F2E                     	;# 
  1703  0F2F                     	;# 
  1704  0F30                     	;# 
  1705  0F31                     	;# 
  1706  0F32                     	;# 
  1707  0F38                     	;# 
  1708  0F39                     	;# 
  1709  0F3A                     	;# 
  1710  0F3B                     	;# 
  1711  0F3C                     	;# 
  1712  0F3D                     	;# 
  1713  0F3E                     	;# 
  1714  0F3F                     	;# 
  1715  0F40                     	;# 
  1716  0F41                     	;# 
  1717  0F43                     	;# 
  1718  0F44                     	;# 
  1719  0F45                     	;# 
  1720  0F46                     	;# 
  1721  0F47                     	;# 
  1722  0F48                     	;# 
  1723  0F49                     	;# 
  1724  0F4A                     	;# 
  1725  0F4B                     	;# 
  1726  0F4C                     	;# 
  1727  0F4E                     	;# 
  1728  0F4F                     	;# 
  1729  0F50                     	;# 
  1730  0F51                     	;# 
  1731  0F52                     	;# 
  1732  0F53                     	;# 
  1733  0F54                     	;# 
  1734  0F55                     	;# 
  1735  0F56                     	;# 
  1736  0F57                     	;# 
  1737  0F59                     	;# 
  1738  0F5A                     	;# 
  1739  0F5B                     	;# 
  1740  0F5C                     	;# 
  1741  0F5D                     	;# 
  1742  0F61                     	;# 
  1743  0F62                     	;# 
  1744  0F64                     	;# 
  1745  0F65                     	;# 
  1746  0F66                     	;# 
  1747  0F67                     	;# 
  1748  0F68                     	;# 
  1749  0F69                     	;# 
  1750  0F6A                     	;# 
  1751  0F6B                     	;# 
  1752  0F6C                     	;# 
  1753  0F6D                     	;# 
  1754  0FE4                     	;# 
  1755  0FE5                     	;# 
  1756  0FE6                     	;# 
  1757  0FE7                     	;# 
  1758  0FE8                     	;# 
  1759  0FE9                     	;# 
  1760  0FEA                     	;# 
  1761  0FEB                     	;# 
  1762  0FED                     	;# 
  1763  0FEE                     	;# 
  1764  0FEF                     	;# 
  1765  0000                     	;# 
  1766  0001                     	;# 
  1767  0002                     	;# 
  1768  0003                     	;# 
  1769  0004                     	;# 
  1770  0005                     	;# 
  1771  0006                     	;# 
  1772  0007                     	;# 
  1773  0008                     	;# 
  1774  0009                     	;# 
  1775  000A                     	;# 
  1776  000B                     	;# 
  1777  000C                     	;# 
  1778  000D                     	;# 
  1779  000E                     	;# 
  1780  000F                     	;# 
  1781  0010                     	;# 
  1782  0011                     	;# 
  1783  0012                     	;# 
  1784  0013                     	;# 
  1785  0014                     	;# 
  1786  0015                     	;# 
  1787  0016                     	;# 
  1788  0017                     	;# 
  1789  0018                     	;# 
  1790  0019                     	;# 
  1791  001A                     	;# 
  1792  001C                     	;# 
  1793  001C                     	;# 
  1794  001D                     	;# 
  1795  001D                     	;# 
  1796  001E                     	;# 
  1797  001F                     	;# 
  1798  008C                     	;# 
  1799  008C                     	;# 
  1800  008D                     	;# 
  1801  008E                     	;# 
  1802  008E                     	;# 
  1803  008F                     	;# 
  1804  0090                     	;# 
  1805  0090                     	;# 
  1806  0091                     	;# 
  1807  0093                     	;# 
  1808  0094                     	;# 
  1809  0095                     	;# 
  1810  0096                     	;# 
  1811  0097                     	;# 
  1812  0098                     	;# 
  1813  0099                     	;# 
  1814  009A                     	;# 
  1815  009B                     	;# 
  1816  009C                     	;# 
  1817  009D                     	;# 
  1818  009E                     	;# 
  1819  010C                     	;# 
  1820  010D                     	;# 
  1821  010E                     	;# 
  1822  010E                     	;# 
  1823  010F                     	;# 
  1824  0110                     	;# 
  1825  0110                     	;# 
  1826  0111                     	;# 
  1827  0112                     	;# 
  1828  0112                     	;# 
  1829  0113                     	;# 
  1830  0114                     	;# 
  1831  0114                     	;# 
  1832  0115                     	;# 
  1833  0116                     	;# 
  1834  0116                     	;# 
  1835  0117                     	;# 
  1836  0119                     	;# 
  1837  0119                     	;# 
  1838  0119                     	;# 
  1839  011A                     	;# 
  1840  011A                     	;# 
  1841  011A                     	;# 
  1842  011B                     	;# 
  1843  011B                     	;# 
  1844  011B                     	;# 
  1845  011B                     	;# 
  1846  011B                     	;# 
  1847  011C                     	;# 
  1848  011C                     	;# 
  1849  011C                     	;# 
  1850  011D                     	;# 
  1851  011D                     	;# 
  1852  011D                     	;# 
  1853  011E                     	;# 
  1854  011E                     	;# 
  1855  011E                     	;# 
  1856  011F                     	;# 
  1857  011F                     	;# 
  1858  011F                     	;# 
  1859  011F                     	;# 
  1860  011F                     	;# 
  1861  018C                     	;# 
  1862  018D                     	;# 
  1863  018E                     	;# 
  1864  018F                     	;# 
  1865  0190                     	;# 
  1866  0191                     	;# 
  1867  0192                     	;# 
  1868  0196                     	;# 
  1869  0197                     	;# 
  1870  0198                     	;# 
  1871  0199                     	;# 
  1872  019A                     	;# 
  1873  019B                     	;# 
  1874  019C                     	;# 
  1875  020C                     	;# 
  1876  020C                     	;# 
  1877  020D                     	;# 
  1878  020E                     	;# 
  1879  020F                     	;# 
  1880  020F                     	;# 
  1881  0210                     	;# 
  1882  0210                     	;# 
  1883  0211                     	;# 
  1884  0211                     	;# 
  1885  0212                     	;# 
  1886  0212                     	;# 
  1887  0213                     	;# 
  1888  0214                     	;# 
  1889  0215                     	;# 
  1890  0215                     	;# 
  1891  0216                     	;# 
  1892  0216                     	;# 
  1893  0217                     	;# 
  1894  0217                     	;# 
  1895  0218                     	;# 
  1896  0218                     	;# 
  1897  0219                     	;# 
  1898  021A                     	;# 
  1899  021B                     	;# 
  1900  021B                     	;# 
  1901  021C                     	;# 
  1902  021C                     	;# 
  1903  021D                     	;# 
  1904  021D                     	;# 
  1905  021E                     	;# 
  1906  021F                     	;# 
  1907  028C                     	;# 
  1908  028C                     	;# 
  1909  028D                     	;# 
  1910  028D                     	;# 
  1911  028E                     	;# 
  1912  028F                     	;# 
  1913  0290                     	;# 
  1914  0290                     	;# 
  1915  0291                     	;# 
  1916  0292                     	;# 
  1917  0292                     	;# 
  1918  0293                     	;# 
  1919  0293                     	;# 
  1920  0294                     	;# 
  1921  0295                     	;# 
  1922  0296                     	;# 
  1923  0296                     	;# 
  1924  0297                     	;# 
  1925  0298                     	;# 
  1926  0298                     	;# 
  1927  0299                     	;# 
  1928  0299                     	;# 
  1929  029A                     	;# 
  1930  029B                     	;# 
  1931  029C                     	;# 
  1932  029C                     	;# 
  1933  029D                     	;# 
  1934  030C                     	;# 
  1935  030C                     	;# 
  1936  030D                     	;# 
  1937  030E                     	;# 
  1938  030F                     	;# 
  1939  0310                     	;# 
  1940  0310                     	;# 
  1941  0311                     	;# 
  1942  0312                     	;# 
  1943  0313                     	;# 
  1944  0314                     	;# 
  1945  0314                     	;# 
  1946  0315                     	;# 
  1947  0316                     	;# 
  1948  0317                     	;# 
  1949  0318                     	;# 
  1950  0318                     	;# 
  1951  0319                     	;# 
  1952  031A                     	;# 
  1953  031B                     	;# 
  1954  031C                     	;# 
  1955  031C                     	;# 
  1956  031D                     	;# 
  1957  031E                     	;# 
  1958  031F                     	;# 
  1959  038C                     	;# 
  1960  038C                     	;# 
  1961  038D                     	;# 
  1962  038E                     	;# 
  1963  0390                     	;# 
  1964  0390                     	;# 
  1965  0391                     	;# 
  1966  0392                     	;# 
  1967  040C                     	;# 
  1968  040D                     	;# 
  1969  040E                     	;# 
  1970  040F                     	;# 
  1971  0410                     	;# 
  1972  0411                     	;# 
  1973  0416                     	;# 
  1974  0416                     	;# 
  1975  0417                     	;# 
  1976  0418                     	;# 
  1977  0418                     	;# 
  1978  0419                     	;# 
  1979  041A                     	;# 
  1980  041A                     	;# 
  1981  041B                     	;# 
  1982  041C                     	;# 
  1983  041C                     	;# 
  1984  041D                     	;# 
  1985  041E                     	;# 
  1986  041F                     	;# 
  1987  048C                     	;# 
  1988  048C                     	;# 
  1989  048D                     	;# 
  1990  048E                     	;# 
  1991  048F                     	;# 
  1992  048F                     	;# 
  1993  0490                     	;# 
  1994  0491                     	;# 
  1995  0492                     	;# 
  1996  0492                     	;# 
  1997  0493                     	;# 
  1998  0494                     	;# 
  1999  0495                     	;# 
  2000  0495                     	;# 
  2001  0496                     	;# 
  2002  0497                     	;# 
  2003  0498                     	;# 
  2004  0499                     	;# 
  2005  049A                     	;# 
  2006  049B                     	;# 
  2007  049C                     	;# 
  2008  049D                     	;# 
  2009  050C                     	;# 
  2010  050C                     	;# 
  2011  050D                     	;# 
  2012  050E                     	;# 
  2013  050F                     	;# 
  2014  050F                     	;# 
  2015  0510                     	;# 
  2016  0511                     	;# 
  2017  0512                     	;# 
  2018  0512                     	;# 
  2019  0513                     	;# 
  2020  0514                     	;# 
  2021  0515                     	;# 
  2022  0515                     	;# 
  2023  0516                     	;# 
  2024  0517                     	;# 
  2025  0518                     	;# 
  2026  0519                     	;# 
  2027  051A                     	;# 
  2028  051B                     	;# 
  2029  051C                     	;# 
  2030  051D                     	;# 
  2031  058C                     	;# 
  2032  058C                     	;# 
  2033  058D                     	;# 
  2034  058E                     	;# 
  2035  058F                     	;# 
  2036  058F                     	;# 
  2037  0590                     	;# 
  2038  0591                     	;# 
  2039  0592                     	;# 
  2040  0593                     	;# 
  2041  060C                     	;# 
  2042  060D                     	;# 
  2043  060E                     	;# 
  2044  060F                     	;# 
  2045  0610                     	;# 
  2046  0611                     	;# 
  2047  0612                     	;# 
  2048  0613                     	;# 
  2049  0614                     	;# 
  2050  0616                     	;# 
  2051  0617                     	;# 
  2052  0618                     	;# 
  2053  0619                     	;# 
  2054  061A                     	;# 
  2055  061B                     	;# 
  2056  061C                     	;# 
  2057  061D                     	;# 
  2058  061E                     	;# 
  2059  068C                     	;# 
  2060  068D                     	;# 
  2061  068E                     	;# 
  2062  068F                     	;# 
  2063  0690                     	;# 
  2064  0691                     	;# 
  2065  0692                     	;# 
  2066  0693                     	;# 
  2067  0694                     	;# 
  2068  070C                     	;# 
  2069  070D                     	;# 
  2070  070E                     	;# 
  2071  070F                     	;# 
  2072  0710                     	;# 
  2073  0711                     	;# 
  2074  0712                     	;# 
  2075  0713                     	;# 
  2076  0714                     	;# 
  2077  0716                     	;# 
  2078  0717                     	;# 
  2079  0718                     	;# 
  2080  0719                     	;# 
  2081  071A                     	;# 
  2082  071B                     	;# 
  2083  071C                     	;# 
  2084  071D                     	;# 
  2085  071E                     	;# 
  2086  0796                     	;# 
  2087  0797                     	;# 
  2088  0798                     	;# 
  2089  0799                     	;# 
  2090  079A                     	;# 
  2091  079B                     	;# 
  2092  080C                     	;# 
  2093  080D                     	;# 
  2094  080E                     	;# 
  2095  080F                     	;# 
  2096  0810                     	;# 
  2097  0811                     	;# 
  2098  0812                     	;# 
  2099  0813                     	;# 
  2100  0814                     	;# 
  2101  081A                     	;# 
  2102  081B                     	;# 
  2103  081C                     	;# 
  2104  081D                     	;# 
  2105  081E                     	;# 
  2106  081F                     	;# 
  2107  088C                     	;# 
  2108  088D                     	;# 
  2109  088E                     	;# 
  2110  088F                     	;# 
  2111  0890                     	;# 
  2112  0891                     	;# 
  2113  0892                     	;# 
  2114  0893                     	;# 
  2115  0895                     	;# 
  2116  0896                     	;# 
  2117  0897                     	;# 
  2118  0898                     	;# 
  2119  0899                     	;# 
  2120  089A                     	;# 
  2121  089B                     	;# 
  2122  090C                     	;# 
  2123  090E                     	;# 
  2124  090F                     	;# 
  2125  091F                     	;# 
  2126  091F                     	;# 
  2127  098F                     	;# 
  2128  098F                     	;# 
  2129  0990                     	;# 
  2130  0991                     	;# 
  2131  0992                     	;# 
  2132  0993                     	;# 
  2133  0994                     	;# 
  2134  0995                     	;# 
  2135  0996                     	;# 
  2136  0997                     	;# 
  2137  0E0F                     	;# 
  2138  0E10                     	;# 
  2139  0E11                     	;# 
  2140  0E12                     	;# 
  2141  0E13                     	;# 
  2142  0E14                     	;# 
  2143  0E15                     	;# 
  2144  0E16                     	;# 
  2145  0E17                     	;# 
  2146  0E18                     	;# 
  2147  0E19                     	;# 
  2148  0E1A                     	;# 
  2149  0E1B                     	;# 
  2150  0E1C                     	;# 
  2151  0E1D                     	;# 
  2152  0E1E                     	;# 
  2153  0E1F                     	;# 
  2154  0E20                     	;# 
  2155  0E21                     	;# 
  2156  0E22                     	;# 
  2157  0E23                     	;# 
  2158  0E24                     	;# 
  2159  0E25                     	;# 
  2160  0E26                     	;# 
  2161  0E27                     	;# 
  2162  0E28                     	;# 
  2163  0E29                     	;# 
  2164  0E2A                     	;# 
  2165  0E2B                     	;# 
  2166  0E2C                     	;# 
  2167  0E2D                     	;# 
  2168  0E2E                     	;# 
  2169  0E2F                     	;# 
  2170  0E30                     	;# 
  2171  0E31                     	;# 
  2172  0E32                     	;# 
  2173  0E33                     	;# 
  2174  0E34                     	;# 
  2175  0E35                     	;# 
  2176  0E36                     	;# 
  2177  0E37                     	;# 
  2178  0E8F                     	;# 
  2179  0E90                     	;# 
  2180  0E91                     	;# 
  2181  0E92                     	;# 
  2182  0E93                     	;# 
  2183  0E94                     	;# 
  2184  0E95                     	;# 
  2185  0E96                     	;# 
  2186  0E97                     	;# 
  2187  0E9C                     	;# 
  2188  0E9D                     	;# 
  2189  0E9E                     	;# 
  2190  0EA1                     	;# 
  2191  0EA2                     	;# 
  2192  0EA3                     	;# 
  2193  0EA4                     	;# 
  2194  0EA5                     	;# 
  2195  0EA9                     	;# 
  2196  0EAA                     	;# 
  2197  0EAB                     	;# 
  2198  0EAC                     	;# 
  2199  0EB1                     	;# 
  2200  0EB2                     	;# 
  2201  0EB3                     	;# 
  2202  0EB8                     	;# 
  2203  0EB9                     	;# 
  2204  0EBA                     	;# 
  2205  0EBB                     	;# 
  2206  0EBC                     	;# 
  2207  0EBD                     	;# 
  2208  0EBE                     	;# 
  2209  0EC3                     	;# 
  2210  0EC5                     	;# 
  2211  0EC6                     	;# 
  2212  0EC7                     	;# 
  2213  0EC8                     	;# 
  2214  0EC9                     	;# 
  2215  0ECA                     	;# 
  2216  0ECB                     	;# 
  2217  0ECC                     	;# 
  2218  0F10                     	;# 
  2219  0F11                     	;# 
  2220  0F12                     	;# 
  2221  0F13                     	;# 
  2222  0F14                     	;# 
  2223  0F15                     	;# 
  2224  0F16                     	;# 
  2225  0F17                     	;# 
  2226  0F18                     	;# 
  2227  0F19                     	;# 
  2228  0F1A                     	;# 
  2229  0F1B                     	;# 
  2230  0F1C                     	;# 
  2231  0F1D                     	;# 
  2232  0F1E                     	;# 
  2233  0F1F                     	;# 
  2234  0F20                     	;# 
  2235  0F21                     	;# 
  2236  0F22                     	;# 
  2237  0F23                     	;# 
  2238  0F24                     	;# 
  2239  0F25                     	;# 
  2240  0F26                     	;# 
  2241  0F27                     	;# 
  2242  0F28                     	;# 
  2243  0F29                     	;# 
  2244  0F2A                     	;# 
  2245  0F2B                     	;# 
  2246  0F2C                     	;# 
  2247  0F2D                     	;# 
  2248  0F2E                     	;# 
  2249  0F2F                     	;# 
  2250  0F30                     	;# 
  2251  0F31                     	;# 
  2252  0F32                     	;# 
  2253  0F38                     	;# 
  2254  0F39                     	;# 
  2255  0F3A                     	;# 
  2256  0F3B                     	;# 
  2257  0F3C                     	;# 
  2258  0F3D                     	;# 
  2259  0F3E                     	;# 
  2260  0F3F                     	;# 
  2261  0F40                     	;# 
  2262  0F41                     	;# 
  2263  0F43                     	;# 
  2264  0F44                     	;# 
  2265  0F45                     	;# 
  2266  0F46                     	;# 
  2267  0F47                     	;# 
  2268  0F48                     	;# 
  2269  0F49                     	;# 
  2270  0F4A                     	;# 
  2271  0F4B                     	;# 
  2272  0F4C                     	;# 
  2273  0F4E                     	;# 
  2274  0F4F                     	;# 
  2275  0F50                     	;# 
  2276  0F51                     	;# 
  2277  0F52                     	;# 
  2278  0F53                     	;# 
  2279  0F54                     	;# 
  2280  0F55                     	;# 
  2281  0F56                     	;# 
  2282  0F57                     	;# 
  2283  0F59                     	;# 
  2284  0F5A                     	;# 
  2285  0F5B                     	;# 
  2286  0F5C                     	;# 
  2287  0F5D                     	;# 
  2288  0F61                     	;# 
  2289  0F62                     	;# 
  2290  0F64                     	;# 
  2291  0F65                     	;# 
  2292  0F66                     	;# 
  2293  0F67                     	;# 
  2294  0F68                     	;# 
  2295  0F69                     	;# 
  2296  0F6A                     	;# 
  2297  0F6B                     	;# 
  2298  0F6C                     	;# 
  2299  0F6D                     	;# 
  2300  0FE4                     	;# 
  2301  0FE5                     	;# 
  2302  0FE6                     	;# 
  2303  0FE7                     	;# 
  2304  0FE8                     	;# 
  2305  0FE9                     	;# 
  2306  0FEA                     	;# 
  2307  0FEB                     	;# 
  2308  0FED                     	;# 
  2309  0FEE                     	;# 
  2310  0FEF                     	;# 
  2311  0000                     	;# 
  2312  0001                     	;# 
  2313  0002                     	;# 
  2314  0003                     	;# 
  2315  0004                     	;# 
  2316  0005                     	;# 
  2317  0006                     	;# 
  2318  0007                     	;# 
  2319  0008                     	;# 
  2320  0009                     	;# 
  2321  000A                     	;# 
  2322  000B                     	;# 
  2323  000C                     	;# 
  2324  000D                     	;# 
  2325  000E                     	;# 
  2326  000F                     	;# 
  2327  0010                     	;# 
  2328  0011                     	;# 
  2329  0012                     	;# 
  2330  0013                     	;# 
  2331  0014                     	;# 
  2332  0015                     	;# 
  2333  0016                     	;# 
  2334  0017                     	;# 
  2335  0018                     	;# 
  2336  0019                     	;# 
  2337  001A                     	;# 
  2338  001C                     	;# 
  2339  001C                     	;# 
  2340  001D                     	;# 
  2341  001D                     	;# 
  2342  001E                     	;# 
  2343  001F                     	;# 
  2344  008C                     	;# 
  2345  008C                     	;# 
  2346  008D                     	;# 
  2347  008E                     	;# 
  2348  008E                     	;# 
  2349  008F                     	;# 
  2350  0090                     	;# 
  2351  0090                     	;# 
  2352  0091                     	;# 
  2353  0093                     	;# 
  2354  0094                     	;# 
  2355  0095                     	;# 
  2356  0096                     	;# 
  2357  0097                     	;# 
  2358  0098                     	;# 
  2359  0099                     	;# 
  2360  009A                     	;# 
  2361  009B                     	;# 
  2362  009C                     	;# 
  2363  009D                     	;# 
  2364  009E                     	;# 
  2365  010C                     	;# 
  2366  010D                     	;# 
  2367  010E                     	;# 
  2368  010E                     	;# 
  2369  010F                     	;# 
  2370  0110                     	;# 
  2371  0110                     	;# 
  2372  0111                     	;# 
  2373  0112                     	;# 
  2374  0112                     	;# 
  2375  0113                     	;# 
  2376  0114                     	;# 
  2377  0114                     	;# 
  2378  0115                     	;# 
  2379  0116                     	;# 
  2380  0116                     	;# 
  2381  0117                     	;# 
  2382  0119                     	;# 
  2383  0119                     	;# 
  2384  0119                     	;# 
  2385  011A                     	;# 
  2386  011A                     	;# 
  2387  011A                     	;# 
  2388  011B                     	;# 
  2389  011B                     	;# 
  2390  011B                     	;# 
  2391  011B                     	;# 
  2392  011B                     	;# 
  2393  011C                     	;# 
  2394  011C                     	;# 
  2395  011C                     	;# 
  2396  011D                     	;# 
  2397  011D                     	;# 
  2398  011D                     	;# 
  2399  011E                     	;# 
  2400  011E                     	;# 
  2401  011E                     	;# 
  2402  011F                     	;# 
  2403  011F                     	;# 
  2404  011F                     	;# 
  2405  011F                     	;# 
  2406  011F                     	;# 
  2407  018C                     	;# 
  2408  018D                     	;# 
  2409  018E                     	;# 
  2410  018F                     	;# 
  2411  0190                     	;# 
  2412  0191                     	;# 
  2413  0192                     	;# 
  2414  0196                     	;# 
  2415  0197                     	;# 
  2416  0198                     	;# 
  2417  0199                     	;# 
  2418  019A                     	;# 
  2419  019B                     	;# 
  2420  019C                     	;# 
  2421  020C                     	;# 
  2422  020C                     	;# 
  2423  020D                     	;# 
  2424  020E                     	;# 
  2425  020F                     	;# 
  2426  020F                     	;# 
  2427  0210                     	;# 
  2428  0210                     	;# 
  2429  0211                     	;# 
  2430  0211                     	;# 
  2431  0212                     	;# 
  2432  0212                     	;# 
  2433  0213                     	;# 
  2434  0214                     	;# 
  2435  0215                     	;# 
  2436  0215                     	;# 
  2437  0216                     	;# 
  2438  0216                     	;# 
  2439  0217                     	;# 
  2440  0217                     	;# 
  2441  0218                     	;# 
  2442  0218                     	;# 
  2443  0219                     	;# 
  2444  021A                     	;# 
  2445  021B                     	;# 
  2446  021B                     	;# 
  2447  021C                     	;# 
  2448  021C                     	;# 
  2449  021D                     	;# 
  2450  021D                     	;# 
  2451  021E                     	;# 
  2452  021F                     	;# 
  2453  028C                     	;# 
  2454  028C                     	;# 
  2455  028D                     	;# 
  2456  028D                     	;# 
  2457  028E                     	;# 
  2458  028F                     	;# 
  2459  0290                     	;# 
  2460  0290                     	;# 
  2461  0291                     	;# 
  2462  0292                     	;# 
  2463  0292                     	;# 
  2464  0293                     	;# 
  2465  0293                     	;# 
  2466  0294                     	;# 
  2467  0295                     	;# 
  2468  0296                     	;# 
  2469  0296                     	;# 
  2470  0297                     	;# 
  2471  0298                     	;# 
  2472  0298                     	;# 
  2473  0299                     	;# 
  2474  0299                     	;# 
  2475  029A                     	;# 
  2476  029B                     	;# 
  2477  029C                     	;# 
  2478  029C                     	;# 
  2479  029D                     	;# 
  2480  030C                     	;# 
  2481  030C                     	;# 
  2482  030D                     	;# 
  2483  030E                     	;# 
  2484  030F                     	;# 
  2485  0310                     	;# 
  2486  0310                     	;# 
  2487  0311                     	;# 
  2488  0312                     	;# 
  2489  0313                     	;# 
  2490  0314                     	;# 
  2491  0314                     	;# 
  2492  0315                     	;# 
  2493  0316                     	;# 
  2494  0317                     	;# 
  2495  0318                     	;# 
  2496  0318                     	;# 
  2497  0319                     	;# 
  2498  031A                     	;# 
  2499  031B                     	;# 
  2500  031C                     	;# 
  2501  031C                     	;# 
  2502  031D                     	;# 
  2503  031E                     	;# 
  2504  031F                     	;# 
  2505  038C                     	;# 
  2506  038C                     	;# 
  2507  038D                     	;# 
  2508  038E                     	;# 
  2509  0390                     	;# 
  2510  0390                     	;# 
  2511  0391                     	;# 
  2512  0392                     	;# 
  2513  040C                     	;# 
  2514  040D                     	;# 
  2515  040E                     	;# 
  2516  040F                     	;# 
  2517  0410                     	;# 
  2518  0411                     	;# 
  2519  0416                     	;# 
  2520  0416                     	;# 
  2521  0417                     	;# 
  2522  0418                     	;# 
  2523  0418                     	;# 
  2524  0419                     	;# 
  2525  041A                     	;# 
  2526  041A                     	;# 
  2527  041B                     	;# 
  2528  041C                     	;# 
  2529  041C                     	;# 
  2530  041D                     	;# 
  2531  041E                     	;# 
  2532  041F                     	;# 
  2533  048C                     	;# 
  2534  048C                     	;# 
  2535  048D                     	;# 
  2536  048E                     	;# 
  2537  048F                     	;# 
  2538  048F                     	;# 
  2539  0490                     	;# 
  2540  0491                     	;# 
  2541  0492                     	;# 
  2542  0492                     	;# 
  2543  0493                     	;# 
  2544  0494                     	;# 
  2545  0495                     	;# 
  2546  0495                     	;# 
  2547  0496                     	;# 
  2548  0497                     	;# 
  2549  0498                     	;# 
  2550  0499                     	;# 
  2551  049A                     	;# 
  2552  049B                     	;# 
  2553  049C                     	;# 
  2554  049D                     	;# 
  2555  050C                     	;# 
  2556  050C                     	;# 
  2557  050D                     	;# 
  2558  050E                     	;# 
  2559  050F                     	;# 
  2560  050F                     	;# 
  2561  0510                     	;# 
  2562  0511                     	;# 
  2563  0512                     	;# 
  2564  0512                     	;# 
  2565  0513                     	;# 
  2566  0514                     	;# 
  2567  0515                     	;# 
  2568  0515                     	;# 
  2569  0516                     	;# 
  2570  0517                     	;# 
  2571  0518                     	;# 
  2572  0519                     	;# 
  2573  051A                     	;# 
  2574  051B                     	;# 
  2575  051C                     	;# 
  2576  051D                     	;# 
  2577  058C                     	;# 
  2578  058C                     	;# 
  2579  058D                     	;# 
  2580  058E                     	;# 
  2581  058F                     	;# 
  2582  058F                     	;# 
  2583  0590                     	;# 
  2584  0591                     	;# 
  2585  0592                     	;# 
  2586  0593                     	;# 
  2587  060C                     	;# 
  2588  060D                     	;# 
  2589  060E                     	;# 
  2590  060F                     	;# 
  2591  0610                     	;# 
  2592  0611                     	;# 
  2593  0612                     	;# 
  2594  0613                     	;# 
  2595  0614                     	;# 
  2596  0616                     	;# 
  2597  0617                     	;# 
  2598  0618                     	;# 
  2599  0619                     	;# 
  2600  061A                     	;# 
  2601  061B                     	;# 
  2602  061C                     	;# 
  2603  061D                     	;# 
  2604  061E                     	;# 
  2605  068C                     	;# 
  2606  068D                     	;# 
  2607  068E                     	;# 
  2608  068F                     	;# 
  2609  0690                     	;# 
  2610  0691                     	;# 
  2611  0692                     	;# 
  2612  0693                     	;# 
  2613  0694                     	;# 
  2614  070C                     	;# 
  2615  070D                     	;# 
  2616  070E                     	;# 
  2617  070F                     	;# 
  2618  0710                     	;# 
  2619  0711                     	;# 
  2620  0712                     	;# 
  2621  0713                     	;# 
  2622  0714                     	;# 
  2623  0716                     	;# 
  2624  0717                     	;# 
  2625  0718                     	;# 
  2626  0719                     	;# 
  2627  071A                     	;# 
  2628  071B                     	;# 
  2629  071C                     	;# 
  2630  071D                     	;# 
  2631  071E                     	;# 
  2632  0796                     	;# 
  2633  0797                     	;# 
  2634  0798                     	;# 
  2635  0799                     	;# 
  2636  079A                     	;# 
  2637  079B                     	;# 
  2638  080C                     	;# 
  2639  080D                     	;# 
  2640  080E                     	;# 
  2641  080F                     	;# 
  2642  0810                     	;# 
  2643  0811                     	;# 
  2644  0812                     	;# 
  2645  0813                     	;# 
  2646  0814                     	;# 
  2647  081A                     	;# 
  2648  081B                     	;# 
  2649  081C                     	;# 
  2650  081D                     	;# 
  2651  081E                     	;# 
  2652  081F                     	;# 
  2653  088C                     	;# 
  2654  088D                     	;# 
  2655  088E                     	;# 
  2656  088F                     	;# 
  2657  0890                     	;# 
  2658  0891                     	;# 
  2659  0892                     	;# 
  2660  0893                     	;# 
  2661  0895                     	;# 
  2662  0896                     	;# 
  2663  0897                     	;# 
  2664  0898                     	;# 
  2665  0899                     	;# 
  2666  089A                     	;# 
  2667  089B                     	;# 
  2668  090C                     	;# 
  2669  090E                     	;# 
  2670  090F                     	;# 
  2671  091F                     	;# 
  2672  091F                     	;# 
  2673  098F                     	;# 
  2674  098F                     	;# 
  2675  0990                     	;# 
  2676  0991                     	;# 
  2677  0992                     	;# 
  2678  0993                     	;# 
  2679  0994                     	;# 
  2680  0995                     	;# 
  2681  0996                     	;# 
  2682  0997                     	;# 
  2683  0E0F                     	;# 
  2684  0E10                     	;# 
  2685  0E11                     	;# 
  2686  0E12                     	;# 
  2687  0E13                     	;# 
  2688  0E14                     	;# 
  2689  0E15                     	;# 
  2690  0E16                     	;# 
  2691  0E17                     	;# 
  2692  0E18                     	;# 
  2693  0E19                     	;# 
  2694  0E1A                     	;# 
  2695  0E1B                     	;# 
  2696  0E1C                     	;# 
  2697  0E1D                     	;# 
  2698  0E1E                     	;# 
  2699  0E1F                     	;# 
  2700  0E20                     	;# 
  2701  0E21                     	;# 
  2702  0E22                     	;# 
  2703  0E23                     	;# 
  2704  0E24                     	;# 
  2705  0E25                     	;# 
  2706  0E26                     	;# 
  2707  0E27                     	;# 
  2708  0E28                     	;# 
  2709  0E29                     	;# 
  2710  0E2A                     	;# 
  2711  0E2B                     	;# 
  2712  0E2C                     	;# 
  2713  0E2D                     	;# 
  2714  0E2E                     	;# 
  2715  0E2F                     	;# 
  2716  0E30                     	;# 
  2717  0E31                     	;# 
  2718  0E32                     	;# 
  2719  0E33                     	;# 
  2720  0E34                     	;# 
  2721  0E35                     	;# 
  2722  0E36                     	;# 
  2723  0E37                     	;# 
  2724  0E8F                     	;# 
  2725  0E90                     	;# 
  2726  0E91                     	;# 
  2727  0E92                     	;# 
  2728  0E93                     	;# 
  2729  0E94                     	;# 
  2730  0E95                     	;# 
  2731  0E96                     	;# 
  2732  0E97                     	;# 
  2733  0E9C                     	;# 
  2734  0E9D                     	;# 
  2735  0E9E                     	;# 
  2736  0EA1                     	;# 
  2737  0EA2                     	;# 
  2738  0EA3                     	;# 
  2739  0EA4                     	;# 
  2740  0EA5                     	;# 
  2741  0EA9                     	;# 
  2742  0EAA                     	;# 
  2743  0EAB                     	;# 
  2744  0EAC                     	;# 
  2745  0EB1                     	;# 
  2746  0EB2                     	;# 
  2747  0EB3                     	;# 
  2748  0EB8                     	;# 
  2749  0EB9                     	;# 
  2750  0EBA                     	;# 
  2751  0EBB                     	;# 
  2752  0EBC                     	;# 
  2753  0EBD                     	;# 
  2754  0EBE                     	;# 
  2755  0EC3                     	;# 
  2756  0EC5                     	;# 
  2757  0EC6                     	;# 
  2758  0EC7                     	;# 
  2759  0EC8                     	;# 
  2760  0EC9                     	;# 
  2761  0ECA                     	;# 
  2762  0ECB                     	;# 
  2763  0ECC                     	;# 
  2764  0F10                     	;# 
  2765  0F11                     	;# 
  2766  0F12                     	;# 
  2767  0F13                     	;# 
  2768  0F14                     	;# 
  2769  0F15                     	;# 
  2770  0F16                     	;# 
  2771  0F17                     	;# 
  2772  0F18                     	;# 
  2773  0F19                     	;# 
  2774  0F1A                     	;# 
  2775  0F1B                     	;# 
  2776  0F1C                     	;# 
  2777  0F1D                     	;# 
  2778  0F1E                     	;# 
  2779  0F1F                     	;# 
  2780  0F20                     	;# 
  2781  0F21                     	;# 
  2782  0F22                     	;# 
  2783  0F23                     	;# 
  2784  0F24                     	;# 
  2785  0F25                     	;# 
  2786  0F26                     	;# 
  2787  0F27                     	;# 
  2788  0F28                     	;# 
  2789  0F29                     	;# 
  2790  0F2A                     	;# 
  2791  0F2B                     	;# 
  2792  0F2C                     	;# 
  2793  0F2D                     	;# 
  2794  0F2E                     	;# 
  2795  0F2F                     	;# 
  2796  0F30                     	;# 
  2797  0F31                     	;# 
  2798  0F32                     	;# 
  2799  0F38                     	;# 
  2800  0F39                     	;# 
  2801  0F3A                     	;# 
  2802  0F3B                     	;# 
  2803  0F3C                     	;# 
  2804  0F3D                     	;# 
  2805  0F3E                     	;# 
  2806  0F3F                     	;# 
  2807  0F40                     	;# 
  2808  0F41                     	;# 
  2809  0F43                     	;# 
  2810  0F44                     	;# 
  2811  0F45                     	;# 
  2812  0F46                     	;# 
  2813  0F47                     	;# 
  2814  0F48                     	;# 
  2815  0F49                     	;# 
  2816  0F4A                     	;# 
  2817  0F4B                     	;# 
  2818  0F4C                     	;# 
  2819  0F4E                     	;# 
  2820  0F4F                     	;# 
  2821  0F50                     	;# 
  2822  0F51                     	;# 
  2823  0F52                     	;# 
  2824  0F53                     	;# 
  2825  0F54                     	;# 
  2826  0F55                     	;# 
  2827  0F56                     	;# 
  2828  0F57                     	;# 
  2829  0F59                     	;# 
  2830  0F5A                     	;# 
  2831  0F5B                     	;# 
  2832  0F5C                     	;# 
  2833  0F5D                     	;# 
  2834  0F61                     	;# 
  2835  0F62                     	;# 
  2836  0F64                     	;# 
  2837  0F65                     	;# 
  2838  0F66                     	;# 
  2839  0F67                     	;# 
  2840  0F68                     	;# 
  2841  0F69                     	;# 
  2842  0F6A                     	;# 
  2843  0F6B                     	;# 
  2844  0F6C                     	;# 
  2845  0F6D                     	;# 
  2846  0FE4                     	;# 
  2847  0FE5                     	;# 
  2848  0FE6                     	;# 
  2849  0FE7                     	;# 
  2850  0FE8                     	;# 
  2851  0FE9                     	;# 
  2852  0FEA                     	;# 
  2853  0FEB                     	;# 
  2854  0FED                     	;# 
  2855  0FEE                     	;# 
  2856  0FEF                     	;# 
  2857  0000                     	;# 
  2858  0001                     	;# 
  2859  0002                     	;# 
  2860  0003                     	;# 
  2861  0004                     	;# 
  2862  0005                     	;# 
  2863  0006                     	;# 
  2864  0007                     	;# 
  2865  0008                     	;# 
  2866  0009                     	;# 
  2867  000A                     	;# 
  2868  000B                     	;# 
  2869  000C                     	;# 
  2870  000D                     	;# 
  2871  000E                     	;# 
  2872  000F                     	;# 
  2873  0010                     	;# 
  2874  0011                     	;# 
  2875  0012                     	;# 
  2876  0013                     	;# 
  2877  0014                     	;# 
  2878  0015                     	;# 
  2879  0016                     	;# 
  2880  0017                     	;# 
  2881  0018                     	;# 
  2882  0019                     	;# 
  2883  001A                     	;# 
  2884  001C                     	;# 
  2885  001C                     	;# 
  2886  001D                     	;# 
  2887  001D                     	;# 
  2888  001E                     	;# 
  2889  001F                     	;# 
  2890  008C                     	;# 
  2891  008C                     	;# 
  2892  008D                     	;# 
  2893  008E                     	;# 
  2894  008E                     	;# 
  2895  008F                     	;# 
  2896  0090                     	;# 
  2897  0090                     	;# 
  2898  0091                     	;# 
  2899  0093                     	;# 
  2900  0094                     	;# 
  2901  0095                     	;# 
  2902  0096                     	;# 
  2903  0097                     	;# 
  2904  0098                     	;# 
  2905  0099                     	;# 
  2906  009A                     	;# 
  2907  009B                     	;# 
  2908  009C                     	;# 
  2909  009D                     	;# 
  2910  009E                     	;# 
  2911  010C                     	;# 
  2912  010D                     	;# 
  2913  010E                     	;# 
  2914  010E                     	;# 
  2915  010F                     	;# 
  2916  0110                     	;# 
  2917  0110                     	;# 
  2918  0111                     	;# 
  2919  0112                     	;# 
  2920  0112                     	;# 
  2921  0113                     	;# 
  2922  0114                     	;# 
  2923  0114                     	;# 
  2924  0115                     	;# 
  2925  0116                     	;# 
  2926  0116                     	;# 
  2927  0117                     	;# 
  2928  0119                     	;# 
  2929  0119                     	;# 
  2930  0119                     	;# 
  2931  011A                     	;# 
  2932  011A                     	;# 
  2933  011A                     	;# 
  2934  011B                     	;# 
  2935  011B                     	;# 
  2936  011B                     	;# 
  2937  011B                     	;# 
  2938  011B                     	;# 
  2939  011C                     	;# 
  2940  011C                     	;# 
  2941  011C                     	;# 
  2942  011D                     	;# 
  2943  011D                     	;# 
  2944  011D                     	;# 
  2945  011E                     	;# 
  2946  011E                     	;# 
  2947  011E                     	;# 
  2948  011F                     	;# 
  2949  011F                     	;# 
  2950  011F                     	;# 
  2951  011F                     	;# 
  2952  011F                     	;# 
  2953  018C                     	;# 
  2954  018D                     	;# 
  2955  018E                     	;# 
  2956  018F                     	;# 
  2957  0190                     	;# 
  2958  0191                     	;# 
  2959  0192                     	;# 
  2960  0196                     	;# 
  2961  0197                     	;# 
  2962  0198                     	;# 
  2963  0199                     	;# 
  2964  019A                     	;# 
  2965  019B                     	;# 
  2966  019C                     	;# 
  2967  020C                     	;# 
  2968  020C                     	;# 
  2969  020D                     	;# 
  2970  020E                     	;# 
  2971  020F                     	;# 
  2972  020F                     	;# 
  2973  0210                     	;# 
  2974  0210                     	;# 
  2975  0211                     	;# 
  2976  0211                     	;# 
  2977  0212                     	;# 
  2978  0212                     	;# 
  2979  0213                     	;# 
  2980  0214                     	;# 
  2981  0215                     	;# 
  2982  0215                     	;# 
  2983  0216                     	;# 
  2984  0216                     	;# 
  2985  0217                     	;# 
  2986  0217                     	;# 
  2987  0218                     	;# 
  2988  0218                     	;# 
  2989  0219                     	;# 
  2990  021A                     	;# 
  2991  021B                     	;# 
  2992  021B                     	;# 
  2993  021C                     	;# 
  2994  021C                     	;# 
  2995  021D                     	;# 
  2996  021D                     	;# 
  2997  021E                     	;# 
  2998  021F                     	;# 
  2999  028C                     	;# 
  3000  028C                     	;# 
  3001  028D                     	;# 
  3002  028D                     	;# 
  3003  028E                     	;# 
  3004  028F                     	;# 
  3005  0290                     	;# 
  3006  0290                     	;# 
  3007  0291                     	;# 
  3008  0292                     	;# 
  3009  0292                     	;# 
  3010  0293                     	;# 
  3011  0293                     	;# 
  3012  0294                     	;# 
  3013  0295                     	;# 
  3014  0296                     	;# 
  3015  0296                     	;# 
  3016  0297                     	;# 
  3017  0298                     	;# 
  3018  0298                     	;# 
  3019  0299                     	;# 
  3020  0299                     	;# 
  3021  029A                     	;# 
  3022  029B                     	;# 
  3023  029C                     	;# 
  3024  029C                     	;# 
  3025  029D                     	;# 
  3026  030C                     	;# 
  3027  030C                     	;# 
  3028  030D                     	;# 
  3029  030E                     	;# 
  3030  030F                     	;# 
  3031  0310                     	;# 
  3032  0310                     	;# 
  3033  0311                     	;# 
  3034  0312                     	;# 
  3035  0313                     	;# 
  3036  0314                     	;# 
  3037  0314                     	;# 
  3038  0315                     	;# 
  3039  0316                     	;# 
  3040  0317                     	;# 
  3041  0318                     	;# 
  3042  0318                     	;# 
  3043  0319                     	;# 
  3044  031A                     	;# 
  3045  031B                     	;# 
  3046  031C                     	;# 
  3047  031C                     	;# 
  3048  031D                     	;# 
  3049  031E                     	;# 
  3050  031F                     	;# 
  3051  038C                     	;# 
  3052  038C                     	;# 
  3053  038D                     	;# 
  3054  038E                     	;# 
  3055  0390                     	;# 
  3056  0390                     	;# 
  3057  0391                     	;# 
  3058  0392                     	;# 
  3059  040C                     	;# 
  3060  040D                     	;# 
  3061  040E                     	;# 
  3062  040F                     	;# 
  3063  0410                     	;# 
  3064  0411                     	;# 
  3065  0416                     	;# 
  3066  0416                     	;# 
  3067  0417                     	;# 
  3068  0418                     	;# 
  3069  0418                     	;# 
  3070  0419                     	;# 
  3071  041A                     	;# 
  3072  041A                     	;# 
  3073  041B                     	;# 
  3074  041C                     	;# 
  3075  041C                     	;# 
  3076  041D                     	;# 
  3077  041E                     	;# 
  3078  041F                     	;# 
  3079  048C                     	;# 
  3080  048C                     	;# 
  3081  048D                     	;# 
  3082  048E                     	;# 
  3083  048F                     	;# 
  3084  048F                     	;# 
  3085  0490                     	;# 
  3086  0491                     	;# 
  3087  0492                     	;# 
  3088  0492                     	;# 
  3089  0493                     	;# 
  3090  0494                     	;# 
  3091  0495                     	;# 
  3092  0495                     	;# 
  3093  0496                     	;# 
  3094  0497                     	;# 
  3095  0498                     	;# 
  3096  0499                     	;# 
  3097  049A                     	;# 
  3098  049B                     	;# 
  3099  049C                     	;# 
  3100  049D                     	;# 
  3101  050C                     	;# 
  3102  050C                     	;# 
  3103  050D                     	;# 
  3104  050E                     	;# 
  3105  050F                     	;# 
  3106  050F                     	;# 
  3107  0510                     	;# 
  3108  0511                     	;# 
  3109  0512                     	;# 
  3110  0512                     	;# 
  3111  0513                     	;# 
  3112  0514                     	;# 
  3113  0515                     	;# 
  3114  0515                     	;# 
  3115  0516                     	;# 
  3116  0517                     	;# 
  3117  0518                     	;# 
  3118  0519                     	;# 
  3119  051A                     	;# 
  3120  051B                     	;# 
  3121  051C                     	;# 
  3122  051D                     	;# 
  3123  058C                     	;# 
  3124  058C                     	;# 
  3125  058D                     	;# 
  3126  058E                     	;# 
  3127  058F                     	;# 
  3128  058F                     	;# 
  3129  0590                     	;# 
  3130  0591                     	;# 
  3131  0592                     	;# 
  3132  0593                     	;# 
  3133  060C                     	;# 
  3134  060D                     	;# 
  3135  060E                     	;# 
  3136  060F                     	;# 
  3137  0610                     	;# 
  3138  0611                     	;# 
  3139  0612                     	;# 
  3140  0613                     	;# 
  3141  0614                     	;# 
  3142  0616                     	;# 
  3143  0617                     	;# 
  3144  0618                     	;# 
  3145  0619                     	;# 
  3146  061A                     	;# 
  3147  061B                     	;# 
  3148  061C                     	;# 
  3149  061D                     	;# 
  3150  061E                     	;# 
  3151  068C                     	;# 
  3152  068D                     	;# 
  3153  068E                     	;# 
  3154  068F                     	;# 
  3155  0690                     	;# 
  3156  0691                     	;# 
  3157  0692                     	;# 
  3158  0693                     	;# 
  3159  0694                     	;# 
  3160  070C                     	;# 
  3161  070D                     	;# 
  3162  070E                     	;# 
  3163  070F                     	;# 
  3164  0710                     	;# 
  3165  0711                     	;# 
  3166  0712                     	;# 
  3167  0713                     	;# 
  3168  0714                     	;# 
  3169  0716                     	;# 
  3170  0717                     	;# 
  3171  0718                     	;# 
  3172  0719                     	;# 
  3173  071A                     	;# 
  3174  071B                     	;# 
  3175  071C                     	;# 
  3176  071D                     	;# 
  3177  071E                     	;# 
  3178  0796                     	;# 
  3179  0797                     	;# 
  3180  0798                     	;# 
  3181  0799                     	;# 
  3182  079A                     	;# 
  3183  079B                     	;# 
  3184  080C                     	;# 
  3185  080D                     	;# 
  3186  080E                     	;# 
  3187  080F                     	;# 
  3188  0810                     	;# 
  3189  0811                     	;# 
  3190  0812                     	;# 
  3191  0813                     	;# 
  3192  0814                     	;# 
  3193  081A                     	;# 
  3194  081B                     	;# 
  3195  081C                     	;# 
  3196  081D                     	;# 
  3197  081E                     	;# 
  3198  081F                     	;# 
  3199  088C                     	;# 
  3200  088D                     	;# 
  3201  088E                     	;# 
  3202  088F                     	;# 
  3203  0890                     	;# 
  3204  0891                     	;# 
  3205  0892                     	;# 
  3206  0893                     	;# 
  3207  0895                     	;# 
  3208  0896                     	;# 
  3209  0897                     	;# 
  3210  0898                     	;# 
  3211  0899                     	;# 
  3212  089A                     	;# 
  3213  089B                     	;# 
  3214  090C                     	;# 
  3215  090E                     	;# 
  3216  090F                     	;# 
  3217  091F                     	;# 
  3218  091F                     	;# 
  3219  098F                     	;# 
  3220  098F                     	;# 
  3221  0990                     	;# 
  3222  0991                     	;# 
  3223  0992                     	;# 
  3224  0993                     	;# 
  3225  0994                     	;# 
  3226  0995                     	;# 
  3227  0996                     	;# 
  3228  0997                     	;# 
  3229  0E0F                     	;# 
  3230  0E10                     	;# 
  3231  0E11                     	;# 
  3232  0E12                     	;# 
  3233  0E13                     	;# 
  3234  0E14                     	;# 
  3235  0E15                     	;# 
  3236  0E16                     	;# 
  3237  0E17                     	;# 
  3238  0E18                     	;# 
  3239  0E19                     	;# 
  3240  0E1A                     	;# 
  3241  0E1B                     	;# 
  3242  0E1C                     	;# 
  3243  0E1D                     	;# 
  3244  0E1E                     	;# 
  3245  0E1F                     	;# 
  3246  0E20                     	;# 
  3247  0E21                     	;# 
  3248  0E22                     	;# 
  3249  0E23                     	;# 
  3250  0E24                     	;# 
  3251  0E25                     	;# 
  3252  0E26                     	;# 
  3253  0E27                     	;# 
  3254  0E28                     	;# 
  3255  0E29                     	;# 
  3256  0E2A                     	;# 
  3257  0E2B                     	;# 
  3258  0E2C                     	;# 
  3259  0E2D                     	;# 
  3260  0E2E                     	;# 
  3261  0E2F                     	;# 
  3262  0E30                     	;# 
  3263  0E31                     	;# 
  3264  0E32                     	;# 
  3265  0E33                     	;# 
  3266  0E34                     	;# 
  3267  0E35                     	;# 
  3268  0E36                     	;# 
  3269  0E37                     	;# 
  3270  0E8F                     	;# 
  3271  0E90                     	;# 
  3272  0E91                     	;# 
  3273  0E92                     	;# 
  3274  0E93                     	;# 
  3275  0E94                     	;# 
  3276  0E95                     	;# 
  3277  0E96                     	;# 
  3278  0E97                     	;# 
  3279  0E9C                     	;# 
  3280  0E9D                     	;# 
  3281  0E9E                     	;# 
  3282  0EA1                     	;# 
  3283  0EA2                     	;# 
  3284  0EA3                     	;# 
  3285  0EA4                     	;# 
  3286  0EA5                     	;# 
  3287  0EA9                     	;# 
  3288  0EAA                     	;# 
  3289  0EAB                     	;# 
  3290  0EAC                     	;# 
  3291  0EB1                     	;# 
  3292  0EB2                     	;# 
  3293  0EB3                     	;# 
  3294  0EB8                     	;# 
  3295  0EB9                     	;# 
  3296  0EBA                     	;# 
  3297  0EBB                     	;# 
  3298  0EBC                     	;# 
  3299  0EBD                     	;# 
  3300  0EBE                     	;# 
  3301  0EC3                     	;# 
  3302  0EC5                     	;# 
  3303  0EC6                     	;# 
  3304  0EC7                     	;# 
  3305  0EC8                     	;# 
  3306  0EC9                     	;# 
  3307  0ECA                     	;# 
  3308  0ECB                     	;# 
  3309  0ECC                     	;# 
  3310  0F10                     	;# 
  3311  0F11                     	;# 
  3312  0F12                     	;# 
  3313  0F13                     	;# 
  3314  0F14                     	;# 
  3315  0F15                     	;# 
  3316  0F16                     	;# 
  3317  0F17                     	;# 
  3318  0F18                     	;# 
  3319  0F19                     	;# 
  3320  0F1A                     	;# 
  3321  0F1B                     	;# 
  3322  0F1C                     	;# 
  3323  0F1D                     	;# 
  3324  0F1E                     	;# 
  3325  0F1F                     	;# 
  3326  0F20                     	;# 
  3327  0F21                     	;# 
  3328  0F22                     	;# 
  3329  0F23                     	;# 
  3330  0F24                     	;# 
  3331  0F25                     	;# 
  3332  0F26                     	;# 
  3333  0F27                     	;# 
  3334  0F28                     	;# 
  3335  0F29                     	;# 
  3336  0F2A                     	;# 
  3337  0F2B                     	;# 
  3338  0F2C                     	;# 
  3339  0F2D                     	;# 
  3340  0F2E                     	;# 
  3341  0F2F                     	;# 
  3342  0F30                     	;# 
  3343  0F31                     	;# 
  3344  0F32                     	;# 
  3345  0F38                     	;# 
  3346  0F39                     	;# 
  3347  0F3A                     	;# 
  3348  0F3B                     	;# 
  3349  0F3C                     	;# 
  3350  0F3D                     	;# 
  3351  0F3E                     	;# 
  3352  0F3F                     	;# 
  3353  0F40                     	;# 
  3354  0F41                     	;# 
  3355  0F43                     	;# 
  3356  0F44                     	;# 
  3357  0F45                     	;# 
  3358  0F46                     	;# 
  3359  0F47                     	;# 
  3360  0F48                     	;# 
  3361  0F49                     	;# 
  3362  0F4A                     	;# 
  3363  0F4B                     	;# 
  3364  0F4C                     	;# 
  3365  0F4E                     	;# 
  3366  0F4F                     	;# 
  3367  0F50                     	;# 
  3368  0F51                     	;# 
  3369  0F52                     	;# 
  3370  0F53                     	;# 
  3371  0F54                     	;# 
  3372  0F55                     	;# 
  3373  0F56                     	;# 
  3374  0F57                     	;# 
  3375  0F59                     	;# 
  3376  0F5A                     	;# 
  3377  0F5B                     	;# 
  3378  0F5C                     	;# 
  3379  0F5D                     	;# 
  3380  0F61                     	;# 
  3381  0F62                     	;# 
  3382  0F64                     	;# 
  3383  0F65                     	;# 
  3384  0F66                     	;# 
  3385  0F67                     	;# 
  3386  0F68                     	;# 
  3387  0F69                     	;# 
  3388  0F6A                     	;# 
  3389  0F6B                     	;# 
  3390  0F6C                     	;# 
  3391  0F6D                     	;# 
  3392  0FE4                     	;# 
  3393  0FE5                     	;# 
  3394  0FE6                     	;# 
  3395  0FE7                     	;# 
  3396  0FE8                     	;# 
  3397  0FE9                     	;# 
  3398  0FEA                     	;# 
  3399  0FEB                     	;# 
  3400  0FED                     	;# 
  3401  0FEE                     	;# 
  3402  0FEF                     	;# 
  3403  0000                     	;# 
  3404  0001                     	;# 
  3405  0002                     	;# 
  3406  0003                     	;# 
  3407  0004                     	;# 
  3408  0005                     	;# 
  3409  0006                     	;# 
  3410  0007                     	;# 
  3411  0008                     	;# 
  3412  0009                     	;# 
  3413  000A                     	;# 
  3414  000B                     	;# 
  3415  000C                     	;# 
  3416  000D                     	;# 
  3417  000E                     	;# 
  3418  000F                     	;# 
  3419  0010                     	;# 
  3420  0011                     	;# 
  3421  0012                     	;# 
  3422  0013                     	;# 
  3423  0014                     	;# 
  3424  0015                     	;# 
  3425  0016                     	;# 
  3426  0017                     	;# 
  3427  0018                     	;# 
  3428  0019                     	;# 
  3429  001A                     	;# 
  3430  001C                     	;# 
  3431  001C                     	;# 
  3432  001D                     	;# 
  3433  001D                     	;# 
  3434  001E                     	;# 
  3435  001F                     	;# 
  3436  008C                     	;# 
  3437  008C                     	;# 
  3438  008D                     	;# 
  3439  008E                     	;# 
  3440  008E                     	;# 
  3441  008F                     	;# 
  3442  0090                     	;# 
  3443  0090                     	;# 
  3444  0091                     	;# 
  3445  0093                     	;# 
  3446  0094                     	;# 
  3447  0095                     	;# 
  3448  0096                     	;# 
  3449  0097                     	;# 
  3450  0098                     	;# 
  3451  0099                     	;# 
  3452  009A                     	;# 
  3453  009B                     	;# 
  3454  009C                     	;# 
  3455  009D                     	;# 
  3456  009E                     	;# 
  3457  010C                     	;# 
  3458  010D                     	;# 
  3459  010E                     	;# 
  3460  010E                     	;# 
  3461  010F                     	;# 
  3462  0110                     	;# 
  3463  0110                     	;# 
  3464  0111                     	;# 
  3465  0112                     	;# 
  3466  0112                     	;# 
  3467  0113                     	;# 
  3468  0114                     	;# 
  3469  0114                     	;# 
  3470  0115                     	;# 
  3471  0116                     	;# 
  3472  0116                     	;# 
  3473  0117                     	;# 
  3474  0119                     	;# 
  3475  0119                     	;# 
  3476  0119                     	;# 
  3477  011A                     	;# 
  3478  011A                     	;# 
  3479  011A                     	;# 
  3480  011B                     	;# 
  3481  011B                     	;# 
  3482  011B                     	;# 
  3483  011B                     	;# 
  3484  011B                     	;# 
  3485  011C                     	;# 
  3486  011C                     	;# 
  3487  011C                     	;# 
  3488  011D                     	;# 
  3489  011D                     	;# 
  3490  011D                     	;# 
  3491  011E                     	;# 
  3492  011E                     	;# 
  3493  011E                     	;# 
  3494  011F                     	;# 
  3495  011F                     	;# 
  3496  011F                     	;# 
  3497  011F                     	;# 
  3498  011F                     	;# 
  3499  018C                     	;# 
  3500  018D                     	;# 
  3501  018E                     	;# 
  3502  018F                     	;# 
  3503  0190                     	;# 
  3504  0191                     	;# 
  3505  0192                     	;# 
  3506  0196                     	;# 
  3507  0197                     	;# 
  3508  0198                     	;# 
  3509  0199                     	;# 
  3510  019A                     	;# 
  3511  019B                     	;# 
  3512  019C                     	;# 
  3513  020C                     	;# 
  3514  020C                     	;# 
  3515  020D                     	;# 
  3516  020E                     	;# 
  3517  020F                     	;# 
  3518  020F                     	;# 
  3519  0210                     	;# 
  3520  0210                     	;# 
  3521  0211                     	;# 
  3522  0211                     	;# 
  3523  0212                     	;# 
  3524  0212                     	;# 
  3525  0213                     	;# 
  3526  0214                     	;# 
  3527  0215                     	;# 
  3528  0215                     	;# 
  3529  0216                     	;# 
  3530  0216                     	;# 
  3531  0217                     	;# 
  3532  0217                     	;# 
  3533  0218                     	;# 
  3534  0218                     	;# 
  3535  0219                     	;# 
  3536  021A                     	;# 
  3537  021B                     	;# 
  3538  021B                     	;# 
  3539  021C                     	;# 
  3540  021C                     	;# 
  3541  021D                     	;# 
  3542  021D                     	;# 
  3543  021E                     	;# 
  3544  021F                     	;# 
  3545  028C                     	;# 
  3546  028C                     	;# 
  3547  028D                     	;# 
  3548  028D                     	;# 
  3549  028E                     	;# 
  3550  028F                     	;# 
  3551  0290                     	;# 
  3552  0290                     	;# 
  3553  0291                     	;# 
  3554  0292                     	;# 
  3555  0292                     	;# 
  3556  0293                     	;# 
  3557  0293                     	;# 
  3558  0294                     	;# 
  3559  0295                     	;# 
  3560  0296                     	;# 
  3561  0296                     	;# 
  3562  0297                     	;# 
  3563  0298                     	;# 
  3564  0298                     	;# 
  3565  0299                     	;# 
  3566  0299                     	;# 
  3567  029A                     	;# 
  3568  029B                     	;# 
  3569  029C                     	;# 
  3570  029C                     	;# 
  3571  029D                     	;# 
  3572  030C                     	;# 
  3573  030C                     	;# 
  3574  030D                     	;# 
  3575  030E                     	;# 
  3576  030F                     	;# 
  3577  0310                     	;# 
  3578  0310                     	;# 
  3579  0311                     	;# 
  3580  0312                     	;# 
  3581  0313                     	;# 
  3582  0314                     	;# 
  3583  0314                     	;# 
  3584  0315                     	;# 
  3585  0316                     	;# 
  3586  0317                     	;# 
  3587  0318                     	;# 
  3588  0318                     	;# 
  3589  0319                     	;# 
  3590  031A                     	;# 
  3591  031B                     	;# 
  3592  031C                     	;# 
  3593  031C                     	;# 
  3594  031D                     	;# 
  3595  031E                     	;# 
  3596  031F                     	;# 
  3597  038C                     	;# 
  3598  038C                     	;# 
  3599  038D                     	;# 
  3600  038E                     	;# 
  3601  0390                     	;# 
  3602  0390                     	;# 
  3603  0391                     	;# 
  3604  0392                     	;# 
  3605  040C                     	;# 
  3606  040D                     	;# 
  3607  040E                     	;# 
  3608  040F                     	;# 
  3609  0410                     	;# 
  3610  0411                     	;# 
  3611  0416                     	;# 
  3612  0416                     	;# 
  3613  0417                     	;# 
  3614  0418                     	;# 
  3615  0418                     	;# 
  3616  0419                     	;# 
  3617  041A                     	;# 
  3618  041A                     	;# 
  3619  041B                     	;# 
  3620  041C                     	;# 
  3621  041C                     	;# 
  3622  041D                     	;# 
  3623  041E                     	;# 
  3624  041F                     	;# 
  3625  048C                     	;# 
  3626  048C                     	;# 
  3627  048D                     	;# 
  3628  048E                     	;# 
  3629  048F                     	;# 
  3630  048F                     	;# 
  3631  0490                     	;# 
  3632  0491                     	;# 
  3633  0492                     	;# 
  3634  0492                     	;# 
  3635  0493                     	;# 
  3636  0494                     	;# 
  3637  0495                     	;# 
  3638  0495                     	;# 
  3639  0496                     	;# 
  3640  0497                     	;# 
  3641  0498                     	;# 
  3642  0499                     	;# 
  3643  049A                     	;# 
  3644  049B                     	;# 
  3645  049C                     	;# 
  3646  049D                     	;# 
  3647  050C                     	;# 
  3648  050C                     	;# 
  3649  050D                     	;# 
  3650  050E                     	;# 
  3651  050F                     	;# 
  3652  050F                     	;# 
  3653  0510                     	;# 
  3654  0511                     	;# 
  3655  0512                     	;# 
  3656  0512                     	;# 
  3657  0513                     	;# 
  3658  0514                     	;# 
  3659  0515                     	;# 
  3660  0515                     	;# 
  3661  0516                     	;# 
  3662  0517                     	;# 
  3663  0518                     	;# 
  3664  0519                     	;# 
  3665  051A                     	;# 
  3666  051B                     	;# 
  3667  051C                     	;# 
  3668  051D                     	;# 
  3669  058C                     	;# 
  3670  058C                     	;# 
  3671  058D                     	;# 
  3672  058E                     	;# 
  3673  058F                     	;# 
  3674  058F                     	;# 
  3675  0590                     	;# 
  3676  0591                     	;# 
  3677  0592                     	;# 
  3678  0593                     	;# 
  3679  060C                     	;# 
  3680  060D                     	;# 
  3681  060E                     	;# 
  3682  060F                     	;# 
  3683  0610                     	;# 
  3684  0611                     	;# 
  3685  0612                     	;# 
  3686  0613                     	;# 
  3687  0614                     	;# 
  3688  0616                     	;# 
  3689  0617                     	;# 
  3690  0618                     	;# 
  3691  0619                     	;# 
  3692  061A                     	;# 
  3693  061B                     	;# 
  3694  061C                     	;# 
  3695  061D                     	;# 
  3696  061E                     	;# 
  3697  068C                     	;# 
  3698  068D                     	;# 
  3699  068E                     	;# 
  3700  068F                     	;# 
  3701  0690                     	;# 
  3702  0691                     	;# 
  3703  0692                     	;# 
  3704  0693                     	;# 
  3705  0694                     	;# 
  3706  070C                     	;# 
  3707  070D                     	;# 
  3708  070E                     	;# 
  3709  070F                     	;# 
  3710  0710                     	;# 
  3711  0711                     	;# 
  3712  0712                     	;# 
  3713  0713                     	;# 
  3714  0714                     	;# 
  3715  0716                     	;# 
  3716  0717                     	;# 
  3717  0718                     	;# 
  3718  0719                     	;# 
  3719  071A                     	;# 
  3720  071B                     	;# 
  3721  071C                     	;# 
  3722  071D                     	;# 
  3723  071E                     	;# 
  3724  0796                     	;# 
  3725  0797                     	;# 
  3726  0798                     	;# 
  3727  0799                     	;# 
  3728  079A                     	;# 
  3729  079B                     	;# 
  3730  080C                     	;# 
  3731  080D                     	;# 
  3732  080E                     	;# 
  3733  080F                     	;# 
  3734  0810                     	;# 
  3735  0811                     	;# 
  3736  0812                     	;# 
  3737  0813                     	;# 
  3738  0814                     	;# 
  3739  081A                     	;# 
  3740  081B                     	;# 
  3741  081C                     	;# 
  3742  081D                     	;# 
  3743  081E                     	;# 
  3744  081F                     	;# 
  3745  088C                     	;# 
  3746  088D                     	;# 
  3747  088E                     	;# 
  3748  088F                     	;# 
  3749  0890                     	;# 
  3750  0891                     	;# 
  3751  0892                     	;# 
  3752  0893                     	;# 
  3753  0895                     	;# 
  3754  0896                     	;# 
  3755  0897                     	;# 
  3756  0898                     	;# 
  3757  0899                     	;# 
  3758  089A                     	;# 
  3759  089B                     	;# 
  3760  090C                     	;# 
  3761  090E                     	;# 
  3762  090F                     	;# 
  3763  091F                     	;# 
  3764  091F                     	;# 
  3765  098F                     	;# 
  3766  098F                     	;# 
  3767  0990                     	;# 
  3768  0991                     	;# 
  3769  0992                     	;# 
  3770  0993                     	;# 
  3771  0994                     	;# 
  3772  0995                     	;# 
  3773  0996                     	;# 
  3774  0997                     	;# 
  3775  0E0F                     	;# 
  3776  0E10                     	;# 
  3777  0E11                     	;# 
  3778  0E12                     	;# 
  3779  0E13                     	;# 
  3780  0E14                     	;# 
  3781  0E15                     	;# 
  3782  0E16                     	;# 
  3783  0E17                     	;# 
  3784  0E18                     	;# 
  3785  0E19                     	;# 
  3786  0E1A                     	;# 
  3787  0E1B                     	;# 
  3788  0E1C                     	;# 
  3789  0E1D                     	;# 
  3790  0E1E                     	;# 
  3791  0E1F                     	;# 
  3792  0E20                     	;# 
  3793  0E21                     	;# 
  3794  0E22                     	;# 
  3795  0E23                     	;# 
  3796  0E24                     	;# 
  3797  0E25                     	;# 
  3798  0E26                     	;# 
  3799  0E27                     	;# 
  3800  0E28                     	;# 
  3801  0E29                     	;# 
  3802  0E2A                     	;# 
  3803  0E2B                     	;# 
  3804  0E2C                     	;# 
  3805  0E2D                     	;# 
  3806  0E2E                     	;# 
  3807  0E2F                     	;# 
  3808  0E30                     	;# 
  3809  0E31                     	;# 
  3810  0E32                     	;# 
  3811  0E33                     	;# 
  3812  0E34                     	;# 
  3813  0E35                     	;# 
  3814  0E36                     	;# 
  3815  0E37                     	;# 
  3816  0E8F                     	;# 
  3817  0E90                     	;# 
  3818  0E91                     	;# 
  3819  0E92                     	;# 
  3820  0E93                     	;# 
  3821  0E94                     	;# 
  3822  0E95                     	;# 
  3823  0E96                     	;# 
  3824  0E97                     	;# 
  3825  0E9C                     	;# 
  3826  0E9D                     	;# 
  3827  0E9E                     	;# 
  3828  0EA1                     	;# 
  3829  0EA2                     	;# 
  3830  0EA3                     	;# 
  3831  0EA4                     	;# 
  3832  0EA5                     	;# 
  3833  0EA9                     	;# 
  3834  0EAA                     	;# 
  3835  0EAB                     	;# 
  3836  0EAC                     	;# 
  3837  0EB1                     	;# 
  3838  0EB2                     	;# 
  3839  0EB3                     	;# 
  3840  0EB8                     	;# 
  3841  0EB9                     	;# 
  3842  0EBA                     	;# 
  3843  0EBB                     	;# 
  3844  0EBC                     	;# 
  3845  0EBD                     	;# 
  3846  0EBE                     	;# 
  3847  0EC3                     	;# 
  3848  0EC5                     	;# 
  3849  0EC6                     	;# 
  3850  0EC7                     	;# 
  3851  0EC8                     	;# 
  3852  0EC9                     	;# 
  3853  0ECA                     	;# 
  3854  0ECB                     	;# 
  3855  0ECC                     	;# 
  3856  0F10                     	;# 
  3857  0F11                     	;# 
  3858  0F12                     	;# 
  3859  0F13                     	;# 
  3860  0F14                     	;# 
  3861  0F15                     	;# 
  3862  0F16                     	;# 
  3863  0F17                     	;# 
  3864  0F18                     	;# 
  3865  0F19                     	;# 
  3866  0F1A                     	;# 
  3867  0F1B                     	;# 
  3868  0F1C                     	;# 
  3869  0F1D                     	;# 
  3870  0F1E                     	;# 
  3871  0F1F                     	;# 
  3872  0F20                     	;# 
  3873  0F21                     	;# 
  3874  0F22                     	;# 
  3875  0F23                     	;# 
  3876  0F24                     	;# 
  3877  0F25                     	;# 
  3878  0F26                     	;# 
  3879  0F27                     	;# 
  3880  0F28                     	;# 
  3881  0F29                     	;# 
  3882  0F2A                     	;# 
  3883  0F2B                     	;# 
  3884  0F2C                     	;# 
  3885  0F2D                     	;# 
  3886  0F2E                     	;# 
  3887  0F2F                     	;# 
  3888  0F30                     	;# 
  3889  0F31                     	;# 
  3890  0F32                     	;# 
  3891  0F38                     	;# 
  3892  0F39                     	;# 
  3893  0F3A                     	;# 
  3894  0F3B                     	;# 
  3895  0F3C                     	;# 
  3896  0F3D                     	;# 
  3897  0F3E                     	;# 
  3898  0F3F                     	;# 
  3899  0F40                     	;# 
  3900  0F41                     	;# 
  3901  0F43                     	;# 
  3902  0F44                     	;# 
  3903  0F45                     	;# 
  3904  0F46                     	;# 
  3905  0F47                     	;# 
  3906  0F48                     	;# 
  3907  0F49                     	;# 
  3908  0F4A                     	;# 
  3909  0F4B                     	;# 
  3910  0F4C                     	;# 
  3911  0F4E                     	;# 
  3912  0F4F                     	;# 
  3913  0F50                     	;# 
  3914  0F51                     	;# 
  3915  0F52                     	;# 
  3916  0F53                     	;# 
  3917  0F54                     	;# 
  3918  0F55                     	;# 
  3919  0F56                     	;# 
  3920  0F57                     	;# 
  3921  0F59                     	;# 
  3922  0F5A                     	;# 
  3923  0F5B                     	;# 
  3924  0F5C                     	;# 
  3925  0F5D                     	;# 
  3926  0F61                     	;# 
  3927  0F62                     	;# 
  3928  0F64                     	;# 
  3929  0F65                     	;# 
  3930  0F66                     	;# 
  3931  0F67                     	;# 
  3932  0F68                     	;# 
  3933  0F69                     	;# 
  3934  0F6A                     	;# 
  3935  0F6B                     	;# 
  3936  0F6C                     	;# 
  3937  0F6D                     	;# 
  3938  0FE4                     	;# 
  3939  0FE5                     	;# 
  3940  0FE6                     	;# 
  3941  0FE7                     	;# 
  3942  0FE8                     	;# 
  3943  0FE9                     	;# 
  3944  0FEA                     	;# 
  3945  0FEB                     	;# 
  3946  0FED                     	;# 
  3947  0FEE                     	;# 
  3948  0FEF                     	;# 
  3949  0000                     	;# 
  3950  0001                     	;# 
  3951  0002                     	;# 
  3952  0003                     	;# 
  3953  0004                     	;# 
  3954  0005                     	;# 
  3955  0006                     	;# 
  3956  0007                     	;# 
  3957  0008                     	;# 
  3958  0009                     	;# 
  3959  000A                     	;# 
  3960  000B                     	;# 
  3961  000C                     	;# 
  3962  000D                     	;# 
  3963  000E                     	;# 
  3964  000F                     	;# 
  3965  0010                     	;# 
  3966  0011                     	;# 
  3967  0012                     	;# 
  3968  0013                     	;# 
  3969  0014                     	;# 
  3970  0015                     	;# 
  3971  0016                     	;# 
  3972  0017                     	;# 
  3973  0018                     	;# 
  3974  0019                     	;# 
  3975  001A                     	;# 
  3976  001C                     	;# 
  3977  001C                     	;# 
  3978  001D                     	;# 
  3979  001D                     	;# 
  3980  001E                     	;# 
  3981  001F                     	;# 
  3982  008C                     	;# 
  3983  008C                     	;# 
  3984  008D                     	;# 
  3985  008E                     	;# 
  3986  008E                     	;# 
  3987  008F                     	;# 
  3988  0090                     	;# 
  3989  0090                     	;# 
  3990  0091                     	;# 
  3991  0093                     	;# 
  3992  0094                     	;# 
  3993  0095                     	;# 
  3994  0096                     	;# 
  3995  0097                     	;# 
  3996  0098                     	;# 
  3997  0099                     	;# 
  3998  009A                     	;# 
  3999  009B                     	;# 
  4000  009C                     	;# 
  4001  009D                     	;# 
  4002  009E                     	;# 
  4003  010C                     	;# 
  4004  010D                     	;# 
  4005  010E                     	;# 
  4006  010E                     	;# 
  4007  010F                     	;# 
  4008  0110                     	;# 
  4009  0110                     	;# 
  4010  0111                     	;# 
  4011  0112                     	;# 
  4012  0112                     	;# 
  4013  0113                     	;# 
  4014  0114                     	;# 
  4015  0114                     	;# 
  4016  0115                     	;# 
  4017  0116                     	;# 
  4018  0116                     	;# 
  4019  0117                     	;# 
  4020  0119                     	;# 
  4021  0119                     	;# 
  4022  0119                     	;# 
  4023  011A                     	;# 
  4024  011A                     	;# 
  4025  011A                     	;# 
  4026  011B                     	;# 
  4027  011B                     	;# 
  4028  011B                     	;# 
  4029  011B                     	;# 
  4030  011B                     	;# 
  4031  011C                     	;# 
  4032  011C                     	;# 
  4033  011C                     	;# 
  4034  011D                     	;# 
  4035  011D                     	;# 
  4036  011D                     	;# 
  4037  011E                     	;# 
  4038  011E                     	;# 
  4039  011E                     	;# 
  4040  011F                     	;# 
  4041  011F                     	;# 
  4042  011F                     	;# 
  4043  011F                     	;# 
  4044  011F                     	;# 
  4045  018C                     	;# 
  4046  018D                     	;# 
  4047  018E                     	;# 
  4048  018F                     	;# 
  4049  0190                     	;# 
  4050  0191                     	;# 
  4051  0192                     	;# 
  4052  0196                     	;# 
  4053  0197                     	;# 
  4054  0198                     	;# 
  4055  0199                     	;# 
  4056  019A                     	;# 
  4057  019B                     	;# 
  4058  019C                     	;# 
  4059  020C                     	;# 
  4060  020C                     	;# 
  4061  020D                     	;# 
  4062  020E                     	;# 
  4063  020F                     	;# 
  4064  020F                     	;# 
  4065  0210                     	;# 
  4066  0210                     	;# 
  4067  0211                     	;# 
  4068  0211                     	;# 
  4069  0212                     	;# 
  4070  0212                     	;# 
  4071  0213                     	;# 
  4072  0214                     	;# 
  4073  0215                     	;# 
  4074  0215                     	;# 
  4075  0216                     	;# 
  4076  0216                     	;# 
  4077  0217                     	;# 
  4078  0217                     	;# 
  4079  0218                     	;# 
  4080  0218                     	;# 
  4081  0219                     	;# 
  4082  021A                     	;# 
  4083  021B                     	;# 
  4084  021B                     	;# 
  4085  021C                     	;# 
  4086  021C                     	;# 
  4087  021D                     	;# 
  4088  021D                     	;# 
  4089  021E                     	;# 
  4090  021F                     	;# 
  4091  028C                     	;# 
  4092  028C                     	;# 
  4093  028D                     	;# 
  4094  028D                     	;# 
  4095  028E                     	;# 
  4096  028F                     	;# 
  4097  0290                     	;# 
  4098  0290                     	;# 
  4099  0291                     	;# 
  4100  0292                     	;# 
  4101  0292                     	;# 
  4102  0293                     	;# 
  4103  0293                     	;# 
  4104  0294                     	;# 
  4105  0295                     	;# 
  4106  0296                     	;# 
  4107  0296                     	;# 
  4108  0297                     	;# 
  4109  0298                     	;# 
  4110  0298                     	;# 
  4111  0299                     	;# 
  4112  0299                     	;# 
  4113  029A                     	;# 
  4114  029B                     	;# 
  4115  029C                     	;# 
  4116  029C                     	;# 
  4117  029D                     	;# 
  4118  030C                     	;# 
  4119  030C                     	;# 
  4120  030D                     	;# 
  4121  030E                     	;# 
  4122  030F                     	;# 
  4123  0310                     	;# 
  4124  0310                     	;# 
  4125  0311                     	;# 
  4126  0312                     	;# 
  4127  0313                     	;# 
  4128  0314                     	;# 
  4129  0314                     	;# 
  4130  0315                     	;# 
  4131  0316                     	;# 
  4132  0317                     	;# 
  4133  0318                     	;# 
  4134  0318                     	;# 
  4135  0319                     	;# 
  4136  031A                     	;# 
  4137  031B                     	;# 
  4138  031C                     	;# 
  4139  031C                     	;# 
  4140  031D                     	;# 
  4141  031E                     	;# 
  4142  031F                     	;# 
  4143  038C                     	;# 
  4144  038C                     	;# 
  4145  038D                     	;# 
  4146  038E                     	;# 
  4147  0390                     	;# 
  4148  0390                     	;# 
  4149  0391                     	;# 
  4150  0392                     	;# 
  4151  040C                     	;# 
  4152  040D                     	;# 
  4153  040E                     	;# 
  4154  040F                     	;# 
  4155  0410                     	;# 
  4156  0411                     	;# 
  4157  0416                     	;# 
  4158  0416                     	;# 
  4159  0417                     	;# 
  4160  0418                     	;# 
  4161  0418                     	;# 
  4162  0419                     	;# 
  4163  041A                     	;# 
  4164  041A                     	;# 
  4165  041B                     	;# 
  4166  041C                     	;# 
  4167  041C                     	;# 
  4168  041D                     	;# 
  4169  041E                     	;# 
  4170  041F                     	;# 
  4171  048C                     	;# 
  4172  048C                     	;# 
  4173  048D                     	;# 
  4174  048E                     	;# 
  4175  048F                     	;# 
  4176  048F                     	;# 
  4177  0490                     	;# 
  4178  0491                     	;# 
  4179  0492                     	;# 
  4180  0492                     	;# 
  4181  0493                     	;# 
  4182  0494                     	;# 
  4183  0495                     	;# 
  4184  0495                     	;# 
  4185  0496                     	;# 
  4186  0497                     	;# 
  4187  0498                     	;# 
  4188  0499                     	;# 
  4189  049A                     	;# 
  4190  049B                     	;# 
  4191  049C                     	;# 
  4192  049D                     	;# 
  4193  050C                     	;# 
  4194  050C                     	;# 
  4195  050D                     	;# 
  4196  050E                     	;# 
  4197  050F                     	;# 
  4198  050F                     	;# 
  4199  0510                     	;# 
  4200  0511                     	;# 
  4201  0512                     	;# 
  4202  0512                     	;# 
  4203  0513                     	;# 
  4204  0514                     	;# 
  4205  0515                     	;# 
  4206  0515                     	;# 
  4207  0516                     	;# 
  4208  0517                     	;# 
  4209  0518                     	;# 
  4210  0519                     	;# 
  4211  051A                     	;# 
  4212  051B                     	;# 
  4213  051C                     	;# 
  4214  051D                     	;# 
  4215  058C                     	;# 
  4216  058C                     	;# 
  4217  058D                     	;# 
  4218  058E                     	;# 
  4219  058F                     	;# 
  4220  058F                     	;# 
  4221  0590                     	;# 
  4222  0591                     	;# 
  4223  0592                     	;# 
  4224  0593                     	;# 
  4225  060C                     	;# 
  4226  060D                     	;# 
  4227  060E                     	;# 
  4228  060F                     	;# 
  4229  0610                     	;# 
  4230  0611                     	;# 
  4231  0612                     	;# 
  4232  0613                     	;# 
  4233  0614                     	;# 
  4234  0616                     	;# 
  4235  0617                     	;# 
  4236  0618                     	;# 
  4237  0619                     	;# 
  4238  061A                     	;# 
  4239  061B                     	;# 
  4240  061C                     	;# 
  4241  061D                     	;# 
  4242  061E                     	;# 
  4243  068C                     	;# 
  4244  068D                     	;# 
  4245  068E                     	;# 
  4246  068F                     	;# 
  4247  0690                     	;# 
  4248  0691                     	;# 
  4249  0692                     	;# 
  4250  0693                     	;# 
  4251  0694                     	;# 
  4252  070C                     	;# 
  4253  070D                     	;# 
  4254  070E                     	;# 
  4255  070F                     	;# 
  4256  0710                     	;# 
  4257  0711                     	;# 
  4258  0712                     	;# 
  4259  0713                     	;# 
  4260  0714                     	;# 
  4261  0716                     	;# 
  4262  0717                     	;# 
  4263  0718                     	;# 
  4264  0719                     	;# 
  4265  071A                     	;# 
  4266  071B                     	;# 
  4267  071C                     	;# 
  4268  071D                     	;# 
  4269  071E                     	;# 
  4270  0796                     	;# 
  4271  0797                     	;# 
  4272  0798                     	;# 
  4273  0799                     	;# 
  4274  079A                     	;# 
  4275  079B                     	;# 
  4276  080C                     	;# 
  4277  080D                     	;# 
  4278  080E                     	;# 
  4279  080F                     	;# 
  4280  0810                     	;# 
  4281  0811                     	;# 
  4282  0812                     	;# 
  4283  0813                     	;# 
  4284  0814                     	;# 
  4285  081A                     	;# 
  4286  081B                     	;# 
  4287  081C                     	;# 
  4288  081D                     	;# 
  4289  081E                     	;# 
  4290  081F                     	;# 
  4291  088C                     	;# 
  4292  088D                     	;# 
  4293  088E                     	;# 
  4294  088F                     	;# 
  4295  0890                     	;# 
  4296  0891                     	;# 
  4297  0892                     	;# 
  4298  0893                     	;# 
  4299  0895                     	;# 
  4300  0896                     	;# 
  4301  0897                     	;# 
  4302  0898                     	;# 
  4303  0899                     	;# 
  4304  089A                     	;# 
  4305  089B                     	;# 
  4306  090C                     	;# 
  4307  090E                     	;# 
  4308  090F                     	;# 
  4309  091F                     	;# 
  4310  091F                     	;# 
  4311  098F                     	;# 
  4312  098F                     	;# 
  4313  0990                     	;# 
  4314  0991                     	;# 
  4315  0992                     	;# 
  4316  0993                     	;# 
  4317  0994                     	;# 
  4318  0995                     	;# 
  4319  0996                     	;# 
  4320  0997                     	;# 
  4321  0E0F                     	;# 
  4322  0E10                     	;# 
  4323  0E11                     	;# 
  4324  0E12                     	;# 
  4325  0E13                     	;# 
  4326  0E14                     	;# 
  4327  0E15                     	;# 
  4328  0E16                     	;# 
  4329  0E17                     	;# 
  4330  0E18                     	;# 
  4331  0E19                     	;# 
  4332  0E1A                     	;# 
  4333  0E1B                     	;# 
  4334  0E1C                     	;# 
  4335  0E1D                     	;# 
  4336  0E1E                     	;# 
  4337  0E1F                     	;# 
  4338  0E20                     	;# 
  4339  0E21                     	;# 
  4340  0E22                     	;# 
  4341  0E23                     	;# 
  4342  0E24                     	;# 
  4343  0E25                     	;# 
  4344  0E26                     	;# 
  4345  0E27                     	;# 
  4346  0E28                     	;# 
  4347  0E29                     	;# 
  4348  0E2A                     	;# 
  4349  0E2B                     	;# 
  4350  0E2C                     	;# 
  4351  0E2D                     	;# 
  4352  0E2E                     	;# 
  4353  0E2F                     	;# 
  4354  0E30                     	;# 
  4355  0E31                     	;# 
  4356  0E32                     	;# 
  4357  0E33                     	;# 
  4358  0E34                     	;# 
  4359  0E35                     	;# 
  4360  0E36                     	;# 
  4361  0E37                     	;# 
  4362  0E8F                     	;# 
  4363  0E90                     	;# 
  4364  0E91                     	;# 
  4365  0E92                     	;# 
  4366  0E93                     	;# 
  4367  0E94                     	;# 
  4368  0E95                     	;# 
  4369  0E96                     	;# 
  4370  0E97                     	;# 
  4371  0E9C                     	;# 
  4372  0E9D                     	;# 
  4373  0E9E                     	;# 
  4374  0EA1                     	;# 
  4375  0EA2                     	;# 
  4376  0EA3                     	;# 
  4377  0EA4                     	;# 
  4378  0EA5                     	;# 
  4379  0EA9                     	;# 
  4380  0EAA                     	;# 
  4381  0EAB                     	;# 
  4382  0EAC                     	;# 
  4383  0EB1                     	;# 
  4384  0EB2                     	;# 
  4385  0EB3                     	;# 
  4386  0EB8                     	;# 
  4387  0EB9                     	;# 
  4388  0EBA                     	;# 
  4389  0EBB                     	;# 
  4390  0EBC                     	;# 
  4391  0EBD                     	;# 
  4392  0EBE                     	;# 
  4393  0EC3                     	;# 
  4394  0EC5                     	;# 
  4395  0EC6                     	;# 
  4396  0EC7                     	;# 
  4397  0EC8                     	;# 
  4398  0EC9                     	;# 
  4399  0ECA                     	;# 
  4400  0ECB                     	;# 
  4401  0ECC                     	;# 
  4402  0F10                     	;# 
  4403  0F11                     	;# 
  4404  0F12                     	;# 
  4405  0F13                     	;# 
  4406  0F14                     	;# 
  4407  0F15                     	;# 
  4408  0F16                     	;# 
  4409  0F17                     	;# 
  4410  0F18                     	;# 
  4411  0F19                     	;# 
  4412  0F1A                     	;# 
  4413  0F1B                     	;# 
  4414  0F1C                     	;# 
  4415  0F1D                     	;# 
  4416  0F1E                     	;# 
  4417  0F1F                     	;# 
  4418  0F20                     	;# 
  4419  0F21                     	;# 
  4420  0F22                     	;# 
  4421  0F23                     	;# 
  4422  0F24                     	;# 
  4423  0F25                     	;# 
  4424  0F26                     	;# 
  4425  0F27                     	;# 
  4426  0F28                     	;# 
  4427  0F29                     	;# 
  4428  0F2A                     	;# 
  4429  0F2B                     	;# 
  4430  0F2C                     	;# 
  4431  0F2D                     	;# 
  4432  0F2E                     	;# 
  4433  0F2F                     	;# 
  4434  0F30                     	;# 
  4435  0F31                     	;# 
  4436  0F32                     	;# 
  4437  0F38                     	;# 
  4438  0F39                     	;# 
  4439  0F3A                     	;# 
  4440  0F3B                     	;# 
  4441  0F3C                     	;# 
  4442  0F3D                     	;# 
  4443  0F3E                     	;# 
  4444  0F3F                     	;# 
  4445  0F40                     	;# 
  4446  0F41                     	;# 
  4447  0F43                     	;# 
  4448  0F44                     	;# 
  4449  0F45                     	;# 
  4450  0F46                     	;# 
  4451  0F47                     	;# 
  4452  0F48                     	;# 
  4453  0F49                     	;# 
  4454  0F4A                     	;# 
  4455  0F4B                     	;# 
  4456  0F4C                     	;# 
  4457  0F4E                     	;# 
  4458  0F4F                     	;# 
  4459  0F50                     	;# 
  4460  0F51                     	;# 
  4461  0F52                     	;# 
  4462  0F53                     	;# 
  4463  0F54                     	;# 
  4464  0F55                     	;# 
  4465  0F56                     	;# 
  4466  0F57                     	;# 
  4467  0F59                     	;# 
  4468  0F5A                     	;# 
  4469  0F5B                     	;# 
  4470  0F5C                     	;# 
  4471  0F5D                     	;# 
  4472  0F61                     	;# 
  4473  0F62                     	;# 
  4474  0F64                     	;# 
  4475  0F65                     	;# 
  4476  0F66                     	;# 
  4477  0F67                     	;# 
  4478  0F68                     	;# 
  4479  0F69                     	;# 
  4480  0F6A                     	;# 
  4481  0F6B                     	;# 
  4482  0F6C                     	;# 
  4483  0F6D                     	;# 
  4484  0FE4                     	;# 
  4485  0FE5                     	;# 
  4486  0FE6                     	;# 
  4487  0FE7                     	;# 
  4488  0FE8                     	;# 
  4489  0FE9                     	;# 
  4490  0FEA                     	;# 
  4491  0FEB                     	;# 
  4492  0FED                     	;# 
  4493  0FEE                     	;# 
  4494  0FEF                     	;# 
  4495  0000                     	;# 
  4496  0001                     	;# 
  4497  0002                     	;# 
  4498  0003                     	;# 
  4499  0004                     	;# 
  4500  0005                     	;# 
  4501  0006                     	;# 
  4502  0007                     	;# 
  4503  0008                     	;# 
  4504  0009                     	;# 
  4505  000A                     	;# 
  4506  000B                     	;# 
  4507  000C                     	;# 
  4508  000D                     	;# 
  4509  000E                     	;# 
  4510  000F                     	;# 
  4511  0010                     	;# 
  4512  0011                     	;# 
  4513  0012                     	;# 
  4514  0013                     	;# 
  4515  0014                     	;# 
  4516  0015                     	;# 
  4517  0016                     	;# 
  4518  0017                     	;# 
  4519  0018                     	;# 
  4520  0019                     	;# 
  4521  001A                     	;# 
  4522  001C                     	;# 
  4523  001C                     	;# 
  4524  001D                     	;# 
  4525  001D                     	;# 
  4526  001E                     	;# 
  4527  001F                     	;# 
  4528  008C                     	;# 
  4529  008C                     	;# 
  4530  008D                     	;# 
  4531  008E                     	;# 
  4532  008E                     	;# 
  4533  008F                     	;# 
  4534  0090                     	;# 
  4535  0090                     	;# 
  4536  0091                     	;# 
  4537  0093                     	;# 
  4538  0094                     	;# 
  4539  0095                     	;# 
  4540  0096                     	;# 
  4541  0097                     	;# 
  4542  0098                     	;# 
  4543  0099                     	;# 
  4544  009A                     	;# 
  4545  009B                     	;# 
  4546  009C                     	;# 
  4547  009D                     	;# 
  4548  009E                     	;# 
  4549  010C                     	;# 
  4550  010D                     	;# 
  4551  010E                     	;# 
  4552  010E                     	;# 
  4553  010F                     	;# 
  4554  0110                     	;# 
  4555  0110                     	;# 
  4556  0111                     	;# 
  4557  0112                     	;# 
  4558  0112                     	;# 
  4559  0113                     	;# 
  4560  0114                     	;# 
  4561  0114                     	;# 
  4562  0115                     	;# 
  4563  0116                     	;# 
  4564  0116                     	;# 
  4565  0117                     	;# 
  4566  0119                     	;# 
  4567  0119                     	;# 
  4568  0119                     	;# 
  4569  011A                     	;# 
  4570  011A                     	;# 
  4571  011A                     	;# 
  4572  011B                     	;# 
  4573  011B                     	;# 
  4574  011B                     	;# 
  4575  011B                     	;# 
  4576  011B                     	;# 
  4577  011C                     	;# 
  4578  011C                     	;# 
  4579  011C                     	;# 
  4580  011D                     	;# 
  4581  011D                     	;# 
  4582  011D                     	;# 
  4583  011E                     	;# 
  4584  011E                     	;# 
  4585  011E                     	;# 
  4586  011F                     	;# 
  4587  011F                     	;# 
  4588  011F                     	;# 
  4589  011F                     	;# 
  4590  011F                     	;# 
  4591  018C                     	;# 
  4592  018D                     	;# 
  4593  018E                     	;# 
  4594  018F                     	;# 
  4595  0190                     	;# 
  4596  0191                     	;# 
  4597  0192                     	;# 
  4598  0196                     	;# 
  4599  0197                     	;# 
  4600  0198                     	;# 
  4601  0199                     	;# 
  4602  019A                     	;# 
  4603  019B                     	;# 
  4604  019C                     	;# 
  4605  020C                     	;# 
  4606  020C                     	;# 
  4607  020D                     	;# 
  4608  020E                     	;# 
  4609  020F                     	;# 
  4610  020F                     	;# 
  4611  0210                     	;# 
  4612  0210                     	;# 
  4613  0211                     	;# 
  4614  0211                     	;# 
  4615  0212                     	;# 
  4616  0212                     	;# 
  4617  0213                     	;# 
  4618  0214                     	;# 
  4619  0215                     	;# 
  4620  0215                     	;# 
  4621  0216                     	;# 
  4622  0216                     	;# 
  4623  0217                     	;# 
  4624  0217                     	;# 
  4625  0218                     	;# 
  4626  0218                     	;# 
  4627  0219                     	;# 
  4628  021A                     	;# 
  4629  021B                     	;# 
  4630  021B                     	;# 
  4631  021C                     	;# 
  4632  021C                     	;# 
  4633  021D                     	;# 
  4634  021D                     	;# 
  4635  021E                     	;# 
  4636  021F                     	;# 
  4637  028C                     	;# 
  4638  028C                     	;# 
  4639  028D                     	;# 
  4640  028D                     	;# 
  4641  028E                     	;# 
  4642  028F                     	;# 
  4643  0290                     	;# 
  4644  0290                     	;# 
  4645  0291                     	;# 
  4646  0292                     	;# 
  4647  0292                     	;# 
  4648  0293                     	;# 
  4649  0293                     	;# 
  4650  0294                     	;# 
  4651  0295                     	;# 
  4652  0296                     	;# 
  4653  0296                     	;# 
  4654  0297                     	;# 
  4655  0298                     	;# 
  4656  0298                     	;# 
  4657  0299                     	;# 
  4658  0299                     	;# 
  4659  029A                     	;# 
  4660  029B                     	;# 
  4661  029C                     	;# 
  4662  029C                     	;# 
  4663  029D                     	;# 
  4664  030C                     	;# 
  4665  030C                     	;# 
  4666  030D                     	;# 
  4667  030E                     	;# 
  4668  030F                     	;# 
  4669  0310                     	;# 
  4670  0310                     	;# 
  4671  0311                     	;# 
  4672  0312                     	;# 
  4673  0313                     	;# 
  4674  0314                     	;# 
  4675  0314                     	;# 
  4676  0315                     	;# 
  4677  0316                     	;# 
  4678  0317                     	;# 
  4679  0318                     	;# 
  4680  0318                     	;# 
  4681  0319                     	;# 
  4682  031A                     	;# 
  4683  031B                     	;# 
  4684  031C                     	;# 
  4685  031C                     	;# 
  4686  031D                     	;# 
  4687  031E                     	;# 
  4688  031F                     	;# 
  4689  038C                     	;# 
  4690  038C                     	;# 
  4691  038D                     	;# 
  4692  038E                     	;# 
  4693  0390                     	;# 
  4694  0390                     	;# 
  4695  0391                     	;# 
  4696  0392                     	;# 
  4697  040C                     	;# 
  4698  040D                     	;# 
  4699  040E                     	;# 
  4700  040F                     	;# 
  4701  0410                     	;# 
  4702  0411                     	;# 
  4703  0416                     	;# 
  4704  0416                     	;# 
  4705  0417                     	;# 
  4706  0418                     	;# 
  4707  0418                     	;# 
  4708  0419                     	;# 
  4709  041A                     	;# 
  4710  041A                     	;# 
  4711  041B                     	;# 
  4712  041C                     	;# 
  4713  041C                     	;# 
  4714  041D                     	;# 
  4715  041E                     	;# 
  4716  041F                     	;# 
  4717  048C                     	;# 
  4718  048C                     	;# 
  4719  048D                     	;# 
  4720  048E                     	;# 
  4721  048F                     	;# 
  4722  048F                     	;# 
  4723  0490                     	;# 
  4724  0491                     	;# 
  4725  0492                     	;# 
  4726  0492                     	;# 
  4727  0493                     	;# 
  4728  0494                     	;# 
  4729  0495                     	;# 
  4730  0495                     	;# 
  4731  0496                     	;# 
  4732  0497                     	;# 
  4733  0498                     	;# 
  4734  0499                     	;# 
  4735  049A                     	;# 
  4736  049B                     	;# 
  4737  049C                     	;# 
  4738  049D                     	;# 
  4739  050C                     	;# 
  4740  050C                     	;# 
  4741  050D                     	;# 
  4742  050E                     	;# 
  4743  050F                     	;# 
  4744  050F                     	;# 
  4745  0510                     	;# 
  4746  0511                     	;# 
  4747  0512                     	;# 
  4748  0512                     	;# 
  4749  0513                     	;# 
  4750  0514                     	;# 
  4751  0515                     	;# 
  4752  0515                     	;# 
  4753  0516                     	;# 
  4754  0517                     	;# 
  4755  0518                     	;# 
  4756  0519                     	;# 
  4757  051A                     	;# 
  4758  051B                     	;# 
  4759  051C                     	;# 
  4760  051D                     	;# 
  4761  058C                     	;# 
  4762  058C                     	;# 
  4763  058D                     	;# 
  4764  058E                     	;# 
  4765  058F                     	;# 
  4766  058F                     	;# 
  4767  0590                     	;# 
  4768  0591                     	;# 
  4769  0592                     	;# 
  4770  0593                     	;# 
  4771  060C                     	;# 
  4772  060D                     	;# 
  4773  060E                     	;# 
  4774  060F                     	;# 
  4775  0610                     	;# 
  4776  0611                     	;# 
  4777  0612                     	;# 
  4778  0613                     	;# 
  4779  0614                     	;# 
  4780  0616                     	;# 
  4781  0617                     	;# 
  4782  0618                     	;# 
  4783  0619                     	;# 
  4784  061A                     	;# 
  4785  061B                     	;# 
  4786  061C                     	;# 
  4787  061D                     	;# 
  4788  061E                     	;# 
  4789  068C                     	;# 
  4790  068D                     	;# 
  4791  068E                     	;# 
  4792  068F                     	;# 
  4793  0690                     	;# 
  4794  0691                     	;# 
  4795  0692                     	;# 
  4796  0693                     	;# 
  4797  0694                     	;# 
  4798  070C                     	;# 
  4799  070D                     	;# 
  4800  070E                     	;# 
  4801  070F                     	;# 
  4802  0710                     	;# 
  4803  0711                     	;# 
  4804  0712                     	;# 
  4805  0713                     	;# 
  4806  0714                     	;# 
  4807  0716                     	;# 
  4808  0717                     	;# 
  4809  0718                     	;# 
  4810  0719                     	;# 
  4811  071A                     	;# 
  4812  071B                     	;# 
  4813  071C                     	;# 
  4814  071D                     	;# 
  4815  071E                     	;# 
  4816  0796                     	;# 
  4817  0797                     	;# 
  4818  0798                     	;# 
  4819  0799                     	;# 
  4820  079A                     	;# 
  4821  079B                     	;# 
  4822  080C                     	;# 
  4823  080D                     	;# 
  4824  080E                     	;# 
  4825  080F                     	;# 
  4826  0810                     	;# 
  4827  0811                     	;# 
  4828  0812                     	;# 
  4829  0813                     	;# 
  4830  0814                     	;# 
  4831  081A                     	;# 
  4832  081B                     	;# 
  4833  081C                     	;# 
  4834  081D                     	;# 
  4835  081E                     	;# 
  4836  081F                     	;# 
  4837  088C                     	;# 
  4838  088D                     	;# 
  4839  088E                     	;# 
  4840  088F                     	;# 
  4841  0890                     	;# 
  4842  0891                     	;# 
  4843  0892                     	;# 
  4844  0893                     	;# 
  4845  0895                     	;# 
  4846  0896                     	;# 
  4847  0897                     	;# 
  4848  0898                     	;# 
  4849  0899                     	;# 
  4850  089A                     	;# 
  4851  089B                     	;# 
  4852  090C                     	;# 
  4853  090E                     	;# 
  4854  090F                     	;# 
  4855  091F                     	;# 
  4856  091F                     	;# 
  4857  098F                     	;# 
  4858  098F                     	;# 
  4859  0990                     	;# 
  4860  0991                     	;# 
  4861  0992                     	;# 
  4862  0993                     	;# 
  4863  0994                     	;# 
  4864  0995                     	;# 
  4865  0996                     	;# 
  4866  0997                     	;# 
  4867  0E0F                     	;# 
  4868  0E10                     	;# 
  4869  0E11                     	;# 
  4870  0E12                     	;# 
  4871  0E13                     	;# 
  4872  0E14                     	;# 
  4873  0E15                     	;# 
  4874  0E16                     	;# 
  4875  0E17                     	;# 
  4876  0E18                     	;# 
  4877  0E19                     	;# 
  4878  0E1A                     	;# 
  4879  0E1B                     	;# 
  4880  0E1C                     	;# 
  4881  0E1D                     	;# 
  4882  0E1E                     	;# 
  4883  0E1F                     	;# 
  4884  0E20                     	;# 
  4885  0E21                     	;# 
  4886  0E22                     	;# 
  4887  0E23                     	;# 
  4888  0E24                     	;# 
  4889  0E25                     	;# 
  4890  0E26                     	;# 
  4891  0E27                     	;# 
  4892  0E28                     	;# 
  4893  0E29                     	;# 
  4894  0E2A                     	;# 
  4895  0E2B                     	;# 
  4896  0E2C                     	;# 
  4897  0E2D                     	;# 
  4898  0E2E                     	;# 
  4899  0E2F                     	;# 
  4900  0E30                     	;# 
  4901  0E31                     	;# 
  4902  0E32                     	;# 
  4903  0E33                     	;# 
  4904  0E34                     	;# 
  4905  0E35                     	;# 
  4906  0E36                     	;# 
  4907  0E37                     	;# 
  4908  0E8F                     	;# 
  4909  0E90                     	;# 
  4910  0E91                     	;# 
  4911  0E92                     	;# 
  4912  0E93                     	;# 
  4913  0E94                     	;# 
  4914  0E95                     	;# 
  4915  0E96                     	;# 
  4916  0E97                     	;# 
  4917  0E9C                     	;# 
  4918  0E9D                     	;# 
  4919  0E9E                     	;# 
  4920  0EA1                     	;# 
  4921  0EA2                     	;# 
  4922  0EA3                     	;# 
  4923  0EA4                     	;# 
  4924  0EA5                     	;# 
  4925  0EA9                     	;# 
  4926  0EAA                     	;# 
  4927  0EAB                     	;# 
  4928  0EAC                     	;# 
  4929  0EB1                     	;# 
  4930  0EB2                     	;# 
  4931  0EB3                     	;# 
  4932  0EB8                     	;# 
  4933  0EB9                     	;# 
  4934  0EBA                     	;# 
  4935  0EBB                     	;# 
  4936  0EBC                     	;# 
  4937  0EBD                     	;# 
  4938  0EBE                     	;# 
  4939  0EC3                     	;# 
  4940  0EC5                     	;# 
  4941  0EC6                     	;# 
  4942  0EC7                     	;# 
  4943  0EC8                     	;# 
  4944  0EC9                     	;# 
  4945  0ECA                     	;# 
  4946  0ECB                     	;# 
  4947  0ECC                     	;# 
  4948  0F10                     	;# 
  4949  0F11                     	;# 
  4950  0F12                     	;# 
  4951  0F13                     	;# 
  4952  0F14                     	;# 
  4953  0F15                     	;# 
  4954  0F16                     	;# 
  4955  0F17                     	;# 
  4956  0F18                     	;# 
  4957  0F19                     	;# 
  4958  0F1A                     	;# 
  4959  0F1B                     	;# 
  4960  0F1C                     	;# 
  4961  0F1D                     	;# 
  4962  0F1E                     	;# 
  4963  0F1F                     	;# 
  4964  0F20                     	;# 
  4965  0F21                     	;# 
  4966  0F22                     	;# 
  4967  0F23                     	;# 
  4968  0F24                     	;# 
  4969  0F25                     	;# 
  4970  0F26                     	;# 
  4971  0F27                     	;# 
  4972  0F28                     	;# 
  4973  0F29                     	;# 
  4974  0F2A                     	;# 
  4975  0F2B                     	;# 
  4976  0F2C                     	;# 
  4977  0F2D                     	;# 
  4978  0F2E                     	;# 
  4979  0F2F                     	;# 
  4980  0F30                     	;# 
  4981  0F31                     	;# 
  4982  0F32                     	;# 
  4983  0F38                     	;# 
  4984  0F39                     	;# 
  4985  0F3A                     	;# 
  4986  0F3B                     	;# 
  4987  0F3C                     	;# 
  4988  0F3D                     	;# 
  4989  0F3E                     	;# 
  4990  0F3F                     	;# 
  4991  0F40                     	;# 
  4992  0F41                     	;# 
  4993  0F43                     	;# 
  4994  0F44                     	;# 
  4995  0F45                     	;# 
  4996  0F46                     	;# 
  4997  0F47                     	;# 
  4998  0F48                     	;# 
  4999  0F49                     	;# 
  5000  0F4A                     	;# 
  5001  0F4B                     	;# 
  5002  0F4C                     	;# 
  5003  0F4E                     	;# 
  5004  0F4F                     	;# 
  5005  0F50                     	;# 
  5006  0F51                     	;# 
  5007  0F52                     	;# 
  5008  0F53                     	;# 
  5009  0F54                     	;# 
  5010  0F55                     	;# 
  5011  0F56                     	;# 
  5012  0F57                     	;# 
  5013  0F59                     	;# 
  5014  0F5A                     	;# 
  5015  0F5B                     	;# 
  5016  0F5C                     	;# 
  5017  0F5D                     	;# 
  5018  0F61                     	;# 
  5019  0F62                     	;# 
  5020  0F64                     	;# 
  5021  0F65                     	;# 
  5022  0F66                     	;# 
  5023  0F67                     	;# 
  5024  0F68                     	;# 
  5025  0F69                     	;# 
  5026  0F6A                     	;# 
  5027  0F6B                     	;# 
  5028  0F6C                     	;# 
  5029  0F6D                     	;# 
  5030  0FE4                     	;# 
  5031  0FE5                     	;# 
  5032  0FE6                     	;# 
  5033  0FE7                     	;# 
  5034  0FE8                     	;# 
  5035  0FE9                     	;# 
  5036  0FEA                     	;# 
  5037  0FEB                     	;# 
  5038  0FED                     	;# 
  5039  0FEE                     	;# 
  5040  0FEF                     	;# 
  5041  0000                     	;# 
  5042  0001                     	;# 
  5043  0002                     	;# 
  5044  0003                     	;# 
  5045  0004                     	;# 
  5046  0005                     	;# 
  5047  0006                     	;# 
  5048  0007                     	;# 
  5049  0008                     	;# 
  5050  0009                     	;# 
  5051  000A                     	;# 
  5052  000B                     	;# 
  5053  000C                     	;# 
  5054  000D                     	;# 
  5055  000E                     	;# 
  5056  000F                     	;# 
  5057  0010                     	;# 
  5058  0011                     	;# 
  5059  0012                     	;# 
  5060  0013                     	;# 
  5061  0014                     	;# 
  5062  0015                     	;# 
  5063  0016                     	;# 
  5064  0017                     	;# 
  5065  0018                     	;# 
  5066  0019                     	;# 
  5067  001A                     	;# 
  5068  001C                     	;# 
  5069  001C                     	;# 
  5070  001D                     	;# 
  5071  001D                     	;# 
  5072  001E                     	;# 
  5073  001F                     	;# 
  5074  008C                     	;# 
  5075  008C                     	;# 
  5076  008D                     	;# 
  5077  008E                     	;# 
  5078  008E                     	;# 
  5079  008F                     	;# 
  5080  0090                     	;# 
  5081  0090                     	;# 
  5082  0091                     	;# 
  5083  0093                     	;# 
  5084  0094                     	;# 
  5085  0095                     	;# 
  5086  0096                     	;# 
  5087  0097                     	;# 
  5088  0098                     	;# 
  5089  0099                     	;# 
  5090  009A                     	;# 
  5091  009B                     	;# 
  5092  009C                     	;# 
  5093  009D                     	;# 
  5094  009E                     	;# 
  5095  010C                     	;# 
  5096  010D                     	;# 
  5097  010E                     	;# 
  5098  010E                     	;# 
  5099  010F                     	;# 
  5100  0110                     	;# 
  5101  0110                     	;# 
  5102  0111                     	;# 
  5103  0112                     	;# 
  5104  0112                     	;# 
  5105  0113                     	;# 
  5106  0114                     	;# 
  5107  0114                     	;# 
  5108  0115                     	;# 
  5109  0116                     	;# 
  5110  0116                     	;# 
  5111  0117                     	;# 
  5112  0119                     	;# 
  5113  0119                     	;# 
  5114  0119                     	;# 
  5115  011A                     	;# 
  5116  011A                     	;# 
  5117  011A                     	;# 
  5118  011B                     	;# 
  5119  011B                     	;# 
  5120  011B                     	;# 
  5121  011B                     	;# 
  5122  011B                     	;# 
  5123  011C                     	;# 
  5124  011C                     	;# 
  5125  011C                     	;# 
  5126  011D                     	;# 
  5127  011D                     	;# 
  5128  011D                     	;# 
  5129  011E                     	;# 
  5130  011E                     	;# 
  5131  011E                     	;# 
  5132  011F                     	;# 
  5133  011F                     	;# 
  5134  011F                     	;# 
  5135  011F                     	;# 
  5136  011F                     	;# 
  5137  018C                     	;# 
  5138  018D                     	;# 
  5139  018E                     	;# 
  5140  018F                     	;# 
  5141  0190                     	;# 
  5142  0191                     	;# 
  5143  0192                     	;# 
  5144  0196                     	;# 
  5145  0197                     	;# 
  5146  0198                     	;# 
  5147  0199                     	;# 
  5148  019A                     	;# 
  5149  019B                     	;# 
  5150  019C                     	;# 
  5151  020C                     	;# 
  5152  020C                     	;# 
  5153  020D                     	;# 
  5154  020E                     	;# 
  5155  020F                     	;# 
  5156  020F                     	;# 
  5157  0210                     	;# 
  5158  0210                     	;# 
  5159  0211                     	;# 
  5160  0211                     	;# 
  5161  0212                     	;# 
  5162  0212                     	;# 
  5163  0213                     	;# 
  5164  0214                     	;# 
  5165  0215                     	;# 
  5166  0215                     	;# 
  5167  0216                     	;# 
  5168  0216                     	;# 
  5169  0217                     	;# 
  5170  0217                     	;# 
  5171  0218                     	;# 
  5172  0218                     	;# 
  5173  0219                     	;# 
  5174  021A                     	;# 
  5175  021B                     	;# 
  5176  021B                     	;# 
  5177  021C                     	;# 
  5178  021C                     	;# 
  5179  021D                     	;# 
  5180  021D                     	;# 
  5181  021E                     	;# 
  5182  021F                     	;# 
  5183  028C                     	;# 
  5184  028C                     	;# 
  5185  028D                     	;# 
  5186  028D                     	;# 
  5187  028E                     	;# 
  5188  028F                     	;# 
  5189  0290                     	;# 
  5190  0290                     	;# 
  5191  0291                     	;# 
  5192  0292                     	;# 
  5193  0292                     	;# 
  5194  0293                     	;# 
  5195  0293                     	;# 
  5196  0294                     	;# 
  5197  0295                     	;# 
  5198  0296                     	;# 
  5199  0296                     	;# 
  5200  0297                     	;# 
  5201  0298                     	;# 
  5202  0298                     	;# 
  5203  0299                     	;# 
  5204  0299                     	;# 
  5205  029A                     	;# 
  5206  029B                     	;# 
  5207  029C                     	;# 
  5208  029C                     	;# 
  5209  029D                     	;# 
  5210  030C                     	;# 
  5211  030C                     	;# 
  5212  030D                     	;# 
  5213  030E                     	;# 
  5214  030F                     	;# 
  5215  0310                     	;# 
  5216  0310                     	;# 
  5217  0311                     	;# 
  5218  0312                     	;# 
  5219  0313                     	;# 
  5220  0314                     	;# 
  5221  0314                     	;# 
  5222  0315                     	;# 
  5223  0316                     	;# 
  5224  0317                     	;# 
  5225  0318                     	;# 
  5226  0318                     	;# 
  5227  0319                     	;# 
  5228  031A                     	;# 
  5229  031B                     	;# 
  5230  031C                     	;# 
  5231  031C                     	;# 
  5232  031D                     	;# 
  5233  031E                     	;# 
  5234  031F                     	;# 
  5235  038C                     	;# 
  5236  038C                     	;# 
  5237  038D                     	;# 
  5238  038E                     	;# 
  5239  0390                     	;# 
  5240  0390                     	;# 
  5241  0391                     	;# 
  5242  0392                     	;# 
  5243  040C                     	;# 
  5244  040D                     	;# 
  5245  040E                     	;# 
  5246  040F                     	;# 
  5247  0410                     	;# 
  5248  0411                     	;# 
  5249  0416                     	;# 
  5250  0416                     	;# 
  5251  0417                     	;# 
  5252  0418                     	;# 
  5253  0418                     	;# 
  5254  0419                     	;# 
  5255  041A                     	;# 
  5256  041A                     	;# 
  5257  041B                     	;# 
  5258  041C                     	;# 
  5259  041C                     	;# 
  5260  041D                     	;# 
  5261  041E                     	;# 
  5262  041F                     	;# 
  5263  048C                     	;# 
  5264  048C                     	;# 
  5265  048D                     	;# 
  5266  048E                     	;# 
  5267  048F                     	;# 
  5268  048F                     	;# 
  5269  0490                     	;# 
  5270  0491                     	;# 
  5271  0492                     	;# 
  5272  0492                     	;# 
  5273  0493                     	;# 
  5274  0494                     	;# 
  5275  0495                     	;# 
  5276  0495                     	;# 
  5277  0496                     	;# 
  5278  0497                     	;# 
  5279  0498                     	;# 
  5280  0499                     	;# 
  5281  049A                     	;# 
  5282  049B                     	;# 
  5283  049C                     	;# 
  5284  049D                     	;# 
  5285  050C                     	;# 
  5286  050C                     	;# 
  5287  050D                     	;# 
  5288  050E                     	;# 
  5289  050F                     	;# 
  5290  050F                     	;# 
  5291  0510                     	;# 
  5292  0511                     	;# 
  5293  0512                     	;# 
  5294  0512                     	;# 
  5295  0513                     	;# 
  5296  0514                     	;# 
  5297  0515                     	;# 
  5298  0515                     	;# 
  5299  0516                     	;# 
  5300  0517                     	;# 
  5301  0518                     	;# 
  5302  0519                     	;# 
  5303  051A                     	;# 
  5304  051B                     	;# 
  5305  051C                     	;# 
  5306  051D                     	;# 
  5307  058C                     	;# 
  5308  058C                     	;# 
  5309  058D                     	;# 
  5310  058E                     	;# 
  5311  058F                     	;# 
  5312  058F                     	;# 
  5313  0590                     	;# 
  5314  0591                     	;# 
  5315  0592                     	;# 
  5316  0593                     	;# 
  5317  060C                     	;# 
  5318  060D                     	;# 
  5319  060E                     	;# 
  5320  060F                     	;# 
  5321  0610                     	;# 
  5322  0611                     	;# 
  5323  0612                     	;# 
  5324  0613                     	;# 
  5325  0614                     	;# 
  5326  0616                     	;# 
  5327  0617                     	;# 
  5328  0618                     	;# 
  5329  0619                     	;# 
  5330  061A                     	;# 
  5331  061B                     	;# 
  5332  061C                     	;# 
  5333  061D                     	;# 
  5334  061E                     	;# 
  5335  068C                     	;# 
  5336  068D                     	;# 
  5337  068E                     	;# 
  5338  068F                     	;# 
  5339  0690                     	;# 
  5340  0691                     	;# 
  5341  0692                     	;# 
  5342  0693                     	;# 
  5343  0694                     	;# 
  5344  070C                     	;# 
  5345  070D                     	;# 
  5346  070E                     	;# 
  5347  070F                     	;# 
  5348  0710                     	;# 
  5349  0711                     	;# 
  5350  0712                     	;# 
  5351  0713                     	;# 
  5352  0714                     	;# 
  5353  0716                     	;# 
  5354  0717                     	;# 
  5355  0718                     	;# 
  5356  0719                     	;# 
  5357  071A                     	;# 
  5358  071B                     	;# 
  5359  071C                     	;# 
  5360  071D                     	;# 
  5361  071E                     	;# 
  5362  0796                     	;# 
  5363  0797                     	;# 
  5364  0798                     	;# 
  5365  0799                     	;# 
  5366  079A                     	;# 
  5367  079B                     	;# 
  5368  080C                     	;# 
  5369  080D                     	;# 
  5370  080E                     	;# 
  5371  080F                     	;# 
  5372  0810                     	;# 
  5373  0811                     	;# 
  5374  0812                     	;# 
  5375  0813                     	;# 
  5376  0814                     	;# 
  5377  081A                     	;# 
  5378  081B                     	;# 
  5379  081C                     	;# 
  5380  081D                     	;# 
  5381  081E                     	;# 
  5382  081F                     	;# 
  5383  088C                     	;# 
  5384  088D                     	;# 
  5385  088E                     	;# 
  5386  088F                     	;# 
  5387  0890                     	;# 
  5388  0891                     	;# 
  5389  0892                     	;# 
  5390  0893                     	;# 
  5391  0895                     	;# 
  5392  0896                     	;# 
  5393  0897                     	;# 
  5394  0898                     	;# 
  5395  0899                     	;# 
  5396  089A                     	;# 
  5397  089B                     	;# 
  5398  090C                     	;# 
  5399  090E                     	;# 
  5400  090F                     	;# 
  5401  091F                     	;# 
  5402  091F                     	;# 
  5403  098F                     	;# 
  5404  098F                     	;# 
  5405  0990                     	;# 
  5406  0991                     	;# 
  5407  0992                     	;# 
  5408  0993                     	;# 
  5409  0994                     	;# 
  5410  0995                     	;# 
  5411  0996                     	;# 
  5412  0997                     	;# 
  5413  0E0F                     	;# 
  5414  0E10                     	;# 
  5415  0E11                     	;# 
  5416  0E12                     	;# 
  5417  0E13                     	;# 
  5418  0E14                     	;# 
  5419  0E15                     	;# 
  5420  0E16                     	;# 
  5421  0E17                     	;# 
  5422  0E18                     	;# 
  5423  0E19                     	;# 
  5424  0E1A                     	;# 
  5425  0E1B                     	;# 
  5426  0E1C                     	;# 
  5427  0E1D                     	;# 
  5428  0E1E                     	;# 
  5429  0E1F                     	;# 
  5430  0E20                     	;# 
  5431  0E21                     	;# 
  5432  0E22                     	;# 
  5433  0E23                     	;# 
  5434  0E24                     	;# 
  5435  0E25                     	;# 
  5436  0E26                     	;# 
  5437  0E27                     	;# 
  5438  0E28                     	;# 
  5439  0E29                     	;# 
  5440  0E2A                     	;# 
  5441  0E2B                     	;# 
  5442  0E2C                     	;# 
  5443  0E2D                     	;# 
  5444  0E2E                     	;# 
  5445  0E2F                     	;# 
  5446  0E30                     	;# 
  5447  0E31                     	;# 
  5448  0E32                     	;# 
  5449  0E33                     	;# 
  5450  0E34                     	;# 
  5451  0E35                     	;# 
  5452  0E36                     	;# 
  5453  0E37                     	;# 
  5454  0E8F                     	;# 
  5455  0E90                     	;# 
  5456  0E91                     	;# 
  5457  0E92                     	;# 
  5458  0E93                     	;# 
  5459  0E94                     	;# 
  5460  0E95                     	;# 
  5461  0E96                     	;# 
  5462  0E97                     	;# 
  5463  0E9C                     	;# 
  5464  0E9D                     	;# 
  5465  0E9E                     	;# 
  5466  0EA1                     	;# 
  5467  0EA2                     	;# 
  5468  0EA3                     	;# 
  5469  0EA4                     	;# 
  5470  0EA5                     	;# 
  5471  0EA9                     	;# 
  5472  0EAA                     	;# 
  5473  0EAB                     	;# 
  5474  0EAC                     	;# 
  5475  0EB1                     	;# 
  5476  0EB2                     	;# 
  5477  0EB3                     	;# 
  5478  0EB8                     	;# 
  5479  0EB9                     	;# 
  5480  0EBA                     	;# 
  5481  0EBB                     	;# 
  5482  0EBC                     	;# 
  5483  0EBD                     	;# 
  5484  0EBE                     	;# 
  5485  0EC3                     	;# 
  5486  0EC5                     	;# 
  5487  0EC6                     	;# 
  5488  0EC7                     	;# 
  5489  0EC8                     	;# 
  5490  0EC9                     	;# 
  5491  0ECA                     	;# 
  5492  0ECB                     	;# 
  5493  0ECC                     	;# 
  5494  0F10                     	;# 
  5495  0F11                     	;# 
  5496  0F12                     	;# 
  5497  0F13                     	;# 
  5498  0F14                     	;# 
  5499  0F15                     	;# 
  5500  0F16                     	;# 
  5501  0F17                     	;# 
  5502  0F18                     	;# 
  5503  0F19                     	;# 
  5504  0F1A                     	;# 
  5505  0F1B                     	;# 
  5506  0F1C                     	;# 
  5507  0F1D                     	;# 
  5508  0F1E                     	;# 
  5509  0F1F                     	;# 
  5510  0F20                     	;# 
  5511  0F21                     	;# 
  5512  0F22                     	;# 
  5513  0F23                     	;# 
  5514  0F24                     	;# 
  5515  0F25                     	;# 
  5516  0F26                     	;# 
  5517  0F27                     	;# 
  5518  0F28                     	;# 
  5519  0F29                     	;# 
  5520  0F2A                     	;# 
  5521  0F2B                     	;# 
  5522  0F2C                     	;# 
  5523  0F2D                     	;# 
  5524  0F2E                     	;# 
  5525  0F2F                     	;# 
  5526  0F30                     	;# 
  5527  0F31                     	;# 
  5528  0F32                     	;# 
  5529  0F38                     	;# 
  5530  0F39                     	;# 
  5531  0F3A                     	;# 
  5532  0F3B                     	;# 
  5533  0F3C                     	;# 
  5534  0F3D                     	;# 
  5535  0F3E                     	;# 
  5536  0F3F                     	;# 
  5537  0F40                     	;# 
  5538  0F41                     	;# 
  5539  0F43                     	;# 
  5540  0F44                     	;# 
  5541  0F45                     	;# 
  5542  0F46                     	;# 
  5543  0F47                     	;# 
  5544  0F48                     	;# 
  5545  0F49                     	;# 
  5546  0F4A                     	;# 
  5547  0F4B                     	;# 
  5548  0F4C                     	;# 
  5549  0F4E                     	;# 
  5550  0F4F                     	;# 
  5551  0F50                     	;# 
  5552  0F51                     	;# 
  5553  0F52                     	;# 
  5554  0F53                     	;# 
  5555  0F54                     	;# 
  5556  0F55                     	;# 
  5557  0F56                     	;# 
  5558  0F57                     	;# 
  5559  0F59                     	;# 
  5560  0F5A                     	;# 
  5561  0F5B                     	;# 
  5562  0F5C                     	;# 
  5563  0F5D                     	;# 
  5564  0F61                     	;# 
  5565  0F62                     	;# 
  5566  0F64                     	;# 
  5567  0F65                     	;# 
  5568  0F66                     	;# 
  5569  0F67                     	;# 
  5570  0F68                     	;# 
  5571  0F69                     	;# 
  5572  0F6A                     	;# 
  5573  0F6B                     	;# 
  5574  0F6C                     	;# 
  5575  0F6D                     	;# 
  5576  0FE4                     	;# 
  5577  0FE5                     	;# 
  5578  0FE6                     	;# 
  5579  0FE7                     	;# 
  5580  0FE8                     	;# 
  5581  0FE9                     	;# 
  5582  0FEA                     	;# 
  5583  0FEB                     	;# 
  5584  0FED                     	;# 
  5585  0FEE                     	;# 
  5586  0FEF                     	;# 
  5587  0000                     	;# 
  5588  0001                     	;# 
  5589  0002                     	;# 
  5590  0003                     	;# 
  5591  0004                     	;# 
  5592  0005                     	;# 
  5593  0006                     	;# 
  5594  0007                     	;# 
  5595  0008                     	;# 
  5596  0009                     	;# 
  5597  000A                     	;# 
  5598  000B                     	;# 
  5599  000C                     	;# 
  5600  000D                     	;# 
  5601  000E                     	;# 
  5602  000F                     	;# 
  5603  0010                     	;# 
  5604  0011                     	;# 
  5605  0012                     	;# 
  5606  0013                     	;# 
  5607  0014                     	;# 
  5608  0015                     	;# 
  5609  0016                     	;# 
  5610  0017                     	;# 
  5611  0018                     	;# 
  5612  0019                     	;# 
  5613  001A                     	;# 
  5614  001C                     	;# 
  5615  001C                     	;# 
  5616  001D                     	;# 
  5617  001D                     	;# 
  5618  001E                     	;# 
  5619  001F                     	;# 
  5620  008C                     	;# 
  5621  008C                     	;# 
  5622  008D                     	;# 
  5623  008E                     	;# 
  5624  008E                     	;# 
  5625  008F                     	;# 
  5626  0090                     	;# 
  5627  0090                     	;# 
  5628  0091                     	;# 
  5629  0093                     	;# 
  5630  0094                     	;# 
  5631  0095                     	;# 
  5632  0096                     	;# 
  5633  0097                     	;# 
  5634  0098                     	;# 
  5635  0099                     	;# 
  5636  009A                     	;# 
  5637  009B                     	;# 
  5638  009C                     	;# 
  5639  009D                     	;# 
  5640  009E                     	;# 
  5641  010C                     	;# 
  5642  010D                     	;# 
  5643  010E                     	;# 
  5644  010E                     	;# 
  5645  010F                     	;# 
  5646  0110                     	;# 
  5647  0110                     	;# 
  5648  0111                     	;# 
  5649  0112                     	;# 
  5650  0112                     	;# 
  5651  0113                     	;# 
  5652  0114                     	;# 
  5653  0114                     	;# 
  5654  0115                     	;# 
  5655  0116                     	;# 
  5656  0116                     	;# 
  5657  0117                     	;# 
  5658  0119                     	;# 
  5659  0119                     	;# 
  5660  0119                     	;# 
  5661  011A                     	;# 
  5662  011A                     	;# 
  5663  011A                     	;# 
  5664  011B                     	;# 
  5665  011B                     	;# 
  5666  011B                     	;# 
  5667  011B                     	;# 
  5668  011B                     	;# 
  5669  011C                     	;# 
  5670  011C                     	;# 
  5671  011C                     	;# 
  5672  011D                     	;# 
  5673  011D                     	;# 
  5674  011D                     	;# 
  5675  011E                     	;# 
  5676  011E                     	;# 
  5677  011E                     	;# 
  5678  011F                     	;# 
  5679  011F                     	;# 
  5680  011F                     	;# 
  5681  011F                     	;# 
  5682  011F                     	;# 
  5683  018C                     	;# 
  5684  018D                     	;# 
  5685  018E                     	;# 
  5686  018F                     	;# 
  5687  0190                     	;# 
  5688  0191                     	;# 
  5689  0192                     	;# 
  5690  0196                     	;# 
  5691  0197                     	;# 
  5692  0198                     	;# 
  5693  0199                     	;# 
  5694  019A                     	;# 
  5695  019B                     	;# 
  5696  019C                     	;# 
  5697  020C                     	;# 
  5698  020C                     	;# 
  5699  020D                     	;# 
  5700  020E                     	;# 
  5701  020F                     	;# 
  5702  020F                     	;# 
  5703  0210                     	;# 
  5704  0210                     	;# 
  5705  0211                     	;# 
  5706  0211                     	;# 
  5707  0212                     	;# 
  5708  0212                     	;# 
  5709  0213                     	;# 
  5710  0214                     	;# 
  5711  0215                     	;# 
  5712  0215                     	;# 
  5713  0216                     	;# 
  5714  0216                     	;# 
  5715  0217                     	;# 
  5716  0217                     	;# 
  5717  0218                     	;# 
  5718  0218                     	;# 
  5719  0219                     	;# 
  5720  021A                     	;# 
  5721  021B                     	;# 
  5722  021B                     	;# 
  5723  021C                     	;# 
  5724  021C                     	;# 
  5725  021D                     	;# 
  5726  021D                     	;# 
  5727  021E                     	;# 
  5728  021F                     	;# 
  5729  028C                     	;# 
  5730  028C                     	;# 
  5731  028D                     	;# 
  5732  028D                     	;# 
  5733  028E                     	;# 
  5734  028F                     	;# 
  5735  0290                     	;# 
  5736  0290                     	;# 
  5737  0291                     	;# 
  5738  0292                     	;# 
  5739  0292                     	;# 
  5740  0293                     	;# 
  5741  0293                     	;# 
  5742  0294                     	;# 
  5743  0295                     	;# 
  5744  0296                     	;# 
  5745  0296                     	;# 
  5746  0297                     	;# 
  5747  0298                     	;# 
  5748  0298                     	;# 
  5749  0299                     	;# 
  5750  0299                     	;# 
  5751  029A                     	;# 
  5752  029B                     	;# 
  5753  029C                     	;# 
  5754  029C                     	;# 
  5755  029D                     	;# 
  5756  030C                     	;# 
  5757  030C                     	;# 
  5758  030D                     	;# 
  5759  030E                     	;# 
  5760  030F                     	;# 
  5761  0310                     	;# 
  5762  0310                     	;# 
  5763  0311                     	;# 
  5764  0312                     	;# 
  5765  0313                     	;# 
  5766  0314                     	;# 
  5767  0314                     	;# 
  5768  0315                     	;# 
  5769  0316                     	;# 
  5770  0317                     	;# 
  5771  0318                     	;# 
  5772  0318                     	;# 
  5773  0319                     	;# 
  5774  031A                     	;# 
  5775  031B                     	;# 
  5776  031C                     	;# 
  5777  031C                     	;# 
  5778  031D                     	;# 
  5779  031E                     	;# 
  5780  031F                     	;# 
  5781  038C                     	;# 
  5782  038C                     	;# 
  5783  038D                     	;# 
  5784  038E                     	;# 
  5785  0390                     	;# 
  5786  0390                     	;# 
  5787  0391                     	;# 
  5788  0392                     	;# 
  5789  040C                     	;# 
  5790  040D                     	;# 
  5791  040E                     	;# 
  5792  040F                     	;# 
  5793  0410                     	;# 
  5794  0411                     	;# 
  5795  0416                     	;# 
  5796  0416                     	;# 
  5797  0417                     	;# 
  5798  0418                     	;# 
  5799  0418                     	;# 
  5800  0419                     	;# 
  5801  041A                     	;# 
  5802  041A                     	;# 
  5803  041B                     	;# 
  5804  041C                     	;# 
  5805  041C                     	;# 
  5806  041D                     	;# 
  5807  041E                     	;# 
  5808  041F                     	;# 
  5809  048C                     	;# 
  5810  048C                     	;# 
  5811  048D                     	;# 
  5812  048E                     	;# 
  5813  048F                     	;# 
  5814  048F                     	;# 
  5815  0490                     	;# 
  5816  0491                     	;# 
  5817  0492                     	;# 
  5818  0492                     	;# 
  5819  0493                     	;# 
  5820  0494                     	;# 
  5821  0495                     	;# 
  5822  0495                     	;# 
  5823  0496                     	;# 
  5824  0497                     	;# 
  5825  0498                     	;# 
  5826  0499                     	;# 
  5827  049A                     	;# 
  5828  049B                     	;# 
  5829  049C                     	;# 
  5830  049D                     	;# 
  5831  050C                     	;# 
  5832  050C                     	;# 
  5833  050D                     	;# 
  5834  050E                     	;# 
  5835  050F                     	;# 
  5836  050F                     	;# 
  5837  0510                     	;# 
  5838  0511                     	;# 
  5839  0512                     	;# 
  5840  0512                     	;# 
  5841  0513                     	;# 
  5842  0514                     	;# 
  5843  0515                     	;# 
  5844  0515                     	;# 
  5845  0516                     	;# 
  5846  0517                     	;# 
  5847  0518                     	;# 
  5848  0519                     	;# 
  5849  051A                     	;# 
  5850  051B                     	;# 
  5851  051C                     	;# 
  5852  051D                     	;# 
  5853  058C                     	;# 
  5854  058C                     	;# 
  5855  058D                     	;# 
  5856  058E                     	;# 
  5857  058F                     	;# 
  5858  058F                     	;# 
  5859  0590                     	;# 
  5860  0591                     	;# 
  5861  0592                     	;# 
  5862  0593                     	;# 
  5863  060C                     	;# 
  5864  060D                     	;# 
  5865  060E                     	;# 
  5866  060F                     	;# 
  5867  0610                     	;# 
  5868  0611                     	;# 
  5869  0612                     	;# 
  5870  0613                     	;# 
  5871  0614                     	;# 
  5872  0616                     	;# 
  5873  0617                     	;# 
  5874  0618                     	;# 
  5875  0619                     	;# 
  5876  061A                     	;# 
  5877  061B                     	;# 
  5878  061C                     	;# 
  5879  061D                     	;# 
  5880  061E                     	;# 
  5881  068C                     	;# 
  5882  068D                     	;# 
  5883  068E                     	;# 
  5884  068F                     	;# 
  5885  0690                     	;# 
  5886  0691                     	;# 
  5887  0692                     	;# 
  5888  0693                     	;# 
  5889  0694                     	;# 
  5890  070C                     	;# 
  5891  070D                     	;# 
  5892  070E                     	;# 
  5893  070F                     	;# 
  5894  0710                     	;# 
  5895  0711                     	;# 
  5896  0712                     	;# 
  5897  0713                     	;# 
  5898  0714                     	;# 
  5899  0716                     	;# 
  5900  0717                     	;# 
  5901  0718                     	;# 
  5902  0719                     	;# 
  5903  071A                     	;# 
  5904  071B                     	;# 
  5905  071C                     	;# 
  5906  071D                     	;# 
  5907  071E                     	;# 
  5908  0796                     	;# 
  5909  0797                     	;# 
  5910  0798                     	;# 
  5911  0799                     	;# 
  5912  079A                     	;# 
  5913  079B                     	;# 
  5914  080C                     	;# 
  5915  080D                     	;# 
  5916  080E                     	;# 
  5917  080F                     	;# 
  5918  0810                     	;# 
  5919  0811                     	;# 
  5920  0812                     	;# 
  5921  0813                     	;# 
  5922  0814                     	;# 
  5923  081A                     	;# 
  5924  081B                     	;# 
  5925  081C                     	;# 
  5926  081D                     	;# 
  5927  081E                     	;# 
  5928  081F                     	;# 
  5929  088C                     	;# 
  5930  088D                     	;# 
  5931  088E                     	;# 
  5932  088F                     	;# 
  5933  0890                     	;# 
  5934  0891                     	;# 
  5935  0892                     	;# 
  5936  0893                     	;# 
  5937  0895                     	;# 
  5938  0896                     	;# 
  5939  0897                     	;# 
  5940  0898                     	;# 
  5941  0899                     	;# 
  5942  089A                     	;# 
  5943  089B                     	;# 
  5944  090C                     	;# 
  5945  090E                     	;# 
  5946  090F                     	;# 
  5947  091F                     	;# 
  5948  091F                     	;# 
  5949  098F                     	;# 
  5950  098F                     	;# 
  5951  0990                     	;# 
  5952  0991                     	;# 
  5953  0992                     	;# 
  5954  0993                     	;# 
  5955  0994                     	;# 
  5956  0995                     	;# 
  5957  0996                     	;# 
  5958  0997                     	;# 
  5959  0E0F                     	;# 
  5960  0E10                     	;# 
  5961  0E11                     	;# 
  5962  0E12                     	;# 
  5963  0E13                     	;# 
  5964  0E14                     	;# 
  5965  0E15                     	;# 
  5966  0E16                     	;# 
  5967  0E17                     	;# 
  5968  0E18                     	;# 
  5969  0E19                     	;# 
  5970  0E1A                     	;# 
  5971  0E1B                     	;# 
  5972  0E1C                     	;# 
  5973  0E1D                     	;# 
  5974  0E1E                     	;# 
  5975  0E1F                     	;# 
  5976  0E20                     	;# 
  5977  0E21                     	;# 
  5978  0E22                     	;# 
  5979  0E23                     	;# 
  5980  0E24                     	;# 
  5981  0E25                     	;# 
  5982  0E26                     	;# 
  5983  0E27                     	;# 
  5984  0E28                     	;# 
  5985  0E29                     	;# 
  5986  0E2A                     	;# 
  5987  0E2B                     	;# 
  5988  0E2C                     	;# 
  5989  0E2D                     	;# 
  5990  0E2E                     	;# 
  5991  0E2F                     	;# 
  5992  0E30                     	;# 
  5993  0E31                     	;# 
  5994  0E32                     	;# 
  5995  0E33                     	;# 
  5996  0E34                     	;# 
  5997  0E35                     	;# 
  5998  0E36                     	;# 
  5999  0E37                     	;# 
  6000  0E8F                     	;# 
  6001  0E90                     	;# 
  6002  0E91                     	;# 
  6003  0E92                     	;# 
  6004  0E93                     	;# 
  6005  0E94                     	;# 
  6006  0E95                     	;# 
  6007  0E96                     	;# 
  6008  0E97                     	;# 
  6009  0E9C                     	;# 
  6010  0E9D                     	;# 
  6011  0E9E                     	;# 
  6012  0EA1                     	;# 
  6013  0EA2                     	;# 
  6014  0EA3                     	;# 
  6015  0EA4                     	;# 
  6016  0EA5                     	;# 
  6017  0EA9                     	;# 
  6018  0EAA                     	;# 
  6019  0EAB                     	;# 
  6020  0EAC                     	;# 
  6021  0EB1                     	;# 
  6022  0EB2                     	;# 
  6023  0EB3                     	;# 
  6024  0EB8                     	;# 
  6025  0EB9                     	;# 
  6026  0EBA                     	;# 
  6027  0EBB                     	;# 
  6028  0EBC                     	;# 
  6029  0EBD                     	;# 
  6030  0EBE                     	;# 
  6031  0EC3                     	;# 
  6032  0EC5                     	;# 
  6033  0EC6                     	;# 
  6034  0EC7                     	;# 
  6035  0EC8                     	;# 
  6036  0EC9                     	;# 
  6037  0ECA                     	;# 
  6038  0ECB                     	;# 
  6039  0ECC                     	;# 
  6040  0F10                     	;# 
  6041  0F11                     	;# 
  6042  0F12                     	;# 
  6043  0F13                     	;# 
  6044  0F14                     	;# 
  6045  0F15                     	;# 
  6046  0F16                     	;# 
  6047  0F17                     	;# 
  6048  0F18                     	;# 
  6049  0F19                     	;# 
  6050  0F1A                     	;# 
  6051  0F1B                     	;# 
  6052  0F1C                     	;# 
  6053  0F1D                     	;# 
  6054  0F1E                     	;# 
  6055  0F1F                     	;# 
  6056  0F20                     	;# 
  6057  0F21                     	;# 
  6058  0F22                     	;# 
  6059  0F23                     	;# 
  6060  0F24                     	;# 
  6061  0F25                     	;# 
  6062  0F26                     	;# 
  6063  0F27                     	;# 
  6064  0F28                     	;# 
  6065  0F29                     	;# 
  6066  0F2A                     	;# 
  6067  0F2B                     	;# 
  6068  0F2C                     	;# 
  6069  0F2D                     	;# 
  6070  0F2E                     	;# 
  6071  0F2F                     	;# 
  6072  0F30                     	;# 
  6073  0F31                     	;# 
  6074  0F32                     	;# 
  6075  0F38                     	;# 
  6076  0F39                     	;# 
  6077  0F3A                     	;# 
  6078  0F3B                     	;# 
  6079  0F3C                     	;# 
  6080  0F3D                     	;# 
  6081  0F3E                     	;# 
  6082  0F3F                     	;# 
  6083  0F40                     	;# 
  6084  0F41                     	;# 
  6085  0F43                     	;# 
  6086  0F44                     	;# 
  6087  0F45                     	;# 
  6088  0F46                     	;# 
  6089  0F47                     	;# 
  6090  0F48                     	;# 
  6091  0F49                     	;# 
  6092  0F4A                     	;# 
  6093  0F4B                     	;# 
  6094  0F4C                     	;# 
  6095  0F4E                     	;# 
  6096  0F4F                     	;# 
  6097  0F50                     	;# 
  6098  0F51                     	;# 
  6099  0F52                     	;# 
  6100  0F53                     	;# 
  6101  0F54                     	;# 
  6102  0F55                     	;# 
  6103  0F56                     	;# 
  6104  0F57                     	;# 
  6105  0F59                     	;# 
  6106  0F5A                     	;# 
  6107  0F5B                     	;# 
  6108  0F5C                     	;# 
  6109  0F5D                     	;# 
  6110  0F61                     	;# 
  6111  0F62                     	;# 
  6112  0F64                     	;# 
  6113  0F65                     	;# 
  6114  0F66                     	;# 
  6115  0F67                     	;# 
  6116  0F68                     	;# 
  6117  0F69                     	;# 
  6118  0F6A                     	;# 
  6119  0F6B                     	;# 
  6120  0F6C                     	;# 
  6121  0F6D                     	;# 
  6122  0FE4                     	;# 
  6123  0FE5                     	;# 
  6124  0FE6                     	;# 
  6125  0FE7                     	;# 
  6126  0FE8                     	;# 
  6127  0FE9                     	;# 
  6128  0FEA                     	;# 
  6129  0FEB                     	;# 
  6130  0FED                     	;# 
  6131  0FEE                     	;# 
  6132  0FEF                     	;# 
  6133  0000                     	;# 
  6134  0001                     	;# 
  6135  0002                     	;# 
  6136  0003                     	;# 
  6137  0004                     	;# 
  6138  0005                     	;# 
  6139  0006                     	;# 
  6140  0007                     	;# 
  6141  0008                     	;# 
  6142  0009                     	;# 
  6143  000A                     	;# 
  6144  000B                     	;# 
  6145  000C                     	;# 
  6146  000D                     	;# 
  6147  000E                     	;# 
  6148  000F                     	;# 
  6149  0010                     	;# 
  6150  0011                     	;# 
  6151  0012                     	;# 
  6152  0013                     	;# 
  6153  0014                     	;# 
  6154  0015                     	;# 
  6155  0016                     	;# 
  6156  0017                     	;# 
  6157  0018                     	;# 
  6158  0019                     	;# 
  6159  001A                     	;# 
  6160  001C                     	;# 
  6161  001C                     	;# 
  6162  001D                     	;# 
  6163  001D                     	;# 
  6164  001E                     	;# 
  6165  001F                     	;# 
  6166  008C                     	;# 
  6167  008C                     	;# 
  6168  008D                     	;# 
  6169  008E                     	;# 
  6170  008E                     	;# 
  6171  008F                     	;# 
  6172  0090                     	;# 
  6173  0090                     	;# 
  6174  0091                     	;# 
  6175  0093                     	;# 
  6176  0094                     	;# 
  6177  0095                     	;# 
  6178  0096                     	;# 
  6179  0097                     	;# 
  6180  0098                     	;# 
  6181  0099                     	;# 
  6182  009A                     	;# 
  6183  009B                     	;# 
  6184  009C                     	;# 
  6185  009D                     	;# 
  6186  009E                     	;# 
  6187  010C                     	;# 
  6188  010D                     	;# 
  6189  010E                     	;# 
  6190  010E                     	;# 
  6191  010F                     	;# 
  6192  0110                     	;# 
  6193  0110                     	;# 
  6194  0111                     	;# 
  6195  0112                     	;# 
  6196  0112                     	;# 
  6197  0113                     	;# 
  6198  0114                     	;# 
  6199  0114                     	;# 
  6200  0115                     	;# 
  6201  0116                     	;# 
  6202  0116                     	;# 
  6203  0117                     	;# 
  6204  0119                     	;# 
  6205  0119                     	;# 
  6206  0119                     	;# 
  6207  011A                     	;# 
  6208  011A                     	;# 
  6209  011A                     	;# 
  6210  011B                     	;# 
  6211  011B                     	;# 
  6212  011B                     	;# 
  6213  011B                     	;# 
  6214  011B                     	;# 
  6215  011C                     	;# 
  6216  011C                     	;# 
  6217  011C                     	;# 
  6218  011D                     	;# 
  6219  011D                     	;# 
  6220  011D                     	;# 
  6221  011E                     	;# 
  6222  011E                     	;# 
  6223  011E                     	;# 
  6224  011F                     	;# 
  6225  011F                     	;# 
  6226  011F                     	;# 
  6227  011F                     	;# 
  6228  011F                     	;# 
  6229  018C                     	;# 
  6230  018D                     	;# 
  6231  018E                     	;# 
  6232  018F                     	;# 
  6233  0190                     	;# 
  6234  0191                     	;# 
  6235  0192                     	;# 
  6236  0196                     	;# 
  6237  0197                     	;# 
  6238  0198                     	;# 
  6239  0199                     	;# 
  6240  019A                     	;# 
  6241  019B                     	;# 
  6242  019C                     	;# 
  6243  020C                     	;# 
  6244  020C                     	;# 
  6245  020D                     	;# 
  6246  020E                     	;# 
  6247  020F                     	;# 
  6248  020F                     	;# 
  6249  0210                     	;# 
  6250  0210                     	;# 
  6251  0211                     	;# 
  6252  0211                     	;# 
  6253  0212                     	;# 
  6254  0212                     	;# 
  6255  0213                     	;# 
  6256  0214                     	;# 
  6257  0215                     	;# 
  6258  0215                     	;# 
  6259  0216                     	;# 
  6260  0216                     	;# 
  6261  0217                     	;# 
  6262  0217                     	;# 
  6263  0218                     	;# 
  6264  0218                     	;# 
  6265  0219                     	;# 
  6266  021A                     	;# 
  6267  021B                     	;# 
  6268  021B                     	;# 
  6269  021C                     	;# 
  6270  021C                     	;# 
  6271  021D                     	;# 
  6272  021D                     	;# 
  6273  021E                     	;# 
  6274  021F                     	;# 
  6275  028C                     	;# 
  6276  028C                     	;# 
  6277  028D                     	;# 
  6278  028D                     	;# 
  6279  028E                     	;# 
  6280  028F                     	;# 
  6281  0290                     	;# 
  6282  0290                     	;# 
  6283  0291                     	;# 
  6284  0292                     	;# 
  6285  0292                     	;# 
  6286  0293                     	;# 
  6287  0293                     	;# 
  6288  0294                     	;# 
  6289  0295                     	;# 
  6290  0296                     	;# 
  6291  0296                     	;# 
  6292  0297                     	;# 
  6293  0298                     	;# 
  6294  0298                     	;# 
  6295  0299                     	;# 
  6296  0299                     	;# 
  6297  029A                     	;# 
  6298  029B                     	;# 
  6299  029C                     	;# 
  6300  029C                     	;# 
  6301  029D                     	;# 
  6302  030C                     	;# 
  6303  030C                     	;# 
  6304  030D                     	;# 
  6305  030E                     	;# 
  6306  030F                     	;# 
  6307  0310                     	;# 
  6308  0310                     	;# 
  6309  0311                     	;# 
  6310  0312                     	;# 
  6311  0313                     	;# 
  6312  0314                     	;# 
  6313  0314                     	;# 
  6314  0315                     	;# 
  6315  0316                     	;# 
  6316  0317                     	;# 
  6317  0318                     	;# 
  6318  0318                     	;# 
  6319  0319                     	;# 
  6320  031A                     	;# 
  6321  031B                     	;# 
  6322  031C                     	;# 
  6323  031C                     	;# 
  6324  031D                     	;# 
  6325  031E                     	;# 
  6326  031F                     	;# 
  6327  038C                     	;# 
  6328  038C                     	;# 
  6329  038D                     	;# 
  6330  038E                     	;# 
  6331  0390                     	;# 
  6332  0390                     	;# 
  6333  0391                     	;# 
  6334  0392                     	;# 
  6335  040C                     	;# 
  6336  040D                     	;# 
  6337  040E                     	;# 
  6338  040F                     	;# 
  6339  0410                     	;# 
  6340  0411                     	;# 
  6341  0416                     	;# 
  6342  0416                     	;# 
  6343  0417                     	;# 
  6344  0418                     	;# 
  6345  0418                     	;# 
  6346  0419                     	;# 
  6347  041A                     	;# 
  6348  041A                     	;# 
  6349  041B                     	;# 
  6350  041C                     	;# 
  6351  041C                     	;# 
  6352  041D                     	;# 
  6353  041E                     	;# 
  6354  041F                     	;# 
  6355  048C                     	;# 
  6356  048C                     	;# 
  6357  048D                     	;# 
  6358  048E                     	;# 
  6359  048F                     	;# 
  6360  048F                     	;# 
  6361  0490                     	;# 
  6362  0491                     	;# 
  6363  0492                     	;# 
  6364  0492                     	;# 
  6365  0493                     	;# 
  6366  0494                     	;# 
  6367  0495                     	;# 
  6368  0495                     	;# 
  6369  0496                     	;# 
  6370  0497                     	;# 
  6371  0498                     	;# 
  6372  0499                     	;# 
  6373  049A                     	;# 
  6374  049B                     	;# 
  6375  049C                     	;# 
  6376  049D                     	;# 
  6377  050C                     	;# 
  6378  050C                     	;# 
  6379  050D                     	;# 
  6380  050E                     	;# 
  6381  050F                     	;# 
  6382  050F                     	;# 
  6383  0510                     	;# 
  6384  0511                     	;# 
  6385  0512                     	;# 
  6386  0512                     	;# 
  6387  0513                     	;# 
  6388  0514                     	;# 
  6389  0515                     	;# 
  6390  0515                     	;# 
  6391  0516                     	;# 
  6392  0517                     	;# 
  6393  0518                     	;# 
  6394  0519                     	;# 
  6395  051A                     	;# 
  6396  051B                     	;# 
  6397  051C                     	;# 
  6398  051D                     	;# 
  6399  058C                     	;# 
  6400  058C                     	;# 
  6401  058D                     	;# 
  6402  058E                     	;# 
  6403  058F                     	;# 
  6404  058F                     	;# 
  6405  0590                     	;# 
  6406  0591                     	;# 
  6407  0592                     	;# 
  6408  0593                     	;# 
  6409  060C                     	;# 
  6410  060D                     	;# 
  6411  060E                     	;# 
  6412  060F                     	;# 
  6413  0610                     	;# 
  6414  0611                     	;# 
  6415  0612                     	;# 
  6416  0613                     	;# 
  6417  0614                     	;# 
  6418  0616                     	;# 
  6419  0617                     	;# 
  6420  0618                     	;# 
  6421  0619                     	;# 
  6422  061A                     	;# 
  6423  061B                     	;# 
  6424  061C                     	;# 
  6425  061D                     	;# 
  6426  061E                     	;# 
  6427  068C                     	;# 
  6428  068D                     	;# 
  6429  068E                     	;# 
  6430  068F                     	;# 
  6431  0690                     	;# 
  6432  0691                     	;# 
  6433  0692                     	;# 
  6434  0693                     	;# 
  6435  0694                     	;# 
  6436  070C                     	;# 
  6437  070D                     	;# 
  6438  070E                     	;# 
  6439  070F                     	;# 
  6440  0710                     	;# 
  6441  0711                     	;# 
  6442  0712                     	;# 
  6443  0713                     	;# 
  6444  0714                     	;# 
  6445  0716                     	;# 
  6446  0717                     	;# 
  6447  0718                     	;# 
  6448  0719                     	;# 
  6449  071A                     	;# 
  6450  071B                     	;# 
  6451  071C                     	;# 
  6452  071D                     	;# 
  6453  071E                     	;# 
  6454  0796                     	;# 
  6455  0797                     	;# 
  6456  0798                     	;# 
  6457  0799                     	;# 
  6458  079A                     	;# 
  6459  079B                     	;# 
  6460  080C                     	;# 
  6461  080D                     	;# 
  6462  080E                     	;# 
  6463  080F                     	;# 
  6464  0810                     	;# 
  6465  0811                     	;# 
  6466  0812                     	;# 
  6467  0813                     	;# 
  6468  0814                     	;# 
  6469  081A                     	;# 
  6470  081B                     	;# 
  6471  081C                     	;# 
  6472  081D                     	;# 
  6473  081E                     	;# 
  6474  081F                     	;# 
  6475  088C                     	;# 
  6476  088D                     	;# 
  6477  088E                     	;# 
  6478  088F                     	;# 
  6479  0890                     	;# 
  6480  0891                     	;# 
  6481  0892                     	;# 
  6482  0893                     	;# 
  6483  0895                     	;# 
  6484  0896                     	;# 
  6485  0897                     	;# 
  6486  0898                     	;# 
  6487  0899                     	;# 
  6488  089A                     	;# 
  6489  089B                     	;# 
  6490  090C                     	;# 
  6491  090E                     	;# 
  6492  090F                     	;# 
  6493  091F                     	;# 
  6494  091F                     	;# 
  6495  098F                     	;# 
  6496  098F                     	;# 
  6497  0990                     	;# 
  6498  0991                     	;# 
  6499  0992                     	;# 
  6500  0993                     	;# 
  6501  0994                     	;# 
  6502  0995                     	;# 
  6503  0996                     	;# 
  6504  0997                     	;# 
  6505  0E0F                     	;# 
  6506  0E10                     	;# 
  6507  0E11                     	;# 
  6508  0E12                     	;# 
  6509  0E13                     	;# 
  6510  0E14                     	;# 
  6511  0E15                     	;# 
  6512  0E16                     	;# 
  6513  0E17                     	;# 
  6514  0E18                     	;# 
  6515  0E19                     	;# 
  6516  0E1A                     	;# 
  6517  0E1B                     	;# 
  6518  0E1C                     	;# 
  6519  0E1D                     	;# 
  6520  0E1E                     	;# 
  6521  0E1F                     	;# 
  6522  0E20                     	;# 
  6523  0E21                     	;# 
  6524  0E22                     	;# 
  6525  0E23                     	;# 
  6526  0E24                     	;# 
  6527  0E25                     	;# 
  6528  0E26                     	;# 
  6529  0E27                     	;# 
  6530  0E28                     	;# 
  6531  0E29                     	;# 
  6532  0E2A                     	;# 
  6533  0E2B                     	;# 
  6534  0E2C                     	;# 
  6535  0E2D                     	;# 
  6536  0E2E                     	;# 
  6537  0E2F                     	;# 
  6538  0E30                     	;# 
  6539  0E31                     	;# 
  6540  0E32                     	;# 
  6541  0E33                     	;# 
  6542  0E34                     	;# 
  6543  0E35                     	;# 
  6544  0E36                     	;# 
  6545  0E37                     	;# 
  6546  0E8F                     	;# 
  6547  0E90                     	;# 
  6548  0E91                     	;# 
  6549  0E92                     	;# 
  6550  0E93                     	;# 
  6551  0E94                     	;# 
  6552  0E95                     	;# 
  6553  0E96                     	;# 
  6554  0E97                     	;# 
  6555  0E9C                     	;# 
  6556  0E9D                     	;# 
  6557  0E9E                     	;# 
  6558  0EA1                     	;# 
  6559  0EA2                     	;# 
  6560  0EA3                     	;# 
  6561  0EA4                     	;# 
  6562  0EA5                     	;# 
  6563  0EA9                     	;# 
  6564  0EAA                     	;# 
  6565  0EAB                     	;# 
  6566  0EAC                     	;# 
  6567  0EB1                     	;# 
  6568  0EB2                     	;# 
  6569  0EB3                     	;# 
  6570  0EB8                     	;# 
  6571  0EB9                     	;# 
  6572  0EBA                     	;# 
  6573  0EBB                     	;# 
  6574  0EBC                     	;# 
  6575  0EBD                     	;# 
  6576  0EBE                     	;# 
  6577  0EC3                     	;# 
  6578  0EC5                     	;# 
  6579  0EC6                     	;# 
  6580  0EC7                     	;# 
  6581  0EC8                     	;# 
  6582  0EC9                     	;# 
  6583  0ECA                     	;# 
  6584  0ECB                     	;# 
  6585  0ECC                     	;# 
  6586  0F10                     	;# 
  6587  0F11                     	;# 
  6588  0F12                     	;# 
  6589  0F13                     	;# 
  6590  0F14                     	;# 
  6591  0F15                     	;# 
  6592  0F16                     	;# 
  6593  0F17                     	;# 
  6594  0F18                     	;# 
  6595  0F19                     	;# 
  6596  0F1A                     	;# 
  6597  0F1B                     	;# 
  6598  0F1C                     	;# 
  6599  0F1D                     	;# 
  6600  0F1E                     	;# 
  6601  0F1F                     	;# 
  6602  0F20                     	;# 
  6603  0F21                     	;# 
  6604  0F22                     	;# 
  6605  0F23                     	;# 
  6606  0F24                     	;# 
  6607  0F25                     	;# 
  6608  0F26                     	;# 
  6609  0F27                     	;# 
  6610  0F28                     	;# 
  6611  0F29                     	;# 
  6612  0F2A                     	;# 
  6613  0F2B                     	;# 
  6614  0F2C                     	;# 
  6615  0F2D                     	;# 
  6616  0F2E                     	;# 
  6617  0F2F                     	;# 
  6618  0F30                     	;# 
  6619  0F31                     	;# 
  6620  0F32                     	;# 
  6621  0F38                     	;# 
  6622  0F39                     	;# 
  6623  0F3A                     	;# 
  6624  0F3B                     	;# 
  6625  0F3C                     	;# 
  6626  0F3D                     	;# 
  6627  0F3E                     	;# 
  6628  0F3F                     	;# 
  6629  0F40                     	;# 
  6630  0F41                     	;# 
  6631  0F43                     	;# 
  6632  0F44                     	;# 
  6633  0F45                     	;# 
  6634  0F46                     	;# 
  6635  0F47                     	;# 
  6636  0F48                     	;# 
  6637  0F49                     	;# 
  6638  0F4A                     	;# 
  6639  0F4B                     	;# 
  6640  0F4C                     	;# 
  6641  0F4E                     	;# 
  6642  0F4F                     	;# 
  6643  0F50                     	;# 
  6644  0F51                     	;# 
  6645  0F52                     	;# 
  6646  0F53                     	;# 
  6647  0F54                     	;# 
  6648  0F55                     	;# 
  6649  0F56                     	;# 
  6650  0F57                     	;# 
  6651  0F59                     	;# 
  6652  0F5A                     	;# 
  6653  0F5B                     	;# 
  6654  0F5C                     	;# 
  6655  0F5D                     	;# 
  6656  0F61                     	;# 
  6657  0F62                     	;# 
  6658  0F64                     	;# 
  6659  0F65                     	;# 
  6660  0F66                     	;# 
  6661  0F67                     	;# 
  6662  0F68                     	;# 
  6663  0F69                     	;# 
  6664  0F6A                     	;# 
  6665  0F6B                     	;# 
  6666  0F6C                     	;# 
  6667  0F6D                     	;# 
  6668  0FE4                     	;# 
  6669  0FE5                     	;# 
  6670  0FE6                     	;# 
  6671  0FE7                     	;# 
  6672  0FE8                     	;# 
  6673  0FE9                     	;# 
  6674  0FEA                     	;# 
  6675  0FEB                     	;# 
  6676  0FED                     	;# 
  6677  0FEE                     	;# 
  6678  0FEF                     	;# 
  6679  0000                     	;# 
  6680  0001                     	;# 
  6681  0002                     	;# 
  6682  0003                     	;# 
  6683  0004                     	;# 
  6684  0005                     	;# 
  6685  0006                     	;# 
  6686  0007                     	;# 
  6687  0008                     	;# 
  6688  0009                     	;# 
  6689  000A                     	;# 
  6690  000B                     	;# 
  6691  000C                     	;# 
  6692  000D                     	;# 
  6693  000E                     	;# 
  6694  000F                     	;# 
  6695  0010                     	;# 
  6696  0011                     	;# 
  6697  0012                     	;# 
  6698  0013                     	;# 
  6699  0014                     	;# 
  6700  0015                     	;# 
  6701  0016                     	;# 
  6702  0017                     	;# 
  6703  0018                     	;# 
  6704  0019                     	;# 
  6705  001A                     	;# 
  6706  001C                     	;# 
  6707  001C                     	;# 
  6708  001D                     	;# 
  6709  001D                     	;# 
  6710  001E                     	;# 
  6711  001F                     	;# 
  6712  008C                     	;# 
  6713  008C                     	;# 
  6714  008D                     	;# 
  6715  008E                     	;# 
  6716  008E                     	;# 
  6717  008F                     	;# 
  6718  0090                     	;# 
  6719  0090                     	;# 
  6720  0091                     	;# 
  6721  0093                     	;# 
  6722  0094                     	;# 
  6723  0095                     	;# 
  6724  0096                     	;# 
  6725  0097                     	;# 
  6726  0098                     	;# 
  6727  0099                     	;# 
  6728  009A                     	;# 
  6729  009B                     	;# 
  6730  009C                     	;# 
  6731  009D                     	;# 
  6732  009E                     	;# 
  6733  010C                     	;# 
  6734  010D                     	;# 
  6735  010E                     	;# 
  6736  010E                     	;# 
  6737  010F                     	;# 
  6738  0110                     	;# 
  6739  0110                     	;# 
  6740  0111                     	;# 
  6741  0112                     	;# 
  6742  0112                     	;# 
  6743  0113                     	;# 
  6744  0114                     	;# 
  6745  0114                     	;# 
  6746  0115                     	;# 
  6747  0116                     	;# 
  6748  0116                     	;# 
  6749  0117                     	;# 
  6750  0119                     	;# 
  6751  0119                     	;# 
  6752  0119                     	;# 
  6753  011A                     	;# 
  6754  011A                     	;# 
  6755  011A                     	;# 
  6756  011B                     	;# 
  6757  011B                     	;# 
  6758  011B                     	;# 
  6759  011B                     	;# 
  6760  011B                     	;# 
  6761  011C                     	;# 
  6762  011C                     	;# 
  6763  011C                     	;# 
  6764  011D                     	;# 
  6765  011D                     	;# 
  6766  011D                     	;# 
  6767  011E                     	;# 
  6768  011E                     	;# 
  6769  011E                     	;# 
  6770  011F                     	;# 
  6771  011F                     	;# 
  6772  011F                     	;# 
  6773  011F                     	;# 
  6774  011F                     	;# 
  6775  018C                     	;# 
  6776  018D                     	;# 
  6777  018E                     	;# 
  6778  018F                     	;# 
  6779  0190                     	;# 
  6780  0191                     	;# 
  6781  0192                     	;# 
  6782  0196                     	;# 
  6783  0197                     	;# 
  6784  0198                     	;# 
  6785  0199                     	;# 
  6786  019A                     	;# 
  6787  019B                     	;# 
  6788  019C                     	;# 
  6789  020C                     	;# 
  6790  020C                     	;# 
  6791  020D                     	;# 
  6792  020E                     	;# 
  6793  020F                     	;# 
  6794  020F                     	;# 
  6795  0210                     	;# 
  6796  0210                     	;# 
  6797  0211                     	;# 
  6798  0211                     	;# 
  6799  0212                     	;# 
  6800  0212                     	;# 
  6801  0213                     	;# 
  6802  0214                     	;# 
  6803  0215                     	;# 
  6804  0215                     	;# 
  6805  0216                     	;# 
  6806  0216                     	;# 
  6807  0217                     	;# 
  6808  0217                     	;# 
  6809  0218                     	;# 
  6810  0218                     	;# 
  6811  0219                     	;# 
  6812  021A                     	;# 
  6813  021B                     	;# 
  6814  021B                     	;# 
  6815  021C                     	;# 
  6816  021C                     	;# 
  6817  021D                     	;# 
  6818  021D                     	;# 
  6819  021E                     	;# 
  6820  021F                     	;# 
  6821  028C                     	;# 
  6822  028C                     	;# 
  6823  028D                     	;# 
  6824  028D                     	;# 
  6825  028E                     	;# 
  6826  028F                     	;# 
  6827  0290                     	;# 
  6828  0290                     	;# 
  6829  0291                     	;# 
  6830  0292                     	;# 
  6831  0292                     	;# 
  6832  0293                     	;# 
  6833  0293                     	;# 
  6834  0294                     	;# 
  6835  0295                     	;# 
  6836  0296                     	;# 
  6837  0296                     	;# 
  6838  0297                     	;# 
  6839  0298                     	;# 
  6840  0298                     	;# 
  6841  0299                     	;# 
  6842  0299                     	;# 
  6843  029A                     	;# 
  6844  029B                     	;# 
  6845  029C                     	;# 
  6846  029C                     	;# 
  6847  029D                     	;# 
  6848  030C                     	;# 
  6849  030C                     	;# 
  6850  030D                     	;# 
  6851  030E                     	;# 
  6852  030F                     	;# 
  6853  0310                     	;# 
  6854  0310                     	;# 
  6855  0311                     	;# 
  6856  0312                     	;# 
  6857  0313                     	;# 
  6858  0314                     	;# 
  6859  0314                     	;# 
  6860  0315                     	;# 
  6861  0316                     	;# 
  6862  0317                     	;# 
  6863  0318                     	;# 
  6864  0318                     	;# 
  6865  0319                     	;# 
  6866  031A                     	;# 
  6867  031B                     	;# 
  6868  031C                     	;# 
  6869  031C                     	;# 
  6870  031D                     	;# 
  6871  031E                     	;# 
  6872  031F                     	;# 
  6873  038C                     	;# 
  6874  038C                     	;# 
  6875  038D                     	;# 
  6876  038E                     	;# 
  6877  0390                     	;# 
  6878  0390                     	;# 
  6879  0391                     	;# 
  6880  0392                     	;# 
  6881  040C                     	;# 
  6882  040D                     	;# 
  6883  040E                     	;# 
  6884  040F                     	;# 
  6885  0410                     	;# 
  6886  0411                     	;# 
  6887  0416                     	;# 
  6888  0416                     	;# 
  6889  0417                     	;# 
  6890  0418                     	;# 
  6891  0418                     	;# 
  6892  0419                     	;# 
  6893  041A                     	;# 
  6894  041A                     	;# 
  6895  041B                     	;# 
  6896  041C                     	;# 
  6897  041C                     	;# 
  6898  041D                     	;# 
  6899  041E                     	;# 
  6900  041F                     	;# 
  6901  048C                     	;# 
  6902  048C                     	;# 
  6903  048D                     	;# 
  6904  048E                     	;# 
  6905  048F                     	;# 
  6906  048F                     	;# 
  6907  0490                     	;# 
  6908  0491                     	;# 
  6909  0492                     	;# 
  6910  0492                     	;# 
  6911  0493                     	;# 
  6912  0494                     	;# 
  6913  0495                     	;# 
  6914  0495                     	;# 
  6915  0496                     	;# 
  6916  0497                     	;# 
  6917  0498                     	;# 
  6918  0499                     	;# 
  6919  049A                     	;# 
  6920  049B                     	;# 
  6921  049C                     	;# 
  6922  049D                     	;# 
  6923  050C                     	;# 
  6924  050C                     	;# 
  6925  050D                     	;# 
  6926  050E                     	;# 
  6927  050F                     	;# 
  6928  050F                     	;# 
  6929  0510                     	;# 
  6930  0511                     	;# 
  6931  0512                     	;# 
  6932  0512                     	;# 
  6933  0513                     	;# 
  6934  0514                     	;# 
  6935  0515                     	;# 
  6936  0515                     	;# 
  6937  0516                     	;# 
  6938  0517                     	;# 
  6939  0518                     	;# 
  6940  0519                     	;# 
  6941  051A                     	;# 
  6942  051B                     	;# 
  6943  051C                     	;# 
  6944  051D                     	;# 
  6945  058C                     	;# 
  6946  058C                     	;# 
  6947  058D                     	;# 
  6948  058E                     	;# 
  6949  058F                     	;# 
  6950  058F                     	;# 
  6951  0590                     	;# 
  6952  0591                     	;# 
  6953  0592                     	;# 
  6954  0593                     	;# 
  6955  060C                     	;# 
  6956  060D                     	;# 
  6957  060E                     	;# 
  6958  060F                     	;# 
  6959  0610                     	;# 
  6960  0611                     	;# 
  6961  0612                     	;# 
  6962  0613                     	;# 
  6963  0614                     	;# 
  6964  0616                     	;# 
  6965  0617                     	;# 
  6966  0618                     	;# 
  6967  0619                     	;# 
  6968  061A                     	;# 
  6969  061B                     	;# 
  6970  061C                     	;# 
  6971  061D                     	;# 
  6972  061E                     	;# 
  6973  068C                     	;# 
  6974  068D                     	;# 
  6975  068E                     	;# 
  6976  068F                     	;# 
  6977  0690                     	;# 
  6978  0691                     	;# 
  6979  0692                     	;# 
  6980  0693                     	;# 
  6981  0694                     	;# 
  6982  070C                     	;# 
  6983  070D                     	;# 
  6984  070E                     	;# 
  6985  070F                     	;# 
  6986  0710                     	;# 
  6987  0711                     	;# 
  6988  0712                     	;# 
  6989  0713                     	;# 
  6990  0714                     	;# 
  6991  0716                     	;# 
  6992  0717                     	;# 
  6993  0718                     	;# 
  6994  0719                     	;# 
  6995  071A                     	;# 
  6996  071B                     	;# 
  6997  071C                     	;# 
  6998  071D                     	;# 
  6999  071E                     	;# 
  7000  0796                     	;# 
  7001  0797                     	;# 
  7002  0798                     	;# 
  7003  0799                     	;# 
  7004  079A                     	;# 
  7005  079B                     	;# 
  7006  080C                     	;# 
  7007  080D                     	;# 
  7008  080E                     	;# 
  7009  080F                     	;# 
  7010  0810                     	;# 
  7011  0811                     	;# 
  7012  0812                     	;# 
  7013  0813                     	;# 
  7014  0814                     	;# 
  7015  081A                     	;# 
  7016  081B                     	;# 
  7017  081C                     	;# 
  7018  081D                     	;# 
  7019  081E                     	;# 
  7020  081F                     	;# 
  7021  088C                     	;# 
  7022  088D                     	;# 
  7023  088E                     	;# 
  7024  088F                     	;# 
  7025  0890                     	;# 
  7026  0891                     	;# 
  7027  0892                     	;# 
  7028  0893                     	;# 
  7029  0895                     	;# 
  7030  0896                     	;# 
  7031  0897                     	;# 
  7032  0898                     	;# 
  7033  0899                     	;# 
  7034  089A                     	;# 
  7035  089B                     	;# 
  7036  090C                     	;# 
  7037  090E                     	;# 
  7038  090F                     	;# 
  7039  091F                     	;# 
  7040  091F                     	;# 
  7041  098F                     	;# 
  7042  098F                     	;# 
  7043  0990                     	;# 
  7044  0991                     	;# 
  7045  0992                     	;# 
  7046  0993                     	;# 
  7047  0994                     	;# 
  7048  0995                     	;# 
  7049  0996                     	;# 
  7050  0997                     	;# 
  7051  0E0F                     	;# 
  7052  0E10                     	;# 
  7053  0E11                     	;# 
  7054  0E12                     	;# 
  7055  0E13                     	;# 
  7056  0E14                     	;# 
  7057  0E15                     	;# 
  7058  0E16                     	;# 
  7059  0E17                     	;# 
  7060  0E18                     	;# 
  7061  0E19                     	;# 
  7062  0E1A                     	;# 
  7063  0E1B                     	;# 
  7064  0E1C                     	;# 
  7065  0E1D                     	;# 
  7066  0E1E                     	;# 
  7067  0E1F                     	;# 
  7068  0E20                     	;# 
  7069  0E21                     	;# 
  7070  0E22                     	;# 
  7071  0E23                     	;# 
  7072  0E24                     	;# 
  7073  0E25                     	;# 
  7074  0E26                     	;# 
  7075  0E27                     	;# 
  7076  0E28                     	;# 
  7077  0E29                     	;# 
  7078  0E2A                     	;# 
  7079  0E2B                     	;# 
  7080  0E2C                     	;# 
  7081  0E2D                     	;# 
  7082  0E2E                     	;# 
  7083  0E2F                     	;# 
  7084  0E30                     	;# 
  7085  0E31                     	;# 
  7086  0E32                     	;# 
  7087  0E33                     	;# 
  7088  0E34                     	;# 
  7089  0E35                     	;# 
  7090  0E36                     	;# 
  7091  0E37                     	;# 
  7092  0E8F                     	;# 
  7093  0E90                     	;# 
  7094  0E91                     	;# 
  7095  0E92                     	;# 
  7096  0E93                     	;# 
  7097  0E94                     	;# 
  7098  0E95                     	;# 
  7099  0E96                     	;# 
  7100  0E97                     	;# 
  7101  0E9C                     	;# 
  7102  0E9D                     	;# 
  7103  0E9E                     	;# 
  7104  0EA1                     	;# 
  7105  0EA2                     	;# 
  7106  0EA3                     	;# 
  7107  0EA4                     	;# 
  7108  0EA5                     	;# 
  7109  0EA9                     	;# 
  7110  0EAA                     	;# 
  7111  0EAB                     	;# 
  7112  0EAC                     	;# 
  7113  0EB1                     	;# 
  7114  0EB2                     	;# 
  7115  0EB3                     	;# 
  7116  0EB8                     	;# 
  7117  0EB9                     	;# 
  7118  0EBA                     	;# 
  7119  0EBB                     	;# 
  7120  0EBC                     	;# 
  7121  0EBD                     	;# 
  7122  0EBE                     	;# 
  7123  0EC3                     	;# 
  7124  0EC5                     	;# 
  7125  0EC6                     	;# 
  7126  0EC7                     	;# 
  7127  0EC8                     	;# 
  7128  0EC9                     	;# 
  7129  0ECA                     	;# 
  7130  0ECB                     	;# 
  7131  0ECC                     	;# 
  7132  0F10                     	;# 
  7133  0F11                     	;# 
  7134  0F12                     	;# 
  7135  0F13                     	;# 
  7136  0F14                     	;# 
  7137  0F15                     	;# 
  7138  0F16                     	;# 
  7139  0F17                     	;# 
  7140  0F18                     	;# 
  7141  0F19                     	;# 
  7142  0F1A                     	;# 
  7143  0F1B                     	;# 
  7144  0F1C                     	;# 
  7145  0F1D                     	;# 
  7146  0F1E                     	;# 
  7147  0F1F                     	;# 
  7148  0F20                     	;# 
  7149  0F21                     	;# 
  7150  0F22                     	;# 
  7151  0F23                     	;# 
  7152  0F24                     	;# 
  7153  0F25                     	;# 
  7154  0F26                     	;# 
  7155  0F27                     	;# 
  7156  0F28                     	;# 
  7157  0F29                     	;# 
  7158  0F2A                     	;# 
  7159  0F2B                     	;# 
  7160  0F2C                     	;# 
  7161  0F2D                     	;# 
  7162  0F2E                     	;# 
  7163  0F2F                     	;# 
  7164  0F30                     	;# 
  7165  0F31                     	;# 
  7166  0F32                     	;# 
  7167  0F38                     	;# 
  7168  0F39                     	;# 
  7169  0F3A                     	;# 
  7170  0F3B                     	;# 
  7171  0F3C                     	;# 
  7172  0F3D                     	;# 
  7173  0F3E                     	;# 
  7174  0F3F                     	;# 
  7175  0F40                     	;# 
  7176  0F41                     	;# 
  7177  0F43                     	;# 
  7178  0F44                     	;# 
  7179  0F45                     	;# 
  7180  0F46                     	;# 
  7181  0F47                     	;# 
  7182  0F48                     	;# 
  7183  0F49                     	;# 
  7184  0F4A                     	;# 
  7185  0F4B                     	;# 
  7186  0F4C                     	;# 
  7187  0F4E                     	;# 
  7188  0F4F                     	;# 
  7189  0F50                     	;# 
  7190  0F51                     	;# 
  7191  0F52                     	;# 
  7192  0F53                     	;# 
  7193  0F54                     	;# 
  7194  0F55                     	;# 
  7195  0F56                     	;# 
  7196  0F57                     	;# 
  7197  0F59                     	;# 
  7198  0F5A                     	;# 
  7199  0F5B                     	;# 
  7200  0F5C                     	;# 
  7201  0F5D                     	;# 
  7202  0F61                     	;# 
  7203  0F62                     	;# 
  7204  0F64                     	;# 
  7205  0F65                     	;# 
  7206  0F66                     	;# 
  7207  0F67                     	;# 
  7208  0F68                     	;# 
  7209  0F69                     	;# 
  7210  0F6A                     	;# 
  7211  0F6B                     	;# 
  7212  0F6C                     	;# 
  7213  0F6D                     	;# 
  7214  0FE4                     	;# 
  7215  0FE5                     	;# 
  7216  0FE6                     	;# 
  7217  0FE7                     	;# 
  7218  0FE8                     	;# 
  7219  0FE9                     	;# 
  7220  0FEA                     	;# 
  7221  0FEB                     	;# 
  7222  0FED                     	;# 
  7223  0FEE                     	;# 
  7224  0FEF                     	;_reg
  7225                           
  7226                           	psect	idataCOMMON
  7227  0003                     __pidataCOMMON:
  7228                           
  7229                           ;initializer for _ALAH
  7230  0003  340C               	retlw	12
  7231                           
  7232                           	psect	idataBANK1
  7233  12B5                     __pidataBANK1:
  7234                           
  7235                           ;initializer for save_register@n
  7236  12B5  3400               	retlw	0
  7237  12B6  34F0               	retlw	240
  7238                           
  7239                           ;initializer for _ALAL
  7240  12B7  3404               	retlw	4
  7241                           
  7242                           ;initializer for _ALAT
  7243  12B8  341C               	retlw	28
  7244                           
  7245                           ;initializer for _TALA
  7246  12B9  3405               	retlw	5
  7247                           
  7248                           ;initializer for _PMON
  7249  12BA  3403               	retlw	3
  7250                           
  7251                           	psect	stringtext1
  7252  180F                     __pstringtext1:
  7253  180F                     _dpowers:
  7254  180F  3401               	retlw	1
  7255  1810  3400               	retlw	0
  7256  1811  340A               	retlw	10
  7257  1812  3400               	retlw	0
  7258  1813  3464               	retlw	100
  7259  1814  3400               	retlw	0
  7260  1815  34E8               	retlw	232
  7261  1816  3403               	retlw	3
  7262  1817  3410               	retlw	16
  7263  1818  3427               	retlw	39
  7264  1819                     __end_of_dpowers:
  7265                           
  7266                           	psect	nvBANK1
  7267  00BE                     __pnvBANK1:
  7268  00BE                     _TMR2_InterruptHandler:
  7269  00BE                     	ds	2
  7270  00C0                     _TMR0_InterruptHandler:
  7271  00C0                     	ds	2
  7272  000E                     _PORTCbits	set	14
  7273  000D                     _PORTBbits	set	13
  7274  0016                     _LATAbits	set	22
  7275  0013                     _TRISCbits	set	19
  7276  001E                     _T0CON0bits	set	30
  7277  001E                     _T0CON0	set	30
  7278  001C                     _TMR0L	set	28
  7279  001D                     _TMR0H	set	29
  7280  001F                     _T0CON1	set	31
  7281  000B                     _INTCONbits	set	11
  7282  0014                     _TRISD	set	20
  7283  0013                     _TRISC	set	19
  7284  0012                     _TRISB	set	18
  7285  0011                     _TRISA	set	17
  7286  0015                     _TRISE	set	21
  7287  0018                     _LATC	set	24
  7288  0017                     _LATB	set	23
  7289  0016                     _LATA	set	22
  7290  0019                     _LATD	set	25
  7291  001A                     _LATE	set	26
  7292  0094                     _ADCON1bits	set	148
  7293  008E                     _ADPREVL	set	142
  7294  008F                     _ADPREVH	set	143
  7295  0097                     _ADSTATbits	set	151
  7296  0090                     _ADACCL	set	144
  7297  0091                     _ADACCH	set	145
  7298  0095                     _ADCON2bits	set	149
  7299  009C                     _ADPRE	set	156
  7300  0096                     _ADCON3bits	set	150
  7301  008C                     _ADRESL	set	140
  7302  008D                     _ADRESH	set	141
  7303  0093                     _ADCON0bits	set	147
  7304  009D                     _ADACQ	set	157
  7305  0093                     _ADCON0	set	147
  7306  0098                     _ADCLK	set	152
  7307  0099                     _ADACT	set	153
  7308  009A                     _ADREF	set	154
  7309  0097                     _ADSTAT	set	151
  7310  0096                     _ADCON3	set	150
  7311  0095                     _ADCON2	set	149
  7312  0094                     _ADCON1	set	148
  7313  009B                     _ADCAP	set	155
  7314  009E                     _ADPCH	set	158
  7315  0116                     _ADERRL	set	278
  7316  0117                     _ADERRH	set	279
  7317  0114                     _ADFLTRL	set	276
  7318  0115                     _ADFLTRH	set	277
  7319  010C                     _ADCNT	set	268
  7320  010D                     _ADRPT	set	269
  7321  0113                     _ADSTPTH	set	275
  7322  0112                     _ADSTPTL	set	274
  7323  0111                     _ADUTHH	set	273
  7324  0110                     _ADUTHL	set	272
  7325  010F                     _ADLTHH	set	271
  7326  010E                     _ADLTHL	set	270
  7327  018E                     _SSP1MSK	set	398
  7328  018D                     _SSP1ADD	set	397
  7329  018F                     _SSP1STAT	set	399
  7330  0191                     _SSP1CON2	set	401
  7331  0190                     _SSP1CON1bits	set	400
  7332  018C                     _SSP1BUF	set	396
  7333  018F                     _SSP1STATbits	set	399
  7334  0191                     _SSP1CON2bits	set	401
  7335  0190                     _SSP1CON1	set	400
  7336  021F                     _CCPTMRS1bits	set	543
  7337  028D                     _PR2	set	653
  7338  028C                     _TMR2	set	652
  7339  028E                     _T2CONbits	set	654
  7340  0291                     _T2RSTbits	set	657
  7341  028F                     _T2HLTbits	set	655
  7342  028E                     _T2CON	set	654
  7343  028C                     _T2TMR	set	652
  7344  028D                     _T2PR	set	653
  7345  0291                     _T2RST	set	657
  7346  028F                     _T2HLT	set	655
  7347  0290                     _T2CLKCON	set	656
  7348  038C                     _PWM6DCL	set	908
  7349  038D                     _PWM6DCH	set	909
  7350  038E                     _PWM6CON	set	910
  7351  0710                     _PIR4bits	set	1808
  7352  071A                     _PIE4bits	set	1818
  7353  070C                     _PIR0bits	set	1804
  7354  0716                     _PIE0bits	set	1814
  7355  0719                     _PIE3bits	set	1817
  7356  070F                     _PIR3bits	set	1807
  7357  079B                     _PMD5	set	1947
  7358  079A                     _PMD4	set	1946
  7359  0799                     _PMD3	set	1945
  7360  0798                     _PMD2	set	1944
  7361  0797                     _PMD1	set	1943
  7362  0796                     _PMD0	set	1942
  7363  081F                     _NVMCON2	set	2079
  7364  081C                     _NVMDATL	set	2076
  7365  081D                     _NVMDATH	set	2077
  7366  081E                     _NVMCON1bits	set	2078
  7367  081B                     _NVMADRH	set	2075
  7368  081A                     _NVMADRL	set	2074
  7369  0892                     _OSCTUNE	set	2194
  7370  0893                     _OSCFRQ	set	2195
  7371  0891                     _OSCEN	set	2193
  7372  088F                     _OSCCON3	set	2191
  7373  088D                     _OSCCON1	set	2189
  7374  0EC6                     _SSP1DATPPS	set	3782
  7375  0EC5                     _SSP1CLKPPS	set	3781
  7376  0F16                     _RA6PPS	set	3862
  7377  0F24                     _RC4PPS	set	3876
  7378  0F23                     _RC3PPS	set	3875
  7379  0F67                     _SLRCONE	set	3943
  7380  0F5C                     _SLRCOND	set	3932
  7381  0F51                     _SLRCONC	set	3921
  7382  0F46                     _SLRCONB	set	3910
  7383  0F3B                     _SLRCONA	set	3899
  7384  0F5B                     _ODCOND	set	3931
  7385  0F50                     _ODCONC	set	3920
  7386  0F45                     _ODCONB	set	3909
  7387  0F3A                     _ODCONA	set	3898
  7388  0F66                     _ODCONE	set	3942
  7389  0F4F                     _WPUC	set	3919
  7390  0F39                     _WPUA	set	3897
  7391  0F44                     _WPUB	set	3908
  7392  0F65                     _WPUE	set	3941
  7393  0F5A                     _WPUD	set	3930
  7394  0F38                     _ANSELA	set	3896
  7395  0F64                     _ANSELE	set	3940
  7396  0F43                     _ANSELB	set	3907
  7397  0F4E                     _ANSELC	set	3918
  7398  0F59                     _ANSELD	set	3929
  7399  7A7C                     _WPUC4	set	31356
  7400  7A7B                     _WPUC3	set	31355
  7401                           
  7402                           	psect	stringtext2
  7403  1800                     __pstringtext2:
  7404  1800                     STR_3:
  7405  1800  3425               	retlw	37	;'%'
  7406  1801  3430               	retlw	48	;'0'
  7407  1802  3432               	retlw	50	;'2'
  7408  1803  3464               	retlw	100	;'d'
  7409  1804  343A               	retlw	58	;':'
  7410  1805  3425               	retlw	37	;'%'
  7411  1806  3430               	retlw	48	;'0'
  7412  1807  3432               	retlw	50	;'2'
  7413  1808  3464               	retlw	100	;'d'
  7414  1809  343A               	retlw	58	;':'
  7415  180A  3425               	retlw	37	;'%'
  7416  180B  3430               	retlw	48	;'0'
  7417  180C  3432               	retlw	50	;'2'
  7418  180D  3464               	retlw	100	;'d'
  7419  180E  3400               	retlw	0
  7420                           
  7421                           	psect	stringtext3
  7422  1819                     __pstringtext3:
  7423  1819                     STR_4:
  7424  1819  3425               	retlw	37	;'%'
  7425  181A  3430               	retlw	48	;'0'
  7426  181B  3432               	retlw	50	;'2'
  7427  181C  3464               	retlw	100	;'d'
  7428  181D  3420               	retlw	32	;' '
  7429  181E  3443               	retlw	67	;'C'
  7430  181F  3400               	retlw	0
  7431                           
  7432                           	psect	stringtext4
  7433  1820                     __pstringtext4:
  7434  1820                     STR_5:
  7435  1820  344C               	retlw	76	;'L'
  7436  1821  3425               	retlw	37	;'%'
  7437  1822  3430               	retlw	48	;'0'
  7438  1823  3431               	retlw	49	;'1'
  7439  1824  3464               	retlw	100	;'d'
  7440  1825  3400               	retlw	0
  7441                           
  7442                           	psect	stringtext5
  7443  1826                     __pstringtext5:
  7444  1826                     STR_54:
  7445  1826  3420               	retlw	32	;' '
  7446  1827  3420               	retlw	32	;' '
  7447  1828  3420               	retlw	32	;' '
  7448  1829  3400               	retlw	0
  7449                           
  7450                           	psect	stringtext6
  7451  182A                     __pstringtext6:
  7452  182A                     STR_11:
  7453  182A  3443               	retlw	67	;'C'
  7454  182B  3454               	retlw	84	;'T'
  7455  182C  344C               	retlw	76	;'L'
  7456  182D  3400               	retlw	0
  7457                           
  7458                           	psect	stringtext7
  7459  182E                     __pstringtext7:
  7460  182E                     STR_1:
  7461  182E  3441               	retlw	65	;'A'
  7462  182F  3400               	retlw	0
  7463                           
  7464                           	psect	stringtext8
  7465  1830                     __pstringtext8:
  7466  1830                     STR_7:
  7467  1830  3454               	retlw	84	;'T'
  7468  1831  3400               	retlw	0
  7469                           
  7470                           	psect	stringtext9
  7471  1832                     __pstringtext9:
  7472  1832                     STR_2:
  7473  1832  3461               	retlw	97	;'a'
  7474  1833  3400               	retlw	0
  7475                           
  7476                           	psect	stringtext10
  7477  0000                     __pstringtext10:
  7478  1828                     
  7479                           	psect	cinit
  7480  0039                     start_initialization:	
  7481                           ; #config settings
  7482                           
  7483  0039                     __initialization:	;BIGRAM
  7484                           
  7485                           ; Initialize objects allocated to COMMON
  7486  0039  3180  2003  3180   	fcall	__pidataCOMMON	;fetch initializer
  7487  003C  00FD               	movwf	__pdataCOMMON& (0+127)
  7488                           
  7489                           ; Initialize objects allocated to BANK1
  7490  003D  30B5               	movlw	low __pidataBANK1
  7491  003E  0084               	movwf	4
  7492  003F  3092               	movlw	(high __pidataBANK1)| (0+128)
  7493  0040  0085               	movwf	5
  7494  0041  0021               	movlb	1	; select bank1
  7495  0042  0012               	moviw fsr0++
  7496  0043  00B8               	movwf	__pdataBANK1& (0+127)
  7497  0044  0012               	moviw fsr0++
  7498  0045  00B9               	movwf	(__pdataBANK1+1)& (0+127)
  7499  0046  0012               	moviw fsr0++
  7500  0047  00BA               	movwf	(__pdataBANK1+2)& (0+127)
  7501  0048  0012               	moviw fsr0++
  7502  0049  00BB               	movwf	(__pdataBANK1+3)& (0+127)
  7503  004A  0012               	moviw fsr0++
  7504  004B  00BC               	movwf	(__pdataBANK1+4)& (0+127)
  7505  004C  0012               	moviw fsr0++
  7506  004D  00BD               	movwf	(__pdataBANK1+5)& (0+127)
  7507                           
  7508                           ; Clear objects allocated to BIGRAM
  7509  004E  3073               	movlw	low (0+9075)
  7510  004F  0084               	movwf	4
  7511  0050  3023               	movlw	high (0+9075)
  7512  0051  0085               	movwf	5
  7513  0052  307D               	movlw	125
  7514  0053  00FE               	movwf	btemp
  7515  0054  3000               	movlw	0
  7516  0055  00FF               	movwf	btemp+1
  7517  0056  3193  2317  3180   	fcall	clear_ram0
  7518                           
  7519                           ; Clear objects allocated to COMMON
  7520  0059  01F9               	clrf	__pbssCOMMON& (0+127)
  7521  005A  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  7522  005B  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  7523  005C  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  7524                           
  7525                           ; Clear objects allocated to BANK0
  7526  005D  0020               	movlb	0	; select bank0
  7527  005E  01ED               	clrf	__pbssBANK0& (0+127)
  7528  005F  01EE               	clrf	(__pbssBANK0+1)& (0+127)
  7529  0060  01EF               	clrf	(__pbssBANK0+2)& (0+127)
  7530                           
  7531                           ; Clear objects allocated to BANK1
  7532  0061  30A0               	movlw	low __pbssBANK1
  7533  0062  0084               	movwf	4
  7534  0063  3000               	movlw	high __pbssBANK1
  7535  0064  0085               	movwf	5
  7536  0065  300C               	movlw	12
  7537  0066  00FE               	movwf	btemp
  7538  0067  3000               	movlw	0
  7539  0068  00FF               	movwf	btemp+1
  7540  0069  3193  2317  3180   	fcall	clear_ram0
  7541  006C                     end_of_initialization:	
  7542                           ;End of C runtime variable initialization code
  7543                           
  7544  006C                     __end_of__initialization:
  7545  006C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  7546  006D  0020               	movlb	0
  7547  006E  318D  2DA7         	ljmp	_main	;jump to C main() function
  7548                           
  7549                           	psect	bssCOMMON
  7550  0079                     __pbssCOMMON:
  7551  0079                     _timer_flag:
  7552  0079                     	ds	2
  7553  007B                     _CLKH:
  7554  007B                     	ds	1
  7555  007C                     _ALAM:
  7556  007C                     	ds	1
  7557                           
  7558                           	psect	dataCOMMON
  7559  007D                     __pdataCOMMON:
  7560  007D                     _ALAH:
  7561  007D                     	ds	1
  7562                           
  7563                           	psect	bssBANK0
  7564  006D                     __pbssBANK0:
  7565  006D                     _btn2State:
  7566  006D                     	ds	1
  7567  006E                     _btn1State:
  7568  006E                     	ds	1
  7569  006F                     _CLKM:
  7570  006F                     	ds	1
  7571                           
  7572                           	psect	bssBANK1
  7573  00A0                     __pbssBANK1:
  7574  00A0                     _PWM_DUTY:
  7575  00A0                     	ds	2
  7576  00A2                     TMR0_ISR@CountCallBack:
  7577  00A2                     	ds	2
  7578  00A4                     _i2c1_driver_i2cISR:
  7579  00A4                     	ds	2
  7580  00A6                     _i2c1_driver_busCollisionISR:
  7581  00A6                     	ds	2
  7582  00A8                     _ctl:
  7583  00A8                     	ds	1
  7584  00A9                     _CSUM:
  7585  00A9                     	ds	1
  7586  00AA                     _ALAF:
  7587  00AA                     	ds	1
  7588  00AB                     _ALAS:
  7589  00AB                     	ds	1
  7590                           
  7591                           	psect	dataBANK1
  7592  00B8                     __pdataBANK1:
  7593  00B8                     save_register@n:
  7594  00B8                     	ds	2
  7595  00BA                     _ALAL:
  7596  00BA                     	ds	1
  7597  00BB                     _ALAT:
  7598  00BB                     	ds	1
  7599  00BC                     _TALA:
  7600  00BC                     	ds	1
  7601  00BD                     _PMON:
  7602  00BD                     	ds	1
  7603                           
  7604                           	psect	clrtext
  7605  1317                     clear_ram0:	
  7606                           ;	Called with FSR0 containing the base address, and
  7607                           ;	btemp/btemp+1 has the size to clear
  7608                           
  7609  1317  0064               	clrwdt	;clear the watchdog before getting into this loop
  7610  1318                     clrloop0:
  7611  1318  0180               	clrf	0	;clear RAM location pointed to by FSR
  7612  1319  3101               	addfsr 0,1
  7613  131A  3001               	movlw	1
  7614  131B  02FE               	subwf	btemp,f
  7615  131C  3000               	movlw	0
  7616  131D  3BFF               	subwfb	btemp+1,f
  7617  131E  087F               	movf	btemp+1,w
  7618  131F  047E               	iorwf	btemp,w
  7619  1320  1D03               	skipz
  7620  1321  2B18               	goto	clrloop0	;have we reached the end yet?
  7621  1322  3400               	retlw	0	;all done for this memory range, return
  7622                           
  7623                           	psect	cstackBANK1
  7624  00AC                     __pcstackBANK1:
  7625  00AC                     ??_main:
  7626                           
  7627                           ; 1 bytes @ 0x0
  7628  00AC                     	ds	12
  7629                           
  7630                           	psect	cstackCOMMON
  7631  0070                     __pcstackCOMMON:
  7632  0070                     ?_isdigit:
  7633  0070                     ?_i2c1_driver_open:	
  7634                           ; 1 bit 
  7635                           
  7636  0070                     ?_PMD_Initialize:	
  7637                           ; 1 bit 
  7638                           
  7639  0070                     ?_OSCILLATOR_Initialize:	
  7640                           ; 1 bytes @ 0x0
  7641                           
  7642  0070                     ?_PWM6_Initialize:	
  7643                           ; 1 bytes @ 0x0
  7644                           
  7645  0070                     ?_ADCC_Initialize:	
  7646                           ; 1 bytes @ 0x0
  7647                           
  7648  0070                     ?_TMR2_Initialize:	
  7649                           ; 1 bytes @ 0x0
  7650                           
  7651  0070                     ?_TMR0_Initialize:	
  7652                           ; 1 bytes @ 0x0
  7653                           
  7654  0070                     ?_TMR0_ISR:	
  7655                           ; 1 bytes @ 0x0
  7656                           
  7657  0070                     ?_TMR2_ISR:	
  7658                           ; 1 bytes @ 0x0
  7659                           
  7660  0070                     ?_TMR0_DefaultInterruptHandler:	
  7661                           ; 1 bytes @ 0x0
  7662                           
  7663  0070                     ??_TMR0_DefaultInterruptHandler:	
  7664                           ; 1 bytes @ 0x0
  7665                           
  7666  0070                     ?_TMR0_CallBack:	
  7667                           ; 1 bytes @ 0x0
  7668                           
  7669  0070                     ?_TMR0_callback:	
  7670                           ; 1 bytes @ 0x0
  7671                           
  7672  0070                     ?_TMR2_callback:	
  7673                           ; 1 bytes @ 0x0
  7674                           
  7675  0070                     ?_LCDinit:	
  7676                           ; 1 bytes @ 0x0
  7677                           
  7678  0070                     ?_check_vars:	
  7679                           ; 1 bytes @ 0x0
  7680                           
  7681  0070                     ?_tsttc:	
  7682                           ; 1 bytes @ 0x0
  7683                           
  7684  0070                     ?_lumin:	
  7685                           ; 1 bytes @ 0x0
  7686                           
  7687  0070                     ?_checkButtonS1:	
  7688                           ; 1 bytes @ 0x0
  7689                           
  7690  0070                     ?_checkButtonS2:	
  7691                           ; 1 bytes @ 0x0
  7692                           
  7693  0070                     ?_conf_clock_hh:	
  7694                           ; 1 bytes @ 0x0
  7695                           
  7696  0070                     ?_conf_clock_mm:	
  7697                           ; 1 bytes @ 0x0
  7698                           
  7699  0070                     ?_conf_clock_ss:	
  7700                           ; 1 bytes @ 0x0
  7701                           
  7702  0070                     ?_conf_alarm_hh:	
  7703                           ; 1 bytes @ 0x0
  7704                           
  7705  0070                     ?_conf_alarm_mm:	
  7706                           ; 1 bytes @ 0x0
  7707                           
  7708  0070                     ?_conf_alarm_ss:	
  7709                           ; 1 bytes @ 0x0
  7710                           
  7711  0070                     ?_conf_temp:	
  7712                           ; 1 bytes @ 0x0
  7713                           
  7714  0070                     ?_conf_lumin:	
  7715                           ; 1 bytes @ 0x0
  7716                           
  7717  0070                     ?_conf_alarm_flag:	
  7718                           ; 1 bytes @ 0x0
  7719                           
  7720  0070                     ?_save_vars:	
  7721                           ; 1 bytes @ 0x0
  7722                           
  7723  0070                     ?_PWM6_LoadDutyValue:	
  7724                           ; 1 bytes @ 0x0
  7725                           
  7726  0070                     ?_ADCC_StartConversion:	
  7727                           ; 1 bytes @ 0x0
  7728                           
  7729  0070                     ?_TMR2_DefaultInterruptHandler:	
  7730                           ; 1 bytes @ 0x0
  7731                           
  7732  0070                     ??_TMR2_DefaultInterruptHandler:	
  7733                           ; 1 bytes @ 0x0
  7734                           
  7735  0070                     ?_TMR2_CallBack:	
  7736                           ; 1 bytes @ 0x0
  7737                           
  7738  0070                     ?_ReadI2C:	
  7739                           ; 1 bytes @ 0x0
  7740                           
  7741  0070                     ?_WriteI2C:	
  7742                           ; 1 bytes @ 0x0
  7743                           
  7744  0070                     ?_PIN_MANAGER_Initialize:	
  7745                           ; 1 bytes @ 0x0
  7746                           
  7747  0070                     ?_SYSTEM_Initialize:	
  7748                           ; 1 bytes @ 0x0
  7749                           
  7750  0070                     ?_INTERRUPT_InterruptManager:	
  7751                           ; 1 bytes @ 0x0
  7752                           
  7753  0070                     ?_main:	
  7754                           ; 1 bytes @ 0x0
  7755                           
  7756  0070                     ?_LCDsend:	
  7757                           ; 1 bytes @ 0x0
  7758                           
  7759  0070                     ?_LCDcmd:	
  7760                           ; 1 bytes @ 0x0
  7761                           
  7762  0070                     ?_LCDchar:	
  7763                           ; 1 bytes @ 0x0
  7764                           
  7765  0070                     ?_LCDstr:	
  7766                           ; 1 bytes @ 0x0
  7767                           
  7768  0070                     ?___lbmod:	
  7769                           ; 1 bytes @ 0x0
  7770                           
  7771  0070                     ?i1_DATAEE_WriteByte:	
  7772                           ; 1 bytes @ 0x0
  7773                           
  7774  0070                     ?i1_save_vars:	
  7775                           ; 1 bytes @ 0x0
  7776                           
  7777  0070                     ?___awmod:	
  7778                           ; 1 bytes @ 0x0
  7779                           
  7780  0070                     ?i1___lwmod:	
  7781                           ; 2 bytes @ 0x0
  7782                           
  7783  0070                     ___lbmod@divisor:	
  7784                           ; 2 bytes @ 0x0
  7785                           
  7786  0070                     PWM6_LoadDutyValue@dutyValue:	
  7787                           ; 1 bytes @ 0x0
  7788                           
  7789  0070                     ___awmod@divisor:	
  7790                           ; 2 bytes @ 0x0
  7791                           
  7792  0070                     i1DATAEE_WriteByte@bAdd:	
  7793                           ; 2 bytes @ 0x0
  7794                           
  7795  0070                     i1___lwmod@divisor:	
  7796                           ; 2 bytes @ 0x0
  7797                           
  7798                           
  7799                           ; 2 bytes @ 0x0
  7800  0070                     	ds	1
  7801  0071                     ??___lbmod:
  7802                           
  7803                           ; 1 bytes @ 0x1
  7804  0071                     	ds	1
  7805  0072                     ??_PWM6_LoadDutyValue:
  7806  0072                     i1DATAEE_WriteByte@bData:	
  7807                           ; 1 bytes @ 0x2
  7808                           
  7809  0072                     ___awmod@dividend:	
  7810                           ; 1 bytes @ 0x2
  7811                           
  7812  0072                     i1___lwmod@dividend:	
  7813                           ; 2 bytes @ 0x2
  7814                           
  7815                           
  7816                           ; 2 bytes @ 0x2
  7817  0072                     	ds	1
  7818  0073                     ??i1_DATAEE_WriteByte:
  7819  0073                     ___lbmod@dividend:	
  7820                           ; 1 bytes @ 0x3
  7821                           
  7822  0073                     i1DATAEE_WriteByte@GIEBitValue:	
  7823                           ; 1 bytes @ 0x3
  7824                           
  7825                           
  7826                           ; 1 bytes @ 0x3
  7827  0073                     	ds	1
  7828  0074                     ??___awmod:
  7829  0074                     ??i1_save_vars:	
  7830                           ; 1 bytes @ 0x4
  7831                           
  7832  0074                     ??i1___lwmod:	
  7833                           ; 1 bytes @ 0x4
  7834                           
  7835  0074                     ___lbmod@counter:	
  7836                           ; 1 bytes @ 0x4
  7837                           
  7838                           
  7839                           ; 1 bytes @ 0x4
  7840  0074                     	ds	1
  7841  0075                     ___awmod@counter:
  7842  0075                     ___lbmod@rem:	
  7843                           ; 1 bytes @ 0x5
  7844                           
  7845  0075                     i1___lwmod@counter:	
  7846                           ; 1 bytes @ 0x5
  7847                           
  7848  0075                     i1save_vars@first:	
  7849                           ; 1 bytes @ 0x5
  7850                           
  7851                           
  7852                           ; 2 bytes @ 0x5
  7853  0075                     	ds	1
  7854  0076                     ??_TMR2_ISR:
  7855  0076                     ??_TMR2_callback:	
  7856                           ; 1 bytes @ 0x6
  7857                           
  7858  0076                     ??_TMR2_CallBack:	
  7859                           ; 1 bytes @ 0x6
  7860                           
  7861  0076                     ___awmod@sign:	
  7862                           ; 1 bytes @ 0x6
  7863                           
  7864                           
  7865                           ; 1 bytes @ 0x6
  7866  0076                     	ds	1
  7867  0077                     ??_TMR0_callback:
  7868                           
  7869                           ; 1 bytes @ 0x7
  7870  0077                     	ds	2
  7871  0079                     ??_TMR0_ISR:
  7872  0079                     ??_TMR0_CallBack:	
  7873                           ; 1 bytes @ 0x9
  7874                           
  7875  0079                     ??_INTERRUPT_InterruptManager:	
  7876                           ; 1 bytes @ 0x9
  7877                           
  7878                           
  7879                           	psect	cstackBANK0
  7880  0020                     __pcstackBANK0:	
  7881                           ; 1 bytes @ 0x9
  7882                           
  7883  0020                     ??_PMD_Initialize:
  7884  0020                     ??_OSCILLATOR_Initialize:	
  7885                           ; 1 bytes @ 0x0
  7886                           
  7887  0020                     ??_PWM6_Initialize:	
  7888                           ; 1 bytes @ 0x0
  7889                           
  7890  0020                     ??_ADCC_Initialize:	
  7891                           ; 1 bytes @ 0x0
  7892                           
  7893  0020                     ?_TMR0_SetInterruptHandler:	
  7894                           ; 1 bytes @ 0x0
  7895                           
  7896  0020                     ?_TMR2_SetInterruptHandler:	
  7897                           ; 1 bytes @ 0x0
  7898                           
  7899  0020                     ??_checkButtonS1:	
  7900                           ; 1 bytes @ 0x0
  7901                           
  7902  0020                     ??_checkButtonS2:	
  7903                           ; 1 bytes @ 0x0
  7904                           
  7905  0020                     ??_conf_clock_hh:	
  7906                           ; 1 bytes @ 0x0
  7907                           
  7908  0020                     ??_conf_clock_mm:	
  7909                           ; 1 bytes @ 0x0
  7910                           
  7911  0020                     ??_conf_clock_ss:	
  7912                           ; 1 bytes @ 0x0
  7913                           
  7914  0020                     ??_conf_alarm_hh:	
  7915                           ; 1 bytes @ 0x0
  7916                           
  7917  0020                     ??_conf_alarm_mm:	
  7918                           ; 1 bytes @ 0x0
  7919                           
  7920  0020                     ??_conf_alarm_ss:	
  7921                           ; 1 bytes @ 0x0
  7922                           
  7923  0020                     ??_conf_temp:	
  7924                           ; 1 bytes @ 0x0
  7925                           
  7926  0020                     ??_conf_lumin:	
  7927                           ; 1 bytes @ 0x0
  7928                           
  7929  0020                     ??_conf_alarm_flag:	
  7930                           ; 1 bytes @ 0x0
  7931                           
  7932  0020                     ??_ADCC_StartConversion:	
  7933                           ; 1 bytes @ 0x0
  7934                           
  7935  0020                     ??_isdigit:	
  7936                           ; 1 bytes @ 0x0
  7937                           
  7938  0020                     ??_ReadI2C:	
  7939                           ; 1 bytes @ 0x0
  7940                           
  7941  0020                     ??_WriteI2C:	
  7942                           ; 1 bytes @ 0x0
  7943                           
  7944  0020                     ??_PIN_MANAGER_Initialize:	
  7945                           ; 1 bytes @ 0x0
  7946                           
  7947  0020                     ??_i2c1_driver_open:	
  7948                           ; 1 bytes @ 0x0
  7949                           
  7950  0020                     ?_DATAEE_WriteByte:	
  7951                           ; 1 bytes @ 0x0
  7952                           
  7953  0020                     ?_DATAEE_ReadByte:	
  7954                           ; 1 bytes @ 0x0
  7955                           
  7956  0020                     ?_ADCC_GetConversionResult:	
  7957                           ; 1 bytes @ 0x0
  7958                           
  7959  0020                     ?___wmul:	
  7960                           ; 2 bytes @ 0x0
  7961                           
  7962  0020                     ?___lwdiv:	
  7963                           ; 2 bytes @ 0x0
  7964                           
  7965  0020                     ADCC_StartConversion@channel:	
  7966                           ; 2 bytes @ 0x0
  7967                           
  7968  0020                     _isdigit$2823:	
  7969                           ; 1 bytes @ 0x0
  7970                           
  7971  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  7972                           ; 1 bytes @ 0x0
  7973                           
  7974  0020                     DATAEE_WriteByte@bAdd:	
  7975                           ; 2 bytes @ 0x0
  7976                           
  7977  0020                     DATAEE_ReadByte@bAdd:	
  7978                           ; 2 bytes @ 0x0
  7979                           
  7980  0020                     TMR2_SetInterruptHandler@InterruptHandler:	
  7981                           ; 2 bytes @ 0x0
  7982                           
  7983  0020                     ___wmul@multiplier:	
  7984                           ; 2 bytes @ 0x0
  7985                           
  7986  0020                     ___lwdiv@divisor:	
  7987                           ; 2 bytes @ 0x0
  7988                           
  7989                           
  7990                           ; 2 bytes @ 0x0
  7991  0020                     	ds	1
  7992  0021                     WriteI2C@data_out:
  7993  0021                     isdigit@c:	
  7994                           ; 1 bytes @ 0x1
  7995                           
  7996                           
  7997                           ; 1 bytes @ 0x1
  7998  0021                     	ds	1
  7999  0022                     ??_TMR2_Initialize:
  8000  0022                     ??_TMR0_Initialize:	
  8001                           ; 1 bytes @ 0x2
  8002                           
  8003  0022                     ??_TMR0_SetInterruptHandler:	
  8004                           ; 1 bytes @ 0x2
  8005                           
  8006  0022                     ??_TMR2_SetInterruptHandler:	
  8007                           ; 1 bytes @ 0x2
  8008                           
  8009  0022                     ??_check_vars:	
  8010                           ; 1 bytes @ 0x2
  8011                           
  8012  0022                     ??_tsttc:	
  8013                           ; 1 bytes @ 0x2
  8014                           
  8015  0022                     ??_lumin:	
  8016                           ; 1 bytes @ 0x2
  8017                           
  8018  0022                     ??_ADCC_GetConversionResult:	
  8019                           ; 1 bytes @ 0x2
  8020                           
  8021  0022                     ??_SYSTEM_Initialize:	
  8022                           ; 1 bytes @ 0x2
  8023                           
  8024  0022                     ??_DATAEE_ReadByte:	
  8025                           ; 1 bytes @ 0x2
  8026                           
  8027  0022                     ??_LCDsend:	
  8028                           ; 1 bytes @ 0x2
  8029                           
  8030  0022                     ?_LCDsend2x4:	
  8031                           ; 1 bytes @ 0x2
  8032                           
  8033  0022                     DATAEE_WriteByte@bData:	
  8034                           ; 1 bytes @ 0x2
  8035                           
  8036  0022                     LCDsend2x4@mode:	
  8037                           ; 1 bytes @ 0x2
  8038                           
  8039  0022                     ___wmul@multiplicand:	
  8040                           ; 1 bytes @ 0x2
  8041                           
  8042  0022                     ___lwdiv@dividend:	
  8043                           ; 2 bytes @ 0x2
  8044                           
  8045                           
  8046                           ; 2 bytes @ 0x2
  8047  0022                     	ds	1
  8048  0023                     ??_DATAEE_WriteByte:
  8049  0023                     ??_LCDsend2x4:	
  8050                           ; 1 bytes @ 0x3
  8051                           
  8052  0023                     DATAEE_WriteByte@GIEBitValue:	
  8053                           ; 1 bytes @ 0x3
  8054                           
  8055  0023                     check_vars@pass:	
  8056                           ; 1 bytes @ 0x3
  8057                           
  8058  0023                     tsttc@value:	
  8059                           ; 1 bytes @ 0x3
  8060                           
  8061  0023                     LCDsend@c:	
  8062                           ; 1 bytes @ 0x3
  8063                           
  8064                           
  8065                           ; 1 bytes @ 0x3
  8066  0023                     	ds	1
  8067  0024                     ??_save_vars:
  8068  0024                     ??___wmul:	
  8069                           ; 1 bytes @ 0x4
  8070                           
  8071  0024                     ??___lwdiv:	
  8072                           ; 1 bytes @ 0x4
  8073                           
  8074  0024                     check_vars@last:	
  8075                           ; 1 bytes @ 0x4
  8076                           
  8077  0024                     lumin@luminosity:	
  8078                           ; 2 bytes @ 0x4
  8079                           
  8080  0024                     ___wmul@product:	
  8081                           ; 2 bytes @ 0x4
  8082                           
  8083                           
  8084                           ; 2 bytes @ 0x4
  8085  0024                     	ds	1
  8086  0025                     LCDsend2x4@c:
  8087  0025                     save_vars@first:	
  8088                           ; 1 bytes @ 0x5
  8089                           
  8090  0025                     ___lwdiv@quotient:	
  8091                           ; 2 bytes @ 0x5
  8092                           
  8093                           
  8094                           ; 2 bytes @ 0x5
  8095  0025                     	ds	1
  8096  0026                     LCDsend2x4@hc:
  8097                           
  8098                           ; 1 bytes @ 0x6
  8099  0026                     	ds	1
  8100  0027                     LCDsend2x4@lc:
  8101  0027                     ___lwdiv@counter:	
  8102                           ; 1 bytes @ 0x7
  8103                           
  8104                           
  8105                           ; 1 bytes @ 0x7
  8106  0027                     	ds	1
  8107  0028                     ??_LCDinit:
  8108  0028                     ??_LCDcmd:	
  8109                           ; 1 bytes @ 0x8
  8110                           
  8111  0028                     ??_LCDchar:	
  8112                           ; 1 bytes @ 0x8
  8113                           
  8114  0028                     ?___lwmod:	
  8115                           ; 1 bytes @ 0x8
  8116                           
  8117  0028                     LCDcmd@c:	
  8118                           ; 2 bytes @ 0x8
  8119                           
  8120  0028                     LCDchar@c:	
  8121                           ; 1 bytes @ 0x8
  8122                           
  8123  0028                     ___lwmod@divisor:	
  8124                           ; 1 bytes @ 0x8
  8125                           
  8126                           
  8127                           ; 2 bytes @ 0x8
  8128  0028                     	ds	1
  8129  0029                     ??_LCDstr:
  8130                           
  8131                           ; 1 bytes @ 0x9
  8132  0029                     	ds	1
  8133  002A                     LCDstr@c:
  8134  002A                     ___lwmod@dividend:	
  8135                           ; 1 bytes @ 0xA
  8136                           
  8137                           
  8138                           ; 2 bytes @ 0xA
  8139  002A                     	ds	1
  8140  002B                     LCDstr@p:
  8141                           
  8142                           ; 1 bytes @ 0xB
  8143  002B                     	ds	1
  8144  002C                     ??___lwmod:
  8145                           
  8146                           ; 1 bytes @ 0xC
  8147  002C                     	ds	1
  8148  002D                     ___lwmod@counter:
  8149                           
  8150                           ; 1 bytes @ 0xD
  8151  002D                     	ds	1
  8152  002E                     ?_sprintf:
  8153  002E                     sprintf@f:	
  8154                           ; 2 bytes @ 0xE
  8155                           
  8156                           
  8157                           ; 2 bytes @ 0xE
  8158  002E                     	ds	8
  8159  0036                     ??_sprintf:
  8160                           
  8161                           ; 1 bytes @ 0x16
  8162  0036                     	ds	4
  8163  003A                     sprintf@ap:
  8164                           
  8165                           ; 1 bytes @ 0x1A
  8166  003A                     	ds	1
  8167  003B                     sprintf@prec:
  8168                           
  8169                           ; 1 bytes @ 0x1B
  8170  003B                     	ds	1
  8171  003C                     sprintf@val:
  8172                           
  8173                           ; 2 bytes @ 0x1C
  8174  003C                     	ds	2
  8175  003E                     sprintf@flag:
  8176                           
  8177                           ; 1 bytes @ 0x1E
  8178  003E                     	ds	1
  8179  003F                     sprintf@width:
  8180                           
  8181                           ; 2 bytes @ 0x1F
  8182  003F                     	ds	2
  8183  0041                     sprintf@c:
  8184                           
  8185                           ; 1 bytes @ 0x21
  8186  0041                     	ds	1
  8187  0042                     sprintf@sp:
  8188                           
  8189                           ; 1 bytes @ 0x22
  8190  0042                     	ds	1
  8191  0043                     ?_lcd:
  8192  0043                     lcd@luminosity:	
  8193                           ; 1 bytes @ 0x23
  8194                           
  8195                           
  8196                           ; 1 bytes @ 0x23
  8197  0043                     	ds	1
  8198  0044                     lcd@alarm:
  8199                           
  8200                           ; 1 bytes @ 0x24
  8201  0044                     	ds	1
  8202  0045                     lcd@ctl:
  8203                           
  8204                           ; 1 bytes @ 0x25
  8205  0045                     	ds	1
  8206  0046                     lcd@h:
  8207                           
  8208                           ; 1 bytes @ 0x26
  8209  0046                     	ds	1
  8210  0047                     lcd@m:
  8211                           
  8212                           ; 1 bytes @ 0x27
  8213  0047                     	ds	1
  8214  0048                     lcd@s:
  8215                           
  8216                           ; 1 bytes @ 0x28
  8217  0048                     	ds	1
  8218  0049                     lcd@state:
  8219                           
  8220                           ; 1 bytes @ 0x29
  8221  0049                     	ds	1
  8222  004A                     lcd@temperature_alarm:
  8223                           
  8224                           ; 1 bytes @ 0x2A
  8225  004A                     	ds	1
  8226  004B                     lcd@luminosity_alarm:
  8227                           
  8228                           ; 1 bytes @ 0x2B
  8229  004B                     	ds	1
  8230  004C                     lcd@alah:
  8231                           
  8232                           ; 1 bytes @ 0x2C
  8233  004C                     	ds	1
  8234  004D                     lcd@alam:
  8235                           
  8236                           ; 1 bytes @ 0x2D
  8237  004D                     	ds	1
  8238  004E                     lcd@alas:
  8239                           
  8240                           ; 1 bytes @ 0x2E
  8241  004E                     	ds	1
  8242  004F                     ??_lcd:
  8243                           
  8244                           ; 1 bytes @ 0x2F
  8245  004F                     	ds	6
  8246  0055                     lcd@buf:
  8247                           
  8248                           ; 17 bytes @ 0x35
  8249  0055                     	ds	17
  8250  0066                     lcd@temperature:
  8251                           
  8252                           ; 1 bytes @ 0x46
  8253  0066                     	ds	1
  8254  0067                     _main$3249:
  8255                           
  8256                           ; 1 bytes @ 0x47
  8257  0067                     	ds	1
  8258  0068                     main@new_c:
  8259                           
  8260                           ; 1 bytes @ 0x48
  8261  0068                     	ds	1
  8262  0069                     main@new_l:
  8263                           
  8264                           ; 1 bytes @ 0x49
  8265  0069                     	ds	1
  8266  006A                     main@c:
  8267                           
  8268                           ; 1 bytes @ 0x4A
  8269  006A                     	ds	1
  8270  006B                     main@l:
  8271                           
  8272                           ; 1 bytes @ 0x4B
  8273  006B                     	ds	1
  8274  006C                     main@state:
  8275                           
  8276                           ; 1 bytes @ 0x4C
  8277  006C                     	ds	1
  8278                           
  8279                           	psect	maintext
  8280  0DA7                     __pmaintext:	
  8281 ;;
  8282 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
  8283 ;;
  8284 ;; *************** function _main *****************
  8285 ;; Defined at:
  8286 ;;		line 184 in file "main.c"
  8287 ;; Parameters:    Size  Location     Type
  8288 ;;		None
  8289 ;; Auto vars:     Size  Location     Type
  8290 ;;  new_l           1   73[BANK0 ] unsigned char 
  8291 ;;  new_c           1   72[BANK0 ] unsigned char 
  8292 ;;  buf            17    0        unsigned char [17]
  8293 ;;  state           1   76[BANK0 ] unsigned char 
  8294 ;;  l               1   75[BANK0 ] unsigned char 
  8295 ;;  c               1   74[BANK0 ] unsigned char 
  8296 ;;  c2              1    0        unsigned char 
  8297 ;;  c1              1    0        unsigned char 
  8298 ;;  lc              1    0        unsigned char 
  8299 ;;  hc              1    0        unsigned char 
  8300 ;; Return value:  Size  Location     Type
  8301 ;;                  1    wreg      void 
  8302 ;; Registers used:
  8303 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8304 ;; Tracked objects:
  8305 ;;		On entry : B1F/0
  8306 ;;		On exit  : 0/0
  8307 ;;		Unchanged: 0/0
  8308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8310 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8311 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  8312 ;;      Totals:         0       6      12       0       0       0       0       0       0       0       0       0       
      +0       0
  8313 ;;Total ram usage:       18 bytes
  8314 ;; Hardware stack levels required when called:   11
  8315 ;; This function calls:
  8316 ;;		_LCDinit
  8317 ;;		_SYSTEM_Initialize
  8318 ;;		_TMR0_SetInterruptHandler
  8319 ;;		_TMR2_SetInterruptHandler
  8320 ;;		___lwmod
  8321 ;;		_checkButtonS1
  8322 ;;		_checkButtonS2
  8323 ;;		_check_vars
  8324 ;;		_conf_alarm_flag
  8325 ;;		_conf_alarm_hh
  8326 ;;		_conf_alarm_mm
  8327 ;;		_conf_alarm_ss
  8328 ;;		_conf_clock_hh
  8329 ;;		_conf_clock_mm
  8330 ;;		_conf_clock_ss
  8331 ;;		_conf_lumin
  8332 ;;		_conf_temp
  8333 ;;		_i2c1_driver_open
  8334 ;;		_lcd
  8335 ;;		_lumin
  8336 ;;		_save_vars
  8337 ;;		_tsttc
  8338 ;; This function is called by:
  8339 ;;		Startup code after reset
  8340 ;; This function uses a non-reentrant model
  8341 ;;
  8342                           
  8343                           
  8344                           ;psect for function _main
  8345  0DA7                     _main:
  8346  0DA7                     l5398:	
  8347                           ;incstack = 0
  8348                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8349                           
  8350                           
  8351                           ;main.c: 186: unsigned char c;;main.c: 187: unsigned char l;;main.c: 188: unsigned char 
      +                          hc;;main.c: 189: unsigned char lc;;main.c: 190: unsigned char c1;;main.c: 191: unsigned 
      +                          char c2;;main.c: 192: unsigned char buf[17];;main.c: 194: uint8_t state = 0;
  8352  0DA7  0020               	movlb	0	; select bank0
  8353  0DA8  01EC               	clrf	main@state
  8354  0DA9                     l5400:
  8355                           
  8356                           ;main.c: 209: SYSTEM_Initialize();
  8357  0DA9  3194  2415  318D   	fcall	_SYSTEM_Initialize
  8358  0DAC                     l5402:
  8359                           
  8360                           ;main.c: 212: TMR0_SetInterruptHandler(TMR0_callback);
  8361  0DAC  30DA               	movlw	low _TMR0_callback
  8362  0DAD  0020               	movlb	0	; select bank0
  8363  0DAE  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  8364  0DAF  3016               	movlw	high _TMR0_callback
  8365  0DB0  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  8366  0DB1  3192  22DC  318D   	fcall	_TMR0_SetInterruptHandler
  8367  0DB4                     l5404:
  8368                           
  8369                           ;main.c: 213: TMR2_SetInterruptHandler(TMR2_callback);
  8370  0DB4  30E8               	movlw	low _TMR2_callback
  8371  0DB5  0020               	movlb	0	; select bank0
  8372  0DB6  00A0               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  8373  0DB7  3014               	movlw	high _TMR2_callback
  8374  0DB8  00A1               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  8375  0DB9  3192  22E5  318D   	fcall	_TMR2_SetInterruptHandler
  8376  0DBC                     l5406:
  8377                           
  8378                           ;main.c: 219: (INTCONbits.GIE = 1);
  8379  0DBC  178B               	bsf	11,7	;volatile
  8380  0DBD                     l5408:
  8381                           
  8382                           ;main.c: 222: (INTCONbits.PEIE = 1);
  8383  0DBD  170B               	bsf	11,6	;volatile
  8384  0DBE                     l5410:
  8385                           
  8386                           ;main.c: 230: i2c1_driver_open();
  8387  0DBE  3193  230B  318D   	fcall	_i2c1_driver_open
  8388  0DC1                     l5412:
  8389                           
  8390                           ;main.c: 231: TRISCbits.TRISC3 = 1;
  8391  0DC1  0020               	movlb	0	; select bank0
  8392  0DC2  1593               	bsf	19,3	;volatile
  8393  0DC3                     l5414:
  8394                           
  8395                           ;main.c: 232: TRISCbits.TRISC4 = 1;
  8396  0DC3  1613               	bsf	19,4	;volatile
  8397  0DC4                     l5416:
  8398                           
  8399                           ;main.c: 233: WPUC3 = 1;
  8400  0DC4  003E               	movlb	30	; select bank30
  8401  0DC5  15CF               	bsf	79,3	;volatile
  8402  0DC6                     l5418:
  8403                           
  8404                           ;main.c: 234: WPUC4 = 1;
  8405  0DC6  164F               	bsf	79,4	;volatile
  8406  0DC7                     l5420:
  8407                           
  8408                           ;main.c: 238: LCDinit();
  8409  0DC7  3197  278A  318D   	fcall	_LCDinit
  8410  0DCA                     l5422:
  8411                           
  8412                           ;main.c: 240: check_vars();
  8413  0DCA  3186  266D  318D   	fcall	_check_vars
  8414  0DCD                     l5424:
  8415                           
  8416                           ;main.c: 242: {;main.c: 244: unsigned char new_c;;main.c: 245: unsigned char new_l;;main
      +                          .c: 250: if (PMON != 0 && (timer_flag%PMON) == 0){
  8417  0DCD  0021               	movlb	1	; select bank1
  8418  0DCE  083D               	movf	_PMON^(0+128),w
  8419  0DCF  1903               	btfsc	3,2
  8420  0DD0  2DD2               	goto	u4381
  8421  0DD1  2DD3               	goto	u4380
  8422  0DD2                     u4381:
  8423  0DD2  2E5C               	goto	l5458
  8424  0DD3                     u4380:
  8425  0DD3                     l5426:
  8426  0DD3  083D               	movf	_PMON^(0+128),w
  8427  0DD4  00AC               	movwf	??_main^(0+128)
  8428  0DD5  01AD               	clrf	(??_main^(0+128)+1)
  8429  0DD6  082C               	movf	??_main^(0+128),w
  8430  0DD7  0020               	movlb	0	; select bank0
  8431  0DD8  00A8               	movwf	___lwmod@divisor
  8432  0DD9  0021               	movlb	1	; select bank1
  8433  0DDA  082D               	movf	(??_main+1)^(0+128),w
  8434  0DDB  0020               	movlb	0	; select bank0
  8435  0DDC  00A9               	movwf	___lwmod@divisor+1
  8436  0DDD  087A               	movf	_timer_flag+1,w	;volatile
  8437  0DDE  00AB               	movwf	___lwmod@dividend+1
  8438  0DDF  0879               	movf	_timer_flag,w	;volatile
  8439  0DE0  00AA               	movwf	___lwmod@dividend
  8440  0DE1  3195  2585  318D   	fcall	___lwmod
  8441  0DE4  0020               	movlb	0	; select bank0
  8442  0DE5  0828               	movf	?___lwmod,w
  8443  0DE6  0429               	iorwf	?___lwmod+1,w
  8444  0DE7  1D03               	btfss	3,2
  8445  0DE8  2DEA               	goto	u4391
  8446  0DE9  2DEB               	goto	u4390
  8447  0DEA                     u4391:
  8448  0DEA  2E5C               	goto	l5458
  8449  0DEB                     u4390:
  8450  0DEB                     l5428:
  8451                           
  8452                           ;main.c: 251: new_c = tsttc();
  8453  0DEB  318A  22B9  318D   	fcall	_tsttc
  8454  0DEE  0021               	movlb	1	; select bank1
  8455  0DEF  00AC               	movwf	??_main^(0+128)
  8456  0DF0  082C               	movf	??_main^(0+128),w
  8457  0DF1  0020               	movlb	0	; select bank0
  8458  0DF2  00E8               	movwf	main@new_c
  8459                           
  8460                           ;main.c: 252: new_l = lumin();
  8461  0DF3  3188  2004  318D   	fcall	_lumin
  8462  0DF6  0021               	movlb	1	; select bank1
  8463  0DF7  00AC               	movwf	??_main^(0+128)
  8464  0DF8  082C               	movf	??_main^(0+128),w
  8465  0DF9  0020               	movlb	0	; select bank0
  8466  0DFA  00E9               	movwf	main@new_l
  8467  0DFB                     l5430:
  8468                           
  8469                           ;main.c: 254: if(new_c != c || new_l != l){
  8470  0DFB  0868               	movf	main@new_c,w
  8471  0DFC  066A               	xorwf	main@c,w
  8472  0DFD  1D03               	skipz
  8473  0DFE  2E00               	goto	u4401
  8474  0DFF  2E01               	goto	u4400
  8475  0E00                     u4401:
  8476  0E00  2E07               	goto	l5434
  8477  0E01                     u4400:
  8478  0E01                     l5432:
  8479  0E01  0869               	movf	main@new_l,w
  8480  0E02  066B               	xorwf	main@l,w
  8481  0E03  1903               	skipnz
  8482  0E04  2E06               	goto	u4411
  8483  0E05  2E07               	goto	u4410
  8484  0E06                     u4411:
  8485  0E06  2E13               	goto	l5436
  8486  0E07                     u4410:
  8487  0E07                     l5434:
  8488                           
  8489                           ;main.c: 255: c = new_c;
  8490  0E07  0868               	movf	main@new_c,w
  8491  0E08  0021               	movlb	1	; select bank1
  8492  0E09  00AC               	movwf	??_main^(0+128)
  8493  0E0A  082C               	movf	??_main^(0+128),w
  8494  0E0B  0020               	movlb	0	; select bank0
  8495  0E0C  00EA               	movwf	main@c
  8496                           
  8497                           ;main.c: 256: l = new_l;
  8498  0E0D  0869               	movf	main@new_l,w
  8499  0E0E  0021               	movlb	1	; select bank1
  8500  0E0F  00AC               	movwf	??_main^(0+128)
  8501  0E10  082C               	movf	??_main^(0+128),w
  8502  0E11  0020               	movlb	0	; select bank0
  8503  0E12  00EB               	movwf	main@l
  8504  0E13                     l5436:
  8505                           
  8506                           ;main.c: 258: };main.c: 260: if(ALAF == 1 && ctl == 0){
  8507  0E13  0021               	movlb	1	; select bank1
  8508  0E14  032A               	decf	_ALAF^(0+128),w
  8509  0E15  1D03               	btfss	3,2
  8510  0E16  2E18               	goto	u4421
  8511  0E17  2E19               	goto	u4420
  8512  0E18                     u4421:
  8513  0E18  2E5C               	goto	l5458
  8514  0E19                     u4420:
  8515  0E19                     l5438:
  8516  0E19  0828               	movf	_ctl^(0+128),w
  8517  0E1A  1D03               	btfss	3,2
  8518  0E1B  2E1D               	goto	u4431
  8519  0E1C  2E1E               	goto	u4430
  8520  0E1D                     u4431:
  8521  0E1D  2E5C               	goto	l5458
  8522  0E1E                     u4430:
  8523  0E1E                     l5440:
  8524                           
  8525                           ;main.c: 261: if(c > ALAT){
  8526  0E1E  0020               	movlb	0	; select bank0
  8527  0E1F  086A               	movf	main@c,w
  8528  0E20  0021               	movlb	1	; select bank1
  8529  0E21  023B               	subwf	_ALAT^(0+128),w
  8530  0E22  1803               	skipnc
  8531  0E23  2E25               	goto	u4441
  8532  0E24  2E26               	goto	u4440
  8533  0E25                     u4441:
  8534  0E25  2E2B               	goto	l5444
  8535  0E26                     u4440:
  8536  0E26                     l5442:
  8537                           
  8538                           ;main.c: 263: ctl = 2;
  8539  0E26  3002               	movlw	2
  8540  0E27  00AC               	movwf	??_main^(0+128)
  8541  0E28  082C               	movf	??_main^(0+128),w
  8542  0E29  00A8               	movwf	_ctl^(0+128)
  8543                           
  8544                           ;main.c: 264: }else if(l < ALAL){
  8545  0E2A  2E5C               	goto	l5458
  8546  0E2B                     l5444:
  8547  0E2B  083A               	movf	_ALAL^(0+128),w
  8548  0E2C  0020               	movlb	0	; select bank0
  8549  0E2D  026B               	subwf	main@l,w
  8550  0E2E  1803               	skipnc
  8551  0E2F  2E31               	goto	u4451
  8552  0E30  2E32               	goto	u4450
  8553  0E31                     u4451:
  8554  0E31  2E38               	goto	l5448
  8555  0E32                     u4450:
  8556  0E32                     l5446:
  8557                           
  8558                           ;main.c: 266: ctl = 3;
  8559  0E32  3003               	movlw	3
  8560  0E33  0021               	movlb	1	; select bank1
  8561  0E34  00AC               	movwf	??_main^(0+128)
  8562  0E35  082C               	movf	??_main^(0+128),w
  8563  0E36  00A8               	movwf	_ctl^(0+128)
  8564                           
  8565                           ;main.c: 267: }else if(CLKH == ALAH && CLKM == ALAM && timer_flag%60 == ALAS){
  8566  0E37  2E5C               	goto	l5458
  8567  0E38                     l5448:
  8568  0E38  087B               	movf	_CLKH,w
  8569  0E39  067D               	xorwf	_ALAH,w
  8570  0E3A  1D03               	skipz
  8571  0E3B  2E3D               	goto	u4461
  8572  0E3C  2E3E               	goto	u4460
  8573  0E3D                     u4461:
  8574  0E3D  2E5C               	goto	l5456
  8575  0E3E                     u4460:
  8576  0E3E                     l5450:
  8577  0E3E  086F               	movf	_CLKM,w
  8578  0E3F  067C               	xorwf	_ALAM,w
  8579  0E40  1D03               	skipz
  8580  0E41  2E43               	goto	u4471
  8581  0E42  2E44               	goto	u4470
  8582  0E43                     u4471:
  8583  0E43  2E5C               	goto	l5456
  8584  0E44                     u4470:
  8585  0E44                     l5452:
  8586  0E44  303C               	movlw	60
  8587  0E45  00A8               	movwf	___lwmod@divisor
  8588  0E46  3000               	movlw	0
  8589  0E47  00A9               	movwf	___lwmod@divisor+1
  8590  0E48  087A               	movf	_timer_flag+1,w	;volatile
  8591  0E49  00AB               	movwf	___lwmod@dividend+1
  8592  0E4A  0879               	movf	_timer_flag,w	;volatile
  8593  0E4B  00AA               	movwf	___lwmod@dividend
  8594  0E4C  3195  2585  318D   	fcall	___lwmod
  8595  0E4F  0021               	movlb	1	; select bank1
  8596  0E50  082B               	movf	_ALAS^(0+128),w
  8597  0E51  0020               	movlb	0	; select bank0
  8598  0E52  0628               	xorwf	?___lwmod,w
  8599  0E53  0429               	iorwf	?___lwmod+1,w
  8600  0E54  1D03               	skipz
  8601  0E55  2E57               	goto	u4481
  8602  0E56  2E58               	goto	u4480
  8603  0E57                     u4481:
  8604  0E57  2E5C               	goto	l5456
  8605  0E58                     u4480:
  8606  0E58                     l5454:
  8607                           
  8608                           ;main.c: 268: ctl = 1;
  8609  0E58  0021               	movlb	1	; select bank1
  8610  0E59  01A8               	clrf	_ctl^(0+128)
  8611  0E5A  0AA8               	incf	_ctl^(0+128),f
  8612  0E5B  2E5C               	goto	l5458
  8613  0E5C                     l5456:
  8614  0E5C                     l5458:
  8615                           
  8616                           ;main.c: 273: };main.c: 275: };main.c: 277: };main.c: 279: checkButtonS1();
  8617  0E5C  3194  246F  318D   	fcall	_checkButtonS1
  8618                           
  8619                           ;main.c: 280: checkButtonS2();
  8620  0E5F  3194  248C  318D   	fcall	_checkButtonS2
  8621                           
  8622                           ;main.c: 282: switch(state){
  8623  0E62  2F62               	goto	l5566
  8624  0E63                     l5460:
  8625                           
  8626                           ;main.c: 285: if(btn1State == 1){
  8627  0E63  036E               	decf	_btn1State,w
  8628  0E64  1D03               	btfss	3,2
  8629  0E65  2E67               	goto	u4491
  8630  0E66  2E68               	goto	u4490
  8631  0E67                     u4491:
  8632  0E67  2F8C               	goto	l5568
  8633  0E68                     u4490:
  8634  0E68                     l5462:
  8635                           
  8636                           ;main.c: 288: if(ctl == 0){
  8637  0E68  0021               	movlb	1	; select bank1
  8638  0E69  0828               	movf	_ctl^(0+128),w
  8639  0E6A  1D03               	btfss	3,2
  8640  0E6B  2E6D               	goto	u4501
  8641  0E6C  2E6E               	goto	u4500
  8642  0E6D                     u4501:
  8643  0E6D  2E72               	goto	l5466
  8644  0E6E                     u4500:
  8645  0E6E                     l5464:
  8646                           
  8647                           ;main.c: 289: state = 1;
  8648  0E6E  0020               	movlb	0	; select bank0
  8649  0E6F  01EC               	clrf	main@state
  8650  0E70  0AEC               	incf	main@state,f
  8651                           
  8652                           ;main.c: 290: }else{
  8653  0E71  2F8C               	goto	l5568
  8654  0E72                     l5466:
  8655                           
  8656                           ;main.c: 291: ctl = 0;
  8657  0E72  01A8               	clrf	_ctl^(0+128)
  8658  0E73  2F8C               	goto	l5568
  8659  0E74                     l5468:
  8660                           
  8661                           ;main.c: 298: if(btn2State == 1){
  8662  0E74  036D               	decf	_btn2State,w
  8663  0E75  1D03               	btfss	3,2
  8664  0E76  2E78               	goto	u4511
  8665  0E77  2E79               	goto	u4510
  8666  0E78                     u4511:
  8667  0E78  2E7D               	goto	l5472
  8668  0E79                     u4510:
  8669  0E79                     l5470:
  8670                           
  8671                           ;main.c: 300: conf_clock_hh();
  8672  0E79  3193  2366  318D   	fcall	_conf_clock_hh
  8673                           
  8674                           ;main.c: 301: }else if(btn1State == 1){
  8675  0E7C  2F8C               	goto	l5568
  8676  0E7D                     l5472:
  8677  0E7D  036E               	decf	_btn1State,w
  8678  0E7E  1D03               	btfss	3,2
  8679  0E7F  2E81               	goto	u4521
  8680  0E80  2E82               	goto	u4520
  8681  0E81                     u4521:
  8682  0E81  2F8C               	goto	l5568
  8683  0E82                     u4520:
  8684  0E82                     l5474:
  8685                           
  8686                           ;main.c: 303: state = 2;
  8687  0E82  3002               	movlw	2
  8688  0E83  0021               	movlb	1	; select bank1
  8689  0E84  00AC               	movwf	??_main^(0+128)
  8690  0E85  082C               	movf	??_main^(0+128),w
  8691  0E86  0020               	movlb	0	; select bank0
  8692  0E87  00EC               	movwf	main@state
  8693  0E88  2F8C               	goto	l5568
  8694  0E89                     l5476:
  8695                           
  8696                           ;main.c: 307: if(btn2State == 1){
  8697  0E89  036D               	decf	_btn2State,w
  8698  0E8A  1D03               	btfss	3,2
  8699  0E8B  2E8D               	goto	u4531
  8700  0E8C  2E8E               	goto	u4530
  8701  0E8D                     u4531:
  8702  0E8D  2E92               	goto	l5480
  8703  0E8E                     u4530:
  8704  0E8E                     l5478:
  8705                           
  8706                           ;main.c: 309: conf_clock_mm();
  8707  0E8E  3193  2374  318D   	fcall	_conf_clock_mm
  8708                           
  8709                           ;main.c: 310: }else if(btn1State == 1){
  8710  0E91  2F8C               	goto	l5568
  8711  0E92                     l5480:
  8712  0E92  036E               	decf	_btn1State,w
  8713  0E93  1D03               	btfss	3,2
  8714  0E94  2E96               	goto	u4541
  8715  0E95  2E97               	goto	u4540
  8716  0E96                     u4541:
  8717  0E96  2F8C               	goto	l5568
  8718  0E97                     u4540:
  8719  0E97                     l5482:
  8720                           
  8721                           ;main.c: 312: state = 3;
  8722  0E97  3003               	movlw	3
  8723  0E98  0021               	movlb	1	; select bank1
  8724  0E99  00AC               	movwf	??_main^(0+128)
  8725  0E9A  082C               	movf	??_main^(0+128),w
  8726  0E9B  0020               	movlb	0	; select bank0
  8727  0E9C  00EC               	movwf	main@state
  8728  0E9D  2F8C               	goto	l5568
  8729  0E9E                     l5484:
  8730                           
  8731                           ;main.c: 316: if(btn2State == 1){
  8732  0E9E  036D               	decf	_btn2State,w
  8733  0E9F  1D03               	btfss	3,2
  8734  0EA0  2EA2               	goto	u4551
  8735  0EA1  2EA3               	goto	u4550
  8736  0EA2                     u4551:
  8737  0EA2  2EA7               	goto	l5488
  8738  0EA3                     u4550:
  8739  0EA3                     l5486:
  8740                           
  8741                           ;main.c: 318: conf_clock_ss();
  8742  0EA3  3192  22AA  318D   	fcall	_conf_clock_ss
  8743                           
  8744                           ;main.c: 319: }else if(btn1State == 1){
  8745  0EA6  2F8C               	goto	l5568
  8746  0EA7                     l5488:
  8747  0EA7  036E               	decf	_btn1State,w
  8748  0EA8  1D03               	btfss	3,2
  8749  0EA9  2EAB               	goto	u4561
  8750  0EAA  2EAC               	goto	u4560
  8751  0EAB                     u4561:
  8752  0EAB  2F8C               	goto	l5568
  8753  0EAC                     u4560:
  8754  0EAC                     l5490:
  8755                           
  8756                           ;main.c: 321: state = 4;
  8757  0EAC  3004               	movlw	4
  8758  0EAD  0021               	movlb	1	; select bank1
  8759  0EAE  00AC               	movwf	??_main^(0+128)
  8760  0EAF  082C               	movf	??_main^(0+128),w
  8761  0EB0  0020               	movlb	0	; select bank0
  8762  0EB1  00EC               	movwf	main@state
  8763  0EB2  2F8C               	goto	l5568
  8764  0EB3                     l5492:
  8765                           
  8766                           ;main.c: 325: if(btn2State == 1){
  8767  0EB3  036D               	decf	_btn2State,w
  8768  0EB4  1D03               	btfss	3,2
  8769  0EB5  2EB7               	goto	u4571
  8770  0EB6  2EB8               	goto	u4570
  8771  0EB7                     u4571:
  8772  0EB7  2EBF               	goto	l5496
  8773  0EB8                     u4570:
  8774  0EB8                     l5494:
  8775                           
  8776                           ;main.c: 327: state = 5;
  8777  0EB8  3005               	movlw	5
  8778  0EB9  0021               	movlb	1	; select bank1
  8779  0EBA  00AC               	movwf	??_main^(0+128)
  8780  0EBB  082C               	movf	??_main^(0+128),w
  8781  0EBC  0020               	movlb	0	; select bank0
  8782  0EBD  00EC               	movwf	main@state
  8783                           
  8784                           ;main.c: 328: }else if(btn1State == 1){
  8785  0EBE  2F8C               	goto	l5568
  8786  0EBF                     l5496:
  8787  0EBF  036E               	decf	_btn1State,w
  8788  0EC0  1D03               	btfss	3,2
  8789  0EC1  2EC3               	goto	u4581
  8790  0EC2  2EC4               	goto	u4580
  8791  0EC3                     u4581:
  8792  0EC3  2F8C               	goto	l5568
  8793  0EC4                     u4580:
  8794  0EC4                     l5498:
  8795                           
  8796                           ;main.c: 330: state = 8;
  8797  0EC4  3008               	movlw	8
  8798  0EC5  0021               	movlb	1	; select bank1
  8799  0EC6  00AC               	movwf	??_main^(0+128)
  8800  0EC7  082C               	movf	??_main^(0+128),w
  8801  0EC8  0020               	movlb	0	; select bank0
  8802  0EC9  00EC               	movwf	main@state
  8803  0ECA  2F8C               	goto	l5568
  8804  0ECB                     l5500:
  8805                           
  8806                           ;main.c: 334: if(btn2State == 1){
  8807  0ECB  036D               	decf	_btn2State,w
  8808  0ECC  1D03               	btfss	3,2
  8809  0ECD  2ECF               	goto	u4591
  8810  0ECE  2ED0               	goto	u4590
  8811  0ECF                     u4591:
  8812  0ECF  2ED4               	goto	l5504
  8813  0ED0                     u4590:
  8814  0ED0                     l5502:
  8815                           
  8816                           ;main.c: 336: conf_alarm_hh();
  8817  0ED0  3193  234A  318D   	fcall	_conf_alarm_hh
  8818                           
  8819                           ;main.c: 337: }else if(btn1State == 1){
  8820  0ED3  2F8C               	goto	l5568
  8821  0ED4                     l5504:
  8822  0ED4  036E               	decf	_btn1State,w
  8823  0ED5  1D03               	btfss	3,2
  8824  0ED6  2ED8               	goto	u4601
  8825  0ED7  2ED9               	goto	u4600
  8826  0ED8                     u4601:
  8827  0ED8  2F8C               	goto	l5568
  8828  0ED9                     u4600:
  8829  0ED9                     l5506:
  8830                           
  8831                           ;main.c: 339: state = 6;
  8832  0ED9  3006               	movlw	6
  8833  0EDA  0021               	movlb	1	; select bank1
  8834  0EDB  00AC               	movwf	??_main^(0+128)
  8835  0EDC  082C               	movf	??_main^(0+128),w
  8836  0EDD  0020               	movlb	0	; select bank0
  8837  0EDE  00EC               	movwf	main@state
  8838  0EDF  2F8C               	goto	l5568
  8839  0EE0                     l5508:
  8840                           
  8841                           ;main.c: 343: if(btn2State == 1){
  8842  0EE0  036D               	decf	_btn2State,w
  8843  0EE1  1D03               	btfss	3,2
  8844  0EE2  2EE4               	goto	u4611
  8845  0EE3  2EE5               	goto	u4610
  8846  0EE4                     u4611:
  8847  0EE4  2EE9               	goto	l5512
  8848  0EE5                     u4610:
  8849  0EE5                     l5510:
  8850                           
  8851                           ;main.c: 345: conf_alarm_mm();
  8852  0EE5  3193  2358  318D   	fcall	_conf_alarm_mm
  8853                           
  8854                           ;main.c: 346: }else if(btn1State == 1){
  8855  0EE8  2F8C               	goto	l5568
  8856  0EE9                     l5512:
  8857  0EE9  036E               	decf	_btn1State,w
  8858  0EEA  1D03               	btfss	3,2
  8859  0EEB  2EED               	goto	u4621
  8860  0EEC  2EEE               	goto	u4620
  8861  0EED                     u4621:
  8862  0EED  2F8C               	goto	l5568
  8863  0EEE                     u4620:
  8864  0EEE                     l5514:
  8865                           
  8866                           ;main.c: 348: state = 7;
  8867  0EEE  3007               	movlw	7
  8868  0EEF  0021               	movlb	1	; select bank1
  8869  0EF0  00AC               	movwf	??_main^(0+128)
  8870  0EF1  082C               	movf	??_main^(0+128),w
  8871  0EF2  0020               	movlb	0	; select bank0
  8872  0EF3  00EC               	movwf	main@state
  8873  0EF4  2F8C               	goto	l5568
  8874  0EF5                     l5516:
  8875                           
  8876                           ;main.c: 352: if(btn2State == 1){
  8877  0EF5  036D               	decf	_btn2State,w
  8878  0EF6  1D03               	btfss	3,2
  8879  0EF7  2EF9               	goto	u4631
  8880  0EF8  2EFA               	goto	u4630
  8881  0EF9                     u4631:
  8882  0EF9  2EFE               	goto	l5520
  8883  0EFA                     u4630:
  8884  0EFA                     l5518:
  8885                           
  8886                           ;main.c: 354: conf_alarm_ss();
  8887  0EFA  3193  2391  318D   	fcall	_conf_alarm_ss
  8888                           
  8889                           ;main.c: 355: }else if(btn1State == 1){
  8890  0EFD  2F8C               	goto	l5568
  8891  0EFE                     l5520:
  8892  0EFE  036E               	decf	_btn1State,w
  8893  0EFF  1D03               	btfss	3,2
  8894  0F00  2F02               	goto	u4641
  8895  0F01  2F03               	goto	u4640
  8896  0F02                     u4641:
  8897  0F02  2F8C               	goto	l5568
  8898  0F03                     u4640:
  8899  0F03  2EC4               	goto	l5498
  8900  0F04                     l5524:
  8901                           
  8902                           ;main.c: 361: if(btn2State == 1){
  8903  0F04  036D               	decf	_btn2State,w
  8904  0F05  1D03               	btfss	3,2
  8905  0F06  2F08               	goto	u4651
  8906  0F07  2F09               	goto	u4650
  8907  0F08                     u4651:
  8908  0F08  2F10               	goto	l5528
  8909  0F09                     u4650:
  8910  0F09                     l5526:
  8911                           
  8912                           ;main.c: 363: state = 9;
  8913  0F09  3009               	movlw	9
  8914  0F0A  0021               	movlb	1	; select bank1
  8915  0F0B  00AC               	movwf	??_main^(0+128)
  8916  0F0C  082C               	movf	??_main^(0+128),w
  8917  0F0D  0020               	movlb	0	; select bank0
  8918  0F0E  00EC               	movwf	main@state
  8919                           
  8920                           ;main.c: 364: }else if(btn1State == 1){
  8921  0F0F  2F8C               	goto	l5568
  8922  0F10                     l5528:
  8923  0F10  036E               	decf	_btn1State,w
  8924  0F11  1D03               	btfss	3,2
  8925  0F12  2F14               	goto	u4661
  8926  0F13  2F15               	goto	u4660
  8927  0F14                     u4661:
  8928  0F14  2F8C               	goto	l5568
  8929  0F15                     u4660:
  8930  0F15                     l5530:
  8931                           
  8932                           ;main.c: 366: state = 10;
  8933  0F15  300A               	movlw	10
  8934  0F16  0021               	movlb	1	; select bank1
  8935  0F17  00AC               	movwf	??_main^(0+128)
  8936  0F18  082C               	movf	??_main^(0+128),w
  8937  0F19  0020               	movlb	0	; select bank0
  8938  0F1A  00EC               	movwf	main@state
  8939  0F1B  2F8C               	goto	l5568
  8940  0F1C                     l5532:
  8941                           
  8942                           ;main.c: 370: if(btn2State == 1){
  8943  0F1C  036D               	decf	_btn2State,w
  8944  0F1D  1D03               	btfss	3,2
  8945  0F1E  2F20               	goto	u4671
  8946  0F1F  2F21               	goto	u4670
  8947  0F20                     u4671:
  8948  0F20  2F25               	goto	l5536
  8949  0F21                     u4670:
  8950  0F21                     l5534:
  8951                           
  8952                           ;main.c: 372: conf_temp();
  8953  0F21  3193  23B1  318D   	fcall	_conf_temp
  8954                           
  8955                           ;main.c: 373: }else if(btn1State == 1){
  8956  0F24  2F8C               	goto	l5568
  8957  0F25                     l5536:
  8958  0F25  036E               	decf	_btn1State,w
  8959  0F26  1D03               	btfss	3,2
  8960  0F27  2F29               	goto	u4681
  8961  0F28  2F2A               	goto	u4680
  8962  0F29                     u4681:
  8963  0F29  2F8C               	goto	l5568
  8964  0F2A                     u4680:
  8965  0F2A  2F15               	goto	l5530
  8966  0F2B                     l5540:
  8967                           
  8968                           ;main.c: 379: if(btn2State == 1){
  8969  0F2B  036D               	decf	_btn2State,w
  8970  0F2C  1D03               	btfss	3,2
  8971  0F2D  2F2F               	goto	u4691
  8972  0F2E  2F30               	goto	u4690
  8973  0F2F                     u4691:
  8974  0F2F  2F37               	goto	l5544
  8975  0F30                     u4690:
  8976  0F30                     l5542:
  8977                           
  8978                           ;main.c: 381: state = 11;
  8979  0F30  300B               	movlw	11
  8980  0F31  0021               	movlb	1	; select bank1
  8981  0F32  00AC               	movwf	??_main^(0+128)
  8982  0F33  082C               	movf	??_main^(0+128),w
  8983  0F34  0020               	movlb	0	; select bank0
  8984  0F35  00EC               	movwf	main@state
  8985                           
  8986                           ;main.c: 382: }else if(btn1State == 1){
  8987  0F36  2F8C               	goto	l5568
  8988  0F37                     l5544:
  8989  0F37  036E               	decf	_btn1State,w
  8990  0F38  1D03               	btfss	3,2
  8991  0F39  2F3B               	goto	u4701
  8992  0F3A  2F3C               	goto	u4700
  8993  0F3B                     u4701:
  8994  0F3B  2F8C               	goto	l5568
  8995  0F3C                     u4700:
  8996  0F3C                     l5546:
  8997                           
  8998                           ;main.c: 384: state = 12;
  8999  0F3C  300C               	movlw	12
  9000  0F3D  0021               	movlb	1	; select bank1
  9001  0F3E  00AC               	movwf	??_main^(0+128)
  9002  0F3F  082C               	movf	??_main^(0+128),w
  9003  0F40  0020               	movlb	0	; select bank0
  9004  0F41  00EC               	movwf	main@state
  9005  0F42  2F8C               	goto	l5568
  9006  0F43                     l5548:
  9007                           
  9008                           ;main.c: 388: if(btn2State == 1){
  9009  0F43  036D               	decf	_btn2State,w
  9010  0F44  1D03               	btfss	3,2
  9011  0F45  2F47               	goto	u4711
  9012  0F46  2F48               	goto	u4710
  9013  0F47                     u4711:
  9014  0F47  2F4C               	goto	l5552
  9015  0F48                     u4710:
  9016  0F48                     l5550:
  9017                           
  9018                           ;main.c: 390: conf_lumin();
  9019  0F48  3193  23A1  318D   	fcall	_conf_lumin
  9020                           
  9021                           ;main.c: 391: }else if(btn1State == 1){
  9022  0F4B  2F8C               	goto	l5568
  9023  0F4C                     l5552:
  9024  0F4C  036E               	decf	_btn1State,w
  9025  0F4D  1D03               	btfss	3,2
  9026  0F4E  2F50               	goto	u4721
  9027  0F4F  2F51               	goto	u4720
  9028  0F50                     u4721:
  9029  0F50  2F8C               	goto	l5568
  9030  0F51                     u4720:
  9031  0F51  2F3C               	goto	l5546
  9032  0F52                     l5556:
  9033                           
  9034                           ;main.c: 397: if(btn2State == 1){
  9035  0F52  036D               	decf	_btn2State,w
  9036  0F53  1D03               	btfss	3,2
  9037  0F54  2F56               	goto	u4731
  9038  0F55  2F57               	goto	u4730
  9039  0F56                     u4731:
  9040  0F56  2F5B               	goto	l5560
  9041  0F57                     u4730:
  9042  0F57                     l5558:
  9043                           
  9044                           ;main.c: 399: conf_alarm_flag();
  9045  0F57  3193  2300  318D   	fcall	_conf_alarm_flag
  9046                           
  9047                           ;main.c: 400: }else if(btn1State == 1){
  9048  0F5A  2F8C               	goto	l5568
  9049  0F5B                     l5560:
  9050  0F5B  036E               	decf	_btn1State,w
  9051  0F5C  1D03               	btfss	3,2
  9052  0F5D  2F5F               	goto	u4741
  9053  0F5E  2F60               	goto	u4740
  9054  0F5F                     u4741:
  9055  0F5F  2F8C               	goto	l5568
  9056  0F60                     u4740:
  9057  0F60                     l5562:
  9058                           
  9059                           ;main.c: 402: state = 0;
  9060  0F60  01EC               	clrf	main@state
  9061  0F61  2F8C               	goto	l5568
  9062  0F62                     l5566:
  9063  0F62  0020               	movlb	0	; select bank0
  9064  0F63  086C               	movf	main@state,w
  9065                           
  9066                           ; Switch size 1, requested type "simple"
  9067                           ; Number of cases is 13, Range of values is 0 to 12
  9068                           ; switch strategies available:
  9069                           ; Name         Instructions Cycles
  9070                           ; direct_byte           32     6 (fixed)
  9071                           ; simple_byte           40    21 (average)
  9072                           ; jumptable            260     6 (fixed)
  9073                           ;	Chosen strategy is simple_byte
  9074  0F64  3A00               	xorlw	0	; case 0
  9075  0F65  1903               	skipnz
  9076  0F66  2E63               	goto	l5460
  9077  0F67  3A01               	xorlw	1	; case 1
  9078  0F68  1903               	skipnz
  9079  0F69  2E74               	goto	l5468
  9080  0F6A  3A03               	xorlw	3	; case 2
  9081  0F6B  1903               	skipnz
  9082  0F6C  2E89               	goto	l5476
  9083  0F6D  3A01               	xorlw	1	; case 3
  9084  0F6E  1903               	skipnz
  9085  0F6F  2E9E               	goto	l5484
  9086  0F70  3A07               	xorlw	7	; case 4
  9087  0F71  1903               	skipnz
  9088  0F72  2EB3               	goto	l5492
  9089  0F73  3A01               	xorlw	1	; case 5
  9090  0F74  1903               	skipnz
  9091  0F75  2ECB               	goto	l5500
  9092  0F76  3A03               	xorlw	3	; case 6
  9093  0F77  1903               	skipnz
  9094  0F78  2EE0               	goto	l5508
  9095  0F79  3A01               	xorlw	1	; case 7
  9096  0F7A  1903               	skipnz
  9097  0F7B  2EF5               	goto	l5516
  9098  0F7C  3A0F               	xorlw	15	; case 8
  9099  0F7D  1903               	skipnz
  9100  0F7E  2F04               	goto	l5524
  9101  0F7F  3A01               	xorlw	1	; case 9
  9102  0F80  1903               	skipnz
  9103  0F81  2F1C               	goto	l5532
  9104  0F82  3A03               	xorlw	3	; case 10
  9105  0F83  1903               	skipnz
  9106  0F84  2F2B               	goto	l5540
  9107  0F85  3A01               	xorlw	1	; case 11
  9108  0F86  1903               	skipnz
  9109  0F87  2F43               	goto	l5548
  9110  0F88  3A07               	xorlw	7	; case 12
  9111  0F89  1903               	skipnz
  9112  0F8A  2F52               	goto	l5556
  9113  0F8B  2F8C               	goto	l5568
  9114  0F8C                     l5568:
  9115                           
  9116                           ;main.c: 407: if (state != 0){
  9117  0F8C  0020               	movlb	0	; select bank0
  9118  0F8D  086C               	movf	main@state,w
  9119  0F8E  1903               	btfsc	3,2
  9120  0F8F  2F91               	goto	u4751
  9121  0F90  2F92               	goto	u4750
  9122  0F91                     u4751:
  9123  0F91  2F95               	goto	l642
  9124  0F92                     u4750:
  9125  0F92                     l5570:
  9126                           
  9127                           ;main.c: 408: save_vars();
  9128  0F92  3189  21D4  318D   	fcall	_save_vars
  9129  0F95                     l642:
  9130                           
  9131                           ;main.c: 409: };main.c: 411: lcd(c, l, ALAF, ctl, CLKH, CLKM, (timer_flag%60), state, AL
      +                          AT, ALAL, ALAH, ALAM, ALAS);
  9132  0F95  303C               	movlw	60
  9133  0F96  0020               	movlb	0	; select bank0
  9134  0F97  00A8               	movwf	___lwmod@divisor
  9135  0F98  3000               	movlw	0
  9136  0F99  00A9               	movwf	___lwmod@divisor+1
  9137  0F9A  087A               	movf	_timer_flag+1,w	;volatile
  9138  0F9B  00AB               	movwf	___lwmod@dividend+1
  9139  0F9C  0879               	movf	_timer_flag,w	;volatile
  9140  0F9D  00AA               	movwf	___lwmod@dividend
  9141  0F9E  3195  2585  318D   	fcall	___lwmod
  9142  0FA1  0020               	movlb	0	; select bank0
  9143  0FA2  0828               	movf	?___lwmod,w
  9144  0FA3  0021               	movlb	1	; select bank1
  9145  0FA4  00AC               	movwf	??_main^(0+128)
  9146  0FA5  082C               	movf	??_main^(0+128),w
  9147  0FA6  0020               	movlb	0	; select bank0
  9148  0FA7  00E7               	movwf	_main$3249
  9149  0FA8                     l5572:
  9150                           
  9151                           ;main.c: 409: };main.c: 411: lcd(c, l, ALAF, ctl, CLKH, CLKM, (timer_flag%60), state, AL
      +                          AT, ALAL, ALAH, ALAM, ALAS);
  9152  0FA8  086B               	movf	main@l,w
  9153  0FA9  0021               	movlb	1	; select bank1
  9154  0FAA  00AC               	movwf	??_main^(0+128)
  9155  0FAB  082C               	movf	??_main^(0+128),w
  9156  0FAC  0020               	movlb	0	; select bank0
  9157  0FAD  00C3               	movwf	lcd@luminosity
  9158  0FAE  0021               	movlb	1	; select bank1
  9159  0FAF  082A               	movf	_ALAF^(0+128),w
  9160  0FB0  00AD               	movwf	(??_main+1)^(0+128)
  9161  0FB1  082D               	movf	(??_main+1)^(0+128),w
  9162  0FB2  0020               	movlb	0	; select bank0
  9163  0FB3  00C4               	movwf	lcd@alarm
  9164  0FB4  0021               	movlb	1	; select bank1
  9165  0FB5  0828               	movf	_ctl^(0+128),w
  9166  0FB6  00AE               	movwf	(??_main+2)^(0+128)
  9167  0FB7  082E               	movf	(??_main+2)^(0+128),w
  9168  0FB8  0020               	movlb	0	; select bank0
  9169  0FB9  00C5               	movwf	lcd@ctl
  9170  0FBA  087B               	movf	_CLKH,w
  9171  0FBB  0021               	movlb	1	; select bank1
  9172  0FBC  00AF               	movwf	(??_main+3)^(0+128)
  9173  0FBD  082F               	movf	(??_main+3)^(0+128),w
  9174  0FBE  0020               	movlb	0	; select bank0
  9175  0FBF  00C6               	movwf	lcd@h
  9176  0FC0  086F               	movf	_CLKM,w
  9177  0FC1  0021               	movlb	1	; select bank1
  9178  0FC2  00B0               	movwf	(??_main+4)^(0+128)
  9179  0FC3  0830               	movf	(??_main+4)^(0+128),w
  9180  0FC4  0020               	movlb	0	; select bank0
  9181  0FC5  00C7               	movwf	lcd@m
  9182  0FC6  0867               	movf	_main$3249,w
  9183  0FC7  0021               	movlb	1	; select bank1
  9184  0FC8  00B1               	movwf	(??_main+5)^(0+128)
  9185  0FC9  0831               	movf	(??_main+5)^(0+128),w
  9186  0FCA  0020               	movlb	0	; select bank0
  9187  0FCB  00C8               	movwf	lcd@s
  9188  0FCC  086C               	movf	main@state,w
  9189  0FCD  0021               	movlb	1	; select bank1
  9190  0FCE  00B2               	movwf	(??_main+6)^(0+128)
  9191  0FCF  0832               	movf	(??_main+6)^(0+128),w
  9192  0FD0  0020               	movlb	0	; select bank0
  9193  0FD1  00C9               	movwf	lcd@state
  9194  0FD2  0021               	movlb	1	; select bank1
  9195  0FD3  083B               	movf	_ALAT^(0+128),w
  9196  0FD4  00B3               	movwf	(??_main+7)^(0+128)
  9197  0FD5  0833               	movf	(??_main+7)^(0+128),w
  9198  0FD6  0020               	movlb	0	; select bank0
  9199  0FD7  00CA               	movwf	lcd@temperature_alarm
  9200  0FD8  0021               	movlb	1	; select bank1
  9201  0FD9  083A               	movf	_ALAL^(0+128),w
  9202  0FDA  00B4               	movwf	(??_main+8)^(0+128)
  9203  0FDB  0834               	movf	(??_main+8)^(0+128),w
  9204  0FDC  0020               	movlb	0	; select bank0
  9205  0FDD  00CB               	movwf	lcd@luminosity_alarm
  9206  0FDE  087D               	movf	_ALAH,w
  9207  0FDF  0021               	movlb	1	; select bank1
  9208  0FE0  00B5               	movwf	(??_main+9)^(0+128)
  9209  0FE1  0835               	movf	(??_main+9)^(0+128),w
  9210  0FE2  0020               	movlb	0	; select bank0
  9211  0FE3  00CC               	movwf	lcd@alah
  9212  0FE4  087C               	movf	_ALAM,w
  9213  0FE5  0021               	movlb	1	; select bank1
  9214  0FE6  00B6               	movwf	(??_main+10)^(0+128)
  9215  0FE7  0836               	movf	(??_main+10)^(0+128),w
  9216  0FE8  0020               	movlb	0	; select bank0
  9217  0FE9  00CD               	movwf	lcd@alam
  9218  0FEA  0021               	movlb	1	; select bank1
  9219  0FEB  082B               	movf	_ALAS^(0+128),w
  9220  0FEC  00B7               	movwf	(??_main+11)^(0+128)
  9221  0FED  0837               	movf	(??_main+11)^(0+128),w
  9222  0FEE  0020               	movlb	0	; select bank0
  9223  0FEF  00CE               	movwf	lcd@alas
  9224  0FF0  086A               	movf	main@c,w
  9225  0FF1  3180  2070  318D   	fcall	_lcd
  9226  0FF4                     l5574:
  9227                           
  9228                           ;main.c: 412: _delay((unsigned long)((100)*(1000000/4000.0)));
  9229  0FF4  3021               	movlw	33
  9230  0FF5  0021               	movlb	1	; select bank1
  9231  0FF6  00AC               	movwf	??_main^(0+128)
  9232  0FF7  3076               	movlw	118
  9233  0FF8                     u4777:
  9234  0FF8  0B89               	decfsz	9,f
  9235  0FF9  2FF8               	goto	u4777
  9236  0FFA  0BAC               	decfsz	??_main^(0+128),f
  9237  0FFB  2FF8               	goto	u4777
  9238  0FFC  0000               	nop
  9239  0FFD  2DCD               	goto	l5424
  9240  0FFE  3180  2837         	ljmp	start
  9241  1000                     __end_of_main:
  9242                           
  9243                           	psect	text1
  9244  0AB9                     __ptext1:	
  9245 ;; *************** function _tsttc *****************
  9246 ;; Defined at:
  9247 ;;		line 546 in file "main.c"
  9248 ;; Parameters:    Size  Location     Type
  9249 ;;		None
  9250 ;; Auto vars:     Size  Location     Type
  9251 ;;  value           1    3[BANK0 ] unsigned char 
  9252 ;; Return value:  Size  Location     Type
  9253 ;;                  1    wreg      unsigned char 
  9254 ;; Registers used:
  9255 ;;		wreg, status,2, status,0, pclath, cstack
  9256 ;; Tracked objects:
  9257 ;;		On entry : 0/0
  9258 ;;		On exit  : 0/0
  9259 ;;		Unchanged: 0/0
  9260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9262 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9263 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9264 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9265 ;;Total ram usage:        2 bytes
  9266 ;; Hardware stack levels used:    1
  9267 ;; Hardware stack levels required when called:    7
  9268 ;; This function calls:
  9269 ;;		_ReadI2C
  9270 ;;		_WriteI2C
  9271 ;; This function is called by:
  9272 ;;		_main
  9273 ;; This function uses a non-reentrant model
  9274 ;;
  9275                           
  9276                           
  9277                           ;psect for function _tsttc
  9278  0AB9                     _tsttc:
  9279  0AB9                     l686:	
  9280                           ;incstack = 0
  9281                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
  9282                           ;main.c: 547: unsigned char value;;main.c: 548: do{
  9283                           
  9284  0AB9                     l4744:	
  9285                           ;main.c: 549: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  9286                           
  9287  0AB9  0023               	movlb	3	; select bank3
  9288  0ABA  0C0F               	rrf	15,w	;volatile
  9289  0ABB  0C89               	rrf	9,f
  9290  0ABC  3901               	andlw	1
  9291  0ABD  0020               	movlb	0	; select bank0
  9292  0ABE  00A2               	movwf	??_tsttc
  9293  0ABF  0023               	movlb	3	; select bank3
  9294  0AC0  0811               	movf	17,w	;volatile
  9295  0AC1  391F               	andlw	31
  9296  0AC2  0020               	movlb	0	; select bank0
  9297  0AC3  0422               	iorwf	??_tsttc,w
  9298  0AC4  1D03               	btfss	3,2
  9299  0AC5  2AC7               	goto	u3441
  9300  0AC6  2AC8               	goto	u3440
  9301  0AC7                     u3441:
  9302  0AC7  2AB9               	goto	l4744
  9303  0AC8                     u3440:
  9304  0AC8                     l689:
  9305                           
  9306                           ;main.c: 550: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
  9307  0AC8  0023               	movlb	3	; select bank3
  9308  0AC9  1411               	bsf	17,0	;volatile
  9309  0ACA                     l690:
  9310  0ACA  1811               	btfsc	17,0	;volatile
  9311  0ACB  2ACD               	goto	u3451
  9312  0ACC  2ACE               	goto	u3450
  9313  0ACD                     u3451:
  9314  0ACD  2ACA               	goto	l690
  9315  0ACE                     u3450:
  9316  0ACE                     l4746:
  9317  0ACE  0023               	movlb	3	; select bank3
  9318  0ACF  0C0F               	rrf	15,w	;volatile
  9319  0AD0  0C89               	rrf	9,f
  9320  0AD1  3901               	andlw	1
  9321  0AD2  0020               	movlb	0	; select bank0
  9322  0AD3  00A2               	movwf	??_tsttc
  9323  0AD4  0023               	movlb	3	; select bank3
  9324  0AD5  0811               	movf	17,w	;volatile
  9325  0AD6  391F               	andlw	31
  9326  0AD7  0020               	movlb	0	; select bank0
  9327  0AD8  0422               	iorwf	??_tsttc,w
  9328  0AD9  1D03               	btfss	3,2
  9329  0ADA  2ADC               	goto	u3461
  9330  0ADB  2ADD               	goto	u3460
  9331  0ADC                     u3461:
  9332  0ADC  2ACE               	goto	l4746
  9333  0ADD                     u3460:
  9334  0ADD                     l4748:
  9335                           
  9336                           ;main.c: 552: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  9337  0ADD  309A               	movlw	154
  9338  0ADE  3197  2730  318A   	fcall	_WriteI2C
  9339  0AE1                     l4750:
  9340  0AE1  0023               	movlb	3	; select bank3
  9341  0AE2  0C0F               	rrf	15,w	;volatile
  9342  0AE3  0C89               	rrf	9,f
  9343  0AE4  3901               	andlw	1
  9344  0AE5  0020               	movlb	0	; select bank0
  9345  0AE6  00A2               	movwf	??_tsttc
  9346  0AE7  0023               	movlb	3	; select bank3
  9347  0AE8  0811               	movf	17,w	;volatile
  9348  0AE9  391F               	andlw	31
  9349  0AEA  0020               	movlb	0	; select bank0
  9350  0AEB  0422               	iorwf	??_tsttc,w
  9351  0AEC  1D03               	btfss	3,2
  9352  0AED  2AEF               	goto	u3471
  9353  0AEE  2AF0               	goto	u3470
  9354  0AEF                     u3471:
  9355  0AEF  2AE1               	goto	l4750
  9356  0AF0                     u3470:
  9357  0AF0                     l4752:
  9358                           
  9359                           ;main.c: 553: WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  9360  0AF0  3001               	movlw	1
  9361  0AF1  3197  2730  318A   	fcall	_WriteI2C
  9362  0AF4                     l4754:
  9363  0AF4  0023               	movlb	3	; select bank3
  9364  0AF5  0C0F               	rrf	15,w	;volatile
  9365  0AF6  0C89               	rrf	9,f
  9366  0AF7  3901               	andlw	1
  9367  0AF8  0020               	movlb	0	; select bank0
  9368  0AF9  00A2               	movwf	??_tsttc
  9369  0AFA  0023               	movlb	3	; select bank3
  9370  0AFB  0811               	movf	17,w	;volatile
  9371  0AFC  391F               	andlw	31
  9372  0AFD  0020               	movlb	0	; select bank0
  9373  0AFE  0422               	iorwf	??_tsttc,w
  9374  0AFF  1D03               	btfss	3,2
  9375  0B00  2B02               	goto	u3481
  9376  0B01  2B03               	goto	u3480
  9377  0B02                     u3481:
  9378  0B02  2AF4               	goto	l4754
  9379  0B03                     u3480:
  9380  0B03                     l701:
  9381                           
  9382                           ;main.c: 554: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
  9383  0B03  0023               	movlb	3	; select bank3
  9384  0B04  1491               	bsf	17,1	;volatile
  9385  0B05                     l702:
  9386  0B05  1891               	btfsc	17,1	;volatile
  9387  0B06  2B08               	goto	u3491
  9388  0B07  2B09               	goto	u3490
  9389  0B08                     u3491:
  9390  0B08  2B05               	goto	l702
  9391  0B09                     u3490:
  9392  0B09                     l4756:
  9393  0B09  0023               	movlb	3	; select bank3
  9394  0B0A  0C0F               	rrf	15,w	;volatile
  9395  0B0B  0C89               	rrf	9,f
  9396  0B0C  3901               	andlw	1
  9397  0B0D  0020               	movlb	0	; select bank0
  9398  0B0E  00A2               	movwf	??_tsttc
  9399  0B0F  0023               	movlb	3	; select bank3
  9400  0B10  0811               	movf	17,w	;volatile
  9401  0B11  391F               	andlw	31
  9402  0B12  0020               	movlb	0	; select bank0
  9403  0B13  0422               	iorwf	??_tsttc,w
  9404  0B14  1D03               	btfss	3,2
  9405  0B15  2B17               	goto	u3501
  9406  0B16  2B18               	goto	u3500
  9407  0B17                     u3501:
  9408  0B17  2B09               	goto	l4756
  9409  0B18                     u3500:
  9410  0B18                     l4758:
  9411                           
  9412                           ;main.c: 555: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  9413  0B18  309B               	movlw	155
  9414  0B19  3197  2730  318A   	fcall	_WriteI2C
  9415  0B1C                     l4760:
  9416  0B1C  0023               	movlb	3	; select bank3
  9417  0B1D  0C0F               	rrf	15,w	;volatile
  9418  0B1E  0C89               	rrf	9,f
  9419  0B1F  3901               	andlw	1
  9420  0B20  0020               	movlb	0	; select bank0
  9421  0B21  00A2               	movwf	??_tsttc
  9422  0B22  0023               	movlb	3	; select bank3
  9423  0B23  0811               	movf	17,w	;volatile
  9424  0B24  391F               	andlw	31
  9425  0B25  0020               	movlb	0	; select bank0
  9426  0B26  0422               	iorwf	??_tsttc,w
  9427  0B27  1D03               	btfss	3,2
  9428  0B28  2B2A               	goto	u3511
  9429  0B29  2B2B               	goto	u3510
  9430  0B2A                     u3511:
  9431  0B2A  2B1C               	goto	l4760
  9432  0B2B                     u3510:
  9433  0B2B                     l4762:
  9434                           
  9435                           ;main.c: 556: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  9436  0B2B  3194  24A9  318A   	fcall	_ReadI2C
  9437  0B2E  0020               	movlb	0	; select bank0
  9438  0B2F  00A2               	movwf	??_tsttc
  9439  0B30  0822               	movf	??_tsttc,w
  9440  0B31  00A3               	movwf	tsttc@value
  9441  0B32                     l4764:
  9442  0B32  0023               	movlb	3	; select bank3
  9443  0B33  0C0F               	rrf	15,w	;volatile
  9444  0B34  0C89               	rrf	9,f
  9445  0B35  3901               	andlw	1
  9446  0B36  0020               	movlb	0	; select bank0
  9447  0B37  00A2               	movwf	??_tsttc
  9448  0B38  0023               	movlb	3	; select bank3
  9449  0B39  0811               	movf	17,w	;volatile
  9450  0B3A  391F               	andlw	31
  9451  0B3B  0020               	movlb	0	; select bank0
  9452  0B3C  0422               	iorwf	??_tsttc,w
  9453  0B3D  1D03               	btfss	3,2
  9454  0B3E  2B40               	goto	u3521
  9455  0B3F  2B41               	goto	u3520
  9456  0B40                     u3521:
  9457  0B40  2B32               	goto	l4764
  9458  0B41                     u3520:
  9459  0B41                     l713:
  9460                           
  9461                           ;main.c: 557: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while
      +                           ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  9462  0B41  0023               	movlb	3	; select bank3
  9463  0B42  1691               	bsf	17,5	;volatile
  9464  0B43  1611               	bsf	17,4	;volatile
  9465  0B44                     l714:
  9466  0B44  1A11               	btfsc	17,4	;volatile
  9467  0B45  2B47               	goto	u3531
  9468  0B46  2B48               	goto	u3530
  9469  0B47                     u3531:
  9470  0B47  2B44               	goto	l714
  9471  0B48                     u3530:
  9472  0B48                     l4766:
  9473  0B48  0023               	movlb	3	; select bank3
  9474  0B49  0C0F               	rrf	15,w	;volatile
  9475  0B4A  0C89               	rrf	9,f
  9476  0B4B  3901               	andlw	1
  9477  0B4C  0020               	movlb	0	; select bank0
  9478  0B4D  00A2               	movwf	??_tsttc
  9479  0B4E  0023               	movlb	3	; select bank3
  9480  0B4F  0811               	movf	17,w	;volatile
  9481  0B50  391F               	andlw	31
  9482  0B51  0020               	movlb	0	; select bank0
  9483  0B52  0422               	iorwf	??_tsttc,w
  9484  0B53  1D03               	btfss	3,2
  9485  0B54  2B56               	goto	u3541
  9486  0B55  2B57               	goto	u3540
  9487  0B56                     u3541:
  9488  0B56  2B48               	goto	l4766
  9489  0B57                     u3540:
  9490  0B57                     l719:
  9491                           
  9492                           ;main.c: 558: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  9493  0B57  0023               	movlb	3	; select bank3
  9494  0B58  1511               	bsf	17,2	;volatile
  9495  0B59                     l720:
  9496  0B59  1911               	btfsc	17,2	;volatile
  9497  0B5A  2B5C               	goto	u3551
  9498  0B5B  2B5D               	goto	u3550
  9499  0B5C                     u3551:
  9500  0B5C  2B59               	goto	l720
  9501  0B5D                     u3550:
  9502  0B5D                     l722:
  9503                           
  9504                           ;main.c: 559: } while (!(value & 0x40));
  9505  0B5D  0020               	movlb	0	; select bank0
  9506  0B5E  1F23               	btfss	tsttc@value,6
  9507  0B5F  2B61               	goto	u3561
  9508  0B60  2B62               	goto	u3560
  9509  0B61                     u3561:
  9510  0B61  2AB9               	goto	l686
  9511  0B62                     u3560:
  9512  0B62                     l4768:
  9513  0B62  0023               	movlb	3	; select bank3
  9514  0B63  0C0F               	rrf	15,w	;volatile
  9515  0B64  0C89               	rrf	9,f
  9516  0B65  3901               	andlw	1
  9517  0B66  0020               	movlb	0	; select bank0
  9518  0B67  00A2               	movwf	??_tsttc
  9519  0B68  0023               	movlb	3	; select bank3
  9520  0B69  0811               	movf	17,w	;volatile
  9521  0B6A  391F               	andlw	31
  9522  0B6B  0020               	movlb	0	; select bank0
  9523  0B6C  0422               	iorwf	??_tsttc,w
  9524  0B6D  1D03               	btfss	3,2
  9525  0B6E  2B70               	goto	u3571
  9526  0B6F  2B71               	goto	u3570
  9527  0B70                     u3571:
  9528  0B70  2B62               	goto	l4768
  9529  0B71                     u3570:
  9530  0B71                     l726:
  9531                           
  9532                           ;main.c: 562: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
  9533  0B71  0023               	movlb	3	; select bank3
  9534  0B72  1411               	bsf	17,0	;volatile
  9535  0B73                     l727:
  9536  0B73  1811               	btfsc	17,0	;volatile
  9537  0B74  2B76               	goto	u3581
  9538  0B75  2B77               	goto	u3580
  9539  0B76                     u3581:
  9540  0B76  2B73               	goto	l727
  9541  0B77                     u3580:
  9542  0B77                     l4770:
  9543  0B77  0023               	movlb	3	; select bank3
  9544  0B78  0C0F               	rrf	15,w	;volatile
  9545  0B79  0C89               	rrf	9,f
  9546  0B7A  3901               	andlw	1
  9547  0B7B  0020               	movlb	0	; select bank0
  9548  0B7C  00A2               	movwf	??_tsttc
  9549  0B7D  0023               	movlb	3	; select bank3
  9550  0B7E  0811               	movf	17,w	;volatile
  9551  0B7F  391F               	andlw	31
  9552  0B80  0020               	movlb	0	; select bank0
  9553  0B81  0422               	iorwf	??_tsttc,w
  9554  0B82  1D03               	btfss	3,2
  9555  0B83  2B85               	goto	u3591
  9556  0B84  2B86               	goto	u3590
  9557  0B85                     u3591:
  9558  0B85  2B77               	goto	l4770
  9559  0B86                     u3590:
  9560  0B86                     l4772:
  9561                           
  9562                           ;main.c: 563: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  9563  0B86  309A               	movlw	154
  9564  0B87  3197  2730  318A   	fcall	_WriteI2C
  9565  0B8A                     l4774:
  9566  0B8A  0023               	movlb	3	; select bank3
  9567  0B8B  0C0F               	rrf	15,w	;volatile
  9568  0B8C  0C89               	rrf	9,f
  9569  0B8D  3901               	andlw	1
  9570  0B8E  0020               	movlb	0	; select bank0
  9571  0B8F  00A2               	movwf	??_tsttc
  9572  0B90  0023               	movlb	3	; select bank3
  9573  0B91  0811               	movf	17,w	;volatile
  9574  0B92  391F               	andlw	31
  9575  0B93  0020               	movlb	0	; select bank0
  9576  0B94  0422               	iorwf	??_tsttc,w
  9577  0B95  1D03               	btfss	3,2
  9578  0B96  2B98               	goto	u3601
  9579  0B97  2B99               	goto	u3600
  9580  0B98                     u3601:
  9581  0B98  2B8A               	goto	l4774
  9582  0B99                     u3600:
  9583  0B99                     l4776:
  9584                           
  9585                           ;main.c: 564: WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  9586  0B99  3000               	movlw	0
  9587  0B9A  3197  2730  318A   	fcall	_WriteI2C
  9588  0B9D                     l4778:
  9589  0B9D  0023               	movlb	3	; select bank3
  9590  0B9E  0C0F               	rrf	15,w	;volatile
  9591  0B9F  0C89               	rrf	9,f
  9592  0BA0  3901               	andlw	1
  9593  0BA1  0020               	movlb	0	; select bank0
  9594  0BA2  00A2               	movwf	??_tsttc
  9595  0BA3  0023               	movlb	3	; select bank3
  9596  0BA4  0811               	movf	17,w	;volatile
  9597  0BA5  391F               	andlw	31
  9598  0BA6  0020               	movlb	0	; select bank0
  9599  0BA7  0422               	iorwf	??_tsttc,w
  9600  0BA8  1D03               	btfss	3,2
  9601  0BA9  2BAB               	goto	u3611
  9602  0BAA  2BAC               	goto	u3610
  9603  0BAB                     u3611:
  9604  0BAB  2B9D               	goto	l4778
  9605  0BAC                     u3610:
  9606  0BAC                     l738:
  9607                           
  9608                           ;main.c: 565: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
  9609  0BAC  0023               	movlb	3	; select bank3
  9610  0BAD  1491               	bsf	17,1	;volatile
  9611  0BAE                     l739:
  9612  0BAE  1891               	btfsc	17,1	;volatile
  9613  0BAF  2BB1               	goto	u3621
  9614  0BB0  2BB2               	goto	u3620
  9615  0BB1                     u3621:
  9616  0BB1  2BAE               	goto	l739
  9617  0BB2                     u3620:
  9618  0BB2                     l4780:
  9619  0BB2  0023               	movlb	3	; select bank3
  9620  0BB3  0C0F               	rrf	15,w	;volatile
  9621  0BB4  0C89               	rrf	9,f
  9622  0BB5  3901               	andlw	1
  9623  0BB6  0020               	movlb	0	; select bank0
  9624  0BB7  00A2               	movwf	??_tsttc
  9625  0BB8  0023               	movlb	3	; select bank3
  9626  0BB9  0811               	movf	17,w	;volatile
  9627  0BBA  391F               	andlw	31
  9628  0BBB  0020               	movlb	0	; select bank0
  9629  0BBC  0422               	iorwf	??_tsttc,w
  9630  0BBD  1D03               	btfss	3,2
  9631  0BBE  2BC0               	goto	u3631
  9632  0BBF  2BC1               	goto	u3630
  9633  0BC0                     u3631:
  9634  0BC0  2BB2               	goto	l4780
  9635  0BC1                     u3630:
  9636  0BC1                     l4782:
  9637                           
  9638                           ;main.c: 566: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  9639  0BC1  309B               	movlw	155
  9640  0BC2  3197  2730  318A   	fcall	_WriteI2C
  9641  0BC5                     l4784:
  9642  0BC5  0023               	movlb	3	; select bank3
  9643  0BC6  0C0F               	rrf	15,w	;volatile
  9644  0BC7  0C89               	rrf	9,f
  9645  0BC8  3901               	andlw	1
  9646  0BC9  0020               	movlb	0	; select bank0
  9647  0BCA  00A2               	movwf	??_tsttc
  9648  0BCB  0023               	movlb	3	; select bank3
  9649  0BCC  0811               	movf	17,w	;volatile
  9650  0BCD  391F               	andlw	31
  9651  0BCE  0020               	movlb	0	; select bank0
  9652  0BCF  0422               	iorwf	??_tsttc,w
  9653  0BD0  1D03               	btfss	3,2
  9654  0BD1  2BD3               	goto	u3641
  9655  0BD2  2BD4               	goto	u3640
  9656  0BD3                     u3641:
  9657  0BD3  2BC5               	goto	l4784
  9658  0BD4                     u3640:
  9659  0BD4                     l4786:
  9660                           
  9661                           ;main.c: 567: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  9662  0BD4  3194  24A9  318A   	fcall	_ReadI2C
  9663  0BD7  0020               	movlb	0	; select bank0
  9664  0BD8  00A2               	movwf	??_tsttc
  9665  0BD9  0822               	movf	??_tsttc,w
  9666  0BDA  00A3               	movwf	tsttc@value
  9667  0BDB                     l4788:
  9668  0BDB  0023               	movlb	3	; select bank3
  9669  0BDC  0C0F               	rrf	15,w	;volatile
  9670  0BDD  0C89               	rrf	9,f
  9671  0BDE  3901               	andlw	1
  9672  0BDF  0020               	movlb	0	; select bank0
  9673  0BE0  00A2               	movwf	??_tsttc
  9674  0BE1  0023               	movlb	3	; select bank3
  9675  0BE2  0811               	movf	17,w	;volatile
  9676  0BE3  391F               	andlw	31
  9677  0BE4  0020               	movlb	0	; select bank0
  9678  0BE5  0422               	iorwf	??_tsttc,w
  9679  0BE6  1D03               	btfss	3,2
  9680  0BE7  2BE9               	goto	u3651
  9681  0BE8  2BEA               	goto	u3650
  9682  0BE9                     u3651:
  9683  0BE9  2BDB               	goto	l4788
  9684  0BEA                     u3650:
  9685  0BEA                     l750:
  9686                           
  9687                           ;main.c: 568: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while
      +                           ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  9688  0BEA  0023               	movlb	3	; select bank3
  9689  0BEB  1691               	bsf	17,5	;volatile
  9690  0BEC  1611               	bsf	17,4	;volatile
  9691  0BED                     l751:
  9692  0BED  1A11               	btfsc	17,4	;volatile
  9693  0BEE  2BF0               	goto	u3661
  9694  0BEF  2BF1               	goto	u3660
  9695  0BF0                     u3661:
  9696  0BF0  2BED               	goto	l751
  9697  0BF1                     u3660:
  9698  0BF1                     l4790:
  9699  0BF1  0023               	movlb	3	; select bank3
  9700  0BF2  0C0F               	rrf	15,w	;volatile
  9701  0BF3  0C89               	rrf	9,f
  9702  0BF4  3901               	andlw	1
  9703  0BF5  0020               	movlb	0	; select bank0
  9704  0BF6  00A2               	movwf	??_tsttc
  9705  0BF7  0023               	movlb	3	; select bank3
  9706  0BF8  0811               	movf	17,w	;volatile
  9707  0BF9  391F               	andlw	31
  9708  0BFA  0020               	movlb	0	; select bank0
  9709  0BFB  0422               	iorwf	??_tsttc,w
  9710  0BFC  1D03               	btfss	3,2
  9711  0BFD  2BFF               	goto	u3671
  9712  0BFE  2C00               	goto	u3670
  9713  0BFF                     u3671:
  9714  0BFF  2BF1               	goto	l4790
  9715  0C00                     u3670:
  9716  0C00                     l756:
  9717                           
  9718                           ;main.c: 569: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  9719  0C00  0023               	movlb	3	; select bank3
  9720  0C01  1511               	bsf	17,2	;volatile
  9721  0C02                     l757:
  9722  0C02  1911               	btfsc	17,2	;volatile
  9723  0C03  2C05               	goto	u3681
  9724  0C04  2C06               	goto	u3680
  9725  0C05                     u3681:
  9726  0C05  2C02               	goto	l757
  9727  0C06                     u3680:
  9728  0C06                     l4792:
  9729                           
  9730                           ;main.c: 571: return value;
  9731  0C06  0020               	movlb	0	; select bank0
  9732  0C07  0823               	movf	tsttc@value,w
  9733  0C08                     l760:
  9734  0C08  0008               	return
  9735  0C09                     __end_of_tsttc:
  9736                           
  9737                           	psect	text2
  9738  14A9                     __ptext2:	
  9739 ;; *************** function _ReadI2C *****************
  9740 ;; Defined at:
  9741 ;;		line 32 in file "I2C/i2c.c"
  9742 ;; Parameters:    Size  Location     Type
  9743 ;;		None
  9744 ;; Auto vars:     Size  Location     Type
  9745 ;;		None
  9746 ;; Return value:  Size  Location     Type
  9747 ;;                  1    wreg      unsigned char 
  9748 ;; Registers used:
  9749 ;;		wreg, status,2, status,0
  9750 ;; Tracked objects:
  9751 ;;		On entry : 0/0
  9752 ;;		On exit  : 0/0
  9753 ;;		Unchanged: 0/0
  9754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9757 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9758 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9759 ;;Total ram usage:        1 bytes
  9760 ;; Hardware stack levels used:    1
  9761 ;; Hardware stack levels required when called:    6
  9762 ;; This function calls:
  9763 ;;		Nothing
  9764 ;; This function is called by:
  9765 ;;		_tsttc
  9766 ;;		_LCDrecv
  9767 ;; This function uses a non-reentrant model
  9768 ;;
  9769                           
  9770                           
  9771                           ;psect for function _ReadI2C
  9772  14A9                     _ReadI2C:
  9773  14A9                     l4308:	
  9774                           ;incstack = 0
  9775                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
  9776                           
  9777                           
  9778                           ;i2c.c: 34: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
  9779  14A9  300F               	movlw	15
  9780  14AA  0023               	movlb	3	; select bank3
  9781  14AB  0510               	andwf	16,w	;volatile
  9782  14AC  0020               	movlb	0	; select bank0
  9783  14AD  00A0               	movwf	??_ReadI2C
  9784  14AE  3008               	movlw	8
  9785  14AF  0620               	xorwf	??_ReadI2C,w
  9786  14B0  1903               	btfsc	3,2
  9787  14B1  2CB3               	goto	u3091
  9788  14B2  2CB4               	goto	u3090
  9789  14B3                     u3091:
  9790  14B3  2CBF               	goto	l22
  9791  14B4                     u3090:
  9792  14B4                     l4310:
  9793  14B4  300F               	movlw	15
  9794  14B5  0023               	movlb	3	; select bank3
  9795  14B6  0510               	andwf	16,w	;volatile
  9796  14B7  0020               	movlb	0	; select bank0
  9797  14B8  00A0               	movwf	??_ReadI2C
  9798  14B9  300B               	movlw	11
  9799  14BA  0620               	xorwf	??_ReadI2C,w
  9800  14BB  1D03               	btfss	3,2
  9801  14BC  2CBE               	goto	u3101
  9802  14BD  2CBF               	goto	u3100
  9803  14BE                     u3101:
  9804  14BE  2CC1               	goto	l23
  9805  14BF                     u3100:
  9806  14BF                     l22:
  9807                           
  9808                           ;i2c.c: 35: SSP1CON2bits.RCEN = 1;
  9809  14BF  0023               	movlb	3	; select bank3
  9810  14C0  1591               	bsf	17,3	;volatile
  9811  14C1                     l23:
  9812  14C1  0023               	movlb	3	; select bank3
  9813  14C2  1C0F               	btfss	15,0	;volatile
  9814  14C3  2CC5               	goto	u3111
  9815  14C4  2CC6               	goto	u3110
  9816  14C5                     u3111:
  9817  14C5  2CC1               	goto	l23
  9818  14C6                     u3110:
  9819  14C6                     l4312:
  9820                           
  9821                           ;i2c.c: 37: return ( SSP1BUF );
  9822  14C6  080C               	movf	12,w	;volatile
  9823  14C7                     l26:
  9824  14C7  0008               	return
  9825  14C8                     __end_of_ReadI2C:
  9826                           
  9827                           	psect	text3
  9828  09D4                     __ptext3:	
  9829 ;; *************** function _save_vars *****************
  9830 ;; Defined at:
  9831 ;;		line 446 in file "main.c"
  9832 ;; Parameters:    Size  Location     Type
  9833 ;;		None
  9834 ;; Auto vars:     Size  Location     Type
  9835 ;;  first           2    5[BANK0 ] unsigned int 
  9836 ;; Return value:  Size  Location     Type
  9837 ;;                  1    wreg      void 
  9838 ;; Registers used:
  9839 ;;		wreg, status,2, status,0, pclath, cstack
  9840 ;; Tracked objects:
  9841 ;;		On entry : 0/0
  9842 ;;		On exit  : 0/0
  9843 ;;		Unchanged: 0/0
  9844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9846 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9847 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9848 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9849 ;;Total ram usage:        3 bytes
  9850 ;; Hardware stack levels used:    1
  9851 ;; Hardware stack levels required when called:    7
  9852 ;; This function calls:
  9853 ;;		_DATAEE_WriteByte
  9854 ;; This function is called by:
  9855 ;;		_main
  9856 ;; This function uses a non-reentrant model
  9857 ;;
  9858                           
  9859                           
  9860                           ;psect for function _save_vars
  9861  09D4                     _save_vars:
  9862  09D4                     l4898:	
  9863                           ;incstack = 0
  9864                           ; Regs used in _save_vars: [wreg+status,2+status,0+pclath+cstack]
  9865                           
  9866                           
  9867                           ;main.c: 447: uint16_t first = 0x7096;
  9868  09D4  3096               	movlw	150
  9869  09D5  0020               	movlb	0	; select bank0
  9870  09D6  00A5               	movwf	save_vars@first
  9871  09D7  3070               	movlw	112
  9872  09D8  00A6               	movwf	save_vars@first+1
  9873  09D9                     l4900:
  9874                           
  9875                           ;main.c: 448: CSUM = PMON + TALA + ALAH + ALAM + ALAS + ALAT + ALAL + ALAF + CLKH + CLKM
      +                          ;
  9876  09D9  0021               	movlb	1	; select bank1
  9877  09DA  083D               	movf	_PMON^(0+128),w
  9878  09DB  073C               	addwf	_TALA^(0+128),w
  9879  09DC  077D               	addwf	_ALAH,w
  9880  09DD  077C               	addwf	_ALAM,w
  9881  09DE  072B               	addwf	_ALAS^(0+128),w
  9882  09DF  073B               	addwf	_ALAT^(0+128),w
  9883  09E0  073A               	addwf	_ALAL^(0+128),w
  9884  09E1  072A               	addwf	_ALAF^(0+128),w
  9885  09E2  077B               	addwf	_CLKH,w
  9886  09E3  0020               	movlb	0	; select bank0
  9887  09E4  076F               	addwf	_CLKM,w
  9888  09E5  00A4               	movwf	??_save_vars
  9889  09E6  0824               	movf	??_save_vars,w
  9890  09E7  0021               	movlb	1	; select bank1
  9891  09E8  00A9               	movwf	_CSUM^(0+128)
  9892  09E9                     l4902:
  9893                           
  9894                           ;main.c: 450: DATAEE_WriteByte(first++,0xaa);
  9895  09E9  3096               	movlw	150
  9896  09EA  0020               	movlb	0	; select bank0
  9897  09EB  00A0               	movwf	DATAEE_WriteByte@bAdd
  9898  09EC  3070               	movlw	112
  9899  09ED  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  9900  09EE  30AA               	movlw	170
  9901  09EF  00A4               	movwf	??_save_vars
  9902  09F0  0824               	movf	??_save_vars,w
  9903  09F1  00A2               	movwf	DATAEE_WriteByte@bData
  9904  09F2  3195  252D  3189   	fcall	_DATAEE_WriteByte
  9905  09F5                     l4904:
  9906  09F5  3001               	movlw	1
  9907  09F6  0020               	movlb	0	; select bank0
  9908  09F7  07A5               	addwf	save_vars@first,f
  9909  09F8  3000               	movlw	0
  9910  09F9  3DA6               	addwfc	save_vars@first+1,f
  9911  09FA                     l4906:
  9912                           
  9913                           ;main.c: 451: DATAEE_WriteByte(first++,PMON);
  9914  09FA  0826               	movf	save_vars@first+1,w
  9915  09FB  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  9916  09FC  0825               	movf	save_vars@first,w
  9917  09FD  00A0               	movwf	DATAEE_WriteByte@bAdd
  9918  09FE  0021               	movlb	1	; select bank1
  9919  09FF  083D               	movf	_PMON^(0+128),w
  9920  0A00  0020               	movlb	0	; select bank0
  9921  0A01  00A4               	movwf	??_save_vars
  9922  0A02  0824               	movf	??_save_vars,w
  9923  0A03  00A2               	movwf	DATAEE_WriteByte@bData
  9924  0A04  3195  252D  3189   	fcall	_DATAEE_WriteByte
  9925  0A07                     l4908:
  9926  0A07  3001               	movlw	1
  9927  0A08  0020               	movlb	0	; select bank0
  9928  0A09  07A5               	addwf	save_vars@first,f
  9929  0A0A  3000               	movlw	0
  9930  0A0B  3DA6               	addwfc	save_vars@first+1,f
  9931  0A0C                     l4910:
  9932                           
  9933                           ;main.c: 452: DATAEE_WriteByte(first++,TALA);
  9934  0A0C  0826               	movf	save_vars@first+1,w
  9935  0A0D  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  9936  0A0E  0825               	movf	save_vars@first,w
  9937  0A0F  00A0               	movwf	DATAEE_WriteByte@bAdd
  9938  0A10  0021               	movlb	1	; select bank1
  9939  0A11  083C               	movf	_TALA^(0+128),w
  9940  0A12  0020               	movlb	0	; select bank0
  9941  0A13  00A4               	movwf	??_save_vars
  9942  0A14  0824               	movf	??_save_vars,w
  9943  0A15  00A2               	movwf	DATAEE_WriteByte@bData
  9944  0A16  3195  252D  3189   	fcall	_DATAEE_WriteByte
  9945  0A19                     l4912:
  9946  0A19  3001               	movlw	1
  9947  0A1A  0020               	movlb	0	; select bank0
  9948  0A1B  07A5               	addwf	save_vars@first,f
  9949  0A1C  3000               	movlw	0
  9950  0A1D  3DA6               	addwfc	save_vars@first+1,f
  9951  0A1E                     l4914:
  9952                           
  9953                           ;main.c: 453: DATAEE_WriteByte(first++,ALAH);
  9954  0A1E  0826               	movf	save_vars@first+1,w
  9955  0A1F  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  9956  0A20  0825               	movf	save_vars@first,w
  9957  0A21  00A0               	movwf	DATAEE_WriteByte@bAdd
  9958  0A22  087D               	movf	_ALAH,w
  9959  0A23  00A4               	movwf	??_save_vars
  9960  0A24  0824               	movf	??_save_vars,w
  9961  0A25  00A2               	movwf	DATAEE_WriteByte@bData
  9962  0A26  3195  252D  3189   	fcall	_DATAEE_WriteByte
  9963  0A29                     l4916:
  9964  0A29  3001               	movlw	1
  9965  0A2A  0020               	movlb	0	; select bank0
  9966  0A2B  07A5               	addwf	save_vars@first,f
  9967  0A2C  3000               	movlw	0
  9968  0A2D  3DA6               	addwfc	save_vars@first+1,f
  9969  0A2E                     l4918:
  9970                           
  9971                           ;main.c: 454: DATAEE_WriteByte(first++,ALAM);
  9972  0A2E  0826               	movf	save_vars@first+1,w
  9973  0A2F  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  9974  0A30  0825               	movf	save_vars@first,w
  9975  0A31  00A0               	movwf	DATAEE_WriteByte@bAdd
  9976  0A32  087C               	movf	_ALAM,w
  9977  0A33  00A4               	movwf	??_save_vars
  9978  0A34  0824               	movf	??_save_vars,w
  9979  0A35  00A2               	movwf	DATAEE_WriteByte@bData
  9980  0A36  3195  252D  3189   	fcall	_DATAEE_WriteByte
  9981  0A39                     l4920:
  9982  0A39  3001               	movlw	1
  9983  0A3A  0020               	movlb	0	; select bank0
  9984  0A3B  07A5               	addwf	save_vars@first,f
  9985  0A3C  3000               	movlw	0
  9986  0A3D  3DA6               	addwfc	save_vars@first+1,f
  9987  0A3E                     l4922:
  9988                           
  9989                           ;main.c: 455: DATAEE_WriteByte(first++,ALAS);
  9990  0A3E  0826               	movf	save_vars@first+1,w
  9991  0A3F  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  9992  0A40  0825               	movf	save_vars@first,w
  9993  0A41  00A0               	movwf	DATAEE_WriteByte@bAdd
  9994  0A42  0021               	movlb	1	; select bank1
  9995  0A43  082B               	movf	_ALAS^(0+128),w
  9996  0A44  0020               	movlb	0	; select bank0
  9997  0A45  00A4               	movwf	??_save_vars
  9998  0A46  0824               	movf	??_save_vars,w
  9999  0A47  00A2               	movwf	DATAEE_WriteByte@bData
 10000  0A48  3195  252D  3189   	fcall	_DATAEE_WriteByte
 10001  0A4B                     l4924:
 10002  0A4B  3001               	movlw	1
 10003  0A4C  0020               	movlb	0	; select bank0
 10004  0A4D  07A5               	addwf	save_vars@first,f
 10005  0A4E  3000               	movlw	0
 10006  0A4F  3DA6               	addwfc	save_vars@first+1,f
 10007  0A50                     l4926:
 10008                           
 10009                           ;main.c: 456: DATAEE_WriteByte(first++,ALAT);
 10010  0A50  0826               	movf	save_vars@first+1,w
 10011  0A51  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10012  0A52  0825               	movf	save_vars@first,w
 10013  0A53  00A0               	movwf	DATAEE_WriteByte@bAdd
 10014  0A54  0021               	movlb	1	; select bank1
 10015  0A55  083B               	movf	_ALAT^(0+128),w
 10016  0A56  0020               	movlb	0	; select bank0
 10017  0A57  00A4               	movwf	??_save_vars
 10018  0A58  0824               	movf	??_save_vars,w
 10019  0A59  00A2               	movwf	DATAEE_WriteByte@bData
 10020  0A5A  3195  252D  3189   	fcall	_DATAEE_WriteByte
 10021  0A5D                     l4928:
 10022  0A5D  3001               	movlw	1
 10023  0A5E  0020               	movlb	0	; select bank0
 10024  0A5F  07A5               	addwf	save_vars@first,f
 10025  0A60  3000               	movlw	0
 10026  0A61  3DA6               	addwfc	save_vars@first+1,f
 10027  0A62                     l4930:
 10028                           
 10029                           ;main.c: 457: DATAEE_WriteByte(first++,ALAL);
 10030  0A62  0826               	movf	save_vars@first+1,w
 10031  0A63  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10032  0A64  0825               	movf	save_vars@first,w
 10033  0A65  00A0               	movwf	DATAEE_WriteByte@bAdd
 10034  0A66  0021               	movlb	1	; select bank1
 10035  0A67  083A               	movf	_ALAL^(0+128),w
 10036  0A68  0020               	movlb	0	; select bank0
 10037  0A69  00A4               	movwf	??_save_vars
 10038  0A6A  0824               	movf	??_save_vars,w
 10039  0A6B  00A2               	movwf	DATAEE_WriteByte@bData
 10040  0A6C  3195  252D  3189   	fcall	_DATAEE_WriteByte
 10041  0A6F                     l4932:
 10042  0A6F  3001               	movlw	1
 10043  0A70  0020               	movlb	0	; select bank0
 10044  0A71  07A5               	addwf	save_vars@first,f
 10045  0A72  3000               	movlw	0
 10046  0A73  3DA6               	addwfc	save_vars@first+1,f
 10047  0A74                     l4934:
 10048                           
 10049                           ;main.c: 458: DATAEE_WriteByte(first++,ALAF);
 10050  0A74  0826               	movf	save_vars@first+1,w
 10051  0A75  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10052  0A76  0825               	movf	save_vars@first,w
 10053  0A77  00A0               	movwf	DATAEE_WriteByte@bAdd
 10054  0A78  0021               	movlb	1	; select bank1
 10055  0A79  082A               	movf	_ALAF^(0+128),w
 10056  0A7A  0020               	movlb	0	; select bank0
 10057  0A7B  00A4               	movwf	??_save_vars
 10058  0A7C  0824               	movf	??_save_vars,w
 10059  0A7D  00A2               	movwf	DATAEE_WriteByte@bData
 10060  0A7E  3195  252D  3189   	fcall	_DATAEE_WriteByte
 10061  0A81                     l4936:
 10062  0A81  3001               	movlw	1
 10063  0A82  0020               	movlb	0	; select bank0
 10064  0A83  07A5               	addwf	save_vars@first,f
 10065  0A84  3000               	movlw	0
 10066  0A85  3DA6               	addwfc	save_vars@first+1,f
 10067  0A86                     l4938:
 10068                           
 10069                           ;main.c: 459: DATAEE_WriteByte(first++,CLKH);
 10070  0A86  0826               	movf	save_vars@first+1,w
 10071  0A87  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10072  0A88  0825               	movf	save_vars@first,w
 10073  0A89  00A0               	movwf	DATAEE_WriteByte@bAdd
 10074  0A8A  087B               	movf	_CLKH,w
 10075  0A8B  00A4               	movwf	??_save_vars
 10076  0A8C  0824               	movf	??_save_vars,w
 10077  0A8D  00A2               	movwf	DATAEE_WriteByte@bData
 10078  0A8E  3195  252D  3189   	fcall	_DATAEE_WriteByte
 10079  0A91                     l4940:
 10080  0A91  3001               	movlw	1
 10081  0A92  0020               	movlb	0	; select bank0
 10082  0A93  07A5               	addwf	save_vars@first,f
 10083  0A94  3000               	movlw	0
 10084  0A95  3DA6               	addwfc	save_vars@first+1,f
 10085  0A96                     l4942:
 10086                           
 10087                           ;main.c: 460: DATAEE_WriteByte(first++,CLKM);
 10088  0A96  0826               	movf	save_vars@first+1,w
 10089  0A97  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10090  0A98  0825               	movf	save_vars@first,w
 10091  0A99  00A0               	movwf	DATAEE_WriteByte@bAdd
 10092  0A9A  086F               	movf	_CLKM,w
 10093  0A9B  00A4               	movwf	??_save_vars
 10094  0A9C  0824               	movf	??_save_vars,w
 10095  0A9D  00A2               	movwf	DATAEE_WriteByte@bData
 10096  0A9E  3195  252D  3189   	fcall	_DATAEE_WriteByte
 10097  0AA1                     l4944:
 10098  0AA1  3001               	movlw	1
 10099  0AA2  0020               	movlb	0	; select bank0
 10100  0AA3  07A5               	addwf	save_vars@first,f
 10101  0AA4  3000               	movlw	0
 10102  0AA5  3DA6               	addwfc	save_vars@first+1,f
 10103  0AA6                     l4946:
 10104                           
 10105                           ;main.c: 461: DATAEE_WriteByte(first++,CSUM);
 10106  0AA6  0826               	movf	save_vars@first+1,w
 10107  0AA7  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10108  0AA8  0825               	movf	save_vars@first,w
 10109  0AA9  00A0               	movwf	DATAEE_WriteByte@bAdd
 10110  0AAA  0021               	movlb	1	; select bank1
 10111  0AAB  0829               	movf	_CSUM^(0+128),w
 10112  0AAC  0020               	movlb	0	; select bank0
 10113  0AAD  00A4               	movwf	??_save_vars
 10114  0AAE  0824               	movf	??_save_vars,w
 10115  0AAF  00A2               	movwf	DATAEE_WriteByte@bData
 10116  0AB0  3195  252D  3189   	fcall	_DATAEE_WriteByte
 10117  0AB3                     l4948:
 10118  0AB3  3001               	movlw	1
 10119  0AB4  0020               	movlb	0	; select bank0
 10120  0AB5  07A5               	addwf	save_vars@first,f
 10121  0AB6  3000               	movlw	0
 10122  0AB7  3DA6               	addwfc	save_vars@first+1,f
 10123  0AB8                     l659:
 10124  0AB8  0008               	return
 10125  0AB9                     __end_of_save_vars:
 10126                           
 10127                           	psect	text4
 10128  152D                     __ptext4:	
 10129 ;; *************** function _DATAEE_WriteByte *****************
 10130 ;; Defined at:
 10131 ;;		line 180 in file "mcc_generated_files/memory.c"
 10132 ;; Parameters:    Size  Location     Type
 10133 ;;  bAdd            2    0[BANK0 ] unsigned int 
 10134 ;;  bData           1    2[BANK0 ] unsigned char 
 10135 ;; Auto vars:     Size  Location     Type
 10136 ;;  GIEBitValue     1    3[BANK0 ] unsigned char 
 10137 ;; Return value:  Size  Location     Type
 10138 ;;                  1    wreg      void 
 10139 ;; Registers used:
 10140 ;;		wreg, status,2, status,0
 10141 ;; Tracked objects:
 10142 ;;		On entry : 0/0
 10143 ;;		On exit  : 0/0
 10144 ;;		Unchanged: 0/0
 10145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10146 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10147 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10149 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10150 ;;Total ram usage:        4 bytes
 10151 ;; Hardware stack levels used:    1
 10152 ;; Hardware stack levels required when called:    6
 10153 ;; This function calls:
 10154 ;;		Nothing
 10155 ;; This function is called by:
 10156 ;;		_save_vars
 10157 ;;		_save_register
 10158 ;; This function uses a non-reentrant model
 10159 ;;
 10160                           
 10161                           
 10162                           ;psect for function _DATAEE_WriteByte
 10163  152D                     _DATAEE_WriteByte:
 10164  152D                     l4410:	
 10165                           ;incstack = 0
 10166                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 10167                           
 10168                           
 10169                           ;memory.c: 182: uint8_t GIEBitValue = INTCONbits.GIE;
 10170  152D  3000               	movlw	0
 10171  152E  1B8B               	btfsc	11,7	;volatile
 10172  152F  3001               	movlw	1
 10173  1530  0020               	movlb	0	; select bank0
 10174  1531  00A3               	movwf	DATAEE_WriteByte@GIEBitValue
 10175                           
 10176                           ;memory.c: 184: NVMADRH = ((bAdd >> 8) & 0xFF);
 10177  1532  0821               	movf	DATAEE_WriteByte@bAdd+1,w
 10178  1533  0030               	movlb	16	; select bank16
 10179  1534  009B               	movwf	27	;volatile
 10180  1535                     l4412:
 10181                           
 10182                           ;memory.c: 185: NVMADRL = (bAdd & 0xFF);
 10183  1535  0020               	movlb	0	; select bank0
 10184  1536  0820               	movf	DATAEE_WriteByte@bAdd,w
 10185  1537  0030               	movlb	16	; select bank16
 10186  1538  009A               	movwf	26	;volatile
 10187  1539                     l4414:
 10188                           
 10189                           ;memory.c: 186: NVMDATL = bData;
 10190  1539  0020               	movlb	0	; select bank0
 10191  153A  0822               	movf	DATAEE_WriteByte@bData,w
 10192  153B  0030               	movlb	16	; select bank16
 10193  153C  009C               	movwf	28	;volatile
 10194  153D                     l4416:
 10195                           
 10196                           ;memory.c: 187: NVMCON1bits.NVMREGS = 1;
 10197  153D  171E               	bsf	30,6	;volsfr
 10198  153E                     l4418:
 10199                           
 10200                           ;memory.c: 188: NVMCON1bits.WREN = 1;
 10201  153E  151E               	bsf	30,2	;volsfr
 10202  153F                     l4420:
 10203                           
 10204                           ;memory.c: 189: INTCONbits.GIE = 0;
 10205  153F  138B               	bcf	11,7	;volatile
 10206  1540                     l4422:
 10207                           
 10208                           ;memory.c: 190: NVMCON2 = 0x55;
 10209  1540  3055               	movlw	85
 10210  1541  009F               	movwf	31	;volsfr
 10211  1542                     l4424:
 10212                           
 10213                           ;memory.c: 191: NVMCON2 = 0xAA;
 10214  1542  30AA               	movlw	170
 10215  1543  009F               	movwf	31	;volsfr
 10216  1544                     l4426:
 10217                           
 10218                           ;memory.c: 192: NVMCON1bits.WR = 1;
 10219  1544  149E               	bsf	30,1	;volsfr
 10220  1545                     l449:	
 10221                           ;memory.c: 195: {
 10222                           
 10223  1545  189E               	btfsc	30,1	;volsfr
 10224  1546  2D48               	goto	u3131
 10225  1547  2D49               	goto	u3130
 10226  1548                     u3131:
 10227  1548  2D45               	goto	l449
 10228  1549                     u3130:
 10229  1549                     l451:
 10230                           
 10231                           ;memory.c: 196: };memory.c: 198: NVMCON1bits.WREN = 0;
 10232  1549  111E               	bcf	30,2	;volsfr
 10233  154A                     l4428:
 10234                           
 10235                           ;memory.c: 199: INTCONbits.GIE = GIEBitValue;
 10236  154A  0020               	movlb	0	; select bank0
 10237  154B  0C23               	rrf	DATAEE_WriteByte@GIEBitValue,w
 10238  154C  1C03               	skipc
 10239  154D  138B               	bcf	11,7	;volatile
 10240  154E  1803               	skipnc
 10241  154F  178B               	bsf	11,7	;volatile
 10242  1550                     l452:
 10243  1550  0008               	return
 10244  1551                     __end_of_DATAEE_WriteByte:
 10245                           
 10246                           	psect	text5
 10247  0804                     __ptext5:	
 10248 ;; *************** function _lumin *****************
 10249 ;; Defined at:
 10250 ;;		line 436 in file "LCD.c"
 10251 ;; Parameters:    Size  Location     Type
 10252 ;;		None
 10253 ;; Auto vars:     Size  Location     Type
 10254 ;;  luminosity      2    4[BANK0 ] unsigned short 
 10255 ;; Return value:  Size  Location     Type
 10256 ;;                  1    wreg      unsigned char 
 10257 ;; Registers used:
 10258 ;;		wreg, status,2, status,0, pclath, cstack
 10259 ;; Tracked objects:
 10260 ;;		On entry : 0/0
 10261 ;;		On exit  : 0/0
 10262 ;;		Unchanged: 0/0
 10263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10265 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10266 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10267 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10268 ;;Total ram usage:        4 bytes
 10269 ;; Hardware stack levels used:    1
 10270 ;; Hardware stack levels required when called:    7
 10271 ;; This function calls:
 10272 ;;		_ADCC_GetConversionResult
 10273 ;;		_ADCC_Initialize
 10274 ;;		_ADCC_StartConversion
 10275 ;; This function is called by:
 10276 ;;		_main
 10277 ;; This function uses a non-reentrant model
 10278 ;;
 10279                           
 10280                           
 10281                           ;psect for function _lumin
 10282  0804                     _lumin:
 10283  0804                     l4796:	
 10284                           ;incstack = 0
 10285                           ; Regs used in _lumin: [wreg+status,2+status,0+pclath+cstack]
 10286                           
 10287                           
 10288                           ;LCD.c: 438: unsigned short luminosity;;LCD.c: 439: ADCC_Initialize();
 10289  0804  3193  23FF  3188   	fcall	_ADCC_Initialize
 10290                           
 10291                           ;LCD.c: 440: ADCC_StartConversion(CH_0);
 10292  0807  3000               	movlw	0
 10293  0808  3192  22CB  3188   	fcall	_ADCC_StartConversion
 10294  080B                     l4798:
 10295  080B                     l4800:
 10296                           
 10297                           ;LCD.c: 442: luminosity = ADCC_GetConversionResult();
 10298  080B  3192  22F7  3188   	fcall	_ADCC_GetConversionResult
 10299  080E  0020               	movlb	0	; select bank0
 10300  080F  0821               	movf	?_ADCC_GetConversionResult+1,w
 10301  0810  00A5               	movwf	lumin@luminosity+1
 10302  0811  0820               	movf	?_ADCC_GetConversionResult,w
 10303  0812  00A4               	movwf	lumin@luminosity
 10304  0813                     l4802:
 10305                           
 10306                           ;LCD.c: 443: luminosity = luminosity << 6;
 10307  0813  0825               	movf	lumin@luminosity+1,w
 10308  0814  00A3               	movwf	??_lumin+1
 10309  0815  0824               	movf	lumin@luminosity,w
 10310  0816  00A2               	movwf	??_lumin
 10311  0817  3006               	movlw	6
 10312  0818                     u3695:
 10313  0818  35A2               	lslf	??_lumin,f
 10314  0819  0DA3               	rlf	??_lumin+1,f
 10315  081A  0B89               	decfsz	9,f
 10316  081B  2818               	goto	u3695
 10317  081C  0822               	movf	??_lumin,w
 10318  081D  00A4               	movwf	lumin@luminosity
 10319  081E  0823               	movf	??_lumin+1,w
 10320  081F  00A5               	movwf	lumin@luminosity+1
 10321  0820                     l4804:
 10322                           
 10323                           ;LCD.c: 444: luminosity = luminosity >>13;
 10324  0820  0825               	movf	lumin@luminosity+1,w
 10325  0821  00A3               	movwf	??_lumin+1
 10326  0822  0824               	movf	lumin@luminosity,w
 10327  0823  00A2               	movwf	??_lumin
 10328  0824  300D               	movlw	13
 10329  0825                     u3705:
 10330  0825  36A3               	lsrf	??_lumin+1,f
 10331  0826  0CA2               	rrf	??_lumin,f
 10332  0827  0B89               	decfsz	9,f
 10333  0828  2825               	goto	u3705
 10334  0829  0822               	movf	??_lumin,w
 10335  082A  00A4               	movwf	lumin@luminosity
 10336  082B  0823               	movf	??_lumin+1,w
 10337  082C  00A5               	movwf	lumin@luminosity+1
 10338  082D                     l4806:
 10339                           
 10340                           ;LCD.c: 445: return(luminosity);
 10341  082D  0824               	movf	lumin@luminosity,w
 10342  082E                     l1012:
 10343  082E  0008               	return
 10344  082F                     __end_of_lumin:
 10345                           
 10346                           	psect	text6
 10347  12CB                     __ptext6:	
 10348 ;; *************** function _ADCC_StartConversion *****************
 10349 ;; Defined at:
 10350 ;;		line 106 in file "mcc_generated_files/adcc.c"
 10351 ;; Parameters:    Size  Location     Type
 10352 ;;  channel         1    wreg     enum E12086
 10353 ;; Auto vars:     Size  Location     Type
 10354 ;;  channel         1    0[BANK0 ] enum E12086
 10355 ;; Return value:  Size  Location     Type
 10356 ;;                  1    wreg      void 
 10357 ;; Registers used:
 10358 ;;		wreg
 10359 ;; Tracked objects:
 10360 ;;		On entry : 0/0
 10361 ;;		On exit  : 0/0
 10362 ;;		Unchanged: 0/0
 10363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10365 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10367 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10368 ;;Total ram usage:        1 bytes
 10369 ;; Hardware stack levels used:    1
 10370 ;; Hardware stack levels required when called:    6
 10371 ;; This function calls:
 10372 ;;		Nothing
 10373 ;; This function is called by:
 10374 ;;		_lumin
 10375 ;; This function uses a non-reentrant model
 10376 ;;
 10377                           
 10378                           
 10379                           ;psect for function _ADCC_StartConversion
 10380  12CB                     _ADCC_StartConversion:
 10381                           
 10382                           ;incstack = 0
 10383                           ; Regs used in _ADCC_StartConversion: [wreg]
 10384                           ;ADCC_StartConversion@channel stored from wreg
 10385  12CB  0020               	movlb	0	; select bank0
 10386  12CC  00A0               	movwf	ADCC_StartConversion@channel
 10387  12CD                     l4578:
 10388                           
 10389                           ;adcc.c: 109: ADPCH = channel;
 10390  12CD  0820               	movf	ADCC_StartConversion@channel,w
 10391  12CE  0021               	movlb	1	; select bank1
 10392  12CF  009E               	movwf	30	;volatile
 10393  12D0                     l4580:
 10394                           
 10395                           ;adcc.c: 112: ADCON0bits.ADON = 1;
 10396  12D0  1793               	bsf	19,7	;volatile
 10397  12D1                     l4582:
 10398                           
 10399                           ;adcc.c: 115: ADCON0bits.ADGO = 1;
 10400  12D1  1413               	bsf	19,0	;volatile
 10401  12D2                     l1094:
 10402  12D2  0008               	return
 10403  12D3                     __end_of_ADCC_StartConversion:
 10404                           
 10405                           	psect	text7
 10406  12F7                     __ptext7:	
 10407 ;; *************** function _ADCC_GetConversionResult *****************
 10408 ;; Defined at:
 10409 ;;		line 124 in file "mcc_generated_files/adcc.c"
 10410 ;; Parameters:    Size  Location     Type
 10411 ;;		None
 10412 ;; Auto vars:     Size  Location     Type
 10413 ;;		None
 10414 ;; Return value:  Size  Location     Type
 10415 ;;                  2    0[BANK0 ] unsigned int 
 10416 ;; Registers used:
 10417 ;;		wreg
 10418 ;; Tracked objects:
 10419 ;;		On entry : 0/0
 10420 ;;		On exit  : 0/0
 10421 ;;		Unchanged: 0/0
 10422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10423 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10426 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10427 ;;Total ram usage:        2 bytes
 10428 ;; Hardware stack levels used:    1
 10429 ;; Hardware stack levels required when called:    6
 10430 ;; This function calls:
 10431 ;;		Nothing
 10432 ;; This function is called by:
 10433 ;;		_lumin
 10434 ;; This function uses a non-reentrant model
 10435 ;;
 10436                           
 10437                           
 10438                           ;psect for function _ADCC_GetConversionResult
 10439  12F7                     _ADCC_GetConversionResult:
 10440  12F7                     l4584:	
 10441                           ;incstack = 0
 10442                           ; Regs used in _ADCC_GetConversionResult: [wreg]
 10443                           
 10444                           
 10445                           ;adcc.c: 127: return ((adc_result_t)((ADRESH << 8) + ADRESL));
 10446  12F7  0021               	movlb	1	; select bank1
 10447  12F8  080D               	movf	13,w	;volatile
 10448  12F9  0020               	movlb	0	; select bank0
 10449  12FA  00A1               	movwf	?_ADCC_GetConversionResult+1
 10450  12FB  0021               	movlb	1	; select bank1
 10451  12FC  080C               	movf	12,w	;volatile
 10452  12FD  0020               	movlb	0	; select bank0
 10453  12FE  00A0               	movwf	?_ADCC_GetConversionResult
 10454  12FF                     l1100:
 10455  12FF  0008               	return
 10456  1300                     __end_of_ADCC_GetConversionResult:
 10457                           
 10458                           	psect	text8
 10459  0070                     __ptext8:	
 10460 ;; *************** function _lcd *****************
 10461 ;; Defined at:
 10462 ;;		line 127 in file "LCD.c"
 10463 ;; Parameters:    Size  Location     Type
 10464 ;;  temperature     1    wreg     unsigned char 
 10465 ;;  luminosity      1   35[BANK0 ] unsigned char 
 10466 ;;  alarm           1   36[BANK0 ] unsigned char 
 10467 ;;  ctl             1   37[BANK0 ] unsigned char 
 10468 ;;  h               1   38[BANK0 ] unsigned char 
 10469 ;;  m               1   39[BANK0 ] unsigned char 
 10470 ;;  s               1   40[BANK0 ] unsigned char 
 10471 ;;  state           1   41[BANK0 ] unsigned char 
 10472 ;;  temperature_    1   42[BANK0 ] unsigned char 
 10473 ;;  luminosity_a    1   43[BANK0 ] unsigned char 
 10474 ;;  alah            1   44[BANK0 ] unsigned char 
 10475 ;;  alam            1   45[BANK0 ] unsigned char 
 10476 ;;  alas            1   46[BANK0 ] unsigned char 
 10477 ;; Auto vars:     Size  Location     Type
 10478 ;;  temperature     1   70[BANK0 ] unsigned char 
 10479 ;;  buf            17   53[BANK0 ] unsigned char [17]
 10480 ;; Return value:  Size  Location     Type
 10481 ;;                  1    wreg      unsigned char 
 10482 ;; Registers used:
 10483 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10484 ;; Tracked objects:
 10485 ;;		On entry : 0/0
 10486 ;;		On exit  : 0/0
 10487 ;;		Unchanged: 0/0
 10488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10489 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10490 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10491 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10492 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10493 ;;Total ram usage:       36 bytes
 10494 ;; Hardware stack levels used:    1
 10495 ;; Hardware stack levels required when called:   10
 10496 ;; This function calls:
 10497 ;;		_LCDcmd
 10498 ;;		_LCDstr
 10499 ;;		_sprintf
 10500 ;; This function is called by:
 10501 ;;		_main
 10502 ;; This function uses a non-reentrant model
 10503 ;;
 10504                           
 10505                           
 10506                           ;psect for function _lcd
 10507  0070                     _lcd:
 10508                           
 10509                           ;incstack = 0
 10510                           ; Regs used in _lcd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10511                           ;lcd@temperature stored from wreg
 10512  0070  0020               	movlb	0	; select bank0
 10513  0071  00E6               	movwf	lcd@temperature
 10514  0072                     l4950:
 10515                           
 10516                           ;LCD.c: 129: unsigned char buf[17];;LCD.c: 132: if (alarm)
 10517  0072  0844               	movf	lcd@alarm,w
 10518  0073  1903               	btfsc	3,2
 10519  0074  2876               	goto	u3851
 10520  0075  2877               	goto	u3850
 10521  0076                     u3851:
 10522  0076  2889               	goto	l4958
 10523  0077                     u3850:
 10524  0077                     l4952:
 10525                           
 10526                           ;LCD.c: 133: {;LCD.c: 134: LCDcmd(0x8F);
 10527  0077  308F               	movlw	143
 10528  0078  3192  22C3  3180   	fcall	_LCDcmd
 10529  007B                     l4954:
 10530                           
 10531                           ;LCD.c: 135: sprintf(buf, "A");
 10532  007B  302E               	movlw	low (STR_1| (0+32768))
 10533  007C  0020               	movlb	0	; select bank0
 10534  007D  00AE               	movwf	sprintf@f
 10535  007E  3098               	movlw	high (STR_1| (0+32768))
 10536  007F  00AF               	movwf	sprintf@f+1
 10537  0080  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10538  0081  318C  2409  3180   	fcall	_sprintf
 10539  0084                     l4956:
 10540                           
 10541                           ;LCD.c: 136: LCDstr(buf);
 10542  0084  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10543  0085  3194  242B  3180   	fcall	_LCDstr
 10544                           
 10545                           ;LCD.c: 137: }
 10546  0088  289A               	goto	l4964
 10547  0089                     l4958:
 10548                           
 10549                           ;LCD.c: 138: else;LCD.c: 139: {;LCD.c: 140: LCDcmd(0x8F);
 10550  0089  308F               	movlw	143
 10551  008A  3192  22C3  3180   	fcall	_LCDcmd
 10552  008D                     l4960:
 10553                           
 10554                           ;LCD.c: 141: sprintf(buf, "a");
 10555  008D  3032               	movlw	low (STR_2| (0+32768))
 10556  008E  0020               	movlb	0	; select bank0
 10557  008F  00AE               	movwf	sprintf@f
 10558  0090  3098               	movlw	high (STR_2| (0+32768))
 10559  0091  00AF               	movwf	sprintf@f+1
 10560  0092  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10561  0093  318C  2409  3180   	fcall	_sprintf
 10562  0096                     l4962:
 10563                           
 10564                           ;LCD.c: 142: LCDstr(buf);
 10565  0096  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10566  0097  3194  242B  3180   	fcall	_LCDstr
 10567  009A                     l4964:
 10568                           
 10569                           ;LCD.c: 143: };LCD.c: 144: if(state==0)
 10570  009A  0020               	movlb	0	; select bank0
 10571  009B  0849               	movf	lcd@state,w
 10572  009C  1D03               	btfss	3,2
 10573  009D  289F               	goto	u3861
 10574  009E  28A0               	goto	u3860
 10575  009F                     u3861:
 10576  009F  2960               	goto	l5020
 10577  00A0                     u3860:
 10578  00A0                     l4966:
 10579                           
 10580                           ;LCD.c: 145: {;LCD.c: 146: LCDcmd(0x80);
 10581  00A0  3080               	movlw	128
 10582  00A1  3192  22C3  3180   	fcall	_LCDcmd
 10583  00A4                     l4968:
 10584                           
 10585                           ;LCD.c: 147: sprintf(buf, "%02d:%02d:%02d", h,m,s);
 10586  00A4  3000               	movlw	low (STR_3| (0+32768))
 10587  00A5  0020               	movlb	0	; select bank0
 10588  00A6  00AE               	movwf	sprintf@f
 10589  00A7  3098               	movlw	high (STR_3| (0+32768))
 10590  00A8  00AF               	movwf	sprintf@f+1
 10591  00A9  0846               	movf	lcd@h,w
 10592  00AA  00CF               	movwf	??_lcd
 10593  00AB  01D0               	clrf	??_lcd+1
 10594  00AC  084F               	movf	??_lcd,w
 10595  00AD  00B0               	movwf	?_sprintf+2
 10596  00AE  0850               	movf	??_lcd+1,w
 10597  00AF  00B1               	movwf	?_sprintf+3
 10598  00B0  0847               	movf	lcd@m,w
 10599  00B1  00D1               	movwf	??_lcd+2
 10600  00B2  01D2               	clrf	??_lcd+3
 10601  00B3  0851               	movf	??_lcd+2,w
 10602  00B4  00B2               	movwf	?_sprintf+4
 10603  00B5  0852               	movf	??_lcd+3,w
 10604  00B6  00B3               	movwf	?_sprintf+5
 10605  00B7  0848               	movf	lcd@s,w
 10606  00B8  00D3               	movwf	??_lcd+4
 10607  00B9  01D4               	clrf	??_lcd+5
 10608  00BA  0853               	movf	??_lcd+4,w
 10609  00BB  00B4               	movwf	?_sprintf+6
 10610  00BC  0854               	movf	??_lcd+5,w
 10611  00BD  00B5               	movwf	?_sprintf+7
 10612  00BE  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10613  00BF  318C  2409  3180   	fcall	_sprintf
 10614  00C2                     l4970:
 10615                           
 10616                           ;LCD.c: 148: LCDstr(buf);
 10617  00C2  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10618  00C3  3194  242B  3180   	fcall	_LCDstr
 10619  00C6                     l4972:
 10620                           
 10621                           ;LCD.c: 150: LCDcmd(0xc0);
 10622  00C6  30C0               	movlw	192
 10623  00C7  3192  22C3  3180   	fcall	_LCDcmd
 10624  00CA                     l4974:
 10625                           
 10626                           ;LCD.c: 151: sprintf(buf, "%02d C", temperature);
 10627  00CA  3019               	movlw	low (STR_4| (0+32768))
 10628  00CB  0020               	movlb	0	; select bank0
 10629  00CC  00AE               	movwf	sprintf@f
 10630  00CD  3098               	movlw	high (STR_4| (0+32768))
 10631  00CE  00AF               	movwf	sprintf@f+1
 10632  00CF  0866               	movf	lcd@temperature,w
 10633  00D0  00CF               	movwf	??_lcd
 10634  00D1  01D0               	clrf	??_lcd+1
 10635  00D2  084F               	movf	??_lcd,w
 10636  00D3  00B0               	movwf	?_sprintf+2
 10637  00D4  0850               	movf	??_lcd+1,w
 10638  00D5  00B1               	movwf	?_sprintf+3
 10639  00D6  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10640  00D7  318C  2409  3180   	fcall	_sprintf
 10641                           
 10642                           ;LCD.c: 152: LCDstr(buf);
 10643  00DA  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10644  00DB  3194  242B  3180   	fcall	_LCDstr
 10645  00DE                     l4976:
 10646                           
 10647                           ;LCD.c: 154: LCDcmd(0xce);
 10648  00DE  30CE               	movlw	206
 10649  00DF  3192  22C3  3180   	fcall	_LCDcmd
 10650  00E2                     l4978:
 10651                           
 10652                           ;LCD.c: 155: sprintf(buf, "L%01d", luminosity);
 10653  00E2  3020               	movlw	low (STR_5| (0+32768))
 10654  00E3  0020               	movlb	0	; select bank0
 10655  00E4  00AE               	movwf	sprintf@f
 10656  00E5  3098               	movlw	high (STR_5| (0+32768))
 10657  00E6  00AF               	movwf	sprintf@f+1
 10658  00E7  0843               	movf	lcd@luminosity,w
 10659  00E8  00CF               	movwf	??_lcd
 10660  00E9  01D0               	clrf	??_lcd+1
 10661  00EA  084F               	movf	??_lcd,w
 10662  00EB  00B0               	movwf	?_sprintf+2
 10663  00EC  0850               	movf	??_lcd+1,w
 10664  00ED  00B1               	movwf	?_sprintf+3
 10665  00EE  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10666  00EF  318C  2409  3180   	fcall	_sprintf
 10667  00F2                     l4980:
 10668                           
 10669                           ;LCD.c: 156: LCDstr(buf);
 10670  00F2  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10671  00F3  3194  242B  3180   	fcall	_LCDstr
 10672  00F6                     l4982:
 10673                           
 10674                           ;LCD.c: 158: if (ctl==1)
 10675  00F6  0020               	movlb	0	; select bank0
 10676  00F7  0345               	decf	lcd@ctl,w
 10677  00F8  1D03               	btfss	3,2
 10678  00F9  28FB               	goto	u3871
 10679  00FA  28FC               	goto	u3870
 10680  00FB                     u3871:
 10681  00FB  2912               	goto	l4992
 10682  00FC                     u3870:
 10683  00FC                     l4984:
 10684                           
 10685                           ;LCD.c: 159: {;LCD.c: 160: LCDcmd(0x8A);
 10686  00FC  308A               	movlw	138
 10687  00FD  3192  22C3  3180   	fcall	_LCDcmd
 10688  0100                     l4986:
 10689                           
 10690                           ;LCD.c: 161: sprintf(buf, "C");
 10691  0100  301E               	movlw	low ((STR_4+5)| (0+32768))
 10692  0101  0020               	movlb	0	; select bank0
 10693  0102  00AE               	movwf	sprintf@f
 10694  0103  3098               	movlw	high ((STR_4+5)| (0+32768))
 10695  0104  00AF               	movwf	sprintf@f+1
 10696  0105  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10697  0106  318C  2409  3180   	fcall	_sprintf
 10698  0109                     l4988:
 10699                           
 10700                           ;LCD.c: 162: LCDstr(buf);
 10701  0109  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10702  010A  3194  242B  3180   	fcall	_LCDstr
 10703  010D                     l4990:
 10704                           
 10705                           ;LCD.c: 163: LCDcmd(0x9A);
 10706  010D  309A               	movlw	154
 10707  010E  3192  22C3  3180   	fcall	_LCDcmd
 10708                           
 10709                           ;LCD.c: 164: }
 10710  0111  2E6C               	goto	l1009
 10711  0112                     l4992:
 10712                           
 10713                           ;LCD.c: 165: else if (ctl==2)
 10714  0112  3002               	movlw	2
 10715  0113  0645               	xorwf	lcd@ctl,w
 10716  0114  1D03               	btfss	3,2
 10717  0115  2917               	goto	u3881
 10718  0116  2918               	goto	u3880
 10719  0117                     u3881:
 10720  0117  292E               	goto	l5002
 10721  0118                     u3880:
 10722  0118                     l4994:
 10723                           
 10724                           ;LCD.c: 166: {;LCD.c: 167: LCDcmd(0x8A);
 10725  0118  308A               	movlw	138
 10726  0119  3192  22C3  3180   	fcall	_LCDcmd
 10727  011C                     l4996:
 10728                           
 10729                           ;LCD.c: 168: sprintf(buf, "T");
 10730  011C  3030               	movlw	low (STR_7| (0+32768))
 10731  011D  0020               	movlb	0	; select bank0
 10732  011E  00AE               	movwf	sprintf@f
 10733  011F  3098               	movlw	high (STR_7| (0+32768))
 10734  0120  00AF               	movwf	sprintf@f+1
 10735  0121  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10736  0122  318C  2409  3180   	fcall	_sprintf
 10737  0125                     l4998:
 10738                           
 10739                           ;LCD.c: 169: LCDstr(buf);
 10740  0125  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10741  0126  3194  242B  3180   	fcall	_LCDstr
 10742  0129                     l5000:
 10743                           
 10744                           ;LCD.c: 170: LCDcmd(0x9A);
 10745  0129  309A               	movlw	154
 10746  012A  3192  22C3  3180   	fcall	_LCDcmd
 10747                           
 10748                           ;LCD.c: 171: }
 10749  012D  2E6C               	goto	l1009
 10750  012E                     l5002:
 10751                           
 10752                           ;LCD.c: 172: else if (ctl== 3)
 10753  012E  3003               	movlw	3
 10754  012F  0645               	xorwf	lcd@ctl,w
 10755  0130  1D03               	btfss	3,2
 10756  0131  2933               	goto	u3891
 10757  0132  2934               	goto	u3890
 10758  0133                     u3891:
 10759  0133  294A               	goto	l5012
 10760  0134                     u3890:
 10761  0134                     l5004:
 10762                           
 10763                           ;LCD.c: 173: {;LCD.c: 174: LCDcmd(0x8A);
 10764  0134  308A               	movlw	138
 10765  0135  3192  22C3  3180   	fcall	_LCDcmd
 10766  0138                     l5006:
 10767                           
 10768                           ;LCD.c: 175: sprintf(buf, "L");
 10769  0138  302C               	movlw	low ((STR_11+2)| (0+32768))
 10770  0139  0020               	movlb	0	; select bank0
 10771  013A  00AE               	movwf	sprintf@f
 10772  013B  3098               	movlw	high ((STR_11+2)| (0+32768))
 10773  013C  00AF               	movwf	sprintf@f+1
 10774  013D  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10775  013E  318C  2409  3180   	fcall	_sprintf
 10776  0141                     l5008:
 10777                           
 10778                           ;LCD.c: 176: LCDstr(buf);
 10779  0141  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10780  0142  3194  242B  3180   	fcall	_LCDstr
 10781  0145                     l5010:
 10782                           
 10783                           ;LCD.c: 177: LCDcmd(0x9A);
 10784  0145  309A               	movlw	154
 10785  0146  3192  22C3  3180   	fcall	_LCDcmd
 10786                           
 10787                           ;LCD.c: 178: }
 10788  0149  2E6C               	goto	l1009
 10789  014A                     l5012:
 10790                           
 10791                           ;LCD.c: 179: else;LCD.c: 180: {;LCD.c: 181: LCDcmd(0x8A);
 10792  014A  308A               	movlw	138
 10793  014B  3192  22C3  3180   	fcall	_LCDcmd
 10794  014E                     l5014:
 10795                           
 10796                           ;LCD.c: 182: sprintf(buf, " ");
 10797  014E  3028               	movlw	low ((STR_54+2)| (0+32768))
 10798  014F  0020               	movlb	0	; select bank0
 10799  0150  00AE               	movwf	sprintf@f
 10800  0151  3098               	movlw	high ((STR_54+2)| (0+32768))
 10801  0152  00AF               	movwf	sprintf@f+1
 10802  0153  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10803  0154  318C  2409  3180   	fcall	_sprintf
 10804  0157                     l5016:
 10805                           
 10806                           ;LCD.c: 183: LCDstr(buf);
 10807  0157  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10808  0158  3194  242B  3180   	fcall	_LCDstr
 10809  015B                     l5018:
 10810                           
 10811                           ;LCD.c: 184: LCDcmd(0x9A);
 10812  015B  309A               	movlw	154
 10813  015C  3192  22C3  3180   	fcall	_LCDcmd
 10814  015F  2E6C               	goto	l1009
 10815  0160                     l5020:
 10816                           
 10817                           ;LCD.c: 188: else;LCD.c: 189: {;LCD.c: 192: if (state ==1)
 10818  0160  0349               	decf	lcd@state,w
 10819  0161  1D03               	btfss	3,2
 10820  0162  2964               	goto	u3901
 10821  0163  2965               	goto	u3900
 10822  0164                     u3901:
 10823  0164  29D0               	goto	l5044
 10824  0165                     u3900:
 10825  0165                     l5022:
 10826                           
 10827                           ;LCD.c: 193: {;LCD.c: 194: LCDcmd(0x80);
 10828  0165  3080               	movlw	128
 10829  0166  3192  22C3  3180   	fcall	_LCDcmd
 10830  0169                     l5024:
 10831                           
 10832                           ;LCD.c: 195: sprintf(buf, "%02d:%02d:%02d", h,m,s);
 10833  0169  3000               	movlw	low (STR_3| (0+32768))
 10834  016A  0020               	movlb	0	; select bank0
 10835  016B  00AE               	movwf	sprintf@f
 10836  016C  3098               	movlw	high (STR_3| (0+32768))
 10837  016D  00AF               	movwf	sprintf@f+1
 10838  016E  0846               	movf	lcd@h,w
 10839  016F  00CF               	movwf	??_lcd
 10840  0170  01D0               	clrf	??_lcd+1
 10841  0171  084F               	movf	??_lcd,w
 10842  0172  00B0               	movwf	?_sprintf+2
 10843  0173  0850               	movf	??_lcd+1,w
 10844  0174  00B1               	movwf	?_sprintf+3
 10845  0175  0847               	movf	lcd@m,w
 10846  0176  00D1               	movwf	??_lcd+2
 10847  0177  01D2               	clrf	??_lcd+3
 10848  0178  0851               	movf	??_lcd+2,w
 10849  0179  00B2               	movwf	?_sprintf+4
 10850  017A  0852               	movf	??_lcd+3,w
 10851  017B  00B3               	movwf	?_sprintf+5
 10852  017C  0848               	movf	lcd@s,w
 10853  017D  00D3               	movwf	??_lcd+4
 10854  017E  01D4               	clrf	??_lcd+5
 10855  017F  0853               	movf	??_lcd+4,w
 10856  0180  00B4               	movwf	?_sprintf+6
 10857  0181  0854               	movf	??_lcd+5,w
 10858  0182  00B5               	movwf	?_sprintf+7
 10859  0183  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10860  0184  318C  2409  3180   	fcall	_sprintf
 10861  0187                     l5026:
 10862                           
 10863                           ;LCD.c: 196: LCDstr(buf);
 10864  0187  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10865  0188  3194  242B  3180   	fcall	_LCDstr
 10866  018B                     l5028:
 10867                           
 10868                           ;LCD.c: 198: LCDcmd(0x8A);
 10869  018B  308A               	movlw	138
 10870  018C  3192  22C3  3180   	fcall	_LCDcmd
 10871  018F                     l5030:
 10872                           
 10873                           ;LCD.c: 199: sprintf(buf, "CTL");
 10874  018F  302A               	movlw	low (STR_11| (0+32768))
 10875  0190  0020               	movlb	0	; select bank0
 10876  0191  00AE               	movwf	sprintf@f
 10877  0192  3098               	movlw	high (STR_11| (0+32768))
 10878  0193  00AF               	movwf	sprintf@f+1
 10879  0194  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10880  0195  318C  2409  3180   	fcall	_sprintf
 10881                           
 10882                           ;LCD.c: 200: LCDstr(buf);
 10883  0198  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10884  0199  3194  242B  3180   	fcall	_LCDstr
 10885  019C                     l5032:
 10886                           
 10887                           ;LCD.c: 202: LCDcmd(0xc0);
 10888  019C  30C0               	movlw	192
 10889  019D  3192  22C3  3180   	fcall	_LCDcmd
 10890  01A0                     l5034:
 10891                           
 10892                           ;LCD.c: 203: sprintf(buf, "%02d C", temperature);
 10893  01A0  3019               	movlw	low (STR_4| (0+32768))
 10894  01A1  0020               	movlb	0	; select bank0
 10895  01A2  00AE               	movwf	sprintf@f
 10896  01A3  3098               	movlw	high (STR_4| (0+32768))
 10897  01A4  00AF               	movwf	sprintf@f+1
 10898  01A5  0866               	movf	lcd@temperature,w
 10899  01A6  00CF               	movwf	??_lcd
 10900  01A7  01D0               	clrf	??_lcd+1
 10901  01A8  084F               	movf	??_lcd,w
 10902  01A9  00B0               	movwf	?_sprintf+2
 10903  01AA  0850               	movf	??_lcd+1,w
 10904  01AB  00B1               	movwf	?_sprintf+3
 10905  01AC  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10906  01AD  318C  2409  3180   	fcall	_sprintf
 10907  01B0                     l5036:
 10908                           
 10909                           ;LCD.c: 204: LCDstr(buf);
 10910  01B0  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10911  01B1  3194  242B  3180   	fcall	_LCDstr
 10912  01B4                     l5038:
 10913                           
 10914                           ;LCD.c: 206: LCDcmd(0xce);
 10915  01B4  30CE               	movlw	206
 10916  01B5  3192  22C3  3180   	fcall	_LCDcmd
 10917                           
 10918                           ;LCD.c: 207: sprintf(buf, "L%01d", luminosity);
 10919  01B8  3020               	movlw	low (STR_5| (0+32768))
 10920  01B9  0020               	movlb	0	; select bank0
 10921  01BA  00AE               	movwf	sprintf@f
 10922  01BB  3098               	movlw	high (STR_5| (0+32768))
 10923  01BC  00AF               	movwf	sprintf@f+1
 10924  01BD  0843               	movf	lcd@luminosity,w
 10925  01BE  00CF               	movwf	??_lcd
 10926  01BF  01D0               	clrf	??_lcd+1
 10927  01C0  084F               	movf	??_lcd,w
 10928  01C1  00B0               	movwf	?_sprintf+2
 10929  01C2  0850               	movf	??_lcd+1,w
 10930  01C3  00B1               	movwf	?_sprintf+3
 10931  01C4  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10932  01C5  318C  2409  3180   	fcall	_sprintf
 10933  01C8                     l5040:
 10934                           
 10935                           ;LCD.c: 208: LCDstr(buf);
 10936  01C8  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10937  01C9  3194  242B  3180   	fcall	_LCDstr
 10938  01CC                     l5042:
 10939                           
 10940                           ;LCD.c: 209: LCDcmd(0x81);
 10941  01CC  3081               	movlw	129
 10942  01CD  3192  22C3  3180   	fcall	_LCDcmd
 10943  01D0                     l5044:
 10944                           
 10945                           ;LCD.c: 211: };LCD.c: 212: if (state ==2)
 10946  01D0  3002               	movlw	2
 10947  01D1  0020               	movlb	0	; select bank0
 10948  01D2  0649               	xorwf	lcd@state,w
 10949  01D3  1D03               	btfss	3,2
 10950  01D4  29D6               	goto	u3911
 10951  01D5  29D7               	goto	u3910
 10952  01D6                     u3911:
 10953  01D6  2A42               	goto	l5068
 10954  01D7                     u3910:
 10955  01D7                     l5046:
 10956                           
 10957                           ;LCD.c: 213: {;LCD.c: 214: LCDcmd(0x80);
 10958  01D7  3080               	movlw	128
 10959  01D8  3192  22C3  3180   	fcall	_LCDcmd
 10960  01DB                     l5048:
 10961                           
 10962                           ;LCD.c: 215: sprintf(buf, "%02d:%02d:%02d", h,m,s);
 10963  01DB  3000               	movlw	low (STR_3| (0+32768))
 10964  01DC  0020               	movlb	0	; select bank0
 10965  01DD  00AE               	movwf	sprintf@f
 10966  01DE  3098               	movlw	high (STR_3| (0+32768))
 10967  01DF  00AF               	movwf	sprintf@f+1
 10968  01E0  0846               	movf	lcd@h,w
 10969  01E1  00CF               	movwf	??_lcd
 10970  01E2  01D0               	clrf	??_lcd+1
 10971  01E3  084F               	movf	??_lcd,w
 10972  01E4  00B0               	movwf	?_sprintf+2
 10973  01E5  0850               	movf	??_lcd+1,w
 10974  01E6  00B1               	movwf	?_sprintf+3
 10975  01E7  0847               	movf	lcd@m,w
 10976  01E8  00D1               	movwf	??_lcd+2
 10977  01E9  01D2               	clrf	??_lcd+3
 10978  01EA  0851               	movf	??_lcd+2,w
 10979  01EB  00B2               	movwf	?_sprintf+4
 10980  01EC  0852               	movf	??_lcd+3,w
 10981  01ED  00B3               	movwf	?_sprintf+5
 10982  01EE  0848               	movf	lcd@s,w
 10983  01EF  00D3               	movwf	??_lcd+4
 10984  01F0  01D4               	clrf	??_lcd+5
 10985  01F1  0853               	movf	??_lcd+4,w
 10986  01F2  00B4               	movwf	?_sprintf+6
 10987  01F3  0854               	movf	??_lcd+5,w
 10988  01F4  00B5               	movwf	?_sprintf+7
 10989  01F5  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10990  01F6  318C  2409  3180   	fcall	_sprintf
 10991  01F9                     l5050:
 10992                           
 10993                           ;LCD.c: 216: LCDstr(buf);
 10994  01F9  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10995  01FA  3194  242B  3180   	fcall	_LCDstr
 10996  01FD                     l5052:
 10997                           
 10998                           ;LCD.c: 218: LCDcmd(0x8A);
 10999  01FD  308A               	movlw	138
 11000  01FE  3192  22C3  3180   	fcall	_LCDcmd
 11001  0201                     l5054:
 11002                           
 11003                           ;LCD.c: 219: sprintf(buf, "CTL");
 11004  0201  302A               	movlw	low (STR_11| (0+32768))
 11005  0202  0020               	movlb	0	; select bank0
 11006  0203  00AE               	movwf	sprintf@f
 11007  0204  3098               	movlw	high (STR_11| (0+32768))
 11008  0205  00AF               	movwf	sprintf@f+1
 11009  0206  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11010  0207  318C  2409  3180   	fcall	_sprintf
 11011                           
 11012                           ;LCD.c: 220: LCDstr(buf);
 11013  020A  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11014  020B  3194  242B  3180   	fcall	_LCDstr
 11015  020E                     l5056:
 11016                           
 11017                           ;LCD.c: 222: LCDcmd(0xc0);
 11018  020E  30C0               	movlw	192
 11019  020F  3192  22C3  3180   	fcall	_LCDcmd
 11020  0212                     l5058:
 11021                           
 11022                           ;LCD.c: 223: sprintf(buf, "%02d C", temperature);
 11023  0212  3019               	movlw	low (STR_4| (0+32768))
 11024  0213  0020               	movlb	0	; select bank0
 11025  0214  00AE               	movwf	sprintf@f
 11026  0215  3098               	movlw	high (STR_4| (0+32768))
 11027  0216  00AF               	movwf	sprintf@f+1
 11028  0217  0866               	movf	lcd@temperature,w
 11029  0218  00CF               	movwf	??_lcd
 11030  0219  01D0               	clrf	??_lcd+1
 11031  021A  084F               	movf	??_lcd,w
 11032  021B  00B0               	movwf	?_sprintf+2
 11033  021C  0850               	movf	??_lcd+1,w
 11034  021D  00B1               	movwf	?_sprintf+3
 11035  021E  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11036  021F  318C  2409  3180   	fcall	_sprintf
 11037  0222                     l5060:
 11038                           
 11039                           ;LCD.c: 224: LCDstr(buf);
 11040  0222  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11041  0223  3194  242B  3180   	fcall	_LCDstr
 11042  0226                     l5062:
 11043                           
 11044                           ;LCD.c: 226: LCDcmd(0xce);
 11045  0226  30CE               	movlw	206
 11046  0227  3192  22C3  3180   	fcall	_LCDcmd
 11047                           
 11048                           ;LCD.c: 227: sprintf(buf, "L%01d", luminosity);
 11049  022A  3020               	movlw	low (STR_5| (0+32768))
 11050  022B  0020               	movlb	0	; select bank0
 11051  022C  00AE               	movwf	sprintf@f
 11052  022D  3098               	movlw	high (STR_5| (0+32768))
 11053  022E  00AF               	movwf	sprintf@f+1
 11054  022F  0843               	movf	lcd@luminosity,w
 11055  0230  00CF               	movwf	??_lcd
 11056  0231  01D0               	clrf	??_lcd+1
 11057  0232  084F               	movf	??_lcd,w
 11058  0233  00B0               	movwf	?_sprintf+2
 11059  0234  0850               	movf	??_lcd+1,w
 11060  0235  00B1               	movwf	?_sprintf+3
 11061  0236  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11062  0237  318C  2409  3180   	fcall	_sprintf
 11063  023A                     l5064:
 11064                           
 11065                           ;LCD.c: 228: LCDstr(buf);
 11066  023A  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11067  023B  3194  242B  3180   	fcall	_LCDstr
 11068  023E                     l5066:
 11069                           
 11070                           ;LCD.c: 229: LCDcmd(0x84);
 11071  023E  3084               	movlw	132
 11072  023F  3192  22C3  3180   	fcall	_LCDcmd
 11073  0242                     l5068:
 11074                           
 11075                           ;LCD.c: 230: };LCD.c: 231: if (state ==3)
 11076  0242  3003               	movlw	3
 11077  0243  0020               	movlb	0	; select bank0
 11078  0244  0649               	xorwf	lcd@state,w
 11079  0245  1D03               	btfss	3,2
 11080  0246  2A48               	goto	u3921
 11081  0247  2A49               	goto	u3920
 11082  0248                     u3921:
 11083  0248  2AB4               	goto	l5092
 11084  0249                     u3920:
 11085  0249                     l5070:
 11086                           
 11087                           ;LCD.c: 232: {;LCD.c: 233: LCDcmd(0x80);
 11088  0249  3080               	movlw	128
 11089  024A  3192  22C3  3180   	fcall	_LCDcmd
 11090  024D                     l5072:
 11091                           
 11092                           ;LCD.c: 234: sprintf(buf, "%02d:%02d:%02d", h,m,s);
 11093  024D  3000               	movlw	low (STR_3| (0+32768))
 11094  024E  0020               	movlb	0	; select bank0
 11095  024F  00AE               	movwf	sprintf@f
 11096  0250  3098               	movlw	high (STR_3| (0+32768))
 11097  0251  00AF               	movwf	sprintf@f+1
 11098  0252  0846               	movf	lcd@h,w
 11099  0253  00CF               	movwf	??_lcd
 11100  0254  01D0               	clrf	??_lcd+1
 11101  0255  084F               	movf	??_lcd,w
 11102  0256  00B0               	movwf	?_sprintf+2
 11103  0257  0850               	movf	??_lcd+1,w
 11104  0258  00B1               	movwf	?_sprintf+3
 11105  0259  0847               	movf	lcd@m,w
 11106  025A  00D1               	movwf	??_lcd+2
 11107  025B  01D2               	clrf	??_lcd+3
 11108  025C  0851               	movf	??_lcd+2,w
 11109  025D  00B2               	movwf	?_sprintf+4
 11110  025E  0852               	movf	??_lcd+3,w
 11111  025F  00B3               	movwf	?_sprintf+5
 11112  0260  0848               	movf	lcd@s,w
 11113  0261  00D3               	movwf	??_lcd+4
 11114  0262  01D4               	clrf	??_lcd+5
 11115  0263  0853               	movf	??_lcd+4,w
 11116  0264  00B4               	movwf	?_sprintf+6
 11117  0265  0854               	movf	??_lcd+5,w
 11118  0266  00B5               	movwf	?_sprintf+7
 11119  0267  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11120  0268  318C  2409  3180   	fcall	_sprintf
 11121  026B                     l5074:
 11122                           
 11123                           ;LCD.c: 235: LCDstr(buf);
 11124  026B  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11125  026C  3194  242B  3180   	fcall	_LCDstr
 11126  026F                     l5076:
 11127                           
 11128                           ;LCD.c: 237: LCDcmd(0x8A);
 11129  026F  308A               	movlw	138
 11130  0270  3192  22C3  3180   	fcall	_LCDcmd
 11131  0273                     l5078:
 11132                           
 11133                           ;LCD.c: 238: sprintf(buf, "CTL");
 11134  0273  302A               	movlw	low (STR_11| (0+32768))
 11135  0274  0020               	movlb	0	; select bank0
 11136  0275  00AE               	movwf	sprintf@f
 11137  0276  3098               	movlw	high (STR_11| (0+32768))
 11138  0277  00AF               	movwf	sprintf@f+1
 11139  0278  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11140  0279  318C  2409  3180   	fcall	_sprintf
 11141                           
 11142                           ;LCD.c: 239: LCDstr(buf);
 11143  027C  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11144  027D  3194  242B  3180   	fcall	_LCDstr
 11145  0280                     l5080:
 11146                           
 11147                           ;LCD.c: 241: LCDcmd(0xc0);
 11148  0280  30C0               	movlw	192
 11149  0281  3192  22C3  3180   	fcall	_LCDcmd
 11150  0284                     l5082:
 11151                           
 11152                           ;LCD.c: 242: sprintf(buf, "%02d C", temperature);
 11153  0284  3019               	movlw	low (STR_4| (0+32768))
 11154  0285  0020               	movlb	0	; select bank0
 11155  0286  00AE               	movwf	sprintf@f
 11156  0287  3098               	movlw	high (STR_4| (0+32768))
 11157  0288  00AF               	movwf	sprintf@f+1
 11158  0289  0866               	movf	lcd@temperature,w
 11159  028A  00CF               	movwf	??_lcd
 11160  028B  01D0               	clrf	??_lcd+1
 11161  028C  084F               	movf	??_lcd,w
 11162  028D  00B0               	movwf	?_sprintf+2
 11163  028E  0850               	movf	??_lcd+1,w
 11164  028F  00B1               	movwf	?_sprintf+3
 11165  0290  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11166  0291  318C  2409  3180   	fcall	_sprintf
 11167  0294                     l5084:
 11168                           
 11169                           ;LCD.c: 243: LCDstr(buf);
 11170  0294  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11171  0295  3194  242B  3180   	fcall	_LCDstr
 11172  0298                     l5086:
 11173                           
 11174                           ;LCD.c: 245: LCDcmd(0xce);
 11175  0298  30CE               	movlw	206
 11176  0299  3192  22C3  3180   	fcall	_LCDcmd
 11177                           
 11178                           ;LCD.c: 246: sprintf(buf, "L%01d", luminosity);
 11179  029C  3020               	movlw	low (STR_5| (0+32768))
 11180  029D  0020               	movlb	0	; select bank0
 11181  029E  00AE               	movwf	sprintf@f
 11182  029F  3098               	movlw	high (STR_5| (0+32768))
 11183  02A0  00AF               	movwf	sprintf@f+1
 11184  02A1  0843               	movf	lcd@luminosity,w
 11185  02A2  00CF               	movwf	??_lcd
 11186  02A3  01D0               	clrf	??_lcd+1
 11187  02A4  084F               	movf	??_lcd,w
 11188  02A5  00B0               	movwf	?_sprintf+2
 11189  02A6  0850               	movf	??_lcd+1,w
 11190  02A7  00B1               	movwf	?_sprintf+3
 11191  02A8  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11192  02A9  318C  2409  3180   	fcall	_sprintf
 11193  02AC                     l5088:
 11194                           
 11195                           ;LCD.c: 247: LCDstr(buf);
 11196  02AC  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11197  02AD  3194  242B  3180   	fcall	_LCDstr
 11198  02B0                     l5090:
 11199                           
 11200                           ;LCD.c: 248: LCDcmd(0x87);
 11201  02B0  3087               	movlw	135
 11202  02B1  3192  22C3  3180   	fcall	_LCDcmd
 11203  02B4                     l5092:
 11204                           
 11205                           ;LCD.c: 249: };LCD.c: 252: if (state ==4)
 11206  02B4  3004               	movlw	4
 11207  02B5  0020               	movlb	0	; select bank0
 11208  02B6  0649               	xorwf	lcd@state,w
 11209  02B7  1D03               	btfss	3,2
 11210  02B8  2ABA               	goto	u3931
 11211  02B9  2ABB               	goto	u3930
 11212  02BA                     u3931:
 11213  02BA  2B26               	goto	l5116
 11214  02BB                     u3930:
 11215  02BB                     l5094:
 11216                           
 11217                           ;LCD.c: 253: {;LCD.c: 254: LCDcmd(0x8A);
 11218  02BB  308A               	movlw	138
 11219  02BC  3192  22C3  3180   	fcall	_LCDcmd
 11220  02BF                     l5096:
 11221                           
 11222                           ;LCD.c: 255: sprintf(buf, "CTL");
 11223  02BF  302A               	movlw	low (STR_11| (0+32768))
 11224  02C0  0020               	movlb	0	; select bank0
 11225  02C1  00AE               	movwf	sprintf@f
 11226  02C2  3098               	movlw	high (STR_11| (0+32768))
 11227  02C3  00AF               	movwf	sprintf@f+1
 11228  02C4  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11229  02C5  318C  2409  3180   	fcall	_sprintf
 11230  02C8                     l5098:
 11231                           
 11232                           ;LCD.c: 256: LCDstr(buf);
 11233  02C8  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11234  02C9  3194  242B  3180   	fcall	_LCDstr
 11235  02CC                     l5100:
 11236                           
 11237                           ;LCD.c: 258: LCDcmd(0xc0);
 11238  02CC  30C0               	movlw	192
 11239  02CD  3192  22C3  3180   	fcall	_LCDcmd
 11240  02D0                     l5102:
 11241                           
 11242                           ;LCD.c: 259: sprintf(buf, "%02d C", temperature);
 11243  02D0  3019               	movlw	low (STR_4| (0+32768))
 11244  02D1  0020               	movlb	0	; select bank0
 11245  02D2  00AE               	movwf	sprintf@f
 11246  02D3  3098               	movlw	high (STR_4| (0+32768))
 11247  02D4  00AF               	movwf	sprintf@f+1
 11248  02D5  0866               	movf	lcd@temperature,w
 11249  02D6  00CF               	movwf	??_lcd
 11250  02D7  01D0               	clrf	??_lcd+1
 11251  02D8  084F               	movf	??_lcd,w
 11252  02D9  00B0               	movwf	?_sprintf+2
 11253  02DA  0850               	movf	??_lcd+1,w
 11254  02DB  00B1               	movwf	?_sprintf+3
 11255  02DC  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11256  02DD  318C  2409  3180   	fcall	_sprintf
 11257                           
 11258                           ;LCD.c: 260: LCDstr(buf);
 11259  02E0  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11260  02E1  3194  242B  3180   	fcall	_LCDstr
 11261  02E4                     l5104:
 11262                           
 11263                           ;LCD.c: 262: LCDcmd(0xce);
 11264  02E4  30CE               	movlw	206
 11265  02E5  3192  22C3  3180   	fcall	_LCDcmd
 11266  02E8                     l5106:
 11267                           
 11268                           ;LCD.c: 263: sprintf(buf, "L%01d", luminosity);
 11269  02E8  3020               	movlw	low (STR_5| (0+32768))
 11270  02E9  0020               	movlb	0	; select bank0
 11271  02EA  00AE               	movwf	sprintf@f
 11272  02EB  3098               	movlw	high (STR_5| (0+32768))
 11273  02EC  00AF               	movwf	sprintf@f+1
 11274  02ED  0843               	movf	lcd@luminosity,w
 11275  02EE  00CF               	movwf	??_lcd
 11276  02EF  01D0               	clrf	??_lcd+1
 11277  02F0  084F               	movf	??_lcd,w
 11278  02F1  00B0               	movwf	?_sprintf+2
 11279  02F2  0850               	movf	??_lcd+1,w
 11280  02F3  00B1               	movwf	?_sprintf+3
 11281  02F4  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11282  02F5  318C  2409  3180   	fcall	_sprintf
 11283  02F8                     l5108:
 11284                           
 11285                           ;LCD.c: 264: LCDstr(buf);
 11286  02F8  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11287  02F9  3194  242B  3180   	fcall	_LCDstr
 11288  02FC                     l5110:
 11289                           
 11290                           ;LCD.c: 265: LCDcmd(0x80);
 11291  02FC  3080               	movlw	128
 11292  02FD  3192  22C3  3180   	fcall	_LCDcmd
 11293                           
 11294                           ;LCD.c: 266: sprintf(buf, "%02d:%02d:%02d", alah, alam, alas);
 11295  0300  3000               	movlw	low (STR_3| (0+32768))
 11296  0301  0020               	movlb	0	; select bank0
 11297  0302  00AE               	movwf	sprintf@f
 11298  0303  3098               	movlw	high (STR_3| (0+32768))
 11299  0304  00AF               	movwf	sprintf@f+1
 11300  0305  084C               	movf	lcd@alah,w
 11301  0306  00CF               	movwf	??_lcd
 11302  0307  01D0               	clrf	??_lcd+1
 11303  0308  084F               	movf	??_lcd,w
 11304  0309  00B0               	movwf	?_sprintf+2
 11305  030A  0850               	movf	??_lcd+1,w
 11306  030B  00B1               	movwf	?_sprintf+3
 11307  030C  084D               	movf	lcd@alam,w
 11308  030D  00D1               	movwf	??_lcd+2
 11309  030E  01D2               	clrf	??_lcd+3
 11310  030F  0851               	movf	??_lcd+2,w
 11311  0310  00B2               	movwf	?_sprintf+4
 11312  0311  0852               	movf	??_lcd+3,w
 11313  0312  00B3               	movwf	?_sprintf+5
 11314  0313  084E               	movf	lcd@alas,w
 11315  0314  00D3               	movwf	??_lcd+4
 11316  0315  01D4               	clrf	??_lcd+5
 11317  0316  0853               	movf	??_lcd+4,w
 11318  0317  00B4               	movwf	?_sprintf+6
 11319  0318  0854               	movf	??_lcd+5,w
 11320  0319  00B5               	movwf	?_sprintf+7
 11321  031A  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11322  031B  318C  2409  3180   	fcall	_sprintf
 11323  031E                     l5112:
 11324                           
 11325                           ;LCD.c: 267: LCDstr(buf);
 11326  031E  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11327  031F  3194  242B  3180   	fcall	_LCDstr
 11328  0322                     l5114:
 11329                           
 11330                           ;LCD.c: 268: LCDcmd(0x8a);
 11331  0322  308A               	movlw	138
 11332  0323  3192  22C3  3180   	fcall	_LCDcmd
 11333  0326                     l5116:
 11334                           
 11335                           ;LCD.c: 269: };LCD.c: 271: if (state ==5)
 11336  0326  3005               	movlw	5
 11337  0327  0020               	movlb	0	; select bank0
 11338  0328  0649               	xorwf	lcd@state,w
 11339  0329  1D03               	btfss	3,2
 11340  032A  2B2C               	goto	u3941
 11341  032B  2B2D               	goto	u3940
 11342  032C                     u3941:
 11343  032C  2B98               	goto	l5140
 11344  032D                     u3940:
 11345  032D                     l5118:
 11346                           
 11347                           ;LCD.c: 272: {;LCD.c: 273: LCDcmd(0x8A);
 11348  032D  308A               	movlw	138
 11349  032E  3192  22C3  3180   	fcall	_LCDcmd
 11350  0331                     l5120:
 11351                           
 11352                           ;LCD.c: 274: sprintf(buf, "CTL");
 11353  0331  302A               	movlw	low (STR_11| (0+32768))
 11354  0332  0020               	movlb	0	; select bank0
 11355  0333  00AE               	movwf	sprintf@f
 11356  0334  3098               	movlw	high (STR_11| (0+32768))
 11357  0335  00AF               	movwf	sprintf@f+1
 11358  0336  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11359  0337  318C  2409  3180   	fcall	_sprintf
 11360  033A                     l5122:
 11361                           
 11362                           ;LCD.c: 275: LCDstr(buf);
 11363  033A  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11364  033B  3194  242B  3180   	fcall	_LCDstr
 11365  033E                     l5124:
 11366                           
 11367                           ;LCD.c: 277: LCDcmd(0xc0);
 11368  033E  30C0               	movlw	192
 11369  033F  3192  22C3  3180   	fcall	_LCDcmd
 11370  0342                     l5126:
 11371                           
 11372                           ;LCD.c: 278: sprintf(buf, "%02d C", temperature);
 11373  0342  3019               	movlw	low (STR_4| (0+32768))
 11374  0343  0020               	movlb	0	; select bank0
 11375  0344  00AE               	movwf	sprintf@f
 11376  0345  3098               	movlw	high (STR_4| (0+32768))
 11377  0346  00AF               	movwf	sprintf@f+1
 11378  0347  0866               	movf	lcd@temperature,w
 11379  0348  00CF               	movwf	??_lcd
 11380  0349  01D0               	clrf	??_lcd+1
 11381  034A  084F               	movf	??_lcd,w
 11382  034B  00B0               	movwf	?_sprintf+2
 11383  034C  0850               	movf	??_lcd+1,w
 11384  034D  00B1               	movwf	?_sprintf+3
 11385  034E  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11386  034F  318C  2409  3180   	fcall	_sprintf
 11387                           
 11388                           ;LCD.c: 279: LCDstr(buf);
 11389  0352  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11390  0353  3194  242B  3180   	fcall	_LCDstr
 11391  0356                     l5128:
 11392                           
 11393                           ;LCD.c: 281: LCDcmd(0xce);
 11394  0356  30CE               	movlw	206
 11395  0357  3192  22C3  3180   	fcall	_LCDcmd
 11396  035A                     l5130:
 11397                           
 11398                           ;LCD.c: 282: sprintf(buf, "L%01d", luminosity);
 11399  035A  3020               	movlw	low (STR_5| (0+32768))
 11400  035B  0020               	movlb	0	; select bank0
 11401  035C  00AE               	movwf	sprintf@f
 11402  035D  3098               	movlw	high (STR_5| (0+32768))
 11403  035E  00AF               	movwf	sprintf@f+1
 11404  035F  0843               	movf	lcd@luminosity,w
 11405  0360  00CF               	movwf	??_lcd
 11406  0361  01D0               	clrf	??_lcd+1
 11407  0362  084F               	movf	??_lcd,w
 11408  0363  00B0               	movwf	?_sprintf+2
 11409  0364  0850               	movf	??_lcd+1,w
 11410  0365  00B1               	movwf	?_sprintf+3
 11411  0366  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11412  0367  318C  2409  3180   	fcall	_sprintf
 11413  036A                     l5132:
 11414                           
 11415                           ;LCD.c: 283: LCDstr(buf);
 11416  036A  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11417  036B  3194  242B  3180   	fcall	_LCDstr
 11418  036E                     l5134:
 11419                           
 11420                           ;LCD.c: 284: LCDcmd(0x80);
 11421  036E  3080               	movlw	128
 11422  036F  3192  22C3  3180   	fcall	_LCDcmd
 11423                           
 11424                           ;LCD.c: 285: sprintf(buf, "%02d:%02d:%02d", alah, alam, alas);
 11425  0372  3000               	movlw	low (STR_3| (0+32768))
 11426  0373  0020               	movlb	0	; select bank0
 11427  0374  00AE               	movwf	sprintf@f
 11428  0375  3098               	movlw	high (STR_3| (0+32768))
 11429  0376  00AF               	movwf	sprintf@f+1
 11430  0377  084C               	movf	lcd@alah,w
 11431  0378  00CF               	movwf	??_lcd
 11432  0379  01D0               	clrf	??_lcd+1
 11433  037A  084F               	movf	??_lcd,w
 11434  037B  00B0               	movwf	?_sprintf+2
 11435  037C  0850               	movf	??_lcd+1,w
 11436  037D  00B1               	movwf	?_sprintf+3
 11437  037E  084D               	movf	lcd@alam,w
 11438  037F  00D1               	movwf	??_lcd+2
 11439  0380  01D2               	clrf	??_lcd+3
 11440  0381  0851               	movf	??_lcd+2,w
 11441  0382  00B2               	movwf	?_sprintf+4
 11442  0383  0852               	movf	??_lcd+3,w
 11443  0384  00B3               	movwf	?_sprintf+5
 11444  0385  084E               	movf	lcd@alas,w
 11445  0386  00D3               	movwf	??_lcd+4
 11446  0387  01D4               	clrf	??_lcd+5
 11447  0388  0853               	movf	??_lcd+4,w
 11448  0389  00B4               	movwf	?_sprintf+6
 11449  038A  0854               	movf	??_lcd+5,w
 11450  038B  00B5               	movwf	?_sprintf+7
 11451  038C  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11452  038D  318C  2409  3180   	fcall	_sprintf
 11453  0390                     l5136:
 11454                           
 11455                           ;LCD.c: 286: LCDstr(buf);
 11456  0390  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11457  0391  3194  242B  3180   	fcall	_LCDstr
 11458  0394                     l5138:
 11459                           
 11460                           ;LCD.c: 287: LCDcmd(0x81);
 11461  0394  3081               	movlw	129
 11462  0395  3192  22C3  3180   	fcall	_LCDcmd
 11463  0398                     l5140:
 11464                           
 11465                           ;LCD.c: 289: };LCD.c: 291: if (state ==6)
 11466  0398  3006               	movlw	6
 11467  0399  0020               	movlb	0	; select bank0
 11468  039A  0649               	xorwf	lcd@state,w
 11469  039B  1D03               	btfss	3,2
 11470  039C  2B9E               	goto	u3951
 11471  039D  2B9F               	goto	u3950
 11472  039E                     u3951:
 11473  039E  2C0A               	goto	l5164
 11474  039F                     u3950:
 11475  039F                     l5142:
 11476                           
 11477                           ;LCD.c: 292: {;LCD.c: 293: LCDcmd(0x8A);
 11478  039F  308A               	movlw	138
 11479  03A0  3192  22C3  3180   	fcall	_LCDcmd
 11480  03A3                     l5144:
 11481                           
 11482                           ;LCD.c: 294: sprintf(buf, "CTL");
 11483  03A3  302A               	movlw	low (STR_11| (0+32768))
 11484  03A4  0020               	movlb	0	; select bank0
 11485  03A5  00AE               	movwf	sprintf@f
 11486  03A6  3098               	movlw	high (STR_11| (0+32768))
 11487  03A7  00AF               	movwf	sprintf@f+1
 11488  03A8  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11489  03A9  318C  2409  3180   	fcall	_sprintf
 11490  03AC                     l5146:
 11491                           
 11492                           ;LCD.c: 295: LCDstr(buf);
 11493  03AC  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11494  03AD  3194  242B  3180   	fcall	_LCDstr
 11495  03B0                     l5148:
 11496                           
 11497                           ;LCD.c: 297: LCDcmd(0xc0);
 11498  03B0  30C0               	movlw	192
 11499  03B1  3192  22C3  3180   	fcall	_LCDcmd
 11500  03B4                     l5150:
 11501                           
 11502                           ;LCD.c: 298: sprintf(buf, "%02d C", temperature);
 11503  03B4  3019               	movlw	low (STR_4| (0+32768))
 11504  03B5  0020               	movlb	0	; select bank0
 11505  03B6  00AE               	movwf	sprintf@f
 11506  03B7  3098               	movlw	high (STR_4| (0+32768))
 11507  03B8  00AF               	movwf	sprintf@f+1
 11508  03B9  0866               	movf	lcd@temperature,w
 11509  03BA  00CF               	movwf	??_lcd
 11510  03BB  01D0               	clrf	??_lcd+1
 11511  03BC  084F               	movf	??_lcd,w
 11512  03BD  00B0               	movwf	?_sprintf+2
 11513  03BE  0850               	movf	??_lcd+1,w
 11514  03BF  00B1               	movwf	?_sprintf+3
 11515  03C0  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11516  03C1  318C  2409  3180   	fcall	_sprintf
 11517                           
 11518                           ;LCD.c: 299: LCDstr(buf);
 11519  03C4  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11520  03C5  3194  242B  3180   	fcall	_LCDstr
 11521  03C8                     l5152:
 11522                           
 11523                           ;LCD.c: 301: LCDcmd(0xce);
 11524  03C8  30CE               	movlw	206
 11525  03C9  3192  22C3  3180   	fcall	_LCDcmd
 11526  03CC                     l5154:
 11527                           
 11528                           ;LCD.c: 302: sprintf(buf, "L%01d", luminosity);
 11529  03CC  3020               	movlw	low (STR_5| (0+32768))
 11530  03CD  0020               	movlb	0	; select bank0
 11531  03CE  00AE               	movwf	sprintf@f
 11532  03CF  3098               	movlw	high (STR_5| (0+32768))
 11533  03D0  00AF               	movwf	sprintf@f+1
 11534  03D1  0843               	movf	lcd@luminosity,w
 11535  03D2  00CF               	movwf	??_lcd
 11536  03D3  01D0               	clrf	??_lcd+1
 11537  03D4  084F               	movf	??_lcd,w
 11538  03D5  00B0               	movwf	?_sprintf+2
 11539  03D6  0850               	movf	??_lcd+1,w
 11540  03D7  00B1               	movwf	?_sprintf+3
 11541  03D8  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11542  03D9  318C  2409  3180   	fcall	_sprintf
 11543  03DC                     l5156:
 11544                           
 11545                           ;LCD.c: 303: LCDstr(buf);
 11546  03DC  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11547  03DD  3194  242B  3180   	fcall	_LCDstr
 11548  03E0                     l5158:
 11549                           
 11550                           ;LCD.c: 304: LCDcmd(0x80);
 11551  03E0  3080               	movlw	128
 11552  03E1  3192  22C3  3180   	fcall	_LCDcmd
 11553                           
 11554                           ;LCD.c: 305: sprintf(buf, "%02d:%02d:%02d", alah, alam, alas);
 11555  03E4  3000               	movlw	low (STR_3| (0+32768))
 11556  03E5  0020               	movlb	0	; select bank0
 11557  03E6  00AE               	movwf	sprintf@f
 11558  03E7  3098               	movlw	high (STR_3| (0+32768))
 11559  03E8  00AF               	movwf	sprintf@f+1
 11560  03E9  084C               	movf	lcd@alah,w
 11561  03EA  00CF               	movwf	??_lcd
 11562  03EB  01D0               	clrf	??_lcd+1
 11563  03EC  084F               	movf	??_lcd,w
 11564  03ED  00B0               	movwf	?_sprintf+2
 11565  03EE  0850               	movf	??_lcd+1,w
 11566  03EF  00B1               	movwf	?_sprintf+3
 11567  03F0  084D               	movf	lcd@alam,w
 11568  03F1  00D1               	movwf	??_lcd+2
 11569  03F2  01D2               	clrf	??_lcd+3
 11570  03F3  0851               	movf	??_lcd+2,w
 11571  03F4  00B2               	movwf	?_sprintf+4
 11572  03F5  0852               	movf	??_lcd+3,w
 11573  03F6  00B3               	movwf	?_sprintf+5
 11574  03F7  084E               	movf	lcd@alas,w
 11575  03F8  00D3               	movwf	??_lcd+4
 11576  03F9  01D4               	clrf	??_lcd+5
 11577  03FA  0853               	movf	??_lcd+4,w
 11578  03FB  00B4               	movwf	?_sprintf+6
 11579  03FC  0854               	movf	??_lcd+5,w
 11580  03FD  00B5               	movwf	?_sprintf+7
 11581  03FE  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11582  03FF  318C  2409  3180   	fcall	_sprintf
 11583  0402                     l5160:
 11584                           
 11585                           ;LCD.c: 306: LCDstr(buf);
 11586  0402  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11587  0403  3194  242B  3180   	fcall	_LCDstr
 11588  0406                     l5162:
 11589                           
 11590                           ;LCD.c: 307: LCDcmd(0x84);
 11591  0406  3084               	movlw	132
 11592  0407  3192  22C3  3180   	fcall	_LCDcmd
 11593  040A                     l5164:
 11594                           
 11595                           ;LCD.c: 309: };LCD.c: 311: if (state ==7)
 11596  040A  3007               	movlw	7
 11597  040B  0020               	movlb	0	; select bank0
 11598  040C  0649               	xorwf	lcd@state,w
 11599  040D  1D03               	btfss	3,2
 11600  040E  2C10               	goto	u3961
 11601  040F  2C11               	goto	u3960
 11602  0410                     u3961:
 11603  0410  2C80               	goto	l5192
 11604  0411                     u3960:
 11605  0411                     l5166:
 11606                           
 11607                           ;LCD.c: 312: {;LCD.c: 313: LCDcmd(0x8A);
 11608  0411  308A               	movlw	138
 11609  0412  3192  22C3  3180   	fcall	_LCDcmd
 11610  0415                     l5168:
 11611                           
 11612                           ;LCD.c: 314: sprintf(buf, "CTL");
 11613  0415  302A               	movlw	low (STR_11| (0+32768))
 11614  0416  0020               	movlb	0	; select bank0
 11615  0417  00AE               	movwf	sprintf@f
 11616  0418  3098               	movlw	high (STR_11| (0+32768))
 11617  0419  00AF               	movwf	sprintf@f+1
 11618  041A  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11619  041B  318C  2409  3180   	fcall	_sprintf
 11620  041E                     l5170:
 11621                           
 11622                           ;LCD.c: 315: LCDstr(buf);
 11623  041E  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11624  041F  3194  242B  3180   	fcall	_LCDstr
 11625  0422                     l5172:
 11626                           
 11627                           ;LCD.c: 317: LCDcmd(0xc0);
 11628  0422  30C0               	movlw	192
 11629  0423  3192  22C3  3180   	fcall	_LCDcmd
 11630  0426                     l5174:
 11631                           
 11632                           ;LCD.c: 318: sprintf(buf, "%02d C", temperature);
 11633  0426  3019               	movlw	low (STR_4| (0+32768))
 11634  0427  0020               	movlb	0	; select bank0
 11635  0428  00AE               	movwf	sprintf@f
 11636  0429  3098               	movlw	high (STR_4| (0+32768))
 11637  042A  00AF               	movwf	sprintf@f+1
 11638  042B  0866               	movf	lcd@temperature,w
 11639  042C  00CF               	movwf	??_lcd
 11640  042D  01D0               	clrf	??_lcd+1
 11641  042E  084F               	movf	??_lcd,w
 11642  042F  00B0               	movwf	?_sprintf+2
 11643  0430  0850               	movf	??_lcd+1,w
 11644  0431  00B1               	movwf	?_sprintf+3
 11645  0432  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11646  0433  318C  2409  3180   	fcall	_sprintf
 11647                           
 11648                           ;LCD.c: 319: LCDstr(buf);
 11649  0436  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11650  0437  3194  242B  3180   	fcall	_LCDstr
 11651  043A                     l5176:
 11652                           
 11653                           ;LCD.c: 321: LCDcmd(0xce);
 11654  043A  30CE               	movlw	206
 11655  043B  3192  22C3  3180   	fcall	_LCDcmd
 11656  043E                     l5178:
 11657                           
 11658                           ;LCD.c: 322: sprintf(buf, "L%01d", luminosity);
 11659  043E  3020               	movlw	low (STR_5| (0+32768))
 11660  043F  0020               	movlb	0	; select bank0
 11661  0440  00AE               	movwf	sprintf@f
 11662  0441  3098               	movlw	high (STR_5| (0+32768))
 11663  0442  00AF               	movwf	sprintf@f+1
 11664  0443  0843               	movf	lcd@luminosity,w
 11665  0444  00CF               	movwf	??_lcd
 11666  0445  01D0               	clrf	??_lcd+1
 11667  0446  084F               	movf	??_lcd,w
 11668  0447  00B0               	movwf	?_sprintf+2
 11669  0448  0850               	movf	??_lcd+1,w
 11670  0449  00B1               	movwf	?_sprintf+3
 11671  044A  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11672  044B  318C  2409  3180   	fcall	_sprintf
 11673  044E                     l5180:
 11674                           
 11675                           ;LCD.c: 323: LCDstr(buf);
 11676  044E  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11677  044F  3194  242B  3180   	fcall	_LCDstr
 11678  0452                     l5182:
 11679                           
 11680                           ;LCD.c: 324: LCDcmd(0x81);
 11681  0452  3081               	movlw	129
 11682  0453  3192  22C3  3180   	fcall	_LCDcmd
 11683  0456                     l5184:
 11684                           
 11685                           ;LCD.c: 325: LCDcmd(0x80);
 11686  0456  3080               	movlw	128
 11687  0457  3192  22C3  3180   	fcall	_LCDcmd
 11688  045A                     l5186:
 11689                           
 11690                           ;LCD.c: 326: sprintf(buf, "%02d:%02d:%02d", alah, alam, alas);
 11691  045A  3000               	movlw	low (STR_3| (0+32768))
 11692  045B  0020               	movlb	0	; select bank0
 11693  045C  00AE               	movwf	sprintf@f
 11694  045D  3098               	movlw	high (STR_3| (0+32768))
 11695  045E  00AF               	movwf	sprintf@f+1
 11696  045F  084C               	movf	lcd@alah,w
 11697  0460  00CF               	movwf	??_lcd
 11698  0461  01D0               	clrf	??_lcd+1
 11699  0462  084F               	movf	??_lcd,w
 11700  0463  00B0               	movwf	?_sprintf+2
 11701  0464  0850               	movf	??_lcd+1,w
 11702  0465  00B1               	movwf	?_sprintf+3
 11703  0466  084D               	movf	lcd@alam,w
 11704  0467  00D1               	movwf	??_lcd+2
 11705  0468  01D2               	clrf	??_lcd+3
 11706  0469  0851               	movf	??_lcd+2,w
 11707  046A  00B2               	movwf	?_sprintf+4
 11708  046B  0852               	movf	??_lcd+3,w
 11709  046C  00B3               	movwf	?_sprintf+5
 11710  046D  084E               	movf	lcd@alas,w
 11711  046E  00D3               	movwf	??_lcd+4
 11712  046F  01D4               	clrf	??_lcd+5
 11713  0470  0853               	movf	??_lcd+4,w
 11714  0471  00B4               	movwf	?_sprintf+6
 11715  0472  0854               	movf	??_lcd+5,w
 11716  0473  00B5               	movwf	?_sprintf+7
 11717  0474  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11718  0475  318C  2409  3180   	fcall	_sprintf
 11719  0478                     l5188:
 11720                           
 11721                           ;LCD.c: 327: LCDstr(buf);
 11722  0478  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11723  0479  3194  242B  3180   	fcall	_LCDstr
 11724  047C                     l5190:
 11725                           
 11726                           ;LCD.c: 328: LCDcmd(0x87);
 11727  047C  3087               	movlw	135
 11728  047D  3192  22C3  3180   	fcall	_LCDcmd
 11729  0480                     l5192:
 11730                           
 11731                           ;LCD.c: 330: };LCD.c: 333: if (state ==8)
 11732  0480  3008               	movlw	8
 11733  0481  0020               	movlb	0	; select bank0
 11734  0482  0649               	xorwf	lcd@state,w
 11735  0483  1D03               	btfss	3,2
 11736  0484  2C86               	goto	u3971
 11737  0485  2C87               	goto	u3970
 11738  0486                     u3971:
 11739  0486  2CF6               	goto	l5220
 11740  0487                     u3970:
 11741  0487                     l5194:
 11742                           
 11743                           ;LCD.c: 334: {;LCD.c: 335: LCDcmd(0x80);
 11744  0487  3080               	movlw	128
 11745  0488  3192  22C3  3180   	fcall	_LCDcmd
 11746  048B                     l5196:
 11747                           
 11748                           ;LCD.c: 336: sprintf(buf, "%02d:%02d:%02d", h,m,s);
 11749  048B  3000               	movlw	low (STR_3| (0+32768))
 11750  048C  0020               	movlb	0	; select bank0
 11751  048D  00AE               	movwf	sprintf@f
 11752  048E  3098               	movlw	high (STR_3| (0+32768))
 11753  048F  00AF               	movwf	sprintf@f+1
 11754  0490  0846               	movf	lcd@h,w
 11755  0491  00CF               	movwf	??_lcd
 11756  0492  01D0               	clrf	??_lcd+1
 11757  0493  084F               	movf	??_lcd,w
 11758  0494  00B0               	movwf	?_sprintf+2
 11759  0495  0850               	movf	??_lcd+1,w
 11760  0496  00B1               	movwf	?_sprintf+3
 11761  0497  0847               	movf	lcd@m,w
 11762  0498  00D1               	movwf	??_lcd+2
 11763  0499  01D2               	clrf	??_lcd+3
 11764  049A  0851               	movf	??_lcd+2,w
 11765  049B  00B2               	movwf	?_sprintf+4
 11766  049C  0852               	movf	??_lcd+3,w
 11767  049D  00B3               	movwf	?_sprintf+5
 11768  049E  0848               	movf	lcd@s,w
 11769  049F  00D3               	movwf	??_lcd+4
 11770  04A0  01D4               	clrf	??_lcd+5
 11771  04A1  0853               	movf	??_lcd+4,w
 11772  04A2  00B4               	movwf	?_sprintf+6
 11773  04A3  0854               	movf	??_lcd+5,w
 11774  04A4  00B5               	movwf	?_sprintf+7
 11775  04A5  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11776  04A6  318C  2409  3180   	fcall	_sprintf
 11777  04A9                     l5198:
 11778                           
 11779                           ;LCD.c: 337: LCDstr(buf);
 11780  04A9  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11781  04AA  3194  242B  3180   	fcall	_LCDstr
 11782  04AD                     l5200:
 11783                           
 11784                           ;LCD.c: 339: LCDcmd(0x8A);
 11785  04AD  308A               	movlw	138
 11786  04AE  3192  22C3  3180   	fcall	_LCDcmd
 11787  04B1                     l5202:
 11788                           
 11789                           ;LCD.c: 340: sprintf(buf, "CTL");
 11790  04B1  302A               	movlw	low (STR_11| (0+32768))
 11791  04B2  0020               	movlb	0	; select bank0
 11792  04B3  00AE               	movwf	sprintf@f
 11793  04B4  3098               	movlw	high (STR_11| (0+32768))
 11794  04B5  00AF               	movwf	sprintf@f+1
 11795  04B6  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11796  04B7  318C  2409  3180   	fcall	_sprintf
 11797                           
 11798                           ;LCD.c: 341: LCDstr(buf);
 11799  04BA  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11800  04BB  3194  242B  3180   	fcall	_LCDstr
 11801  04BE                     l5204:
 11802                           
 11803                           ;LCD.c: 343: LCDcmd(0xce);
 11804  04BE  30CE               	movlw	206
 11805  04BF  3192  22C3  3180   	fcall	_LCDcmd
 11806  04C2                     l5206:
 11807                           
 11808                           ;LCD.c: 344: sprintf(buf, "L%01d", luminosity);
 11809  04C2  3020               	movlw	low (STR_5| (0+32768))
 11810  04C3  0020               	movlb	0	; select bank0
 11811  04C4  00AE               	movwf	sprintf@f
 11812  04C5  3098               	movlw	high (STR_5| (0+32768))
 11813  04C6  00AF               	movwf	sprintf@f+1
 11814  04C7  0843               	movf	lcd@luminosity,w
 11815  04C8  00CF               	movwf	??_lcd
 11816  04C9  01D0               	clrf	??_lcd+1
 11817  04CA  084F               	movf	??_lcd,w
 11818  04CB  00B0               	movwf	?_sprintf+2
 11819  04CC  0850               	movf	??_lcd+1,w
 11820  04CD  00B1               	movwf	?_sprintf+3
 11821  04CE  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11822  04CF  318C  2409  3180   	fcall	_sprintf
 11823  04D2                     l5208:
 11824                           
 11825                           ;LCD.c: 345: LCDstr(buf);
 11826  04D2  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11827  04D3  3194  242B  3180   	fcall	_LCDstr
 11828  04D6                     l5210:
 11829                           
 11830                           ;LCD.c: 346: LCDcmd(0x81);
 11831  04D6  3081               	movlw	129
 11832  04D7  3192  22C3  3180   	fcall	_LCDcmd
 11833  04DA                     l5212:
 11834                           
 11835                           ;LCD.c: 348: LCDcmd(0xc0);
 11836  04DA  30C0               	movlw	192
 11837  04DB  3192  22C3  3180   	fcall	_LCDcmd
 11838  04DE                     l5214:
 11839                           
 11840                           ;LCD.c: 349: sprintf(buf, "%02d C", temperature_alarm);
 11841  04DE  3019               	movlw	low (STR_4| (0+32768))
 11842  04DF  0020               	movlb	0	; select bank0
 11843  04E0  00AE               	movwf	sprintf@f
 11844  04E1  3098               	movlw	high (STR_4| (0+32768))
 11845  04E2  00AF               	movwf	sprintf@f+1
 11846  04E3  084A               	movf	lcd@temperature_alarm,w
 11847  04E4  00CF               	movwf	??_lcd
 11848  04E5  01D0               	clrf	??_lcd+1
 11849  04E6  084F               	movf	??_lcd,w
 11850  04E7  00B0               	movwf	?_sprintf+2
 11851  04E8  0850               	movf	??_lcd+1,w
 11852  04E9  00B1               	movwf	?_sprintf+3
 11853  04EA  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11854  04EB  318C  2409  3180   	fcall	_sprintf
 11855  04EE                     l5216:
 11856                           
 11857                           ;LCD.c: 350: LCDstr(buf);
 11858  04EE  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11859  04EF  3194  242B  3180   	fcall	_LCDstr
 11860  04F2                     l5218:
 11861                           
 11862                           ;LCD.c: 351: LCDcmd(0x8b);
 11863  04F2  308B               	movlw	139
 11864  04F3  3192  22C3  3180   	fcall	_LCDcmd
 11865  04F6                     l5220:
 11866                           
 11867                           ;LCD.c: 352: };LCD.c: 356: if (state ==9)
 11868  04F6  3009               	movlw	9
 11869  04F7  0020               	movlb	0	; select bank0
 11870  04F8  0649               	xorwf	lcd@state,w
 11871  04F9  1D03               	btfss	3,2
 11872  04FA  2CFC               	goto	u3981
 11873  04FB  2CFD               	goto	u3980
 11874  04FC                     u3981:
 11875  04FC  2D6C               	goto	l5248
 11876  04FD                     u3980:
 11877  04FD                     l5222:
 11878                           
 11879                           ;LCD.c: 357: {;LCD.c: 358: LCDcmd(0x80);
 11880  04FD  3080               	movlw	128
 11881  04FE  3192  22C3  3180   	fcall	_LCDcmd
 11882  0501                     l5224:
 11883                           
 11884                           ;LCD.c: 359: sprintf(buf, "%02d:%02d:%02d", h,m,s);
 11885  0501  3000               	movlw	low (STR_3| (0+32768))
 11886  0502  0020               	movlb	0	; select bank0
 11887  0503  00AE               	movwf	sprintf@f
 11888  0504  3098               	movlw	high (STR_3| (0+32768))
 11889  0505  00AF               	movwf	sprintf@f+1
 11890  0506  0846               	movf	lcd@h,w
 11891  0507  00CF               	movwf	??_lcd
 11892  0508  01D0               	clrf	??_lcd+1
 11893  0509  084F               	movf	??_lcd,w
 11894  050A  00B0               	movwf	?_sprintf+2
 11895  050B  0850               	movf	??_lcd+1,w
 11896  050C  00B1               	movwf	?_sprintf+3
 11897  050D  0847               	movf	lcd@m,w
 11898  050E  00D1               	movwf	??_lcd+2
 11899  050F  01D2               	clrf	??_lcd+3
 11900  0510  0851               	movf	??_lcd+2,w
 11901  0511  00B2               	movwf	?_sprintf+4
 11902  0512  0852               	movf	??_lcd+3,w
 11903  0513  00B3               	movwf	?_sprintf+5
 11904  0514  0848               	movf	lcd@s,w
 11905  0515  00D3               	movwf	??_lcd+4
 11906  0516  01D4               	clrf	??_lcd+5
 11907  0517  0853               	movf	??_lcd+4,w
 11908  0518  00B4               	movwf	?_sprintf+6
 11909  0519  0854               	movf	??_lcd+5,w
 11910  051A  00B5               	movwf	?_sprintf+7
 11911  051B  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11912  051C  318C  2409  3180   	fcall	_sprintf
 11913  051F                     l5226:
 11914                           
 11915                           ;LCD.c: 360: LCDstr(buf);
 11916  051F  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11917  0520  3194  242B  3180   	fcall	_LCDstr
 11918  0523                     l5228:
 11919                           
 11920                           ;LCD.c: 362: LCDcmd(0x8A);
 11921  0523  308A               	movlw	138
 11922  0524  3192  22C3  3180   	fcall	_LCDcmd
 11923  0527                     l5230:
 11924                           
 11925                           ;LCD.c: 363: sprintf(buf, "CTL");
 11926  0527  302A               	movlw	low (STR_11| (0+32768))
 11927  0528  0020               	movlb	0	; select bank0
 11928  0529  00AE               	movwf	sprintf@f
 11929  052A  3098               	movlw	high (STR_11| (0+32768))
 11930  052B  00AF               	movwf	sprintf@f+1
 11931  052C  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11932  052D  318C  2409  3180   	fcall	_sprintf
 11933                           
 11934                           ;LCD.c: 364: LCDstr(buf);
 11935  0530  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11936  0531  3194  242B  3180   	fcall	_LCDstr
 11937  0534                     l5232:
 11938                           
 11939                           ;LCD.c: 366: LCDcmd(0xce);
 11940  0534  30CE               	movlw	206
 11941  0535  3192  22C3  3180   	fcall	_LCDcmd
 11942  0538                     l5234:
 11943                           
 11944                           ;LCD.c: 367: sprintf(buf, "L%01d", luminosity);
 11945  0538  3020               	movlw	low (STR_5| (0+32768))
 11946  0539  0020               	movlb	0	; select bank0
 11947  053A  00AE               	movwf	sprintf@f
 11948  053B  3098               	movlw	high (STR_5| (0+32768))
 11949  053C  00AF               	movwf	sprintf@f+1
 11950  053D  0843               	movf	lcd@luminosity,w
 11951  053E  00CF               	movwf	??_lcd
 11952  053F  01D0               	clrf	??_lcd+1
 11953  0540  084F               	movf	??_lcd,w
 11954  0541  00B0               	movwf	?_sprintf+2
 11955  0542  0850               	movf	??_lcd+1,w
 11956  0543  00B1               	movwf	?_sprintf+3
 11957  0544  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11958  0545  318C  2409  3180   	fcall	_sprintf
 11959  0548                     l5236:
 11960                           
 11961                           ;LCD.c: 368: LCDstr(buf);
 11962  0548  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11963  0549  3194  242B  3180   	fcall	_LCDstr
 11964  054C                     l5238:
 11965                           
 11966                           ;LCD.c: 369: LCDcmd(0x81);
 11967  054C  3081               	movlw	129
 11968  054D  3192  22C3  3180   	fcall	_LCDcmd
 11969  0550                     l5240:
 11970                           
 11971                           ;LCD.c: 371: LCDcmd(0xc0);
 11972  0550  30C0               	movlw	192
 11973  0551  3192  22C3  3180   	fcall	_LCDcmd
 11974  0554                     l5242:
 11975                           
 11976                           ;LCD.c: 372: sprintf(buf, "%02d C", temperature_alarm);
 11977  0554  3019               	movlw	low (STR_4| (0+32768))
 11978  0555  0020               	movlb	0	; select bank0
 11979  0556  00AE               	movwf	sprintf@f
 11980  0557  3098               	movlw	high (STR_4| (0+32768))
 11981  0558  00AF               	movwf	sprintf@f+1
 11982  0559  084A               	movf	lcd@temperature_alarm,w
 11983  055A  00CF               	movwf	??_lcd
 11984  055B  01D0               	clrf	??_lcd+1
 11985  055C  084F               	movf	??_lcd,w
 11986  055D  00B0               	movwf	?_sprintf+2
 11987  055E  0850               	movf	??_lcd+1,w
 11988  055F  00B1               	movwf	?_sprintf+3
 11989  0560  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11990  0561  318C  2409  3180   	fcall	_sprintf
 11991  0564                     l5244:
 11992                           
 11993                           ;LCD.c: 373: LCDstr(buf);
 11994  0564  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 11995  0565  3194  242B  3180   	fcall	_LCDstr
 11996  0568                     l5246:
 11997                           
 11998                           ;LCD.c: 374: LCDcmd(0xc1);
 11999  0568  30C1               	movlw	193
 12000  0569  3192  22C3  3180   	fcall	_LCDcmd
 12001  056C                     l5248:
 12002                           
 12003                           ;LCD.c: 375: };LCD.c: 379: if (state ==10)
 12004  056C  300A               	movlw	10
 12005  056D  0020               	movlb	0	; select bank0
 12006  056E  0649               	xorwf	lcd@state,w
 12007  056F  1D03               	btfss	3,2
 12008  0570  2D72               	goto	u3991
 12009  0571  2D73               	goto	u3990
 12010  0572                     u3991:
 12011  0572  2DDE               	goto	l5272
 12012  0573                     u3990:
 12013  0573                     l5250:
 12014                           
 12015                           ;LCD.c: 380: {;LCD.c: 381: LCDcmd(0x80);
 12016  0573  3080               	movlw	128
 12017  0574  3192  22C3  3180   	fcall	_LCDcmd
 12018  0577                     l5252:
 12019                           
 12020                           ;LCD.c: 382: sprintf(buf, "%02d:%02d:%02d", h,m,s);
 12021  0577  3000               	movlw	low (STR_3| (0+32768))
 12022  0578  0020               	movlb	0	; select bank0
 12023  0579  00AE               	movwf	sprintf@f
 12024  057A  3098               	movlw	high (STR_3| (0+32768))
 12025  057B  00AF               	movwf	sprintf@f+1
 12026  057C  0846               	movf	lcd@h,w
 12027  057D  00CF               	movwf	??_lcd
 12028  057E  01D0               	clrf	??_lcd+1
 12029  057F  084F               	movf	??_lcd,w
 12030  0580  00B0               	movwf	?_sprintf+2
 12031  0581  0850               	movf	??_lcd+1,w
 12032  0582  00B1               	movwf	?_sprintf+3
 12033  0583  0847               	movf	lcd@m,w
 12034  0584  00D1               	movwf	??_lcd+2
 12035  0585  01D2               	clrf	??_lcd+3
 12036  0586  0851               	movf	??_lcd+2,w
 12037  0587  00B2               	movwf	?_sprintf+4
 12038  0588  0852               	movf	??_lcd+3,w
 12039  0589  00B3               	movwf	?_sprintf+5
 12040  058A  0848               	movf	lcd@s,w
 12041  058B  00D3               	movwf	??_lcd+4
 12042  058C  01D4               	clrf	??_lcd+5
 12043  058D  0853               	movf	??_lcd+4,w
 12044  058E  00B4               	movwf	?_sprintf+6
 12045  058F  0854               	movf	??_lcd+5,w
 12046  0590  00B5               	movwf	?_sprintf+7
 12047  0591  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 12048  0592  318C  2409  3180   	fcall	_sprintf
 12049  0595                     l5254:
 12050                           
 12051                           ;LCD.c: 383: LCDstr(buf);
 12052  0595  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 12053  0596  3194  242B  3180   	fcall	_LCDstr
 12054  0599                     l5256:
 12055                           
 12056                           ;LCD.c: 385: LCDcmd(0x8A);
 12057  0599  308A               	movlw	138
 12058  059A  3192  22C3  3180   	fcall	_LCDcmd
 12059  059D                     l5258:
 12060                           
 12061                           ;LCD.c: 386: sprintf(buf, "CTL");
 12062  059D  302A               	movlw	low (STR_11| (0+32768))
 12063  059E  0020               	movlb	0	; select bank0
 12064  059F  00AE               	movwf	sprintf@f
 12065  05A0  3098               	movlw	high (STR_11| (0+32768))
 12066  05A1  00AF               	movwf	sprintf@f+1
 12067  05A2  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 12068  05A3  318C  2409  3180   	fcall	_sprintf
 12069                           
 12070                           ;LCD.c: 387: LCDstr(buf);
 12071  05A6  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 12072  05A7  3194  242B  3180   	fcall	_LCDstr
 12073  05AA                     l5260:
 12074                           
 12075                           ;LCD.c: 389: LCDcmd(0xc0);
 12076  05AA  30C0               	movlw	192
 12077  05AB  3192  22C3  3180   	fcall	_LCDcmd
 12078  05AE                     l5262:
 12079                           
 12080                           ;LCD.c: 390: sprintf(buf, "%02d C", temperature);
 12081  05AE  3019               	movlw	low (STR_4| (0+32768))
 12082  05AF  0020               	movlb	0	; select bank0
 12083  05B0  00AE               	movwf	sprintf@f
 12084  05B1  3098               	movlw	high (STR_4| (0+32768))
 12085  05B2  00AF               	movwf	sprintf@f+1
 12086  05B3  0866               	movf	lcd@temperature,w
 12087  05B4  00CF               	movwf	??_lcd
 12088  05B5  01D0               	clrf	??_lcd+1
 12089  05B6  084F               	movf	??_lcd,w
 12090  05B7  00B0               	movwf	?_sprintf+2
 12091  05B8  0850               	movf	??_lcd+1,w
 12092  05B9  00B1               	movwf	?_sprintf+3
 12093  05BA  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 12094  05BB  318C  2409  3180   	fcall	_sprintf
 12095  05BE                     l5264:
 12096                           
 12097                           ;LCD.c: 391: LCDstr(buf);
 12098  05BE  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 12099  05BF  3194  242B  3180   	fcall	_LCDstr
 12100  05C2                     l5266:
 12101                           
 12102                           ;LCD.c: 393: LCDcmd(0xce);
 12103  05C2  30CE               	movlw	206
 12104  05C3  3192  22C3  3180   	fcall	_LCDcmd
 12105                           
 12106                           ;LCD.c: 394: sprintf(buf, "L%01d", luminosity_alarm);
 12107  05C6  3020               	movlw	low (STR_5| (0+32768))
 12108  05C7  0020               	movlb	0	; select bank0
 12109  05C8  00AE               	movwf	sprintf@f
 12110  05C9  3098               	movlw	high (STR_5| (0+32768))
 12111  05CA  00AF               	movwf	sprintf@f+1
 12112  05CB  084B               	movf	lcd@luminosity_alarm,w
 12113  05CC  00CF               	movwf	??_lcd
 12114  05CD  01D0               	clrf	??_lcd+1
 12115  05CE  084F               	movf	??_lcd,w
 12116  05CF  00B0               	movwf	?_sprintf+2
 12117  05D0  0850               	movf	??_lcd+1,w
 12118  05D1  00B1               	movwf	?_sprintf+3
 12119  05D2  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 12120  05D3  318C  2409  3180   	fcall	_sprintf
 12121  05D6                     l5268:
 12122                           
 12123                           ;LCD.c: 395: LCDstr(buf);
 12124  05D6  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 12125  05D7  3194  242B  3180   	fcall	_LCDstr
 12126  05DA                     l5270:
 12127                           
 12128                           ;LCD.c: 396: LCDcmd(0x8c);
 12129  05DA  308C               	movlw	140
 12130  05DB  3192  22C3  3180   	fcall	_LCDcmd
 12131  05DE                     l5272:
 12132                           
 12133                           ;LCD.c: 397: };LCD.c: 400: if (state ==11)
 12134  05DE  300B               	movlw	11
 12135  05DF  0020               	movlb	0	; select bank0
 12136  05E0  0649               	xorwf	lcd@state,w
 12137  05E1  1D03               	btfss	3,2
 12138  05E2  2DE4               	goto	u4001
 12139  05E3  2DE5               	goto	u4000
 12140  05E4                     u4001:
 12141  05E4  2E50               	goto	l5296
 12142  05E5                     u4000:
 12143  05E5                     l5274:
 12144                           
 12145                           ;LCD.c: 401: {;LCD.c: 402: LCDcmd(0x80);
 12146  05E5  3080               	movlw	128
 12147  05E6  3192  22C3  3180   	fcall	_LCDcmd
 12148  05E9                     l5276:
 12149                           
 12150                           ;LCD.c: 403: sprintf(buf, "%02d:%02d:%02d", h,m,s);
 12151  05E9  3000               	movlw	low (STR_3| (0+32768))
 12152  05EA  0020               	movlb	0	; select bank0
 12153  05EB  00AE               	movwf	sprintf@f
 12154  05EC  3098               	movlw	high (STR_3| (0+32768))
 12155  05ED  00AF               	movwf	sprintf@f+1
 12156  05EE  0846               	movf	lcd@h,w
 12157  05EF  00CF               	movwf	??_lcd
 12158  05F0  01D0               	clrf	??_lcd+1
 12159  05F1  084F               	movf	??_lcd,w
 12160  05F2  00B0               	movwf	?_sprintf+2
 12161  05F3  0850               	movf	??_lcd+1,w
 12162  05F4  00B1               	movwf	?_sprintf+3
 12163  05F5  0847               	movf	lcd@m,w
 12164  05F6  00D1               	movwf	??_lcd+2
 12165  05F7  01D2               	clrf	??_lcd+3
 12166  05F8  0851               	movf	??_lcd+2,w
 12167  05F9  00B2               	movwf	?_sprintf+4
 12168  05FA  0852               	movf	??_lcd+3,w
 12169  05FB  00B3               	movwf	?_sprintf+5
 12170  05FC  0848               	movf	lcd@s,w
 12171  05FD  00D3               	movwf	??_lcd+4
 12172  05FE  01D4               	clrf	??_lcd+5
 12173  05FF  0853               	movf	??_lcd+4,w
 12174  0600  00B4               	movwf	?_sprintf+6
 12175  0601  0854               	movf	??_lcd+5,w
 12176  0602  00B5               	movwf	?_sprintf+7
 12177  0603  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 12178  0604  318C  2409  3180   	fcall	_sprintf
 12179  0607                     l5278:
 12180                           
 12181                           ;LCD.c: 404: LCDstr(buf);
 12182  0607  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 12183  0608  3194  242B  3180   	fcall	_LCDstr
 12184  060B                     l5280:
 12185                           
 12186                           ;LCD.c: 406: LCDcmd(0x8A);
 12187  060B  308A               	movlw	138
 12188  060C  3192  22C3  3180   	fcall	_LCDcmd
 12189  060F                     l5282:
 12190                           
 12191                           ;LCD.c: 407: sprintf(buf, "CTL");
 12192  060F  302A               	movlw	low (STR_11| (0+32768))
 12193  0610  0020               	movlb	0	; select bank0
 12194  0611  00AE               	movwf	sprintf@f
 12195  0612  3098               	movlw	high (STR_11| (0+32768))
 12196  0613  00AF               	movwf	sprintf@f+1
 12197  0614  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 12198  0615  318C  2409  3180   	fcall	_sprintf
 12199                           
 12200                           ;LCD.c: 408: LCDstr(buf);
 12201  0618  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 12202  0619  3194  242B  3180   	fcall	_LCDstr
 12203  061C                     l5284:
 12204                           
 12205                           ;LCD.c: 410: LCDcmd(0xc0);
 12206  061C  30C0               	movlw	192
 12207  061D  3192  22C3  3180   	fcall	_LCDcmd
 12208  0620                     l5286:
 12209                           
 12210                           ;LCD.c: 411: sprintf(buf, "%02d C", temperature);
 12211  0620  3019               	movlw	low (STR_4| (0+32768))
 12212  0621  0020               	movlb	0	; select bank0
 12213  0622  00AE               	movwf	sprintf@f
 12214  0623  3098               	movlw	high (STR_4| (0+32768))
 12215  0624  00AF               	movwf	sprintf@f+1
 12216  0625  0866               	movf	lcd@temperature,w
 12217  0626  00CF               	movwf	??_lcd
 12218  0627  01D0               	clrf	??_lcd+1
 12219  0628  084F               	movf	??_lcd,w
 12220  0629  00B0               	movwf	?_sprintf+2
 12221  062A  0850               	movf	??_lcd+1,w
 12222  062B  00B1               	movwf	?_sprintf+3
 12223  062C  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 12224  062D  318C  2409  3180   	fcall	_sprintf
 12225  0630                     l5288:
 12226                           
 12227                           ;LCD.c: 412: LCDstr(buf);
 12228  0630  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 12229  0631  3194  242B  3180   	fcall	_LCDstr
 12230  0634                     l5290:
 12231                           
 12232                           ;LCD.c: 414: LCDcmd(0xce);
 12233  0634  30CE               	movlw	206
 12234  0635  3192  22C3  3180   	fcall	_LCDcmd
 12235                           
 12236                           ;LCD.c: 415: sprintf(buf, "L%01d", luminosity_alarm);
 12237  0638  3020               	movlw	low (STR_5| (0+32768))
 12238  0639  0020               	movlb	0	; select bank0
 12239  063A  00AE               	movwf	sprintf@f
 12240  063B  3098               	movlw	high (STR_5| (0+32768))
 12241  063C  00AF               	movwf	sprintf@f+1
 12242  063D  084B               	movf	lcd@luminosity_alarm,w
 12243  063E  00CF               	movwf	??_lcd
 12244  063F  01D0               	clrf	??_lcd+1
 12245  0640  084F               	movf	??_lcd,w
 12246  0641  00B0               	movwf	?_sprintf+2
 12247  0642  0850               	movf	??_lcd+1,w
 12248  0643  00B1               	movwf	?_sprintf+3
 12249  0644  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 12250  0645  318C  2409  3180   	fcall	_sprintf
 12251  0648                     l5292:
 12252                           
 12253                           ;LCD.c: 416: LCDstr(buf);
 12254  0648  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 12255  0649  3194  242B  3180   	fcall	_LCDstr
 12256  064C                     l5294:
 12257                           
 12258                           ;LCD.c: 417: LCDcmd(0xcf);
 12259  064C  30CF               	movlw	207
 12260  064D  3192  22C3  3180   	fcall	_LCDcmd
 12261  0650                     l5296:
 12262                           
 12263                           ;LCD.c: 418: };LCD.c: 420: if (state ==12)
 12264  0650  300C               	movlw	12
 12265  0651  0020               	movlb	0	; select bank0
 12266  0652  0649               	xorwf	lcd@state,w
 12267  0653  1D03               	btfss	3,2
 12268  0654  2E56               	goto	u4011
 12269  0655  2E57               	goto	u4010
 12270  0656                     u4011:
 12271  0656  2E6C               	goto	l1009
 12272  0657                     u4010:
 12273  0657                     l5298:
 12274                           
 12275                           ;LCD.c: 421: {;LCD.c: 422: LCDcmd(0x8A);
 12276  0657  308A               	movlw	138
 12277  0658  3192  22C3  3180   	fcall	_LCDcmd
 12278  065B                     l5300:
 12279                           
 12280                           ;LCD.c: 423: sprintf(buf, "   ");
 12281  065B  3026               	movlw	low (STR_54| (0+32768))
 12282  065C  0020               	movlb	0	; select bank0
 12283  065D  00AE               	movwf	sprintf@f
 12284  065E  3098               	movlw	high (STR_54| (0+32768))
 12285  065F  00AF               	movwf	sprintf@f+1
 12286  0660  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 12287  0661  318C  2409  3180   	fcall	_sprintf
 12288  0664                     l5302:
 12289                           
 12290                           ;LCD.c: 424: LCDstr(buf);
 12291  0664  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 12292  0665  3194  242B  3180   	fcall	_LCDstr
 12293  0668                     l5304:
 12294                           
 12295                           ;LCD.c: 427: LCDcmd(0x8f);
 12296  0668  308F               	movlw	143
 12297  0669  3192  22C3  3180   	fcall	_LCDcmd
 12298  066C                     l1009:
 12299  066C  0008               	return
 12300  066D                     __end_of_lcd:
 12301                           
 12302                           	psect	text9
 12303  0C09                     __ptext9:	
 12304 ;; *************** function _sprintf *****************
 12305 ;; Defined at:
 12306 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
 12307 ;; Parameters:    Size  Location     Type
 12308 ;;  sp              1    wreg     PTR unsigned char 
 12309 ;;		 -> lcd@buf(17), 
 12310 ;;  f               2   14[BANK0 ] PTR const unsigned char 
 12311 ;;		 -> STR_54(4), STR_53(6), STR_52(7), STR_51(4), 
 12312 ;;		 -> STR_50(15), STR_49(6), STR_48(7), STR_47(4), 
 12313 ;;		 -> STR_46(15), STR_45(7), STR_44(6), STR_43(4), 
 12314 ;;		 -> STR_42(15), STR_41(7), STR_40(6), STR_39(4), 
 12315 ;;		 -> STR_38(15), STR_37(15), STR_36(6), STR_35(7), 
 12316 ;;		 -> STR_34(4), STR_33(15), STR_32(6), STR_31(7), 
 12317 ;;		 -> STR_30(4), STR_29(15), STR_28(6), STR_27(7), 
 12318 ;;		 -> STR_26(4), STR_25(15), STR_24(6), STR_23(7), 
 12319 ;;		 -> STR_22(4), STR_21(6), STR_20(7), STR_19(4), 
 12320 ;;		 -> STR_18(15), STR_17(6), STR_16(7), STR_15(4), 
 12321 ;;		 -> STR_14(15), STR_13(6), STR_12(7), STR_11(4), 
 12322 ;;		 -> STR_10(15), STR_9(2), STR_8(2), STR_7(2), 
 12323 ;;		 -> STR_6(2), STR_5(6), STR_4(7), STR_3(15), 
 12324 ;;		 -> STR_2(2), STR_1(2), 
 12325 ;; Auto vars:     Size  Location     Type
 12326 ;;  sp              1   34[BANK0 ] PTR unsigned char 
 12327 ;;		 -> lcd@buf(17), 
 12328 ;;  tmpval          4    0        struct .
 12329 ;;  width           2   31[BANK0 ] int 
 12330 ;;  val             2   28[BANK0 ] unsigned int 
 12331 ;;  cp              2    0        PTR const unsigned char 
 12332 ;;  len             2    0        unsigned int 
 12333 ;;  c               1   33[BANK0 ] unsigned char 
 12334 ;;  flag            1   30[BANK0 ] unsigned char 
 12335 ;;  prec            1   27[BANK0 ] char 
 12336 ;;  ap              1   26[BANK0 ] PTR void [1]
 12337 ;;		 -> ?_sprintf(2), 
 12338 ;; Return value:  Size  Location     Type
 12339 ;;                  2   14[BANK0 ] int 
 12340 ;; Registers used:
 12341 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12342 ;; Tracked objects:
 12343 ;;		On entry : 0/0
 12344 ;;		On exit  : 0/0
 12345 ;;		Unchanged: 0/0
 12346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12347 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12348 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12349 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12350 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12351 ;;Total ram usage:       21 bytes
 12352 ;; Hardware stack levels used:    1
 12353 ;; Hardware stack levels required when called:    7
 12354 ;; This function calls:
 12355 ;;		___lwdiv
 12356 ;;		___lwmod
 12357 ;;		___wmul
 12358 ;;		_isdigit
 12359 ;; This function is called by:
 12360 ;;		_lcd
 12361 ;; This function uses a non-reentrant model
 12362 ;;
 12363                           
 12364                           
 12365                           ;psect for function _sprintf
 12366  0C09                     _sprintf:
 12367                           
 12368                           ;incstack = 0
 12369                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12370                           ;sprintf@sp stored from wreg
 12371  0C09  0020               	movlb	0	; select bank0
 12372  0C0A  00C2               	movwf	sprintf@sp
 12373  0C0B                     l4468:
 12374                           
 12375                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
 12376  0C0B  3030               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 12377  0C0C  00B6               	movwf	??_sprintf
 12378  0C0D  0836               	movf	??_sprintf,w
 12379  0C0E  00BA               	movwf	sprintf@ap
 12380                           
 12381                           ;doprnt.c: 553: while((c = *f++)) {
 12382  0C0F  2D8E               	goto	l4572
 12383  0C10                     l4470:
 12384                           
 12385                           ;doprnt.c: 555: if(c != '%')
 12386  0C10  3025               	movlw	37
 12387  0C11  0641               	xorwf	sprintf@c,w
 12388  0C12  1903               	btfsc	3,2
 12389  0C13  2C15               	goto	u3211
 12390  0C14  2C16               	goto	u3210
 12391  0C15                     u3211:
 12392  0C15  2C22               	goto	l4476
 12393  0C16                     u3210:
 12394  0C16                     l4472:
 12395                           
 12396                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
 12397  0C16  0841               	movf	sprintf@c,w
 12398  0C17  00B6               	movwf	??_sprintf
 12399  0C18  0842               	movf	sprintf@sp,w
 12400  0C19  0086               	movwf	6
 12401  0C1A  0187               	clrf	7
 12402  0C1B  0836               	movf	??_sprintf,w
 12403  0C1C  0081               	movwf	1
 12404  0C1D                     l4474:
 12405  0C1D  3001               	movlw	1
 12406  0C1E  00B6               	movwf	??_sprintf
 12407  0C1F  0836               	movf	??_sprintf,w
 12408  0C20  07C2               	addwf	sprintf@sp,f
 12409                           
 12410                           ;doprnt.c: 559: continue;
 12411  0C21  2D8E               	goto	l4572
 12412  0C22                     l4476:
 12413                           
 12414                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
 12415  0C22  01BF               	clrf	sprintf@width
 12416  0C23  01C0               	clrf	sprintf@width+1
 12417                           
 12418                           ;doprnt.c: 565: flag = 0;
 12419  0C24  01BE               	clrf	sprintf@flag
 12420  0C25  2C2B               	goto	l4482
 12421  0C26                     l1436:	
 12422                           ;doprnt.c: 596: case '0':
 12423                           
 12424                           
 12425                           ;doprnt.c: 597: flag |= 0x04;
 12426  0C26  153E               	bsf	sprintf@flag,2
 12427  0C27                     l4478:
 12428                           
 12429                           ;doprnt.c: 598: f++;
 12430  0C27  3001               	movlw	1
 12431  0C28  07AE               	addwf	sprintf@f,f
 12432  0C29  3000               	movlw	0
 12433  0C2A  3DAF               	addwfc	sprintf@f+1,f
 12434  0C2B                     l4482:	
 12435                           ;doprnt.c: 599: continue;
 12436                           
 12437  0C2B  082E               	movf	sprintf@f,w
 12438  0C2C  0084               	movwf	4
 12439  0C2D  082F               	movf	sprintf@f+1,w
 12440  0C2E  0085               	movwf	5
 12441  0C2F  0800               	movf	0,w	;code access
 12442                           
 12443                           ; Switch size 1, requested type "simple"
 12444                           ; Number of cases is 1, Range of values is 48 to 48
 12445                           ; switch strategies available:
 12446                           ; Name         Instructions Cycles
 12447                           ; simple_byte            4     3 (average)
 12448                           ; direct_byte           11     9 (fixed)
 12449                           ; jumptable            263     9 (fixed)
 12450                           ;	Chosen strategy is simple_byte
 12451  0C30  3A30               	xorlw	48	; case 48
 12452  0C31  1903               	skipnz
 12453  0C32  2C26               	goto	l1436
 12454  0C33  2C34               	goto	l4484
 12455  0C34                     l4484:
 12456                           
 12457                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
 12458  0C34  082E               	movf	sprintf@f,w
 12459  0C35  0084               	movwf	4
 12460  0C36  082F               	movf	sprintf@f+1,w
 12461  0C37  0085               	movwf	5
 12462  0C38  0800               	movf	0,w	;code access
 12463  0C39  3193  23C1  318C   	fcall	_isdigit
 12464  0C3C  1C03               	btfss	3,0
 12465  0C3D  2C3F               	goto	u3221
 12466  0C3E  2C40               	goto	u3220
 12467  0C3F                     u3221:
 12468  0C3F  2C73               	goto	l4498
 12469  0C40                     u3220:
 12470  0C40                     l4486:
 12471                           
 12472                           ;doprnt.c: 615: width = 0;
 12473  0C40  0020               	movlb	0	; select bank0
 12474  0C41  01BF               	clrf	sprintf@width
 12475  0C42  01C0               	clrf	sprintf@width+1
 12476  0C43                     l4488:
 12477                           
 12478                           ;doprnt.c: 617: width *= 10;
 12479  0C43  300A               	movlw	10
 12480  0C44  0020               	movlb	0	; select bank0
 12481  0C45  00A0               	movwf	___wmul@multiplier
 12482  0C46  3000               	movlw	0
 12483  0C47  00A1               	movwf	___wmul@multiplier+1
 12484  0C48  0840               	movf	sprintf@width+1,w
 12485  0C49  00A3               	movwf	___wmul@multiplicand+1
 12486  0C4A  083F               	movf	sprintf@width,w
 12487  0C4B  00A2               	movwf	___wmul@multiplicand
 12488  0C4C  3194  24C8  318C   	fcall	___wmul
 12489  0C4F  0020               	movlb	0	; select bank0
 12490  0C50  0821               	movf	?___wmul+1,w
 12491  0C51  00C0               	movwf	sprintf@width+1
 12492  0C52  0820               	movf	?___wmul,w
 12493  0C53  00BF               	movwf	sprintf@width
 12494  0C54                     l4490:
 12495                           
 12496                           ;doprnt.c: 618: width += *f++ - '0';
 12497  0C54  082E               	movf	sprintf@f,w
 12498  0C55  0084               	movwf	4
 12499  0C56  082F               	movf	sprintf@f+1,w
 12500  0C57  0085               	movwf	5
 12501  0C58  0800               	movf	0,w	;code access
 12502  0C59  3ED0               	addlw	208
 12503  0C5A  00B6               	movwf	??_sprintf
 12504  0C5B  30FF               	movlw	255
 12505  0C5C  1803               	skipnc
 12506  0C5D  3000               	movlw	0
 12507  0C5E  00B7               	movwf	??_sprintf+1
 12508  0C5F  0836               	movf	??_sprintf,w
 12509  0C60  07BF               	addwf	sprintf@width,f
 12510  0C61  0837               	movf	??_sprintf+1,w
 12511  0C62  3DC0               	addwfc	sprintf@width+1,f
 12512  0C63                     l4492:
 12513  0C63  3001               	movlw	1
 12514  0C64  07AE               	addwf	sprintf@f,f
 12515  0C65  3000               	movlw	0
 12516  0C66  3DAF               	addwfc	sprintf@f+1,f
 12517  0C67                     l4494:
 12518                           
 12519                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
 12520  0C67  082E               	movf	sprintf@f,w
 12521  0C68  0084               	movwf	4
 12522  0C69  082F               	movf	sprintf@f+1,w
 12523  0C6A  0085               	movwf	5
 12524  0C6B  0800               	movf	0,w	;code access
 12525  0C6C  3193  23C1  318C   	fcall	_isdigit
 12526  0C6F  1803               	btfsc	3,0
 12527  0C70  2C72               	goto	u3231
 12528  0C71  2C73               	goto	u3230
 12529  0C72                     u3231:
 12530  0C72  2C43               	goto	l4488
 12531  0C73                     u3230:
 12532  0C73                     l4498:
 12533  0C73  0020               	movlb	0	; select bank0
 12534  0C74  082F               	movf	sprintf@f+1,w
 12535  0C75  00B7               	movwf	??_sprintf+1
 12536  0C76  082E               	movf	sprintf@f,w
 12537  0C77  00B6               	movwf	??_sprintf
 12538  0C78  0AAE               	incf	sprintf@f,f
 12539  0C79  1903               	skipnz
 12540  0C7A  0AAF               	incf	sprintf@f+1,f
 12541  0C7B  0836               	movf	??_sprintf,w
 12542  0C7C  0084               	movwf	4
 12543  0C7D  0837               	movf	??_sprintf+1,w
 12544  0C7E  0085               	movwf	5
 12545  0C7F  0800               	movf	0,w	;code access
 12546  0C80  00C1               	movwf	sprintf@c
 12547                           
 12548                           ; Switch size 1, requested type "simple"
 12549                           ; Number of cases is 3, Range of values is 0 to 105
 12550                           ; switch strategies available:
 12551                           ; Name         Instructions Cycles
 12552                           ; simple_byte           10     6 (average)
 12553                           ; direct_byte          218     6 (fixed)
 12554                           ; jumptable            260     6 (fixed)
 12555                           ;	Chosen strategy is simple_byte
 12556  0C81  3A00               	xorlw	0	; case 0
 12557  0C82  1903               	skipnz
 12558  0C83  2DA2               	goto	l4574
 12559  0C84  3A64               	xorlw	100	; case 100
 12560  0C85  1903               	skipnz
 12561  0C86  2C8B               	goto	l4500
 12562  0C87  3A0D               	xorlw	13	; case 105
 12563  0C88  1903               	skipnz
 12564  0C89  2C8B               	goto	l4500
 12565  0C8A  2D8E               	goto	l4572
 12566  0C8B                     l4500:
 12567                           
 12568                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
 12569  0C8B  083A               	movf	sprintf@ap,w
 12570  0C8C  0086               	movwf	6
 12571  0C8D  0187               	clrf	7
 12572  0C8E  3F40               	moviw [0]fsr1
 12573  0C8F  00BC               	movwf	sprintf@val
 12574  0C90  3F41               	moviw [1]fsr1
 12575  0C91  00BD               	movwf	sprintf@val+1
 12576  0C92                     l4502:
 12577  0C92  3002               	movlw	2
 12578  0C93  00B6               	movwf	??_sprintf
 12579  0C94  0836               	movf	??_sprintf,w
 12580  0C95  07BA               	addwf	sprintf@ap,f
 12581  0C96                     l4504:
 12582                           
 12583                           ;doprnt.c: 1287: if((int)val < 0) {
 12584  0C96  1FBD               	btfss	sprintf@val+1,7
 12585  0C97  2C99               	goto	u3241
 12586  0C98  2C9A               	goto	u3240
 12587  0C99                     u3241:
 12588  0C99  2CA3               	goto	l4510
 12589  0C9A                     u3240:
 12590  0C9A                     l4506:
 12591                           
 12592                           ;doprnt.c: 1288: flag |= 0x03;
 12593  0C9A  3003               	movlw	3
 12594  0C9B  00B6               	movwf	??_sprintf
 12595  0C9C  0836               	movf	??_sprintf,w
 12596  0C9D  04BE               	iorwf	sprintf@flag,f
 12597  0C9E                     l4508:
 12598                           
 12599                           ;doprnt.c: 1289: val = -val;
 12600  0C9E  09BC               	comf	sprintf@val,f
 12601  0C9F  09BD               	comf	sprintf@val+1,f
 12602  0CA0  0ABC               	incf	sprintf@val,f
 12603  0CA1  1903               	skipnz
 12604  0CA2  0ABD               	incf	sprintf@val+1,f
 12605  0CA3                     l4510:
 12606                           
 12607                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
 12608  0CA3  01C1               	clrf	sprintf@c
 12609  0CA4  0AC1               	incf	sprintf@c,f
 12610  0CA5                     l4516:
 12611                           
 12612                           ;doprnt.c: 1332: if(val < dpowers[c])
 12613  0CA5  0841               	movf	sprintf@c,w
 12614  0CA6  00B6               	movwf	??_sprintf
 12615  0CA7  01B7               	clrf	??_sprintf+1
 12616  0CA8  35B6               	lslf	??_sprintf,f
 12617  0CA9  0DB7               	rlf	??_sprintf+1,f
 12618  0CAA  300F               	movlw	low (_dpowers| (0+32768))
 12619  0CAB  0736               	addwf	??_sprintf,w
 12620  0CAC  0084               	movwf	4
 12621  0CAD  3098               	movlw	high (_dpowers| (0+32768))
 12622  0CAE  3D37               	addwfc	??_sprintf+1,w
 12623  0CAF  0085               	movwf	5
 12624  0CB0  3F00               	moviw [0]fsr0
 12625  0CB1  00B8               	movwf	??_sprintf+2
 12626  0CB2  3F01               	moviw [1]fsr0
 12627  0CB3  00B9               	movwf	??_sprintf+3
 12628  0CB4  0839               	movf	??_sprintf+3,w
 12629  0CB5  023D               	subwf	sprintf@val+1,w
 12630  0CB6  1D03               	skipz
 12631  0CB7  2CBA               	goto	u3255
 12632  0CB8  0838               	movf	??_sprintf+2,w
 12633  0CB9  023C               	subwf	sprintf@val,w
 12634  0CBA                     u3255:
 12635  0CBA  1803               	skipnc
 12636  0CBB  2CBD               	goto	u3251
 12637  0CBC  2CBE               	goto	u3250
 12638  0CBD                     u3251:
 12639  0CBD  2CBF               	goto	l4520
 12640  0CBE                     u3250:
 12641  0CBE  2CC9               	goto	l4522
 12642  0CBF                     l4520:
 12643  0CBF  3001               	movlw	1
 12644  0CC0  00B6               	movwf	??_sprintf
 12645  0CC1  0836               	movf	??_sprintf,w
 12646  0CC2  07C1               	addwf	sprintf@c,f
 12647  0CC3  3005               	movlw	5
 12648  0CC4  0641               	xorwf	sprintf@c,w
 12649  0CC5  1D03               	btfss	3,2
 12650  0CC6  2CC8               	goto	u3261
 12651  0CC7  2CC9               	goto	u3260
 12652  0CC8                     u3261:
 12653  0CC8  2CA5               	goto	l4516
 12654  0CC9                     u3260:
 12655  0CC9                     l4522:
 12656                           
 12657                           ;doprnt.c: 1371: if(width && flag & 0x03)
 12658  0CC9  083F               	movf	sprintf@width,w
 12659  0CCA  0440               	iorwf	sprintf@width+1,w
 12660  0CCB  1903               	btfsc	3,2
 12661  0CCC  2CCE               	goto	u3271
 12662  0CCD  2CCF               	goto	u3270
 12663  0CCE                     u3271:
 12664  0CCE  2CD9               	goto	l1454
 12665  0CCF                     u3270:
 12666  0CCF                     l4524:
 12667  0CCF  083E               	movf	sprintf@flag,w
 12668  0CD0  3903               	andlw	3
 12669  0CD1  1903               	btfsc	3,2
 12670  0CD2  2CD4               	goto	u3281
 12671  0CD3  2CD5               	goto	u3280
 12672  0CD4                     u3281:
 12673  0CD4  2CD9               	goto	l1454
 12674  0CD5                     u3280:
 12675  0CD5                     l4526:
 12676                           
 12677                           ;doprnt.c: 1372: width--;
 12678  0CD5  30FF               	movlw	255
 12679  0CD6  07BF               	addwf	sprintf@width,f
 12680  0CD7  30FF               	movlw	255
 12681  0CD8  3DC0               	addwfc	sprintf@width+1,f
 12682  0CD9                     l1454:
 12683                           
 12684                           ;doprnt.c: 1407: if(width > c)
 12685  0CD9  0840               	movf	sprintf@width+1,w
 12686  0CDA  3A80               	xorlw	128
 12687  0CDB  3C80               	sublw	128
 12688  0CDC  1D03               	skipz
 12689  0CDD  2CE0               	goto	u3295
 12690  0CDE  083F               	movf	sprintf@width,w
 12691  0CDF  0241               	subwf	sprintf@c,w
 12692  0CE0                     u3295:
 12693  0CE0  1803               	skipnc
 12694  0CE1  2CE3               	goto	u3291
 12695  0CE2  2CE4               	goto	u3290
 12696  0CE3                     u3291:
 12697  0CE3  2CED               	goto	l4530
 12698  0CE4                     u3290:
 12699  0CE4                     l4528:
 12700                           
 12701                           ;doprnt.c: 1408: width -= c;
 12702  0CE4  0020               	movlb	0	; select bank0
 12703  0CE5  0841               	movf	sprintf@c,w
 12704  0CE6  00B6               	movwf	??_sprintf
 12705  0CE7  01B7               	clrf	??_sprintf+1
 12706  0CE8  0836               	movf	??_sprintf,w
 12707  0CE9  02BF               	subwf	sprintf@width,f
 12708  0CEA  0837               	movf	??_sprintf+1,w
 12709  0CEB  3BC0               	subwfb	sprintf@width+1,f
 12710  0CEC  2CF0               	goto	l4532
 12711  0CED                     l4530:
 12712                           
 12713                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 12714  0CED  0020               	movlb	0	; select bank0
 12715  0CEE  01BF               	clrf	sprintf@width
 12716  0CEF  01C0               	clrf	sprintf@width+1
 12717  0CF0                     l4532:
 12718                           
 12719                           ;doprnt.c: 1413: if(flag & 0x04) {
 12720  0CF0  1D3E               	btfss	sprintf@flag,2
 12721  0CF1  2CF3               	goto	u3301
 12722  0CF2  2CF4               	goto	u3300
 12723  0CF3                     u3301:
 12724  0CF3  2D21               	goto	l4548
 12725  0CF4                     u3300:
 12726  0CF4                     l4534:
 12727                           
 12728                           ;doprnt.c: 1418: if(flag & 0x03)
 12729  0CF4  083E               	movf	sprintf@flag,w
 12730  0CF5  3903               	andlw	3
 12731  0CF6  1903               	btfsc	3,2
 12732  0CF7  2CF9               	goto	u3311
 12733  0CF8  2CFA               	goto	u3310
 12734  0CF9                     u3311:
 12735  0CF9  2D05               	goto	l4540
 12736  0CFA                     u3310:
 12737  0CFA                     l4536:
 12738                           
 12739                           ;doprnt.c: 1419: ((*sp++ = ('-')));
 12740  0CFA  302D               	movlw	45
 12741  0CFB  00B6               	movwf	??_sprintf
 12742  0CFC  0842               	movf	sprintf@sp,w
 12743  0CFD  0086               	movwf	6
 12744  0CFE  0187               	clrf	7
 12745  0CFF  0836               	movf	??_sprintf,w
 12746  0D00  0081               	movwf	1
 12747  0D01                     l4538:
 12748  0D01  3001               	movlw	1
 12749  0D02  00B6               	movwf	??_sprintf
 12750  0D03  0836               	movf	??_sprintf,w
 12751  0D04  07C2               	addwf	sprintf@sp,f
 12752  0D05                     l4540:
 12753                           
 12754                           ;doprnt.c: 1441: if(width)
 12755  0D05  083F               	movf	sprintf@width,w
 12756  0D06  0440               	iorwf	sprintf@width+1,w
 12757  0D07  1903               	btfsc	3,2
 12758  0D08  2D0A               	goto	u3321
 12759  0D09  2D0B               	goto	u3320
 12760  0D0A                     u3321:
 12761  0D0A  2D4D               	goto	l4562
 12762  0D0B                     u3320:
 12763  0D0B                     l4542:
 12764                           
 12765                           ;doprnt.c: 1443: ((*sp++ = ('0')));
 12766  0D0B  3030               	movlw	48
 12767  0D0C  00B6               	movwf	??_sprintf
 12768  0D0D  0842               	movf	sprintf@sp,w
 12769  0D0E  0086               	movwf	6
 12770  0D0F  0187               	clrf	7
 12771  0D10  0836               	movf	??_sprintf,w
 12772  0D11  0081               	movwf	1
 12773  0D12                     l4544:
 12774  0D12  3001               	movlw	1
 12775  0D13  00B6               	movwf	??_sprintf
 12776  0D14  0836               	movf	??_sprintf,w
 12777  0D15  07C2               	addwf	sprintf@sp,f
 12778  0D16                     l4546:
 12779                           
 12780                           ;doprnt.c: 1444: while(--width);
 12781  0D16  30FF               	movlw	255
 12782  0D17  07BF               	addwf	sprintf@width,f
 12783  0D18  30FF               	movlw	255
 12784  0D19  3DC0               	addwfc	sprintf@width+1,f
 12785  0D1A  083F               	movf	sprintf@width,w
 12786  0D1B  0440               	iorwf	sprintf@width+1,w
 12787  0D1C  1D03               	btfss	3,2
 12788  0D1D  2D1F               	goto	u3331
 12789  0D1E  2D20               	goto	u3330
 12790  0D1F                     u3331:
 12791  0D1F  2D0B               	goto	l4542
 12792  0D20                     u3330:
 12793  0D20  2D4D               	goto	l4562
 12794  0D21                     l4548:
 12795                           
 12796                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
 12797  0D21  083F               	movf	sprintf@width,w
 12798  0D22  0440               	iorwf	sprintf@width+1,w
 12799  0D23  1903               	btfsc	3,2
 12800  0D24  2D26               	goto	u3341
 12801  0D25  2D27               	goto	u3340
 12802  0D26                     u3341:
 12803  0D26  2D3C               	goto	l4556
 12804  0D27                     u3340:
 12805  0D27                     l4550:
 12806                           
 12807                           ;doprnt.c: 1456: ((*sp++ = (' ')));
 12808  0D27  3020               	movlw	32
 12809  0D28  00B6               	movwf	??_sprintf
 12810  0D29  0842               	movf	sprintf@sp,w
 12811  0D2A  0086               	movwf	6
 12812  0D2B  0187               	clrf	7
 12813  0D2C  0836               	movf	??_sprintf,w
 12814  0D2D  0081               	movwf	1
 12815  0D2E                     l4552:
 12816  0D2E  3001               	movlw	1
 12817  0D2F  00B6               	movwf	??_sprintf
 12818  0D30  0836               	movf	??_sprintf,w
 12819  0D31  07C2               	addwf	sprintf@sp,f
 12820  0D32                     l4554:
 12821                           
 12822                           ;doprnt.c: 1457: while(--width);
 12823  0D32  30FF               	movlw	255
 12824  0D33  07BF               	addwf	sprintf@width,f
 12825  0D34  30FF               	movlw	255
 12826  0D35  3DC0               	addwfc	sprintf@width+1,f
 12827  0D36  083F               	movf	sprintf@width,w
 12828  0D37  0440               	iorwf	sprintf@width+1,w
 12829  0D38  1D03               	btfss	3,2
 12830  0D39  2D3B               	goto	u3351
 12831  0D3A  2D3C               	goto	u3350
 12832  0D3B                     u3351:
 12833  0D3B  2D27               	goto	l4550
 12834  0D3C                     u3350:
 12835  0D3C                     l4556:
 12836                           
 12837                           ;doprnt.c: 1464: if(flag & 0x03)
 12838  0D3C  083E               	movf	sprintf@flag,w
 12839  0D3D  3903               	andlw	3
 12840  0D3E  1903               	btfsc	3,2
 12841  0D3F  2D41               	goto	u3361
 12842  0D40  2D42               	goto	u3360
 12843  0D41                     u3361:
 12844  0D41  2D4D               	goto	l4562
 12845  0D42                     u3360:
 12846  0D42                     l4558:
 12847                           
 12848                           ;doprnt.c: 1465: ((*sp++ = ('-')));
 12849  0D42  302D               	movlw	45
 12850  0D43  00B6               	movwf	??_sprintf
 12851  0D44  0842               	movf	sprintf@sp,w
 12852  0D45  0086               	movwf	6
 12853  0D46  0187               	clrf	7
 12854  0D47  0836               	movf	??_sprintf,w
 12855  0D48  0081               	movwf	1
 12856  0D49                     l4560:
 12857  0D49  3001               	movlw	1
 12858  0D4A  00B6               	movwf	??_sprintf
 12859  0D4B  0836               	movf	??_sprintf,w
 12860  0D4C  07C2               	addwf	sprintf@sp,f
 12861  0D4D                     l4562:
 12862                           
 12863                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
 12864  0D4D  0841               	movf	sprintf@c,w
 12865  0D4E  00B6               	movwf	??_sprintf
 12866  0D4F  0836               	movf	??_sprintf,w
 12867  0D50  00BB               	movwf	sprintf@prec
 12868                           
 12869                           ;doprnt.c: 1500: while(prec--) {
 12870  0D51  2D85               	goto	l4570
 12871  0D52                     l4564:
 12872                           
 12873                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
 12874  0D52  300A               	movlw	10
 12875  0D53  00A8               	movwf	___lwmod@divisor
 12876  0D54  3000               	movlw	0
 12877  0D55  00A9               	movwf	___lwmod@divisor+1
 12878  0D56  083B               	movf	sprintf@prec,w
 12879  0D57  00B6               	movwf	??_sprintf
 12880  0D58  01B7               	clrf	??_sprintf+1
 12881  0D59  35B6               	lslf	??_sprintf,f
 12882  0D5A  0DB7               	rlf	??_sprintf+1,f
 12883  0D5B  300F               	movlw	low (_dpowers| (0+32768))
 12884  0D5C  0736               	addwf	??_sprintf,w
 12885  0D5D  0084               	movwf	4
 12886  0D5E  3098               	movlw	high (_dpowers| (0+32768))
 12887  0D5F  3D37               	addwfc	??_sprintf+1,w
 12888  0D60  0085               	movwf	5
 12889  0D61  3F00               	moviw [0]fsr0
 12890  0D62  00A0               	movwf	___lwdiv@divisor
 12891  0D63  3F01               	moviw [1]fsr0
 12892  0D64  00A1               	movwf	___lwdiv@divisor+1
 12893  0D65  083D               	movf	sprintf@val+1,w
 12894  0D66  00A3               	movwf	___lwdiv@dividend+1
 12895  0D67  083C               	movf	sprintf@val,w
 12896  0D68  00A2               	movwf	___lwdiv@dividend
 12897  0D69  3195  25F7  318C   	fcall	___lwdiv
 12898  0D6C  0020               	movlb	0	; select bank0
 12899  0D6D  0821               	movf	?___lwdiv+1,w
 12900  0D6E  00AB               	movwf	___lwmod@dividend+1
 12901  0D6F  0820               	movf	?___lwdiv,w
 12902  0D70  00AA               	movwf	___lwmod@dividend
 12903  0D71  3195  2585  318C   	fcall	___lwmod
 12904  0D74  0020               	movlb	0	; select bank0
 12905  0D75  0828               	movf	?___lwmod,w
 12906  0D76  3E30               	addlw	48
 12907  0D77  00B8               	movwf	??_sprintf+2
 12908  0D78  0838               	movf	??_sprintf+2,w
 12909  0D79  00C1               	movwf	sprintf@c
 12910  0D7A                     l4566:
 12911                           
 12912                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
 12913  0D7A  0841               	movf	sprintf@c,w
 12914  0D7B  00B6               	movwf	??_sprintf
 12915  0D7C  0842               	movf	sprintf@sp,w
 12916  0D7D  0086               	movwf	6
 12917  0D7E  0187               	clrf	7
 12918  0D7F  0836               	movf	??_sprintf,w
 12919  0D80  0081               	movwf	1
 12920  0D81                     l4568:
 12921  0D81  3001               	movlw	1
 12922  0D82  00B6               	movwf	??_sprintf
 12923  0D83  0836               	movf	??_sprintf,w
 12924  0D84  07C2               	addwf	sprintf@sp,f
 12925  0D85                     l4570:
 12926  0D85  30FF               	movlw	255
 12927  0D86  00B6               	movwf	??_sprintf
 12928  0D87  0836               	movf	??_sprintf,w
 12929  0D88  07BB               	addwf	sprintf@prec,f
 12930  0D89  0A3B               	incf	sprintf@prec,w
 12931  0D8A  1D03               	btfss	3,2
 12932  0D8B  2D8D               	goto	u3371
 12933  0D8C  2D8E               	goto	u3370
 12934  0D8D                     u3371:
 12935  0D8D  2D52               	goto	l4564
 12936  0D8E                     u3370:
 12937  0D8E                     l4572:
 12938  0D8E  082F               	movf	sprintf@f+1,w
 12939  0D8F  00B7               	movwf	??_sprintf+1
 12940  0D90  082E               	movf	sprintf@f,w
 12941  0D91  00B6               	movwf	??_sprintf
 12942  0D92  0AAE               	incf	sprintf@f,f
 12943  0D93  1903               	skipnz
 12944  0D94  0AAF               	incf	sprintf@f+1,f
 12945  0D95  0836               	movf	??_sprintf,w
 12946  0D96  0084               	movwf	4
 12947  0D97  0837               	movf	??_sprintf+1,w
 12948  0D98  0085               	movwf	5
 12949  0D99  0800               	movf	0,w	;code access
 12950  0D9A  00B8               	movwf	??_sprintf+2
 12951  0D9B  0838               	movf	??_sprintf+2,w
 12952  0D9C  00C1               	movwf	sprintf@c
 12953  0D9D  0841               	movf	sprintf@c,w
 12954  0D9E  1D03               	btfss	3,2
 12955  0D9F  2DA1               	goto	u3381
 12956  0DA0  2DA2               	goto	u3380
 12957  0DA1                     u3381:
 12958  0DA1  2C10               	goto	l4470
 12959  0DA2                     u3380:
 12960  0DA2                     l4574:
 12961                           
 12962                           ;doprnt.c: 1564: *sp = 0;
 12963  0DA2  0842               	movf	sprintf@sp,w
 12964  0DA3  0086               	movwf	6
 12965  0DA4  0187               	clrf	7
 12966  0DA5  0181               	clrf	1
 12967  0DA6                     l1471:
 12968  0DA6  0008               	return
 12969  0DA7                     __end_of_sprintf:
 12970                           
 12971                           	psect	text10
 12972  13C1                     __ptext10:	
 12973 ;; *************** function _isdigit *****************
 12974 ;; Defined at:
 12975 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
 12976 ;; Parameters:    Size  Location     Type
 12977 ;;  c               1    wreg     unsigned char 
 12978 ;; Auto vars:     Size  Location     Type
 12979 ;;  c               1    1[BANK0 ] unsigned char 
 12980 ;; Return value:  Size  Location     Type
 12981 ;;		None               void
 12982 ;; Registers used:
 12983 ;;		wreg, status,2, status,0
 12984 ;; Tracked objects:
 12985 ;;		On entry : 0/0
 12986 ;;		On exit  : 0/0
 12987 ;;		Unchanged: 0/0
 12988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12990 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12992 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12993 ;;Total ram usage:        2 bytes
 12994 ;; Hardware stack levels used:    1
 12995 ;; Hardware stack levels required when called:    6
 12996 ;; This function calls:
 12997 ;;		Nothing
 12998 ;; This function is called by:
 12999 ;;		_sprintf
 13000 ;; This function uses a non-reentrant model
 13001 ;;
 13002                           
 13003                           
 13004                           ;psect for function _isdigit
 13005  13C1                     _isdigit:
 13006                           
 13007                           ;incstack = 0
 13008                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 13009                           ;isdigit@c stored from wreg
 13010  13C1  0020               	movlb	0	; select bank0
 13011  13C2  00A1               	movwf	isdigit@c
 13012  13C3                     l4234:
 13013  13C3  01A0               	clrf	_isdigit$2823
 13014  13C4                     l4236:
 13015  13C4  303A               	movlw	58
 13016  13C5  0221               	subwf	isdigit@c,w
 13017  13C6  1803               	skipnc
 13018  13C7  2BC9               	goto	u2901
 13019  13C8  2BCA               	goto	u2900
 13020  13C9                     u2901:
 13021  13C9  2BD2               	goto	l4242
 13022  13CA                     u2900:
 13023  13CA                     l4238:
 13024  13CA  3030               	movlw	48
 13025  13CB  0221               	subwf	isdigit@c,w
 13026  13CC  1C03               	skipc
 13027  13CD  2BCF               	goto	u2911
 13028  13CE  2BD0               	goto	u2910
 13029  13CF                     u2911:
 13030  13CF  2BD2               	goto	l4242
 13031  13D0                     u2910:
 13032  13D0                     l4240:
 13033  13D0  01A0               	clrf	_isdigit$2823
 13034  13D1  0AA0               	incf	_isdigit$2823,f
 13035  13D2                     l4242:
 13036  13D2  0C20               	rrf	_isdigit$2823,w
 13037  13D3                     l1928:
 13038  13D3  0008               	return
 13039  13D4                     __end_of_isdigit:
 13040                           
 13041                           	psect	text11
 13042  14C8                     __ptext11:	
 13043 ;; *************** function ___wmul *****************
 13044 ;; Defined at:
 13045 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 13046 ;; Parameters:    Size  Location     Type
 13047 ;;  multiplier      2    0[BANK0 ] unsigned int 
 13048 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 13049 ;; Auto vars:     Size  Location     Type
 13050 ;;  product         2    4[BANK0 ] unsigned int 
 13051 ;; Return value:  Size  Location     Type
 13052 ;;                  2    0[BANK0 ] unsigned int 
 13053 ;; Registers used:
 13054 ;;		wreg, status,2, status,0
 13055 ;; Tracked objects:
 13056 ;;		On entry : 0/0
 13057 ;;		On exit  : 0/0
 13058 ;;		Unchanged: 0/0
 13059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13060 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13061 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13063 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13064 ;;Total ram usage:        6 bytes
 13065 ;; Hardware stack levels used:    1
 13066 ;; Hardware stack levels required when called:    6
 13067 ;; This function calls:
 13068 ;;		Nothing
 13069 ;; This function is called by:
 13070 ;;		_sprintf
 13071 ;;		_save_register
 13072 ;; This function uses a non-reentrant model
 13073 ;;
 13074                           
 13075                           
 13076                           ;psect for function ___wmul
 13077  14C8                     ___wmul:
 13078  14C8                     l4246:	
 13079                           ;incstack = 0
 13080                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13081                           
 13082  14C8  0020               	movlb	0	; select bank0
 13083  14C9  01A4               	clrf	___wmul@product
 13084  14CA  01A5               	clrf	___wmul@product+1
 13085  14CB                     l4248:
 13086  14CB  1C20               	btfss	___wmul@multiplier,0
 13087  14CC  2CCE               	goto	u2921
 13088  14CD  2CCF               	goto	u2920
 13089  14CE                     u2921:
 13090  14CE  2CD3               	goto	l1475
 13091  14CF                     u2920:
 13092  14CF                     l4250:
 13093  14CF  0822               	movf	___wmul@multiplicand,w
 13094  14D0  07A4               	addwf	___wmul@product,f
 13095  14D1  0823               	movf	___wmul@multiplicand+1,w
 13096  14D2  3DA5               	addwfc	___wmul@product+1,f
 13097  14D3                     l1475:
 13098  14D3  3001               	movlw	1
 13099  14D4                     u2935:
 13100  14D4  35A2               	lslf	___wmul@multiplicand,f
 13101  14D5  0DA3               	rlf	___wmul@multiplicand+1,f
 13102  14D6  0B89               	decfsz	9,f
 13103  14D7  2CD4               	goto	u2935
 13104  14D8                     l4252:
 13105  14D8  3001               	movlw	1
 13106  14D9                     u2945:
 13107  14D9  36A1               	lsrf	___wmul@multiplier+1,f
 13108  14DA  0CA0               	rrf	___wmul@multiplier,f
 13109  14DB  0B89               	decfsz	9,f
 13110  14DC  2CD9               	goto	u2945
 13111  14DD                     l4254:
 13112  14DD  0820               	movf	___wmul@multiplier,w
 13113  14DE  0421               	iorwf	___wmul@multiplier+1,w
 13114  14DF  1D03               	btfss	3,2
 13115  14E0  2CE2               	goto	u2951
 13116  14E1  2CE3               	goto	u2950
 13117  14E2                     u2951:
 13118  14E2  2CCB               	goto	l4248
 13119  14E3                     u2950:
 13120  14E3                     l4256:
 13121  14E3  0825               	movf	___wmul@product+1,w
 13122  14E4  00A1               	movwf	?___wmul+1
 13123  14E5  0824               	movf	___wmul@product,w
 13124  14E6  00A0               	movwf	?___wmul
 13125  14E7                     l1477:
 13126  14E7  0008               	return
 13127  14E8                     __end_of___wmul:
 13128                           
 13129                           	psect	text12
 13130  1585                     __ptext12:	
 13131 ;; *************** function ___lwmod *****************
 13132 ;; Defined at:
 13133 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
 13134 ;; Parameters:    Size  Location     Type
 13135 ;;  divisor         2    8[BANK0 ] unsigned int 
 13136 ;;  dividend        2   10[BANK0 ] unsigned int 
 13137 ;; Auto vars:     Size  Location     Type
 13138 ;;  counter         1   13[BANK0 ] unsigned char 
 13139 ;; Return value:  Size  Location     Type
 13140 ;;                  2    8[BANK0 ] unsigned int 
 13141 ;; Registers used:
 13142 ;;		wreg, status,2, status,0
 13143 ;; Tracked objects:
 13144 ;;		On entry : 0/0
 13145 ;;		On exit  : 0/0
 13146 ;;		Unchanged: 0/0
 13147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13148 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13149 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13150 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13151 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13152 ;;Total ram usage:        6 bytes
 13153 ;; Hardware stack levels used:    1
 13154 ;; Hardware stack levels required when called:    6
 13155 ;; This function calls:
 13156 ;;		Nothing
 13157 ;; This function is called by:
 13158 ;;		_main
 13159 ;;		_sprintf
 13160 ;;		_save_register
 13161 ;; This function uses a non-reentrant model
 13162 ;;
 13163                           
 13164                           
 13165                           ;psect for function ___lwmod
 13166  1585                     ___lwmod:
 13167  1585                     l4286:	
 13168                           ;incstack = 0
 13169                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 13170                           
 13171  1585  0020               	movlb	0	; select bank0
 13172  1586  0828               	movf	___lwmod@divisor,w
 13173  1587  0429               	iorwf	___lwmod@divisor+1,w
 13174  1588  1903               	btfsc	3,2
 13175  1589  2D8B               	goto	u3031
 13176  158A  2D8C               	goto	u3030
 13177  158B                     u3031:
 13178  158B  2DB5               	goto	l4304
 13179  158C                     u3030:
 13180  158C                     l4288:
 13181  158C  01AD               	clrf	___lwmod@counter
 13182  158D  0AAD               	incf	___lwmod@counter,f
 13183  158E  2D98               	goto	l4294
 13184  158F                     l4290:
 13185  158F  3001               	movlw	1
 13186  1590                     u3045:
 13187  1590  35A8               	lslf	___lwmod@divisor,f
 13188  1591  0DA9               	rlf	___lwmod@divisor+1,f
 13189  1592  0B89               	decfsz	9,f
 13190  1593  2D90               	goto	u3045
 13191  1594                     l4292:
 13192  1594  3001               	movlw	1
 13193  1595  00AC               	movwf	??___lwmod
 13194  1596  082C               	movf	??___lwmod,w
 13195  1597  07AD               	addwf	___lwmod@counter,f
 13196  1598                     l4294:
 13197  1598  1FA9               	btfss	___lwmod@divisor+1,7
 13198  1599  2D9B               	goto	u3051
 13199  159A  2D9C               	goto	u3050
 13200  159B                     u3051:
 13201  159B  2D8F               	goto	l4290
 13202  159C                     u3050:
 13203  159C                     l4296:
 13204  159C  0829               	movf	___lwmod@divisor+1,w
 13205  159D  022B               	subwf	___lwmod@dividend+1,w
 13206  159E  1D03               	skipz
 13207  159F  2DA2               	goto	u3065
 13208  15A0  0828               	movf	___lwmod@divisor,w
 13209  15A1  022A               	subwf	___lwmod@dividend,w
 13210  15A2                     u3065:
 13211  15A2  1C03               	skipc
 13212  15A3  2DA5               	goto	u3061
 13213  15A4  2DA6               	goto	u3060
 13214  15A5                     u3061:
 13215  15A5  2DAA               	goto	l4300
 13216  15A6                     u3060:
 13217  15A6                     l4298:
 13218  15A6  0828               	movf	___lwmod@divisor,w
 13219  15A7  02AA               	subwf	___lwmod@dividend,f
 13220  15A8  0829               	movf	___lwmod@divisor+1,w
 13221  15A9  3BAB               	subwfb	___lwmod@dividend+1,f
 13222  15AA                     l4300:
 13223  15AA  3001               	movlw	1
 13224  15AB                     u3075:
 13225  15AB  36A9               	lsrf	___lwmod@divisor+1,f
 13226  15AC  0CA8               	rrf	___lwmod@divisor,f
 13227  15AD  0B89               	decfsz	9,f
 13228  15AE  2DAB               	goto	u3075
 13229  15AF                     l4302:
 13230  15AF  3001               	movlw	1
 13231  15B0  02AD               	subwf	___lwmod@counter,f
 13232  15B1  1D03               	btfss	3,2
 13233  15B2  2DB4               	goto	u3081
 13234  15B3  2DB5               	goto	u3080
 13235  15B4                     u3081:
 13236  15B4  2D9C               	goto	l4296
 13237  15B5                     u3080:
 13238  15B5                     l4304:
 13239  15B5  082B               	movf	___lwmod@dividend+1,w
 13240  15B6  00A9               	movwf	?___lwmod+1
 13241  15B7  082A               	movf	___lwmod@dividend,w
 13242  15B8  00A8               	movwf	?___lwmod
 13243  15B9                     l1757:
 13244  15B9  0008               	return
 13245  15BA                     __end_of___lwmod:
 13246                           
 13247                           	psect	text13
 13248  15F7                     __ptext13:	
 13249 ;; *************** function ___lwdiv *****************
 13250 ;; Defined at:
 13251 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
 13252 ;; Parameters:    Size  Location     Type
 13253 ;;  divisor         2    0[BANK0 ] unsigned int 
 13254 ;;  dividend        2    2[BANK0 ] unsigned int 
 13255 ;; Auto vars:     Size  Location     Type
 13256 ;;  quotient        2    5[BANK0 ] unsigned int 
 13257 ;;  counter         1    7[BANK0 ] unsigned char 
 13258 ;; Return value:  Size  Location     Type
 13259 ;;                  2    0[BANK0 ] unsigned int 
 13260 ;; Registers used:
 13261 ;;		wreg, status,2, status,0
 13262 ;; Tracked objects:
 13263 ;;		On entry : 0/0
 13264 ;;		On exit  : 0/0
 13265 ;;		Unchanged: 0/0
 13266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13267 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13268 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13269 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13270 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13271 ;;Total ram usage:        8 bytes
 13272 ;; Hardware stack levels used:    1
 13273 ;; Hardware stack levels required when called:    6
 13274 ;; This function calls:
 13275 ;;		Nothing
 13276 ;; This function is called by:
 13277 ;;		_sprintf
 13278 ;; This function uses a non-reentrant model
 13279 ;;
 13280                           
 13281                           
 13282                           ;psect for function ___lwdiv
 13283  15F7                     ___lwdiv:
 13284  15F7                     l4260:	
 13285                           ;incstack = 0
 13286                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 13287                           
 13288  15F7  0020               	movlb	0	; select bank0
 13289  15F8  01A5               	clrf	___lwdiv@quotient
 13290  15F9  01A6               	clrf	___lwdiv@quotient+1
 13291  15FA                     l4262:
 13292  15FA  0820               	movf	___lwdiv@divisor,w
 13293  15FB  0421               	iorwf	___lwdiv@divisor+1,w
 13294  15FC  1903               	btfsc	3,2
 13295  15FD  2DFF               	goto	u2961
 13296  15FE  2E00               	goto	u2960
 13297  15FF                     u2961:
 13298  15FF  2E2F               	goto	l4282
 13299  1600                     u2960:
 13300  1600                     l4264:
 13301  1600  01A7               	clrf	___lwdiv@counter
 13302  1601  0AA7               	incf	___lwdiv@counter,f
 13303  1602  2E0C               	goto	l4270
 13304  1603                     l4266:
 13305  1603  3001               	movlw	1
 13306  1604                     u2975:
 13307  1604  35A0               	lslf	___lwdiv@divisor,f
 13308  1605  0DA1               	rlf	___lwdiv@divisor+1,f
 13309  1606  0B89               	decfsz	9,f
 13310  1607  2E04               	goto	u2975
 13311  1608                     l4268:
 13312  1608  3001               	movlw	1
 13313  1609  00A4               	movwf	??___lwdiv
 13314  160A  0824               	movf	??___lwdiv,w
 13315  160B  07A7               	addwf	___lwdiv@counter,f
 13316  160C                     l4270:
 13317  160C  1FA1               	btfss	___lwdiv@divisor+1,7
 13318  160D  2E0F               	goto	u2981
 13319  160E  2E10               	goto	u2980
 13320  160F                     u2981:
 13321  160F  2E03               	goto	l4266
 13322  1610                     u2980:
 13323  1610                     l4272:
 13324  1610  3001               	movlw	1
 13325  1611                     u2995:
 13326  1611  35A5               	lslf	___lwdiv@quotient,f
 13327  1612  0DA6               	rlf	___lwdiv@quotient+1,f
 13328  1613  0B89               	decfsz	9,f
 13329  1614  2E11               	goto	u2995
 13330  1615  0821               	movf	___lwdiv@divisor+1,w
 13331  1616  0223               	subwf	___lwdiv@dividend+1,w
 13332  1617  1D03               	skipz
 13333  1618  2E1B               	goto	u3005
 13334  1619  0820               	movf	___lwdiv@divisor,w
 13335  161A  0222               	subwf	___lwdiv@dividend,w
 13336  161B                     u3005:
 13337  161B  1C03               	skipc
 13338  161C  2E1E               	goto	u3001
 13339  161D  2E1F               	goto	u3000
 13340  161E                     u3001:
 13341  161E  2E24               	goto	l4278
 13342  161F                     u3000:
 13343  161F                     l4274:
 13344  161F  0820               	movf	___lwdiv@divisor,w
 13345  1620  02A2               	subwf	___lwdiv@dividend,f
 13346  1621  0821               	movf	___lwdiv@divisor+1,w
 13347  1622  3BA3               	subwfb	___lwdiv@dividend+1,f
 13348  1623                     l4276:
 13349  1623  1425               	bsf	___lwdiv@quotient,0
 13350  1624                     l4278:
 13351  1624  3001               	movlw	1
 13352  1625                     u3015:
 13353  1625  36A1               	lsrf	___lwdiv@divisor+1,f
 13354  1626  0CA0               	rrf	___lwdiv@divisor,f
 13355  1627  0B89               	decfsz	9,f
 13356  1628  2E25               	goto	u3015
 13357  1629                     l4280:
 13358  1629  3001               	movlw	1
 13359  162A  02A7               	subwf	___lwdiv@counter,f
 13360  162B  1D03               	btfss	3,2
 13361  162C  2E2E               	goto	u3021
 13362  162D  2E2F               	goto	u3020
 13363  162E                     u3021:
 13364  162E  2E10               	goto	l4272
 13365  162F                     u3020:
 13366  162F                     l4282:
 13367  162F  0826               	movf	___lwdiv@quotient+1,w
 13368  1630  00A1               	movwf	?___lwdiv+1
 13369  1631  0825               	movf	___lwdiv@quotient,w
 13370  1632  00A0               	movwf	?___lwdiv
 13371  1633                     l1747:
 13372  1633  0008               	return
 13373  1634                     __end_of___lwdiv:
 13374                           
 13375                           	psect	text14
 13376  142B                     __ptext14:	
 13377 ;; *************** function _LCDstr *****************
 13378 ;; Defined at:
 13379 ;;		line 113 in file "LCD.c"
 13380 ;; Parameters:    Size  Location     Type
 13381 ;;  p               1    wreg     PTR unsigned char 
 13382 ;;		 -> lcd@buf(17), 
 13383 ;; Auto vars:     Size  Location     Type
 13384 ;;  p               1   11[BANK0 ] PTR unsigned char 
 13385 ;;		 -> lcd@buf(17), 
 13386 ;;  c               1   10[BANK0 ] unsigned char 
 13387 ;; Return value:  Size  Location     Type
 13388 ;;                  1    wreg      void 
 13389 ;; Registers used:
 13390 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13391 ;; Tracked objects:
 13392 ;;		On entry : 0/0
 13393 ;;		On exit  : 0/0
 13394 ;;		Unchanged: 0/0
 13395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13397 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13398 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13399 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13400 ;;Total ram usage:        3 bytes
 13401 ;; Hardware stack levels used:    1
 13402 ;; Hardware stack levels required when called:    9
 13403 ;; This function calls:
 13404 ;;		_LCDchar
 13405 ;; This function is called by:
 13406 ;;		_lcd
 13407 ;; This function uses a non-reentrant model
 13408 ;;
 13409                           
 13410                           
 13411                           ;psect for function _LCDstr
 13412  142B                     _LCDstr:
 13413                           
 13414                           ;incstack = 0
 13415                           ; Regs used in _LCDstr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13416                           ;LCDstr@p stored from wreg
 13417  142B  0020               	movlb	0	; select bank0
 13418  142C  00AB               	movwf	LCDstr@p
 13419  142D                     l4462:
 13420                           
 13421                           ;LCD.c: 115: unsigned char c;;LCD.c: 117: while((c = *p++)) LCDchar(c);
 13422  142D  2C32               	goto	l4466
 13423  142E                     l4464:
 13424  142E  082A               	movf	LCDstr@c,w
 13425  142F  3192  22EE  3194   	fcall	_LCDchar
 13426  1432                     l4466:
 13427  1432  0020               	movlb	0	; select bank0
 13428  1433  082B               	movf	LCDstr@p,w
 13429  1434  0086               	movwf	6
 13430  1435  0187               	clrf	7
 13431  1436  0AAB               	incf	LCDstr@p,f
 13432  1437  0801               	movf	1,w
 13433  1438  00A9               	movwf	??_LCDstr
 13434  1439  0829               	movf	??_LCDstr,w
 13435  143A  00AA               	movwf	LCDstr@c
 13436  143B  082A               	movf	LCDstr@c,w
 13437  143C  1D03               	btfss	3,2
 13438  143D  2C3F               	goto	u3201
 13439  143E  2C40               	goto	u3200
 13440  143F                     u3201:
 13441  143F  2C2E               	goto	l4464
 13442  1440                     u3200:
 13443  1440                     l980:
 13444  1440  0008               	return
 13445  1441                     __end_of_LCDstr:
 13446                           
 13447                           	psect	text15
 13448  12EE                     __ptext15:	
 13449 ;; *************** function _LCDchar *****************
 13450 ;; Defined at:
 13451 ;;		line 108 in file "LCD.c"
 13452 ;; Parameters:    Size  Location     Type
 13453 ;;  c               1    wreg     unsigned char 
 13454 ;; Auto vars:     Size  Location     Type
 13455 ;;  c               1    8[BANK0 ] unsigned char 
 13456 ;; Return value:  Size  Location     Type
 13457 ;;                  1    wreg      void 
 13458 ;; Registers used:
 13459 ;;		wreg, status,2, status,0, pclath, cstack
 13460 ;; Tracked objects:
 13461 ;;		On entry : 0/0
 13462 ;;		On exit  : 0/0
 13463 ;;		Unchanged: 0/0
 13464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13466 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13467 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13468 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13469 ;;Total ram usage:        1 bytes
 13470 ;; Hardware stack levels used:    1
 13471 ;; Hardware stack levels required when called:    8
 13472 ;; This function calls:
 13473 ;;		_LCDsend2x4
 13474 ;; This function is called by:
 13475 ;;		_LCDstr
 13476 ;; This function uses a non-reentrant model
 13477 ;;
 13478                           
 13479                           
 13480                           ;psect for function _LCDchar
 13481  12EE                     _LCDchar:
 13482                           
 13483                           ;incstack = 0
 13484                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 13485                           ;LCDchar@c stored from wreg
 13486  12EE  0020               	movlb	0	; select bank0
 13487  12EF  00A8               	movwf	LCDchar@c
 13488  12F0                     l4232:
 13489                           
 13490                           ;LCD.c: 110: LCDsend2x4(c, 0x01);
 13491  12F0  01A2               	clrf	LCDsend2x4@mode
 13492  12F1  0AA2               	incf	LCDsend2x4@mode,f
 13493  12F2  0828               	movf	LCDchar@c,w
 13494  12F3  3189  2100  3192   	fcall	_LCDsend2x4
 13495  12F6                     l974:
 13496  12F6  0008               	return
 13497  12F7                     __end_of_LCDchar:
 13498                           
 13499                           	psect	text16
 13500  12C3                     __ptext16:	
 13501 ;; *************** function _LCDcmd *****************
 13502 ;; Defined at:
 13503 ;;		line 103 in file "LCD.c"
 13504 ;; Parameters:    Size  Location     Type
 13505 ;;  c               1    wreg     unsigned char 
 13506 ;; Auto vars:     Size  Location     Type
 13507 ;;  c               1    8[BANK0 ] unsigned char 
 13508 ;; Return value:  Size  Location     Type
 13509 ;;                  1    wreg      void 
 13510 ;; Registers used:
 13511 ;;		wreg, status,2, status,0, pclath, cstack
 13512 ;; Tracked objects:
 13513 ;;		On entry : 0/0
 13514 ;;		On exit  : 0/0
 13515 ;;		Unchanged: 0/0
 13516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13518 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13520 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13521 ;;Total ram usage:        1 bytes
 13522 ;; Hardware stack levels used:    1
 13523 ;; Hardware stack levels required when called:    8
 13524 ;; This function calls:
 13525 ;;		_LCDsend2x4
 13526 ;; This function is called by:
 13527 ;;		_lcd
 13528 ;; This function uses a non-reentrant model
 13529 ;;
 13530                           
 13531                           
 13532                           ;psect for function _LCDcmd
 13533  12C3                     _LCDcmd:
 13534                           
 13535                           ;incstack = 0
 13536                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 13537                           ;LCDcmd@c stored from wreg
 13538  12C3  0020               	movlb	0	; select bank0
 13539  12C4  00A8               	movwf	LCDcmd@c
 13540  12C5                     l4460:
 13541                           
 13542                           ;LCD.c: 105: LCDsend2x4(c, 0);
 13543  12C5  01A2               	clrf	LCDsend2x4@mode
 13544  12C6  0828               	movf	LCDcmd@c,w
 13545  12C7  3189  2100  3192   	fcall	_LCDsend2x4
 13546  12CA                     l971:
 13547  12CA  0008               	return
 13548  12CB                     __end_of_LCDcmd:
 13549                           
 13550                           	psect	text17
 13551  130B                     __ptext17:	
 13552 ;; *************** function _i2c1_driver_open *****************
 13553 ;; Defined at:
 13554 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
 13555 ;; Parameters:    Size  Location     Type
 13556 ;;		None
 13557 ;; Auto vars:     Size  Location     Type
 13558 ;;		None
 13559 ;; Return value:  Size  Location     Type
 13560 ;;		None               void
 13561 ;; Registers used:
 13562 ;;		wreg, status,2
 13563 ;; Tracked objects:
 13564 ;;		On entry : 0/0
 13565 ;;		On exit  : 0/0
 13566 ;;		Unchanged: 0/0
 13567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13572 ;;Total ram usage:        0 bytes
 13573 ;; Hardware stack levels used:    1
 13574 ;; Hardware stack levels required when called:    6
 13575 ;; This function calls:
 13576 ;;		Nothing
 13577 ;; This function is called by:
 13578 ;;		_main
 13579 ;; This function uses a non-reentrant model
 13580 ;;
 13581                           
 13582                           
 13583                           ;psect for function _i2c1_driver_open
 13584  130B                     _i2c1_driver_open:
 13585  130B                     l4606:	
 13586                           ;incstack = 0
 13587                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 13588                           
 13589                           
 13590                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
 13591  130B  0023               	movlb	3	; select bank3
 13592  130C  1A90               	btfsc	16,5	;volatile
 13593  130D  2B0F               	goto	u3401
 13594  130E  2B10               	goto	u3400
 13595  130F                     u3401:
 13596  130F  2B16               	goto	l235
 13597  1310                     u3400:
 13598  1310                     l4608:
 13599                           
 13600                           ;i2c1_driver.c: 86: {;i2c1_driver.c: 87: SSP1STAT = 0x00;
 13601  1310  018F               	clrf	15	;volatile
 13602  1311                     l4610:
 13603                           
 13604                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
 13605  1311  3028               	movlw	40
 13606  1312  0090               	movwf	16	;volatile
 13607  1313                     l4612:
 13608                           
 13609                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
 13610  1313  0191               	clrf	17	;volatile
 13611                           
 13612                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
 13613  1314  3003               	movlw	3
 13614  1315  008D               	movwf	13	;volatile
 13615  1316                     l235:
 13616  1316  0008               	return
 13617  1317                     __end_of_i2c1_driver_open:
 13618                           
 13619                           	psect	text18
 13620  13B1                     __ptext18:	
 13621 ;; *************** function _conf_temp *****************
 13622 ;; Defined at:
 13623 ;;		line 632 in file "main.c"
 13624 ;; Parameters:    Size  Location     Type
 13625 ;;		None
 13626 ;; Auto vars:     Size  Location     Type
 13627 ;;		None
 13628 ;; Return value:  Size  Location     Type
 13629 ;;                  1    wreg      void 
 13630 ;; Registers used:
 13631 ;;		wreg, status,2, status,0
 13632 ;; Tracked objects:
 13633 ;;		On entry : 0/0
 13634 ;;		On exit  : 0/0
 13635 ;;		Unchanged: 0/0
 13636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13639 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13640 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13641 ;;Total ram usage:        1 bytes
 13642 ;; Hardware stack levels used:    1
 13643 ;; Hardware stack levels required when called:    6
 13644 ;; This function calls:
 13645 ;;		Nothing
 13646 ;; This function is called by:
 13647 ;;		_main
 13648 ;; This function uses a non-reentrant model
 13649 ;;
 13650                           
 13651                           
 13652                           ;psect for function _conf_temp
 13653  13B1                     _conf_temp:
 13654  13B1                     l4874:	
 13655                           ;incstack = 0
 13656                           ; Regs used in _conf_temp: [wreg+status,2+status,0]
 13657                           
 13658                           
 13659                           ;main.c: 634: if(ALAT == 50){
 13660  13B1  3032               	movlw	50
 13661  13B2  0021               	movlb	1	; select bank1
 13662  13B3  063B               	xorwf	_ALAT^(0+128),w
 13663  13B4  1D03               	btfss	3,2
 13664  13B5  2BB7               	goto	u3821
 13665  13B6  2BB8               	goto	u3820
 13666  13B7                     u3821:
 13667  13B7  2BBA               	goto	l4878
 13668  13B8                     u3820:
 13669  13B8                     l4876:
 13670                           
 13671                           ;main.c: 635: ALAT = 0;
 13672  13B8  01BB               	clrf	_ALAT^(0+128)
 13673                           
 13674                           ;main.c: 636: }else{
 13675  13B9  2BC0               	goto	l793
 13676  13BA                     l4878:
 13677                           
 13678                           ;main.c: 637: ALAT++;
 13679  13BA  3001               	movlw	1
 13680  13BB  0020               	movlb	0	; select bank0
 13681  13BC  00A0               	movwf	??_conf_temp
 13682  13BD  0820               	movf	??_conf_temp,w
 13683  13BE  0021               	movlb	1	; select bank1
 13684  13BF  07BB               	addwf	_ALAT^(0+128),f
 13685  13C0                     l793:
 13686  13C0  0008               	return
 13687  13C1                     __end_of_conf_temp:
 13688                           
 13689                           	psect	text19
 13690  13A1                     __ptext19:	
 13691 ;; *************** function _conf_lumin *****************
 13692 ;; Defined at:
 13693 ;;		line 643 in file "main.c"
 13694 ;; Parameters:    Size  Location     Type
 13695 ;;		None
 13696 ;; Auto vars:     Size  Location     Type
 13697 ;;		None
 13698 ;; Return value:  Size  Location     Type
 13699 ;;                  1    wreg      void 
 13700 ;; Registers used:
 13701 ;;		wreg, status,2, status,0
 13702 ;; Tracked objects:
 13703 ;;		On entry : 0/0
 13704 ;;		On exit  : 0/0
 13705 ;;		Unchanged: 0/0
 13706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13709 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13710 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13711 ;;Total ram usage:        1 bytes
 13712 ;; Hardware stack levels used:    1
 13713 ;; Hardware stack levels required when called:    6
 13714 ;; This function calls:
 13715 ;;		Nothing
 13716 ;; This function is called by:
 13717 ;;		_main
 13718 ;; This function uses a non-reentrant model
 13719 ;;
 13720                           
 13721                           
 13722                           ;psect for function _conf_lumin
 13723  13A1                     _conf_lumin:
 13724  13A1                     l4882:	
 13725                           ;incstack = 0
 13726                           ; Regs used in _conf_lumin: [wreg+status,2+status,0]
 13727                           
 13728                           
 13729                           ;main.c: 645: if(ALAL == 7){
 13730  13A1  3007               	movlw	7
 13731  13A2  0021               	movlb	1	; select bank1
 13732  13A3  063A               	xorwf	_ALAL^(0+128),w
 13733  13A4  1D03               	btfss	3,2
 13734  13A5  2BA7               	goto	u3831
 13735  13A6  2BA8               	goto	u3830
 13736  13A7                     u3831:
 13737  13A7  2BAA               	goto	l4886
 13738  13A8                     u3830:
 13739  13A8                     l4884:
 13740                           
 13741                           ;main.c: 646: ALAL = 0;
 13742  13A8  01BA               	clrf	_ALAL^(0+128)
 13743                           
 13744                           ;main.c: 647: }else{
 13745  13A9  2BB0               	goto	l798
 13746  13AA                     l4886:
 13747                           
 13748                           ;main.c: 648: ALAL++;
 13749  13AA  3001               	movlw	1
 13750  13AB  0020               	movlb	0	; select bank0
 13751  13AC  00A0               	movwf	??_conf_lumin
 13752  13AD  0820               	movf	??_conf_lumin,w
 13753  13AE  0021               	movlb	1	; select bank1
 13754  13AF  07BA               	addwf	_ALAL^(0+128),f
 13755  13B0                     l798:
 13756  13B0  0008               	return
 13757  13B1                     __end_of_conf_lumin:
 13758                           
 13759                           	psect	text20
 13760  12AA                     __ptext20:	
 13761 ;; *************** function _conf_clock_ss *****************
 13762 ;; Defined at:
 13763 ;;		line 597 in file "main.c"
 13764 ;; Parameters:    Size  Location     Type
 13765 ;;		None
 13766 ;; Auto vars:     Size  Location     Type
 13767 ;;		None
 13768 ;; Return value:  Size  Location     Type
 13769 ;;                  1    wreg      void 
 13770 ;; Registers used:
 13771 ;;		wreg
 13772 ;; Tracked objects:
 13773 ;;		On entry : 0/0
 13774 ;;		On exit  : 0/0
 13775 ;;		Unchanged: 0/0
 13776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13781 ;;Total ram usage:        0 bytes
 13782 ;; Hardware stack levels used:    1
 13783 ;; Hardware stack levels required when called:    6
 13784 ;; This function calls:
 13785 ;;		Nothing
 13786 ;; This function is called by:
 13787 ;;		_main
 13788 ;; This function uses a non-reentrant model
 13789 ;;
 13790                           
 13791                           
 13792                           ;psect for function _conf_clock_ss
 13793  12AA                     _conf_clock_ss:
 13794  12AA                     l4846:	
 13795                           ;incstack = 0
 13796                           ; Regs used in _conf_clock_ss: [wreg]
 13797                           
 13798                           
 13799                           ;main.c: 598: timer_flag++;
 13800  12AA  3001               	movlw	1
 13801  12AB  07F9               	addwf	_timer_flag,f	;volatile
 13802  12AC  3000               	movlw	0
 13803  12AD  3DFA               	addwfc	_timer_flag+1,f	;volatile
 13804  12AE                     l773:
 13805  12AE  0008               	return
 13806  12AF                     __end_of_conf_clock_ss:
 13807                           
 13808                           	psect	text21
 13809  1374                     __ptext21:	
 13810 ;; *************** function _conf_clock_mm *****************
 13811 ;; Defined at:
 13812 ;;		line 587 in file "main.c"
 13813 ;; Parameters:    Size  Location     Type
 13814 ;;		None
 13815 ;; Auto vars:     Size  Location     Type
 13816 ;;		None
 13817 ;; Return value:  Size  Location     Type
 13818 ;;                  1    wreg      void 
 13819 ;; Registers used:
 13820 ;;		wreg, status,2, status,0
 13821 ;; Tracked objects:
 13822 ;;		On entry : 0/0
 13823 ;;		On exit  : 0/0
 13824 ;;		Unchanged: 0/0
 13825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13828 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13829 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13830 ;;Total ram usage:        1 bytes
 13831 ;; Hardware stack levels used:    1
 13832 ;; Hardware stack levels required when called:    6
 13833 ;; This function calls:
 13834 ;;		Nothing
 13835 ;; This function is called by:
 13836 ;;		_main
 13837 ;; This function uses a non-reentrant model
 13838 ;;
 13839                           
 13840                           
 13841                           ;psect for function _conf_clock_mm
 13842  1374                     _conf_clock_mm:
 13843  1374                     l4838:	
 13844                           ;incstack = 0
 13845                           ; Regs used in _conf_clock_mm: [wreg+status,2+status,0]
 13846                           
 13847                           
 13848                           ;main.c: 588: if (CLKM == 59){
 13849  1374  303B               	movlw	59
 13850  1375  0020               	movlb	0	; select bank0
 13851  1376  066F               	xorwf	_CLKM,w
 13852  1377  1D03               	btfss	3,2
 13853  1378  2B7A               	goto	u3781
 13854  1379  2B7B               	goto	u3780
 13855  137A                     u3781:
 13856  137A  2B7D               	goto	l4842
 13857  137B                     u3780:
 13858  137B                     l4840:
 13859                           
 13860                           ;main.c: 589: CLKM = 0;
 13861  137B  01EF               	clrf	_CLKM
 13862                           
 13863                           ;main.c: 590: }else{
 13864  137C  2B81               	goto	l770
 13865  137D                     l4842:
 13866                           
 13867                           ;main.c: 591: CLKM++;
 13868  137D  3001               	movlw	1
 13869  137E  00A0               	movwf	??_conf_clock_mm
 13870  137F  0820               	movf	??_conf_clock_mm,w
 13871  1380  07EF               	addwf	_CLKM,f
 13872  1381                     l770:
 13873  1381  0008               	return
 13874  1382                     __end_of_conf_clock_mm:
 13875                           
 13876                           	psect	text22
 13877  1366                     __ptext22:	
 13878 ;; *************** function _conf_clock_hh *****************
 13879 ;; Defined at:
 13880 ;;		line 577 in file "main.c"
 13881 ;; Parameters:    Size  Location     Type
 13882 ;;		None
 13883 ;; Auto vars:     Size  Location     Type
 13884 ;;		None
 13885 ;; Return value:  Size  Location     Type
 13886 ;;                  1    wreg      void 
 13887 ;; Registers used:
 13888 ;;		wreg, status,2, status,0
 13889 ;; Tracked objects:
 13890 ;;		On entry : 0/0
 13891 ;;		On exit  : 0/0
 13892 ;;		Unchanged: 0/0
 13893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13896 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13897 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13898 ;;Total ram usage:        1 bytes
 13899 ;; Hardware stack levels used:    1
 13900 ;; Hardware stack levels required when called:    6
 13901 ;; This function calls:
 13902 ;;		Nothing
 13903 ;; This function is called by:
 13904 ;;		_main
 13905 ;; This function uses a non-reentrant model
 13906 ;;
 13907                           
 13908                           
 13909                           ;psect for function _conf_clock_hh
 13910  1366                     _conf_clock_hh:
 13911  1366                     l4830:	
 13912                           ;incstack = 0
 13913                           ; Regs used in _conf_clock_hh: [wreg+status,2+status,0]
 13914                           
 13915                           
 13916                           ;main.c: 578: if (CLKH == 23){
 13917  1366  3017               	movlw	23
 13918  1367  067B               	xorwf	_CLKH,w
 13919  1368  1D03               	btfss	3,2
 13920  1369  2B6B               	goto	u3771
 13921  136A  2B6C               	goto	u3770
 13922  136B                     u3771:
 13923  136B  2B6E               	goto	l4834
 13924  136C                     u3770:
 13925  136C                     l4832:
 13926                           
 13927                           ;main.c: 579: CLKH = 0;
 13928  136C  01FB               	clrf	_CLKH
 13929                           
 13930                           ;main.c: 580: }else{
 13931  136D  2B73               	goto	l765
 13932  136E                     l4834:
 13933                           
 13934                           ;main.c: 581: CLKH++;
 13935  136E  3001               	movlw	1
 13936  136F  0020               	movlb	0	; select bank0
 13937  1370  00A0               	movwf	??_conf_clock_hh
 13938  1371  0820               	movf	??_conf_clock_hh,w
 13939  1372  07FB               	addwf	_CLKH,f
 13940  1373                     l765:
 13941  1373  0008               	return
 13942  1374                     __end_of_conf_clock_hh:
 13943                           
 13944                           	psect	text23
 13945  1391                     __ptext23:	
 13946 ;; *************** function _conf_alarm_ss *****************
 13947 ;; Defined at:
 13948 ;;		line 622 in file "main.c"
 13949 ;; Parameters:    Size  Location     Type
 13950 ;;		None
 13951 ;; Auto vars:     Size  Location     Type
 13952 ;;		None
 13953 ;; Return value:  Size  Location     Type
 13954 ;;                  1    wreg      void 
 13955 ;; Registers used:
 13956 ;;		wreg, status,2, status,0
 13957 ;; Tracked objects:
 13958 ;;		On entry : 0/0
 13959 ;;		On exit  : 0/0
 13960 ;;		Unchanged: 0/0
 13961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13964 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13965 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13966 ;;Total ram usage:        1 bytes
 13967 ;; Hardware stack levels used:    1
 13968 ;; Hardware stack levels required when called:    6
 13969 ;; This function calls:
 13970 ;;		Nothing
 13971 ;; This function is called by:
 13972 ;;		_main
 13973 ;; This function uses a non-reentrant model
 13974 ;;
 13975                           
 13976                           
 13977                           ;psect for function _conf_alarm_ss
 13978  1391                     _conf_alarm_ss:
 13979  1391                     l4866:	
 13980                           ;incstack = 0
 13981                           ; Regs used in _conf_alarm_ss: [wreg+status,2+status,0]
 13982                           
 13983                           
 13984                           ;main.c: 623: if (ALAS == 59){
 13985  1391  303B               	movlw	59
 13986  1392  0021               	movlb	1	; select bank1
 13987  1393  062B               	xorwf	_ALAS^(0+128),w
 13988  1394  1D03               	btfss	3,2
 13989  1395  2B97               	goto	u3811
 13990  1396  2B98               	goto	u3810
 13991  1397                     u3811:
 13992  1397  2B9A               	goto	l4870
 13993  1398                     u3810:
 13994  1398                     l4868:
 13995                           
 13996                           ;main.c: 624: ALAS = 0;
 13997  1398  01AB               	clrf	_ALAS^(0+128)
 13998                           
 13999                           ;main.c: 625: }else{
 14000  1399  2BA0               	goto	l788
 14001  139A                     l4870:
 14002                           
 14003                           ;main.c: 626: ALAS++;
 14004  139A  3001               	movlw	1
 14005  139B  0020               	movlb	0	; select bank0
 14006  139C  00A0               	movwf	??_conf_alarm_ss
 14007  139D  0820               	movf	??_conf_alarm_ss,w
 14008  139E  0021               	movlb	1	; select bank1
 14009  139F  07AB               	addwf	_ALAS^(0+128),f
 14010  13A0                     l788:
 14011  13A0  0008               	return
 14012  13A1                     __end_of_conf_alarm_ss:
 14013                           
 14014                           	psect	text24
 14015  1358                     __ptext24:	
 14016 ;; *************** function _conf_alarm_mm *****************
 14017 ;; Defined at:
 14018 ;;		line 612 in file "main.c"
 14019 ;; Parameters:    Size  Location     Type
 14020 ;;		None
 14021 ;; Auto vars:     Size  Location     Type
 14022 ;;		None
 14023 ;; Return value:  Size  Location     Type
 14024 ;;                  1    wreg      void 
 14025 ;; Registers used:
 14026 ;;		wreg, status,2, status,0
 14027 ;; Tracked objects:
 14028 ;;		On entry : 0/0
 14029 ;;		On exit  : 0/0
 14030 ;;		Unchanged: 0/0
 14031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14034 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14035 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14036 ;;Total ram usage:        1 bytes
 14037 ;; Hardware stack levels used:    1
 14038 ;; Hardware stack levels required when called:    6
 14039 ;; This function calls:
 14040 ;;		Nothing
 14041 ;; This function is called by:
 14042 ;;		_main
 14043 ;; This function uses a non-reentrant model
 14044 ;;
 14045                           
 14046                           
 14047                           ;psect for function _conf_alarm_mm
 14048  1358                     _conf_alarm_mm:
 14049  1358                     l4858:	
 14050                           ;incstack = 0
 14051                           ; Regs used in _conf_alarm_mm: [wreg+status,2+status,0]
 14052                           
 14053                           
 14054                           ;main.c: 613: if (ALAM == 59){
 14055  1358  303B               	movlw	59
 14056  1359  067C               	xorwf	_ALAM,w
 14057  135A  1D03               	btfss	3,2
 14058  135B  2B5D               	goto	u3801
 14059  135C  2B5E               	goto	u3800
 14060  135D                     u3801:
 14061  135D  2B60               	goto	l4862
 14062  135E                     u3800:
 14063  135E                     l4860:
 14064                           
 14065                           ;main.c: 614: ALAM = 0;
 14066  135E  01FC               	clrf	_ALAM
 14067                           
 14068                           ;main.c: 615: }else{
 14069  135F  2B65               	goto	l783
 14070  1360                     l4862:
 14071                           
 14072                           ;main.c: 616: ALAM++;
 14073  1360  3001               	movlw	1
 14074  1361  0020               	movlb	0	; select bank0
 14075  1362  00A0               	movwf	??_conf_alarm_mm
 14076  1363  0820               	movf	??_conf_alarm_mm,w
 14077  1364  07FC               	addwf	_ALAM,f
 14078  1365                     l783:
 14079  1365  0008               	return
 14080  1366                     __end_of_conf_alarm_mm:
 14081                           
 14082                           	psect	text25
 14083  134A                     __ptext25:	
 14084 ;; *************** function _conf_alarm_hh *****************
 14085 ;; Defined at:
 14086 ;;		line 602 in file "main.c"
 14087 ;; Parameters:    Size  Location     Type
 14088 ;;		None
 14089 ;; Auto vars:     Size  Location     Type
 14090 ;;		None
 14091 ;; Return value:  Size  Location     Type
 14092 ;;                  1    wreg      void 
 14093 ;; Registers used:
 14094 ;;		wreg, status,2, status,0
 14095 ;; Tracked objects:
 14096 ;;		On entry : 0/0
 14097 ;;		On exit  : 0/0
 14098 ;;		Unchanged: 0/0
 14099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14102 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14103 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14104 ;;Total ram usage:        1 bytes
 14105 ;; Hardware stack levels used:    1
 14106 ;; Hardware stack levels required when called:    6
 14107 ;; This function calls:
 14108 ;;		Nothing
 14109 ;; This function is called by:
 14110 ;;		_main
 14111 ;; This function uses a non-reentrant model
 14112 ;;
 14113                           
 14114                           
 14115                           ;psect for function _conf_alarm_hh
 14116  134A                     _conf_alarm_hh:
 14117  134A                     l4850:	
 14118                           ;incstack = 0
 14119                           ; Regs used in _conf_alarm_hh: [wreg+status,2+status,0]
 14120                           
 14121                           
 14122                           ;main.c: 603: if (ALAH == 23){
 14123  134A  3017               	movlw	23
 14124  134B  067D               	xorwf	_ALAH,w
 14125  134C  1D03               	btfss	3,2
 14126  134D  2B4F               	goto	u3791
 14127  134E  2B50               	goto	u3790
 14128  134F                     u3791:
 14129  134F  2B52               	goto	l4854
 14130  1350                     u3790:
 14131  1350                     l4852:
 14132                           
 14133                           ;main.c: 604: ALAH = 0;
 14134  1350  01FD               	clrf	_ALAH
 14135                           
 14136                           ;main.c: 605: }else{
 14137  1351  2B57               	goto	l778
 14138  1352                     l4854:
 14139                           
 14140                           ;main.c: 606: ALAH++;
 14141  1352  3001               	movlw	1
 14142  1353  0020               	movlb	0	; select bank0
 14143  1354  00A0               	movwf	??_conf_alarm_hh
 14144  1355  0820               	movf	??_conf_alarm_hh,w
 14145  1356  07FD               	addwf	_ALAH,f
 14146  1357                     l778:
 14147  1357  0008               	return
 14148  1358                     __end_of_conf_alarm_hh:
 14149                           
 14150                           	psect	text26
 14151  1300                     __ptext26:	
 14152 ;; *************** function _conf_alarm_flag *****************
 14153 ;; Defined at:
 14154 ;;		line 654 in file "main.c"
 14155 ;; Parameters:    Size  Location     Type
 14156 ;;		None
 14157 ;; Auto vars:     Size  Location     Type
 14158 ;;		None
 14159 ;; Return value:  Size  Location     Type
 14160 ;;                  1    wreg      void 
 14161 ;; Registers used:
 14162 ;;		wreg, status,2, status,0
 14163 ;; Tracked objects:
 14164 ;;		On entry : 0/0
 14165 ;;		On exit  : 0/0
 14166 ;;		Unchanged: 0/0
 14167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14168 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14169 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14171 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14172 ;;Total ram usage:        0 bytes
 14173 ;; Hardware stack levels used:    1
 14174 ;; Hardware stack levels required when called:    6
 14175 ;; This function calls:
 14176 ;;		Nothing
 14177 ;; This function is called by:
 14178 ;;		_main
 14179 ;; This function uses a non-reentrant model
 14180 ;;
 14181                           
 14182                           
 14183                           ;psect for function _conf_alarm_flag
 14184  1300                     _conf_alarm_flag:
 14185  1300                     l4890:	
 14186                           ;incstack = 0
 14187                           ; Regs used in _conf_alarm_flag: [wreg+status,2+status,0]
 14188                           
 14189                           
 14190                           ;main.c: 656: if(ALAF == 0){
 14191  1300  0021               	movlb	1	; select bank1
 14192  1301  082A               	movf	_ALAF^(0+128),w
 14193  1302  1D03               	btfss	3,2
 14194  1303  2B05               	goto	u3841
 14195  1304  2B06               	goto	u3840
 14196  1305                     u3841:
 14197  1305  2B09               	goto	l4894
 14198  1306                     u3840:
 14199  1306                     l4892:
 14200                           
 14201                           ;main.c: 657: ALAF = 1;
 14202  1306  01AA               	clrf	_ALAF^(0+128)
 14203  1307  0AAA               	incf	_ALAF^(0+128),f
 14204                           
 14205                           ;main.c: 658: }else{
 14206  1308  2B0A               	goto	l803
 14207  1309                     l4894:
 14208                           
 14209                           ;main.c: 659: ALAF = 0;
 14210  1309  01AA               	clrf	_ALAF^(0+128)
 14211  130A                     l803:
 14212  130A  0008               	return
 14213  130B                     __end_of_conf_alarm_flag:
 14214                           
 14215                           	psect	text27
 14216  066D                     __ptext27:	
 14217 ;; *************** function _check_vars *****************
 14218 ;; Defined at:
 14219 ;;		line 465 in file "main.c"
 14220 ;; Parameters:    Size  Location     Type
 14221 ;;		None
 14222 ;; Auto vars:     Size  Location     Type
 14223 ;;  last            2    4[BANK0 ] unsigned int 
 14224 ;;  pass            1    3[BANK0 ] unsigned char 
 14225 ;; Return value:  Size  Location     Type
 14226 ;;                  1    wreg      void 
 14227 ;; Registers used:
 14228 ;;		wreg, status,2, status,0, pclath, cstack
 14229 ;; Tracked objects:
 14230 ;;		On entry : 0/0
 14231 ;;		On exit  : 0/0
 14232 ;;		Unchanged: 0/0
 14233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14235 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14236 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14237 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14238 ;;Total ram usage:        4 bytes
 14239 ;; Hardware stack levels used:    1
 14240 ;; Hardware stack levels required when called:    7
 14241 ;; This function calls:
 14242 ;;		_DATAEE_ReadByte
 14243 ;; This function is called by:
 14244 ;;		_main
 14245 ;; This function uses a non-reentrant model
 14246 ;;
 14247                           
 14248                           
 14249                           ;psect for function _check_vars
 14250  066D                     _check_vars:
 14251  066D                     l4664:	
 14252                           ;incstack = 0
 14253                           ; Regs used in _check_vars: [wreg+status,2+status,0+pclath+cstack]
 14254                           
 14255                           
 14256                           ;main.c: 466: uint8_t pass = DATAEE_ReadByte(0x7096);
 14257  066D  3096               	movlw	150
 14258  066E  0020               	movlb	0	; select bank0
 14259  066F  00A0               	movwf	DATAEE_ReadByte@bAdd
 14260  0670  3070               	movlw	112
 14261  0671  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14262  0672  3193  2382  3186   	fcall	_DATAEE_ReadByte
 14263  0675  0020               	movlb	0	; select bank0
 14264  0676  00A2               	movwf	??_check_vars
 14265  0677  0822               	movf	??_check_vars,w
 14266  0678  00A3               	movwf	check_vars@pass
 14267  0679                     l4666:
 14268                           
 14269                           ;main.c: 467: uint16_t last = 0x70a1;
 14270  0679  30A1               	movlw	161
 14271  067A  00A4               	movwf	check_vars@last
 14272  067B  3070               	movlw	112
 14273  067C  00A5               	movwf	check_vars@last+1
 14274  067D                     l4668:
 14275                           
 14276                           ;main.c: 468: if (pass == 0xaa){
 14277  067D  30AA               	movlw	170
 14278  067E  0623               	xorwf	check_vars@pass,w
 14279  067F  1D03               	btfss	3,2
 14280  0680  2E82               	goto	u3421
 14281  0681  2E83               	goto	u3420
 14282  0682                     u3421:
 14283  0682  2FE1               	goto	l664
 14284  0683                     u3420:
 14285  0683                     l4670:
 14286                           
 14287                           ;main.c: 469: CSUM = DATAEE_ReadByte(last--);
 14288  0683  30A1               	movlw	161
 14289  0684  00A0               	movwf	DATAEE_ReadByte@bAdd
 14290  0685  3070               	movlw	112
 14291  0686  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14292  0687  3193  2382  3186   	fcall	_DATAEE_ReadByte
 14293  068A  0020               	movlb	0	; select bank0
 14294  068B  00A2               	movwf	??_check_vars
 14295  068C  0822               	movf	??_check_vars,w
 14296  068D  0021               	movlb	1	; select bank1
 14297  068E  00A9               	movwf	_CSUM^(0+128)
 14298  068F                     l4672:
 14299  068F  3001               	movlw	1
 14300  0690  0020               	movlb	0	; select bank0
 14301  0691  02A4               	subwf	check_vars@last,f
 14302  0692  3000               	movlw	0
 14303  0693  3BA5               	subwfb	check_vars@last+1,f
 14304  0694                     l4674:
 14305                           
 14306                           ;main.c: 470: CSUM -= DATAEE_ReadByte(last--);
 14307  0694  0825               	movf	check_vars@last+1,w
 14308  0695  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14309  0696  0824               	movf	check_vars@last,w
 14310  0697  00A0               	movwf	DATAEE_ReadByte@bAdd
 14311  0698  3193  2382  3186   	fcall	_DATAEE_ReadByte
 14312  069B  0020               	movlb	0	; select bank0
 14313  069C  00A2               	movwf	??_check_vars
 14314  069D  0822               	movf	??_check_vars,w
 14315  069E  0021               	movlb	1	; select bank1
 14316  069F  02A9               	subwf	_CSUM^(0+128),f
 14317  06A0                     l4676:
 14318  06A0  3001               	movlw	1
 14319  06A1  0020               	movlb	0	; select bank0
 14320  06A2  02A4               	subwf	check_vars@last,f
 14321  06A3  3000               	movlw	0
 14322  06A4  3BA5               	subwfb	check_vars@last+1,f
 14323  06A5                     l4678:
 14324                           
 14325                           ;main.c: 471: CSUM -= DATAEE_ReadByte(last--);
 14326  06A5  0825               	movf	check_vars@last+1,w
 14327  06A6  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14328  06A7  0824               	movf	check_vars@last,w
 14329  06A8  00A0               	movwf	DATAEE_ReadByte@bAdd
 14330  06A9  3193  2382  3186   	fcall	_DATAEE_ReadByte
 14331  06AC  0020               	movlb	0	; select bank0
 14332  06AD  00A2               	movwf	??_check_vars
 14333  06AE  0822               	movf	??_check_vars,w
 14334  06AF  0021               	movlb	1	; select bank1
 14335  06B0  02A9               	subwf	_CSUM^(0+128),f
 14336  06B1                     l4680:
 14337  06B1  3001               	movlw	1
 14338  06B2  0020               	movlb	0	; select bank0
 14339  06B3  02A4               	subwf	check_vars@last,f
 14340  06B4  3000               	movlw	0
 14341  06B5  3BA5               	subwfb	check_vars@last+1,f
 14342  06B6                     l4682:
 14343                           
 14344                           ;main.c: 472: CSUM -= DATAEE_ReadByte(last--);
 14345  06B6  0825               	movf	check_vars@last+1,w
 14346  06B7  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14347  06B8  0824               	movf	check_vars@last,w
 14348  06B9  00A0               	movwf	DATAEE_ReadByte@bAdd
 14349  06BA  3193  2382  3186   	fcall	_DATAEE_ReadByte
 14350  06BD  0020               	movlb	0	; select bank0
 14351  06BE  00A2               	movwf	??_check_vars
 14352  06BF  0822               	movf	??_check_vars,w
 14353  06C0  0021               	movlb	1	; select bank1
 14354  06C1  02A9               	subwf	_CSUM^(0+128),f
 14355  06C2                     l4684:
 14356  06C2  3001               	movlw	1
 14357  06C3  0020               	movlb	0	; select bank0
 14358  06C4  02A4               	subwf	check_vars@last,f
 14359  06C5  3000               	movlw	0
 14360  06C6  3BA5               	subwfb	check_vars@last+1,f
 14361  06C7                     l4686:
 14362                           
 14363                           ;main.c: 473: CSUM -= DATAEE_ReadByte(last--);
 14364  06C7  0825               	movf	check_vars@last+1,w
 14365  06C8  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14366  06C9  0824               	movf	check_vars@last,w
 14367  06CA  00A0               	movwf	DATAEE_ReadByte@bAdd
 14368  06CB  3193  2382  3186   	fcall	_DATAEE_ReadByte
 14369  06CE  0020               	movlb	0	; select bank0
 14370  06CF  00A2               	movwf	??_check_vars
 14371  06D0  0822               	movf	??_check_vars,w
 14372  06D1  0021               	movlb	1	; select bank1
 14373  06D2  02A9               	subwf	_CSUM^(0+128),f
 14374  06D3                     l4688:
 14375  06D3  3001               	movlw	1
 14376  06D4  0020               	movlb	0	; select bank0
 14377  06D5  02A4               	subwf	check_vars@last,f
 14378  06D6  3000               	movlw	0
 14379  06D7  3BA5               	subwfb	check_vars@last+1,f
 14380  06D8                     l4690:
 14381                           
 14382                           ;main.c: 474: CSUM -= DATAEE_ReadByte(last--);
 14383  06D8  0825               	movf	check_vars@last+1,w
 14384  06D9  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14385  06DA  0824               	movf	check_vars@last,w
 14386  06DB  00A0               	movwf	DATAEE_ReadByte@bAdd
 14387  06DC  3193  2382  3186   	fcall	_DATAEE_ReadByte
 14388  06DF  0020               	movlb	0	; select bank0
 14389  06E0  00A2               	movwf	??_check_vars
 14390  06E1  0822               	movf	??_check_vars,w
 14391  06E2  0021               	movlb	1	; select bank1
 14392  06E3  02A9               	subwf	_CSUM^(0+128),f
 14393  06E4                     l4692:
 14394  06E4  3001               	movlw	1
 14395  06E5  0020               	movlb	0	; select bank0
 14396  06E6  02A4               	subwf	check_vars@last,f
 14397  06E7  3000               	movlw	0
 14398  06E8  3BA5               	subwfb	check_vars@last+1,f
 14399  06E9                     l4694:
 14400                           
 14401                           ;main.c: 475: CSUM -= DATAEE_ReadByte(last--);
 14402  06E9  0825               	movf	check_vars@last+1,w
 14403  06EA  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14404  06EB  0824               	movf	check_vars@last,w
 14405  06EC  00A0               	movwf	DATAEE_ReadByte@bAdd
 14406  06ED  3193  2382  3186   	fcall	_DATAEE_ReadByte
 14407  06F0  0020               	movlb	0	; select bank0
 14408  06F1  00A2               	movwf	??_check_vars
 14409  06F2  0822               	movf	??_check_vars,w
 14410  06F3  0021               	movlb	1	; select bank1
 14411  06F4  02A9               	subwf	_CSUM^(0+128),f
 14412  06F5                     l4696:
 14413  06F5  3001               	movlw	1
 14414  06F6  0020               	movlb	0	; select bank0
 14415  06F7  02A4               	subwf	check_vars@last,f
 14416  06F8  3000               	movlw	0
 14417  06F9  3BA5               	subwfb	check_vars@last+1,f
 14418  06FA                     l4698:
 14419                           
 14420                           ;main.c: 476: CSUM -= DATAEE_ReadByte(last--);
 14421  06FA  0825               	movf	check_vars@last+1,w
 14422  06FB  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14423  06FC  0824               	movf	check_vars@last,w
 14424  06FD  00A0               	movwf	DATAEE_ReadByte@bAdd
 14425  06FE  3193  2382  3186   	fcall	_DATAEE_ReadByte
 14426  0701  0020               	movlb	0	; select bank0
 14427  0702  00A2               	movwf	??_check_vars
 14428  0703  0822               	movf	??_check_vars,w
 14429  0704  0021               	movlb	1	; select bank1
 14430  0705  02A9               	subwf	_CSUM^(0+128),f
 14431  0706                     l4700:
 14432  0706  3001               	movlw	1
 14433  0707  0020               	movlb	0	; select bank0
 14434  0708  02A4               	subwf	check_vars@last,f
 14435  0709  3000               	movlw	0
 14436  070A  3BA5               	subwfb	check_vars@last+1,f
 14437  070B                     l4702:
 14438                           
 14439                           ;main.c: 477: CSUM -= DATAEE_ReadByte(last--);
 14440  070B  0825               	movf	check_vars@last+1,w
 14441  070C  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14442  070D  0824               	movf	check_vars@last,w
 14443  070E  00A0               	movwf	DATAEE_ReadByte@bAdd
 14444  070F  3193  2382  3186   	fcall	_DATAEE_ReadByte
 14445  0712  0020               	movlb	0	; select bank0
 14446  0713  00A2               	movwf	??_check_vars
 14447  0714  0822               	movf	??_check_vars,w
 14448  0715  0021               	movlb	1	; select bank1
 14449  0716  02A9               	subwf	_CSUM^(0+128),f
 14450  0717                     l4704:
 14451  0717  3001               	movlw	1
 14452  0718  0020               	movlb	0	; select bank0
 14453  0719  02A4               	subwf	check_vars@last,f
 14454  071A  3000               	movlw	0
 14455  071B  3BA5               	subwfb	check_vars@last+1,f
 14456  071C                     l4706:
 14457                           
 14458                           ;main.c: 478: CSUM -= DATAEE_ReadByte(last--);
 14459  071C  0825               	movf	check_vars@last+1,w
 14460  071D  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14461  071E  0824               	movf	check_vars@last,w
 14462  071F  00A0               	movwf	DATAEE_ReadByte@bAdd
 14463  0720  3193  2382  3186   	fcall	_DATAEE_ReadByte
 14464  0723  0020               	movlb	0	; select bank0
 14465  0724  00A2               	movwf	??_check_vars
 14466  0725  0822               	movf	??_check_vars,w
 14467  0726  0021               	movlb	1	; select bank1
 14468  0727  02A9               	subwf	_CSUM^(0+128),f
 14469  0728                     l4708:
 14470  0728  3001               	movlw	1
 14471  0729  0020               	movlb	0	; select bank0
 14472  072A  02A4               	subwf	check_vars@last,f
 14473  072B  3000               	movlw	0
 14474  072C  3BA5               	subwfb	check_vars@last+1,f
 14475  072D                     l4710:
 14476                           
 14477                           ;main.c: 479: CSUM -= DATAEE_ReadByte(last);
 14478  072D  0825               	movf	check_vars@last+1,w
 14479  072E  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14480  072F  0824               	movf	check_vars@last,w
 14481  0730  00A0               	movwf	DATAEE_ReadByte@bAdd
 14482  0731  3193  2382  3186   	fcall	_DATAEE_ReadByte
 14483  0734  0020               	movlb	0	; select bank0
 14484  0735  00A2               	movwf	??_check_vars
 14485  0736  0822               	movf	??_check_vars,w
 14486  0737  0021               	movlb	1	; select bank1
 14487  0738  02A9               	subwf	_CSUM^(0+128),f
 14488  0739                     l4712:
 14489                           
 14490                           ;main.c: 481: if (CSUM == 0){
 14491  0739  0829               	movf	_CSUM^(0+128),w
 14492  073A  1D03               	btfss	3,2
 14493  073B  2F3D               	goto	u3431
 14494  073C  2F3E               	goto	u3430
 14495  073D                     u3431:
 14496  073D  2FE1               	goto	l664
 14497  073E                     u3430:
 14498  073E                     l4714:
 14499                           
 14500                           ;main.c: 482: PMON = DATAEE_ReadByte(last++);
 14501  073E  0020               	movlb	0	; select bank0
 14502  073F  0825               	movf	check_vars@last+1,w
 14503  0740  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14504  0741  0824               	movf	check_vars@last,w
 14505  0742  00A0               	movwf	DATAEE_ReadByte@bAdd
 14506  0743  3193  2382  3186   	fcall	_DATAEE_ReadByte
 14507  0746  0020               	movlb	0	; select bank0
 14508  0747  00A2               	movwf	??_check_vars
 14509  0748  0822               	movf	??_check_vars,w
 14510  0749  0021               	movlb	1	; select bank1
 14511  074A  00BD               	movwf	_PMON^(0+128)
 14512  074B                     l4716:
 14513  074B  3001               	movlw	1
 14514  074C  0020               	movlb	0	; select bank0
 14515  074D  07A4               	addwf	check_vars@last,f
 14516  074E  3000               	movlw	0
 14517  074F  3DA5               	addwfc	check_vars@last+1,f
 14518  0750                     l4718:
 14519                           
 14520                           ;main.c: 483: TALA = DATAEE_ReadByte(last++);
 14521  0750  0825               	movf	check_vars@last+1,w
 14522  0751  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14523  0752  0824               	movf	check_vars@last,w
 14524  0753  00A0               	movwf	DATAEE_ReadByte@bAdd
 14525  0754  3193  2382  3186   	fcall	_DATAEE_ReadByte
 14526  0757  0020               	movlb	0	; select bank0
 14527  0758  00A2               	movwf	??_check_vars
 14528  0759  0822               	movf	??_check_vars,w
 14529  075A  0021               	movlb	1	; select bank1
 14530  075B  00BC               	movwf	_TALA^(0+128)
 14531  075C  3001               	movlw	1
 14532  075D  0020               	movlb	0	; select bank0
 14533  075E  07A4               	addwf	check_vars@last,f
 14534  075F  3000               	movlw	0
 14535  0760  3DA5               	addwfc	check_vars@last+1,f
 14536  0761                     l4720:
 14537                           
 14538                           ;main.c: 484: ALAH = DATAEE_ReadByte(last++);
 14539  0761  0825               	movf	check_vars@last+1,w
 14540  0762  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14541  0763  0824               	movf	check_vars@last,w
 14542  0764  00A0               	movwf	DATAEE_ReadByte@bAdd
 14543  0765  3193  2382  3186   	fcall	_DATAEE_ReadByte
 14544  0768  0020               	movlb	0	; select bank0
 14545  0769  00A2               	movwf	??_check_vars
 14546  076A  0822               	movf	??_check_vars,w
 14547  076B  00FD               	movwf	_ALAH
 14548  076C                     l4722:
 14549  076C  3001               	movlw	1
 14550  076D  07A4               	addwf	check_vars@last,f
 14551  076E  3000               	movlw	0
 14552  076F  3DA5               	addwfc	check_vars@last+1,f
 14553                           
 14554                           ;main.c: 485: ALAM = DATAEE_ReadByte(last++);
 14555  0770  0825               	movf	check_vars@last+1,w
 14556  0771  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14557  0772  0824               	movf	check_vars@last,w
 14558  0773  00A0               	movwf	DATAEE_ReadByte@bAdd
 14559  0774  3193  2382  3186   	fcall	_DATAEE_ReadByte
 14560  0777  0020               	movlb	0	; select bank0
 14561  0778  00A2               	movwf	??_check_vars
 14562  0779  0822               	movf	??_check_vars,w
 14563  077A  00FC               	movwf	_ALAM
 14564  077B                     l4724:
 14565  077B  3001               	movlw	1
 14566  077C  07A4               	addwf	check_vars@last,f
 14567  077D  3000               	movlw	0
 14568  077E  3DA5               	addwfc	check_vars@last+1,f
 14569  077F                     l4726:
 14570                           
 14571                           ;main.c: 486: ALAS = DATAEE_ReadByte(last++);
 14572  077F  0825               	movf	check_vars@last+1,w
 14573  0780  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14574  0781  0824               	movf	check_vars@last,w
 14575  0782  00A0               	movwf	DATAEE_ReadByte@bAdd
 14576  0783  3193  2382  3186   	fcall	_DATAEE_ReadByte
 14577  0786  0020               	movlb	0	; select bank0
 14578  0787  00A2               	movwf	??_check_vars
 14579  0788  0822               	movf	??_check_vars,w
 14580  0789  0021               	movlb	1	; select bank1
 14581  078A  00AB               	movwf	_ALAS^(0+128)
 14582  078B  3001               	movlw	1
 14583  078C  0020               	movlb	0	; select bank0
 14584  078D  07A4               	addwf	check_vars@last,f
 14585  078E  3000               	movlw	0
 14586  078F  3DA5               	addwfc	check_vars@last+1,f
 14587  0790                     l4728:
 14588                           
 14589                           ;main.c: 487: ALAT = DATAEE_ReadByte(last++);
 14590  0790  0825               	movf	check_vars@last+1,w
 14591  0791  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14592  0792  0824               	movf	check_vars@last,w
 14593  0793  00A0               	movwf	DATAEE_ReadByte@bAdd
 14594  0794  3193  2382  3186   	fcall	_DATAEE_ReadByte
 14595  0797  0020               	movlb	0	; select bank0
 14596  0798  00A2               	movwf	??_check_vars
 14597  0799  0822               	movf	??_check_vars,w
 14598  079A  0021               	movlb	1	; select bank1
 14599  079B  00BB               	movwf	_ALAT^(0+128)
 14600  079C                     l4730:
 14601  079C  3001               	movlw	1
 14602  079D  0020               	movlb	0	; select bank0
 14603  079E  07A4               	addwf	check_vars@last,f
 14604  079F  3000               	movlw	0
 14605  07A0  3DA5               	addwfc	check_vars@last+1,f
 14606                           
 14607                           ;main.c: 488: ALAL = DATAEE_ReadByte(last++);
 14608  07A1  0825               	movf	check_vars@last+1,w
 14609  07A2  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14610  07A3  0824               	movf	check_vars@last,w
 14611  07A4  00A0               	movwf	DATAEE_ReadByte@bAdd
 14612  07A5  3193  2382  3186   	fcall	_DATAEE_ReadByte
 14613  07A8  0020               	movlb	0	; select bank0
 14614  07A9  00A2               	movwf	??_check_vars
 14615  07AA  0822               	movf	??_check_vars,w
 14616  07AB  0021               	movlb	1	; select bank1
 14617  07AC  00BA               	movwf	_ALAL^(0+128)
 14618  07AD                     l4732:
 14619  07AD  3001               	movlw	1
 14620  07AE  0020               	movlb	0	; select bank0
 14621  07AF  07A4               	addwf	check_vars@last,f
 14622  07B0  3000               	movlw	0
 14623  07B1  3DA5               	addwfc	check_vars@last+1,f
 14624  07B2                     l4734:
 14625                           
 14626                           ;main.c: 489: ALAF = DATAEE_ReadByte(last++);
 14627  07B2  0825               	movf	check_vars@last+1,w
 14628  07B3  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14629  07B4  0824               	movf	check_vars@last,w
 14630  07B5  00A0               	movwf	DATAEE_ReadByte@bAdd
 14631  07B6  3193  2382  3186   	fcall	_DATAEE_ReadByte
 14632  07B9  0020               	movlb	0	; select bank0
 14633  07BA  00A2               	movwf	??_check_vars
 14634  07BB  0822               	movf	??_check_vars,w
 14635  07BC  0021               	movlb	1	; select bank1
 14636  07BD  00AA               	movwf	_ALAF^(0+128)
 14637  07BE  3001               	movlw	1
 14638  07BF  0020               	movlb	0	; select bank0
 14639  07C0  07A4               	addwf	check_vars@last,f
 14640  07C1  3000               	movlw	0
 14641  07C2  3DA5               	addwfc	check_vars@last+1,f
 14642  07C3                     l4736:
 14643                           
 14644                           ;main.c: 490: CLKH = DATAEE_ReadByte(last++);
 14645  07C3  0825               	movf	check_vars@last+1,w
 14646  07C4  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14647  07C5  0824               	movf	check_vars@last,w
 14648  07C6  00A0               	movwf	DATAEE_ReadByte@bAdd
 14649  07C7  3193  2382  3186   	fcall	_DATAEE_ReadByte
 14650  07CA  0020               	movlb	0	; select bank0
 14651  07CB  00A2               	movwf	??_check_vars
 14652  07CC  0822               	movf	??_check_vars,w
 14653  07CD  00FB               	movwf	_CLKH
 14654  07CE                     l4738:
 14655  07CE  3001               	movlw	1
 14656  07CF  07A4               	addwf	check_vars@last,f
 14657  07D0  3000               	movlw	0
 14658  07D1  3DA5               	addwfc	check_vars@last+1,f
 14659                           
 14660                           ;main.c: 491: CLKM = DATAEE_ReadByte(last++);
 14661  07D2  0825               	movf	check_vars@last+1,w
 14662  07D3  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14663  07D4  0824               	movf	check_vars@last,w
 14664  07D5  00A0               	movwf	DATAEE_ReadByte@bAdd
 14665  07D6  3193  2382  3186   	fcall	_DATAEE_ReadByte
 14666  07D9  0020               	movlb	0	; select bank0
 14667  07DA  00A2               	movwf	??_check_vars
 14668  07DB  0822               	movf	??_check_vars,w
 14669  07DC  00EF               	movwf	_CLKM
 14670  07DD                     l4740:
 14671  07DD  3001               	movlw	1
 14672  07DE  07A4               	addwf	check_vars@last,f
 14673  07DF  3000               	movlw	0
 14674  07E0  3DA5               	addwfc	check_vars@last+1,f
 14675  07E1                     l664:
 14676  07E1  0008               	return
 14677  07E2                     __end_of_check_vars:
 14678                           
 14679                           	psect	text28
 14680  1382                     __ptext28:	
 14681 ;; *************** function _DATAEE_ReadByte *****************
 14682 ;; Defined at:
 14683 ;;		line 202 in file "mcc_generated_files/memory.c"
 14684 ;; Parameters:    Size  Location     Type
 14685 ;;  bAdd            2    0[BANK0 ] unsigned int 
 14686 ;; Auto vars:     Size  Location     Type
 14687 ;;		None
 14688 ;; Return value:  Size  Location     Type
 14689 ;;                  1    wreg      unsigned char 
 14690 ;; Registers used:
 14691 ;;		wreg, status,2
 14692 ;; Tracked objects:
 14693 ;;		On entry : 0/0
 14694 ;;		On exit  : 0/0
 14695 ;;		Unchanged: 0/0
 14696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14697 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14700 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14701 ;;Total ram usage:        2 bytes
 14702 ;; Hardware stack levels used:    1
 14703 ;; Hardware stack levels required when called:    6
 14704 ;; This function calls:
 14705 ;;		Nothing
 14706 ;; This function is called by:
 14707 ;;		_check_vars
 14708 ;; This function uses a non-reentrant model
 14709 ;;
 14710                           
 14711                           
 14712                           ;psect for function _DATAEE_ReadByte
 14713  1382                     _DATAEE_ReadByte:
 14714  1382                     l4430:	
 14715                           ;incstack = 0
 14716                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 14717                           
 14718                           
 14719                           ;memory.c: 204: NVMADRH = ((bAdd >> 8) & 0xFF);
 14720  1382  0020               	movlb	0	; select bank0
 14721  1383  0821               	movf	DATAEE_ReadByte@bAdd+1,w
 14722  1384  0030               	movlb	16	; select bank16
 14723  1385  009B               	movwf	27	;volatile
 14724  1386                     l4432:
 14725                           
 14726                           ;memory.c: 205: NVMADRL = (bAdd & 0xFF);
 14727  1386  0020               	movlb	0	; select bank0
 14728  1387  0820               	movf	DATAEE_ReadByte@bAdd,w
 14729  1388  0030               	movlb	16	; select bank16
 14730  1389  009A               	movwf	26	;volatile
 14731  138A                     l4434:
 14732                           
 14733                           ;memory.c: 206: NVMCON1bits.NVMREGS = 1;
 14734  138A  171E               	bsf	30,6	;volsfr
 14735  138B                     l4436:
 14736                           
 14737                           ;memory.c: 207: NVMCON1bits.RD = 1;
 14738  138B  141E               	bsf	30,0	;volsfr
 14739  138C                     l4438:
 14740                           
 14741                           ;memory.c: 208: __nop();
 14742  138C  0000               	nop
 14743  138D                     l4440:
 14744                           
 14745                           ;memory.c: 209: __nop();
 14746  138D  0000               	nop
 14747  138E                     l4442:
 14748                           
 14749                           ;memory.c: 211: return (NVMDATL);
 14750  138E  0030               	movlb	16	; select bank16
 14751  138F  081C               	movf	28,w	;volatile
 14752  1390                     l455:
 14753  1390  0008               	return
 14754  1391                     __end_of_DATAEE_ReadByte:
 14755                           
 14756                           	psect	text29
 14757  148C                     __ptext29:	
 14758 ;; *************** function _checkButtonS2 *****************
 14759 ;; Defined at:
 14760 ;;		line 529 in file "main.c"
 14761 ;; Parameters:    Size  Location     Type
 14762 ;;		None
 14763 ;; Auto vars:     Size  Location     Type
 14764 ;;		None
 14765 ;; Return value:  Size  Location     Type
 14766 ;;                  1    wreg      void 
 14767 ;; Registers used:
 14768 ;;		wreg, status,2, status,0
 14769 ;; Tracked objects:
 14770 ;;		On entry : 0/0
 14771 ;;		On exit  : 0/0
 14772 ;;		Unchanged: 0/0
 14773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14776 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14777 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14778 ;;Total ram usage:        1 bytes
 14779 ;; Hardware stack levels used:    1
 14780 ;; Hardware stack levels required when called:    6
 14781 ;; This function calls:
 14782 ;;		Nothing
 14783 ;; This function is called by:
 14784 ;;		_main
 14785 ;; This function uses a non-reentrant model
 14786 ;;
 14787                           
 14788                           
 14789                           ;psect for function _checkButtonS2
 14790  148C                     _checkButtonS2:
 14791  148C                     l4820:	
 14792                           ;incstack = 0
 14793                           ; Regs used in _checkButtonS2: [wreg+status,2+status,0]
 14794                           
 14795                           
 14796                           ;main.c: 530: if (btn2State == 0) {
 14797  148C  0020               	movlb	0	; select bank0
 14798  148D  086D               	movf	_btn2State,w
 14799  148E  1D03               	btfss	3,2
 14800  148F  2C91               	goto	u3741
 14801  1490  2C92               	goto	u3740
 14802  1491                     u3741:
 14803  1491  2CA3               	goto	l679
 14804  1492                     u3740:
 14805  1492                     l4822:
 14806                           
 14807                           ;main.c: 531: if (PORTCbits.RC5 == 0) {
 14808  1492  1A8E               	btfsc	14,5	;volatile
 14809  1493  2C95               	goto	u3751
 14810  1494  2C96               	goto	u3750
 14811  1495                     u3751:
 14812  1495  2CA8               	goto	l683
 14813  1496                     u3750:
 14814  1496                     l4824:
 14815                           
 14816                           ;main.c: 532: _delay((unsigned long)((200)*(1000000/4000.0)));
 14817  1496  3041               	movlw	65
 14818  1497  0020               	movlb	0	; select bank0
 14819  1498  00A0               	movwf	??_checkButtonS2
 14820  1499  30EE               	movlw	238
 14821  149A                     u4787:
 14822  149A  0B89               	decfsz	9,f
 14823  149B  2C9A               	goto	u4787
 14824  149C  0BA0               	decfsz	??_checkButtonS2,f
 14825  149D  2C9A               	goto	u4787
 14826  149E  0000               	nop
 14827  149F                     l4826:
 14828                           
 14829                           ;main.c: 533: btn2State = 1;
 14830  149F  0020               	movlb	0	; select bank0
 14831  14A0  01ED               	clrf	_btn2State
 14832  14A1  0AED               	incf	_btn2State,f
 14833  14A2  2CA8               	goto	l683
 14834  14A3                     l679:
 14835  14A3  1E8E               	btfss	14,5	;volatile
 14836  14A4  2CA6               	goto	u3761
 14837  14A5  2CA7               	goto	u3760
 14838  14A6                     u3761:
 14839  14A6  2CA8               	goto	l683
 14840  14A7                     u3760:
 14841  14A7                     l4828:
 14842                           
 14843                           ;main.c: 537: btn2State = 0;
 14844  14A7  01ED               	clrf	_btn2State
 14845  14A8                     l683:
 14846  14A8  0008               	return
 14847  14A9                     __end_of_checkButtonS2:
 14848                           
 14849                           	psect	text30
 14850  146F                     __ptext30:	
 14851 ;; *************** function _checkButtonS1 *****************
 14852 ;; Defined at:
 14853 ;;		line 517 in file "main.c"
 14854 ;; Parameters:    Size  Location     Type
 14855 ;;		None
 14856 ;; Auto vars:     Size  Location     Type
 14857 ;;		None
 14858 ;; Return value:  Size  Location     Type
 14859 ;;                  1    wreg      void 
 14860 ;; Registers used:
 14861 ;;		wreg, status,2, status,0
 14862 ;; Tracked objects:
 14863 ;;		On entry : 0/0
 14864 ;;		On exit  : 0/0
 14865 ;;		Unchanged: 0/0
 14866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14869 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14870 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14871 ;;Total ram usage:        1 bytes
 14872 ;; Hardware stack levels used:    1
 14873 ;; Hardware stack levels required when called:    6
 14874 ;; This function calls:
 14875 ;;		Nothing
 14876 ;; This function is called by:
 14877 ;;		_main
 14878 ;; This function uses a non-reentrant model
 14879 ;;
 14880                           
 14881                           
 14882                           ;psect for function _checkButtonS1
 14883  146F                     _checkButtonS1:
 14884  146F                     l4810:	
 14885                           ;incstack = 0
 14886                           ; Regs used in _checkButtonS1: [wreg+status,2+status,0]
 14887                           
 14888                           
 14889                           ;main.c: 518: if (btn1State == 0) {
 14890  146F  0020               	movlb	0	; select bank0
 14891  1470  086E               	movf	_btn1State,w
 14892  1471  1D03               	btfss	3,2
 14893  1472  2C74               	goto	u3711
 14894  1473  2C75               	goto	u3710
 14895  1474                     u3711:
 14896  1474  2C86               	goto	l672
 14897  1475                     u3710:
 14898  1475                     l4812:
 14899                           
 14900                           ;main.c: 519: if (PORTBbits.RB4 == 0) {
 14901  1475  1A0D               	btfsc	13,4	;volatile
 14902  1476  2C78               	goto	u3721
 14903  1477  2C79               	goto	u3720
 14904  1478                     u3721:
 14905  1478  2C8B               	goto	l676
 14906  1479                     u3720:
 14907  1479                     l4814:
 14908                           
 14909                           ;main.c: 520: _delay((unsigned long)((200)*(1000000/4000.0)));
 14910  1479  3041               	movlw	65
 14911  147A  0020               	movlb	0	; select bank0
 14912  147B  00A0               	movwf	??_checkButtonS1
 14913  147C  30EE               	movlw	238
 14914  147D                     u4797:
 14915  147D  0B89               	decfsz	9,f
 14916  147E  2C7D               	goto	u4797
 14917  147F  0BA0               	decfsz	??_checkButtonS1,f
 14918  1480  2C7D               	goto	u4797
 14919  1481  0000               	nop
 14920  1482                     l4816:
 14921                           
 14922                           ;main.c: 521: btn1State = 1;
 14923  1482  0020               	movlb	0	; select bank0
 14924  1483  01EE               	clrf	_btn1State
 14925  1484  0AEE               	incf	_btn1State,f
 14926  1485  2C8B               	goto	l676
 14927  1486                     l672:
 14928  1486  1E0D               	btfss	13,4	;volatile
 14929  1487  2C89               	goto	u3731
 14930  1488  2C8A               	goto	u3730
 14931  1489                     u3731:
 14932  1489  2C8B               	goto	l676
 14933  148A                     u3730:
 14934  148A                     l4818:
 14935                           
 14936                           ;main.c: 524: btn1State = 0;
 14937  148A  01EE               	clrf	_btn1State
 14938  148B                     l676:
 14939  148B  0008               	return
 14940  148C                     __end_of_checkButtonS1:
 14941                           
 14942                           	psect	text31
 14943  1415                     __ptext31:	
 14944 ;; *************** function _SYSTEM_Initialize *****************
 14945 ;; Defined at:
 14946 ;;		line 50 in file "mcc_generated_files/mcc.c"
 14947 ;; Parameters:    Size  Location     Type
 14948 ;;		None
 14949 ;; Auto vars:     Size  Location     Type
 14950 ;;		None
 14951 ;; Return value:  Size  Location     Type
 14952 ;;                  1    wreg      void 
 14953 ;; Registers used:
 14954 ;;		wreg, status,2, status,0, pclath, cstack
 14955 ;; Tracked objects:
 14956 ;;		On entry : 0/0
 14957 ;;		On exit  : 0/0
 14958 ;;		Unchanged: 0/0
 14959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14964 ;;Total ram usage:        0 bytes
 14965 ;; Hardware stack levels used:    1
 14966 ;; Hardware stack levels required when called:    8
 14967 ;; This function calls:
 14968 ;;		_ADCC_Initialize
 14969 ;;		_OSCILLATOR_Initialize
 14970 ;;		_PIN_MANAGER_Initialize
 14971 ;;		_PMD_Initialize
 14972 ;;		_PWM6_Initialize
 14973 ;;		_TMR0_Initialize
 14974 ;;		_TMR2_Initialize
 14975 ;; This function is called by:
 14976 ;;		_main
 14977 ;; This function uses a non-reentrant model
 14978 ;;
 14979                           
 14980                           
 14981                           ;psect for function _SYSTEM_Initialize
 14982  1415                     _SYSTEM_Initialize:
 14983  1415                     l4592:	
 14984                           ;incstack = 0
 14985                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 14986                           
 14987                           
 14988                           ;mcc.c: 52: PMD_Initialize();
 14989  1415  3192  22BB  3194   	fcall	_PMD_Initialize
 14990  1418                     l4594:
 14991                           
 14992                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 14993  1418  3195  25BA  3194   	fcall	_PIN_MANAGER_Initialize
 14994  141B                     l4596:
 14995                           
 14996                           ;mcc.c: 54: OSCILLATOR_Initialize();
 14997  141B  3192  22D3  3194   	fcall	_OSCILLATOR_Initialize
 14998  141E                     l4598:
 14999                           
 15000                           ;mcc.c: 55: PWM6_Initialize();
 15001  141E  3193  233D  3194   	fcall	_PWM6_Initialize
 15002  1421                     l4600:
 15003                           
 15004                           ;mcc.c: 56: ADCC_Initialize();
 15005  1421  3193  23FF  3194   	fcall	_ADCC_Initialize
 15006  1424                     l4602:
 15007                           
 15008                           ;mcc.c: 57: TMR2_Initialize();
 15009  1424  3194  2458  3194   	fcall	_TMR2_Initialize
 15010  1427                     l4604:
 15011                           
 15012                           ;mcc.c: 58: TMR0_Initialize();
 15013  1427  3193  23D4  3194   	fcall	_TMR0_Initialize
 15014  142A                     l168:
 15015  142A  0008               	return
 15016  142B                     __end_of_SYSTEM_Initialize:
 15017                           
 15018                           	psect	text32
 15019  1458                     __ptext32:	
 15020 ;; *************** function _TMR2_Initialize *****************
 15021 ;; Defined at:
 15022 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 15023 ;; Parameters:    Size  Location     Type
 15024 ;;		None
 15025 ;; Auto vars:     Size  Location     Type
 15026 ;;		None
 15027 ;; Return value:  Size  Location     Type
 15028 ;;                  1    wreg      void 
 15029 ;; Registers used:
 15030 ;;		wreg, status,2, status,0, pclath, cstack
 15031 ;; Tracked objects:
 15032 ;;		On entry : 0/0
 15033 ;;		On exit  : 0/0
 15034 ;;		Unchanged: 0/0
 15035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15040 ;;Total ram usage:        0 bytes
 15041 ;; Hardware stack levels used:    1
 15042 ;; Hardware stack levels required when called:    7
 15043 ;; This function calls:
 15044 ;;		_TMR2_SetInterruptHandler
 15045 ;; This function is called by:
 15046 ;;		_SYSTEM_Initialize
 15047 ;; This function uses a non-reentrant model
 15048 ;;
 15049                           
 15050                           
 15051                           ;psect for function _TMR2_Initialize
 15052  1458                     _TMR2_Initialize:
 15053  1458                     l4378:	
 15054                           ;incstack = 0
 15055                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15056                           
 15057                           
 15058                           ;tmr2.c: 69: T2CLKCON = 0x01;
 15059  1458  3001               	movlw	1
 15060  1459  0025               	movlb	5	; select bank5
 15061  145A  0090               	movwf	16	;volatile
 15062  145B                     l4380:
 15063                           
 15064                           ;tmr2.c: 72: T2HLT = 0x00;
 15065  145B  018F               	clrf	15	;volatile
 15066  145C                     l4382:
 15067                           
 15068                           ;tmr2.c: 75: T2RST = 0x00;
 15069  145C  0191               	clrf	17	;volatile
 15070                           
 15071                           ;tmr2.c: 78: T2PR = 0x0B;
 15072  145D  300B               	movlw	11
 15073  145E  008D               	movwf	13	;volatile
 15074  145F                     l4384:
 15075                           
 15076                           ;tmr2.c: 81: T2TMR = 0x00;
 15077  145F  018C               	clrf	12	;volatile
 15078  1460                     l4386:
 15079                           
 15080                           ;tmr2.c: 84: PIR4bits.TMR2IF = 0;
 15081  1460  002E               	movlb	14	; select bank14
 15082  1461  1090               	bcf	16,1	;volatile
 15083  1462                     l4388:
 15084                           
 15085                           ;tmr2.c: 87: PIE4bits.TMR2IE = 1;
 15086  1462  149A               	bsf	26,1	;volatile
 15087  1463                     l4390:
 15088                           
 15089                           ;tmr2.c: 90: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
 15090  1463  3002               	movlw	low _TMR2_DefaultInterruptHandler
 15091  1464  0020               	movlb	0	; select bank0
 15092  1465  00A0               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 15093  1466  3000               	movlw	high _TMR2_DefaultInterruptHandler
 15094  1467  00A1               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 15095  1468  3192  22E5  3194   	fcall	_TMR2_SetInterruptHandler
 15096  146B                     l4392:
 15097                           
 15098                           ;tmr2.c: 93: T2CON = 0xFF;
 15099  146B  30FF               	movlw	255
 15100  146C  0025               	movlb	5	; select bank5
 15101  146D  008E               	movwf	14	;volatile
 15102  146E                     l1223:
 15103  146E  0008               	return
 15104  146F                     __end_of_TMR2_Initialize:
 15105                           
 15106                           	psect	text33
 15107  12E5                     __ptext33:	
 15108 ;; *************** function _TMR2_SetInterruptHandler *****************
 15109 ;; Defined at:
 15110 ;;		line 186 in file "mcc_generated_files/tmr2.c"
 15111 ;; Parameters:    Size  Location     Type
 15112 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 15113 ;;		 -> TMR2_DefaultInterruptHandler(1), TMR2_callback(1), 
 15114 ;; Auto vars:     Size  Location     Type
 15115 ;;		None
 15116 ;; Return value:  Size  Location     Type
 15117 ;;                  1    wreg      void 
 15118 ;; Registers used:
 15119 ;;		wreg
 15120 ;; Tracked objects:
 15121 ;;		On entry : 0/0
 15122 ;;		On exit  : 0/0
 15123 ;;		Unchanged: 0/0
 15124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15125 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15128 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15129 ;;Total ram usage:        2 bytes
 15130 ;; Hardware stack levels used:    1
 15131 ;; Hardware stack levels required when called:    6
 15132 ;; This function calls:
 15133 ;;		Nothing
 15134 ;; This function is called by:
 15135 ;;		_main
 15136 ;;		_TMR2_Initialize
 15137 ;; This function uses a non-reentrant model
 15138 ;;
 15139                           
 15140                           
 15141                           ;psect for function _TMR2_SetInterruptHandler
 15142  12E5                     _TMR2_SetInterruptHandler:
 15143  12E5                     l4202:	
 15144                           ;incstack = 0
 15145                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 15146                           
 15147                           
 15148                           ;tmr2.c: 187: TMR2_InterruptHandler = InterruptHandler;
 15149  12E5  0020               	movlb	0	; select bank0
 15150  12E6  0821               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 15151  12E7  0021               	movlb	1	; select bank1
 15152  12E8  00BF               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
 15153  12E9  0020               	movlb	0	; select bank0
 15154  12EA  0820               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 15155  12EB  0021               	movlb	1	; select bank1
 15156  12EC  00BE               	movwf	_TMR2_InterruptHandler^(0+128)
 15157  12ED                     l1269:
 15158  12ED  0008               	return
 15159  12EE                     __end_of_TMR2_SetInterruptHandler:
 15160                           
 15161                           	psect	text34
 15162  13D4                     __ptext34:	
 15163 ;; *************** function _TMR0_Initialize *****************
 15164 ;; Defined at:
 15165 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 15166 ;; Parameters:    Size  Location     Type
 15167 ;;		None
 15168 ;; Auto vars:     Size  Location     Type
 15169 ;;		None
 15170 ;; Return value:  Size  Location     Type
 15171 ;;                  1    wreg      void 
 15172 ;; Registers used:
 15173 ;;		wreg, status,2, status,0, pclath, cstack
 15174 ;; Tracked objects:
 15175 ;;		On entry : 0/0
 15176 ;;		On exit  : 0/0
 15177 ;;		Unchanged: 0/0
 15178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15183 ;;Total ram usage:        0 bytes
 15184 ;; Hardware stack levels used:    1
 15185 ;; Hardware stack levels required when called:    7
 15186 ;; This function calls:
 15187 ;;		_TMR0_SetInterruptHandler
 15188 ;; This function is called by:
 15189 ;;		_SYSTEM_Initialize
 15190 ;; This function uses a non-reentrant model
 15191 ;;
 15192                           
 15193                           
 15194                           ;psect for function _TMR0_Initialize
 15195  13D4                     _TMR0_Initialize:
 15196  13D4                     l4394:	
 15197                           ;incstack = 0
 15198                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15199                           
 15200                           
 15201                           ;tmr0.c: 66: T0CON1 = 0x86;
 15202  13D4  3086               	movlw	134
 15203  13D5  0020               	movlb	0	; select bank0
 15204  13D6  009F               	movwf	31	;volatile
 15205                           
 15206                           ;tmr0.c: 69: TMR0H = 0x01;
 15207  13D7  3001               	movlw	1
 15208  13D8  009D               	movwf	29	;volatile
 15209  13D9                     l4396:
 15210                           
 15211                           ;tmr0.c: 72: TMR0L = 0x00;
 15212  13D9  019C               	clrf	28	;volatile
 15213  13DA                     l4398:
 15214                           
 15215                           ;tmr0.c: 75: PIR0bits.TMR0IF = 0;
 15216  13DA  002E               	movlb	14	; select bank14
 15217  13DB  128C               	bcf	12,5	;volatile
 15218  13DC                     l4400:
 15219                           
 15220                           ;tmr0.c: 78: PIE0bits.TMR0IE = 1;
 15221  13DC  1696               	bsf	22,5	;volatile
 15222  13DD                     l4402:
 15223                           
 15224                           ;tmr0.c: 81: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 15225  13DD  3003               	movlw	low _TMR0_DefaultInterruptHandler
 15226  13DE  0020               	movlb	0	; select bank0
 15227  13DF  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 15228  13E0  3008               	movlw	high _TMR0_DefaultInterruptHandler
 15229  13E1  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 15230  13E2  3192  22DC  3193   	fcall	_TMR0_SetInterruptHandler
 15231  13E5                     l4404:
 15232                           
 15233                           ;tmr0.c: 84: T0CON0 = 0x80;
 15234  13E5  3080               	movlw	128
 15235  13E6  0020               	movlb	0	; select bank0
 15236  13E7  009E               	movwf	30	;volatile
 15237  13E8                     l377:
 15238  13E8  0008               	return
 15239  13E9                     __end_of_TMR0_Initialize:
 15240                           
 15241                           	psect	text35
 15242  12DC                     __ptext35:	
 15243 ;; *************** function _TMR0_SetInterruptHandler *****************
 15244 ;; Defined at:
 15245 ;;		line 150 in file "mcc_generated_files/tmr0.c"
 15246 ;; Parameters:    Size  Location     Type
 15247 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 15248 ;;		 -> TMR0_callback(1), TMR0_DefaultInterruptHandler(1), 
 15249 ;; Auto vars:     Size  Location     Type
 15250 ;;		None
 15251 ;; Return value:  Size  Location     Type
 15252 ;;                  1    wreg      void 
 15253 ;; Registers used:
 15254 ;;		wreg
 15255 ;; Tracked objects:
 15256 ;;		On entry : 0/0
 15257 ;;		On exit  : 0/0
 15258 ;;		Unchanged: 0/0
 15259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15260 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15263 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15264 ;;Total ram usage:        2 bytes
 15265 ;; Hardware stack levels used:    1
 15266 ;; Hardware stack levels required when called:    6
 15267 ;; This function calls:
 15268 ;;		Nothing
 15269 ;; This function is called by:
 15270 ;;		_TMR0_Initialize
 15271 ;;		_main
 15272 ;; This function uses a non-reentrant model
 15273 ;;
 15274                           
 15275                           
 15276                           ;psect for function _TMR0_SetInterruptHandler
 15277  12DC                     _TMR0_SetInterruptHandler:
 15278  12DC                     l4200:	
 15279                           ;incstack = 0
 15280                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 15281                           
 15282                           
 15283                           ;tmr0.c: 151: TMR0_InterruptHandler = InterruptHandler;
 15284  12DC  0020               	movlb	0	; select bank0
 15285  12DD  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 15286  12DE  0021               	movlb	1	; select bank1
 15287  12DF  00C1               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 15288  12E0  0020               	movlb	0	; select bank0
 15289  12E1  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 15290  12E2  0021               	movlb	1	; select bank1
 15291  12E3  00C0               	movwf	_TMR0_InterruptHandler^(0+128)
 15292  12E4                     l405:
 15293  12E4  0008               	return
 15294  12E5                     __end_of_TMR0_SetInterruptHandler:
 15295                           
 15296                           	psect	text36
 15297  133D                     __ptext36:	
 15298 ;; *************** function _PWM6_Initialize *****************
 15299 ;; Defined at:
 15300 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 15301 ;; Parameters:    Size  Location     Type
 15302 ;;		None
 15303 ;; Auto vars:     Size  Location     Type
 15304 ;;		None
 15305 ;; Return value:  Size  Location     Type
 15306 ;;                  1    wreg      void 
 15307 ;; Registers used:
 15308 ;;		wreg, status,2, status,0
 15309 ;; Tracked objects:
 15310 ;;		On entry : 0/0
 15311 ;;		On exit  : 0/0
 15312 ;;		Unchanged: 0/0
 15313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15318 ;;Total ram usage:        0 bytes
 15319 ;; Hardware stack levels used:    1
 15320 ;; Hardware stack levels required when called:    6
 15321 ;; This function calls:
 15322 ;;		Nothing
 15323 ;; This function is called by:
 15324 ;;		_SYSTEM_Initialize
 15325 ;; This function uses a non-reentrant model
 15326 ;;
 15327                           
 15328                           
 15329                           ;psect for function _PWM6_Initialize
 15330  133D                     _PWM6_Initialize:
 15331  133D                     l4368:	
 15332                           ;incstack = 0
 15333                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 15334                           
 15335                           
 15336                           ;pwm6.c: 62: PWM6CON = 0x80;
 15337  133D  3080               	movlw	128
 15338  133E  0027               	movlb	7	; select bank7
 15339  133F  008E               	movwf	14	;volatile
 15340                           
 15341                           ;pwm6.c: 65: PWM6DCH = 0x05;
 15342  1340  3005               	movlw	5
 15343  1341  008D               	movwf	13	;volatile
 15344                           
 15345                           ;pwm6.c: 68: PWM6DCL = 0xC0;
 15346  1342  30C0               	movlw	192
 15347  1343  008C               	movwf	12	;volatile
 15348  1344                     l4370:
 15349                           
 15350                           ;pwm6.c: 71: CCPTMRS1bits.P6TSEL = 1;
 15351  1344  0024               	movlb	4	; select bank4
 15352  1345  081F               	movf	31,w	;volatile
 15353  1346  39F3               	andlw	-13
 15354  1347  3804               	iorlw	4
 15355  1348  009F               	movwf	31	;volatile
 15356  1349                     l1183:
 15357  1349  0008               	return
 15358  134A                     __end_of_PWM6_Initialize:
 15359                           
 15360                           	psect	text37
 15361  12BB                     __ptext37:	
 15362 ;; *************** function _PMD_Initialize *****************
 15363 ;; Defined at:
 15364 ;;		line 75 in file "mcc_generated_files/mcc.c"
 15365 ;; Parameters:    Size  Location     Type
 15366 ;;		None
 15367 ;; Auto vars:     Size  Location     Type
 15368 ;;		None
 15369 ;; Return value:  Size  Location     Type
 15370 ;;                  1    wreg      void 
 15371 ;; Registers used:
 15372 ;;		status,2
 15373 ;; Tracked objects:
 15374 ;;		On entry : 0/0
 15375 ;;		On exit  : 0/0
 15376 ;;		Unchanged: 0/0
 15377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15382 ;;Total ram usage:        0 bytes
 15383 ;; Hardware stack levels used:    1
 15384 ;; Hardware stack levels required when called:    6
 15385 ;; This function calls:
 15386 ;;		Nothing
 15387 ;; This function is called by:
 15388 ;;		_SYSTEM_Initialize
 15389 ;; This function uses a non-reentrant model
 15390 ;;
 15391                           
 15392                           
 15393                           ;psect for function _PMD_Initialize
 15394  12BB                     _PMD_Initialize:
 15395  12BB                     l4358:	
 15396                           ;incstack = 0
 15397                           ; Regs used in _PMD_Initialize: [status,2]
 15398                           
 15399                           
 15400                           ;mcc.c: 78: PMD0 = 0x00;
 15401  12BB  002F               	movlb	15	; select bank15
 15402  12BC  0196               	clrf	22	;volatile
 15403                           
 15404                           ;mcc.c: 80: PMD1 = 0x00;
 15405  12BD  0197               	clrf	23	;volatile
 15406                           
 15407                           ;mcc.c: 82: PMD2 = 0x00;
 15408  12BE  0198               	clrf	24	;volatile
 15409                           
 15410                           ;mcc.c: 84: PMD3 = 0x00;
 15411  12BF  0199               	clrf	25	;volatile
 15412                           
 15413                           ;mcc.c: 86: PMD4 = 0x00;
 15414  12C0  019A               	clrf	26	;volatile
 15415                           
 15416                           ;mcc.c: 88: PMD5 = 0x00;
 15417  12C1  019B               	clrf	27	;volatile
 15418  12C2                     l174:
 15419  12C2  0008               	return
 15420  12C3                     __end_of_PMD_Initialize:
 15421                           
 15422                           	psect	text38
 15423  15BA                     __ptext38:	
 15424 ;; *************** function _PIN_MANAGER_Initialize *****************
 15425 ;; Defined at:
 15426 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 15427 ;; Parameters:    Size  Location     Type
 15428 ;;		None
 15429 ;; Auto vars:     Size  Location     Type
 15430 ;;		None
 15431 ;; Return value:  Size  Location     Type
 15432 ;;                  1    wreg      void 
 15433 ;; Registers used:
 15434 ;;		wreg, status,2
 15435 ;; Tracked objects:
 15436 ;;		On entry : 0/0
 15437 ;;		On exit  : 0/0
 15438 ;;		Unchanged: 0/0
 15439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15444 ;;Total ram usage:        0 bytes
 15445 ;; Hardware stack levels used:    1
 15446 ;; Hardware stack levels required when called:    6
 15447 ;; This function calls:
 15448 ;;		Nothing
 15449 ;; This function is called by:
 15450 ;;		_SYSTEM_Initialize
 15451 ;; This function uses a non-reentrant model
 15452 ;;
 15453                           
 15454                           
 15455                           ;psect for function _PIN_MANAGER_Initialize
 15456  15BA                     _PIN_MANAGER_Initialize:
 15457  15BA                     l4316:	
 15458                           ;incstack = 0
 15459                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 15460                           
 15461                           
 15462                           ;pin_manager.c: 62: LATE = 0x00;
 15463  15BA  0020               	movlb	0	; select bank0
 15464  15BB  019A               	clrf	26	;volatile
 15465                           
 15466                           ;pin_manager.c: 63: LATD = 0x00;
 15467  15BC  0199               	clrf	25	;volatile
 15468                           
 15469                           ;pin_manager.c: 64: LATA = 0x00;
 15470  15BD  0196               	clrf	22	;volatile
 15471                           
 15472                           ;pin_manager.c: 65: LATB = 0x00;
 15473  15BE  0197               	clrf	23	;volatile
 15474                           
 15475                           ;pin_manager.c: 66: LATC = 0x00;
 15476  15BF  0198               	clrf	24	;volatile
 15477  15C0                     l4318:
 15478                           
 15479                           ;pin_manager.c: 71: TRISE = 0x07;
 15480  15C0  3007               	movlw	7
 15481  15C1  0095               	movwf	21	;volatile
 15482  15C2                     l4320:
 15483                           
 15484                           ;pin_manager.c: 72: TRISA = 0x0F;
 15485  15C2  300F               	movlw	15
 15486  15C3  0091               	movwf	17	;volatile
 15487  15C4                     l4322:
 15488                           
 15489                           ;pin_manager.c: 73: TRISB = 0xFF;
 15490  15C4  30FF               	movlw	255
 15491  15C5  0092               	movwf	18	;volatile
 15492  15C6                     l4324:
 15493                           
 15494                           ;pin_manager.c: 74: TRISC = 0xFF;
 15495  15C6  30FF               	movlw	255
 15496  15C7  0093               	movwf	19	;volatile
 15497  15C8                     l4326:
 15498                           
 15499                           ;pin_manager.c: 75: TRISD = 0xFF;
 15500  15C8  30FF               	movlw	255
 15501  15C9  0094               	movwf	20	;volatile
 15502  15CA                     l4328:
 15503                           
 15504                           ;pin_manager.c: 80: ANSELD = 0xCF;
 15505  15CA  30CF               	movlw	207
 15506  15CB  003E               	movlb	30	; select bank30
 15507  15CC  00D9               	movwf	89	;volatile
 15508  15CD                     l4330:
 15509                           
 15510                           ;pin_manager.c: 81: ANSELC = 0xC7;
 15511  15CD  30C7               	movlw	199
 15512  15CE  00CE               	movwf	78	;volatile
 15513  15CF                     l4332:
 15514                           
 15515                           ;pin_manager.c: 82: ANSELB = 0xEF;
 15516  15CF  30EF               	movlw	239
 15517  15D0  00C3               	movwf	67	;volatile
 15518  15D1                     l4334:
 15519                           
 15520                           ;pin_manager.c: 83: ANSELE = 0x07;
 15521  15D1  3007               	movlw	7
 15522  15D2  00E4               	movwf	100	;volatile
 15523  15D3                     l4336:
 15524                           
 15525                           ;pin_manager.c: 84: ANSELA = 0x4F;
 15526  15D3  304F               	movlw	79
 15527  15D4  00B8               	movwf	56	;volatile
 15528                           
 15529                           ;pin_manager.c: 89: WPUD = 0x00;
 15530  15D5  01DA               	clrf	90	;volatile
 15531                           
 15532                           ;pin_manager.c: 90: WPUE = 0x00;
 15533  15D6  01E5               	clrf	101	;volatile
 15534                           
 15535                           ;pin_manager.c: 91: WPUB = 0x00;
 15536  15D7  01C4               	clrf	68	;volatile
 15537                           
 15538                           ;pin_manager.c: 92: WPUA = 0x00;
 15539  15D8  01B9               	clrf	57	;volatile
 15540                           
 15541                           ;pin_manager.c: 93: WPUC = 0x00;
 15542  15D9  01CF               	clrf	79	;volatile
 15543                           
 15544                           ;pin_manager.c: 98: ODCONE = 0x00;
 15545  15DA  01E6               	clrf	102	;volatile
 15546                           
 15547                           ;pin_manager.c: 99: ODCONA = 0x00;
 15548  15DB  01BA               	clrf	58	;volatile
 15549                           
 15550                           ;pin_manager.c: 100: ODCONB = 0x00;
 15551  15DC  01C5               	clrf	69	;volatile
 15552                           
 15553                           ;pin_manager.c: 101: ODCONC = 0x00;
 15554  15DD  01D0               	clrf	80	;volatile
 15555                           
 15556                           ;pin_manager.c: 102: ODCOND = 0x00;
 15557  15DE  01DB               	clrf	91	;volatile
 15558  15DF                     l4338:
 15559                           
 15560                           ;pin_manager.c: 107: SLRCONA = 0xFF;
 15561  15DF  30FF               	movlw	255
 15562  15E0  00BB               	movwf	59	;volatile
 15563  15E1                     l4340:
 15564                           
 15565                           ;pin_manager.c: 108: SLRCONB = 0xFF;
 15566  15E1  30FF               	movlw	255
 15567  15E2  00C6               	movwf	70	;volatile
 15568  15E3                     l4342:
 15569                           
 15570                           ;pin_manager.c: 109: SLRCONC = 0xFF;
 15571  15E3  30FF               	movlw	255
 15572  15E4  00D1               	movwf	81	;volatile
 15573  15E5                     l4344:
 15574                           
 15575                           ;pin_manager.c: 110: SLRCOND = 0xFF;
 15576  15E5  30FF               	movlw	255
 15577  15E6  00DC               	movwf	92	;volatile
 15578  15E7                     l4346:
 15579                           
 15580                           ;pin_manager.c: 111: SLRCONE = 0x07;
 15581  15E7  3007               	movlw	7
 15582  15E8  00E7               	movwf	103	;volatile
 15583  15E9                     l4348:
 15584                           
 15585                           ;pin_manager.c: 120: SSP1CLKPPS = 0x13;
 15586  15E9  3013               	movlw	19
 15587  15EA  003D               	movlb	29	; select bank29
 15588  15EB  00C5               	movwf	69	;volatile
 15589  15EC                     l4350:
 15590                           
 15591                           ;pin_manager.c: 121: RC3PPS = 0x14;
 15592  15EC  3014               	movlw	20
 15593  15ED  003E               	movlb	30	; select bank30
 15594  15EE  00A3               	movwf	35	;volatile
 15595  15EF                     l4352:
 15596                           
 15597                           ;pin_manager.c: 122: RC4PPS = 0x15;
 15598  15EF  3015               	movlw	21
 15599  15F0  00A4               	movwf	36	;volatile
 15600  15F1                     l4354:
 15601                           
 15602                           ;pin_manager.c: 123: RA6PPS = 0x0E;
 15603  15F1  300E               	movlw	14
 15604  15F2  0096               	movwf	22	;volatile
 15605  15F3                     l4356:
 15606                           
 15607                           ;pin_manager.c: 124: SSP1DATPPS = 0x14;
 15608  15F3  3014               	movlw	20
 15609  15F4  003D               	movlb	29	; select bank29
 15610  15F5  00C6               	movwf	70	;volatile
 15611  15F6                     l122:
 15612  15F6  0008               	return
 15613  15F7                     __end_of_PIN_MANAGER_Initialize:
 15614                           
 15615                           	psect	text39
 15616  12D3                     __ptext39:	
 15617 ;; *************** function _OSCILLATOR_Initialize *****************
 15618 ;; Defined at:
 15619 ;;		line 61 in file "mcc_generated_files/mcc.c"
 15620 ;; Parameters:    Size  Location     Type
 15621 ;;		None
 15622 ;; Auto vars:     Size  Location     Type
 15623 ;;		None
 15624 ;; Return value:  Size  Location     Type
 15625 ;;                  1    wreg      void 
 15626 ;; Registers used:
 15627 ;;		wreg, status,2
 15628 ;; Tracked objects:
 15629 ;;		On entry : 0/0
 15630 ;;		On exit  : 0/0
 15631 ;;		Unchanged: 0/0
 15632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15637 ;;Total ram usage:        0 bytes
 15638 ;; Hardware stack levels used:    1
 15639 ;; Hardware stack levels required when called:    6
 15640 ;; This function calls:
 15641 ;;		Nothing
 15642 ;; This function is called by:
 15643 ;;		_SYSTEM_Initialize
 15644 ;; This function uses a non-reentrant model
 15645 ;;
 15646                           
 15647                           
 15648                           ;psect for function _OSCILLATOR_Initialize
 15649  12D3                     _OSCILLATOR_Initialize:
 15650  12D3                     l4360:	
 15651                           ;incstack = 0
 15652                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 15653                           
 15654                           
 15655                           ;mcc.c: 64: OSCCON1 = 0x62;
 15656  12D3  3062               	movlw	98
 15657  12D4  0031               	movlb	17	; select bank17
 15658  12D5  008D               	movwf	13	;volatile
 15659  12D6                     l4362:
 15660                           
 15661                           ;mcc.c: 66: OSCCON3 = 0x00;
 15662  12D6  018F               	clrf	15	;volatile
 15663  12D7                     l4364:
 15664                           
 15665                           ;mcc.c: 68: OSCEN = 0x00;
 15666  12D7  0191               	clrf	17	;volatile
 15667                           
 15668                           ;mcc.c: 70: OSCFRQ = 0x02;
 15669  12D8  3002               	movlw	2
 15670  12D9  0093               	movwf	19	;volatile
 15671  12DA                     l4366:
 15672                           
 15673                           ;mcc.c: 72: OSCTUNE = 0x00;
 15674  12DA  0192               	clrf	18	;volatile
 15675  12DB                     l171:
 15676  12DB  0008               	return
 15677  12DC                     __end_of_OSCILLATOR_Initialize:
 15678                           
 15679                           	psect	text40
 15680  13FF                     __ptext40:	
 15681 ;; *************** function _ADCC_Initialize *****************
 15682 ;; Defined at:
 15683 ;;		line 63 in file "mcc_generated_files/adcc.c"
 15684 ;; Parameters:    Size  Location     Type
 15685 ;;		None
 15686 ;; Auto vars:     Size  Location     Type
 15687 ;;		None
 15688 ;; Return value:  Size  Location     Type
 15689 ;;                  1    wreg      void 
 15690 ;; Registers used:
 15691 ;;		wreg, status,2
 15692 ;; Tracked objects:
 15693 ;;		On entry : 0/0
 15694 ;;		On exit  : 0/0
 15695 ;;		Unchanged: 0/0
 15696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15701 ;;Total ram usage:        0 bytes
 15702 ;; Hardware stack levels used:    1
 15703 ;; Hardware stack levels required when called:    6
 15704 ;; This function calls:
 15705 ;;		Nothing
 15706 ;; This function is called by:
 15707 ;;		_SYSTEM_Initialize
 15708 ;;		_lumin
 15709 ;; This function uses a non-reentrant model
 15710 ;;
 15711                           
 15712                           
 15713                           ;psect for function _ADCC_Initialize
 15714  13FF                     _ADCC_Initialize:
 15715  13FF                     l4372:	
 15716                           ;incstack = 0
 15717                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 15718                           
 15719                           
 15720                           ;adcc.c: 67: ADLTHL = 0x00;
 15721  13FF  0022               	movlb	2	; select bank2
 15722  1400  018E               	clrf	14	;volatile
 15723                           
 15724                           ;adcc.c: 69: ADLTHH = 0x00;
 15725  1401  018F               	clrf	15	;volatile
 15726                           
 15727                           ;adcc.c: 71: ADUTHL = 0x00;
 15728  1402  0190               	clrf	16	;volatile
 15729                           
 15730                           ;adcc.c: 73: ADUTHH = 0x00;
 15731  1403  0191               	clrf	17	;volatile
 15732                           
 15733                           ;adcc.c: 75: ADSTPTL = 0x00;
 15734  1404  0192               	clrf	18	;volatile
 15735                           
 15736                           ;adcc.c: 77: ADSTPTH = 0x00;
 15737  1405  0193               	clrf	19	;volatile
 15738                           
 15739                           ;adcc.c: 79: ADRPT = 0x00;
 15740  1406  018D               	clrf	13	;volatile
 15741                           
 15742                           ;adcc.c: 81: ADPCH = 0x00;
 15743  1407  0021               	movlb	1	; select bank1
 15744  1408  019E               	clrf	30	;volatile
 15745                           
 15746                           ;adcc.c: 83: ADCAP = 0x00;
 15747  1409  019B               	clrf	27	;volatile
 15748                           
 15749                           ;adcc.c: 85: ADCON1 = 0x00;
 15750  140A  0194               	clrf	20	;volatile
 15751                           
 15752                           ;adcc.c: 87: ADCON2 = 0x00;
 15753  140B  0195               	clrf	21	;volatile
 15754                           
 15755                           ;adcc.c: 89: ADCON3 = 0x00;
 15756  140C  0196               	clrf	22	;volatile
 15757                           
 15758                           ;adcc.c: 91: ADSTAT = 0x00;
 15759  140D  0197               	clrf	23	;volatile
 15760                           
 15761                           ;adcc.c: 93: ADREF = 0x00;
 15762  140E  019A               	clrf	26	;volatile
 15763                           
 15764                           ;adcc.c: 95: ADACT = 0x00;
 15765  140F  0199               	clrf	25	;volatile
 15766                           
 15767                           ;adcc.c: 97: ADCLK = 0x00;
 15768  1410  0198               	clrf	24	;volatile
 15769  1411                     l4374:
 15770                           
 15771                           ;adcc.c: 99: ADCON0 = 0x84;
 15772  1411  3084               	movlw	132
 15773  1412  0093               	movwf	19	;volatile
 15774  1413                     l4376:
 15775                           
 15776                           ;adcc.c: 101: ADACQ = 0x00;
 15777  1413  019D               	clrf	29	;volatile
 15778  1414                     l1091:
 15779  1414  0008               	return
 15780  1415                     __end_of_ADCC_Initialize:
 15781                           
 15782                           	psect	text41
 15783  178A                     __ptext41:	
 15784 ;; *************** function _LCDinit *****************
 15785 ;; Defined at:
 15786 ;;		line 80 in file "LCD.c"
 15787 ;; Parameters:    Size  Location     Type
 15788 ;;		None
 15789 ;; Auto vars:     Size  Location     Type
 15790 ;;		None
 15791 ;; Return value:  Size  Location     Type
 15792 ;;                  1    wreg      void 
 15793 ;; Registers used:
 15794 ;;		wreg, status,2, status,0, pclath, cstack
 15795 ;; Tracked objects:
 15796 ;;		On entry : 0/0
 15797 ;;		On exit  : 0/0
 15798 ;;		Unchanged: 0/0
 15799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15802 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15803 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15804 ;;Total ram usage:        1 bytes
 15805 ;; Hardware stack levels used:    1
 15806 ;; Hardware stack levels required when called:    8
 15807 ;; This function calls:
 15808 ;;		_LCDsend
 15809 ;;		_LCDsend2x4
 15810 ;; This function is called by:
 15811 ;;		_main
 15812 ;; This function uses a non-reentrant model
 15813 ;;
 15814                           
 15815                           
 15816                           ;psect for function _LCDinit
 15817  178A                     _LCDinit:
 15818  178A                     l4630:	
 15819                           ;incstack = 0
 15820                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
 15821                           
 15822                           
 15823                           ;LCD.c: 82: _delay((unsigned long)((50)*(1000000/4000.0)));
 15824  178A  3011               	movlw	17
 15825  178B  0020               	movlb	0	; select bank0
 15826  178C  00A8               	movwf	??_LCDinit
 15827  178D  303A               	movlw	58
 15828  178E                     u4807:
 15829  178E  0B89               	decfsz	9,f
 15830  178F  2F8E               	goto	u4807
 15831  1790  0BA8               	decfsz	??_LCDinit,f
 15832  1791  2F8E               	goto	u4807
 15833  1792  0000               	nop
 15834  1793                     l4632:
 15835                           
 15836                           ;LCD.c: 83: LCDsend(0x30);
 15837  1793  3030               	movlw	48
 15838  1794  3196  2687  3197   	fcall	_LCDsend
 15839  1797                     l4634:
 15840                           
 15841                           ;LCD.c: 84: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend(0
      +                          x30);
 15842  1797  3034               	movlw	52
 15843  1798  3196  2687  3197   	fcall	_LCDsend
 15844  179B  3029               	movlw	41
 15845  179C                     u4817:
 15846  179C  0B89               	decfsz	9,f
 15847  179D  2F9C               	goto	u4817
 15848  179E  3200               	nop2
 15849  179F                     l4636:
 15850  179F  3030               	movlw	48
 15851  17A0  3196  2687  3197   	fcall	_LCDsend
 15852  17A3                     l4638:
 15853                           
 15854                           ;LCD.c: 85: _delay((unsigned long)((5)*(1000000/4000.0)));
 15855  17A3  30FA               	movlw	250
 15856  17A4                     u4827:
 15857  17A4  3200               	nop2
 15858  17A5  0B89               	decfsz	9,f
 15859  17A6  2FA4               	goto	u4827
 15860                           
 15861                           ;LCD.c: 86: LCDsend(0x30);
 15862  17A7  3030               	movlw	48
 15863  17A8  3196  2687  3197   	fcall	_LCDsend
 15864                           
 15865                           ;LCD.c: 87: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend(0
      +                          x30);
 15866  17AB  3034               	movlw	52
 15867  17AC  3196  2687  3197   	fcall	_LCDsend
 15868  17AF                     l4640:
 15869  17AF  3029               	movlw	41
 15870  17B0                     u4837:
 15871  17B0  0B89               	decfsz	9,f
 15872  17B1  2FB0               	goto	u4837
 15873  17B2  3200               	nop2
 15874  17B3                     l4642:
 15875  17B3  3030               	movlw	48
 15876  17B4  3196  2687  3197   	fcall	_LCDsend
 15877                           
 15878                           ;LCD.c: 88: _delay((unsigned long)((100)*(1000000/4000000.0)));
 15879  17B7  3008               	movlw	8
 15880  17B8                     u4847:
 15881  17B8  0B89               	decfsz	9,f
 15882  17B9  2FB8               	goto	u4847
 15883  17BA  0000               	nop
 15884  17BB                     l4644:
 15885                           
 15886                           ;LCD.c: 89: LCDsend(0x30);
 15887  17BB  3030               	movlw	48
 15888  17BC  3196  2687  3197   	fcall	_LCDsend
 15889  17BF                     l4646:
 15890                           
 15891                           ;LCD.c: 90: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend(0
      +                          x30);
 15892  17BF  3034               	movlw	52
 15893  17C0  3196  2687  3197   	fcall	_LCDsend
 15894  17C3  3029               	movlw	41
 15895  17C4                     u4857:
 15896  17C4  0B89               	decfsz	9,f
 15897  17C5  2FC4               	goto	u4857
 15898  17C6  3200               	nop2
 15899  17C7                     l4648:
 15900  17C7  3030               	movlw	48
 15901  17C8  3196  2687  3197   	fcall	_LCDsend
 15902  17CB                     l4650:
 15903                           
 15904                           ;LCD.c: 91: _delay((unsigned long)((100)*(1000000/4000000.0)));
 15905  17CB  3008               	movlw	8
 15906  17CC                     u4867:
 15907  17CC  0B89               	decfsz	9,f
 15908  17CD  2FCC               	goto	u4867
 15909  17CE  0000               	nop
 15910                           
 15911                           ;LCD.c: 92: LCDsend(0x20);
 15912  17CF  3020               	movlw	32
 15913  17D0  3196  2687  3197   	fcall	_LCDsend
 15914                           
 15915                           ;LCD.c: 93: LCDsend(0x24); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend(0
      +                          x20);
 15916  17D3  3024               	movlw	36
 15917  17D4  3196  2687  3197   	fcall	_LCDsend
 15918  17D7                     l4652:
 15919  17D7  3029               	movlw	41
 15920  17D8                     u4877:
 15921  17D8  0B89               	decfsz	9,f
 15922  17D9  2FD8               	goto	u4877
 15923  17DA  3200               	nop2
 15924  17DB                     l4654:
 15925  17DB  3020               	movlw	32
 15926  17DC  3196  2687  3197   	fcall	_LCDsend
 15927                           
 15928                           ;LCD.c: 94: _delay((unsigned long)((5)*(1000000/4000.0)));
 15929  17DF  30FA               	movlw	250
 15930  17E0                     u4887:
 15931  17E0  3200               	nop2
 15932  17E1  0B89               	decfsz	9,f
 15933  17E2  2FE0               	goto	u4887
 15934  17E3                     l4656:
 15935                           
 15936                           ;LCD.c: 96: LCDsend2x4(0x28, 0);
 15937  17E3  0020               	movlb	0	; select bank0
 15938  17E4  01A2               	clrf	LCDsend2x4@mode
 15939  17E5  3028               	movlw	40
 15940  17E6  3189  2100  3197   	fcall	_LCDsend2x4
 15941  17E9                     l4658:
 15942                           
 15943                           ;LCD.c: 97: LCDsend2x4(0x06, 0);
 15944  17E9  0020               	movlb	0	; select bank0
 15945  17EA  01A2               	clrf	LCDsend2x4@mode
 15946  17EB  3006               	movlw	6
 15947  17EC  3189  2100  3197   	fcall	_LCDsend2x4
 15948  17EF                     l4660:
 15949                           
 15950                           ;LCD.c: 98: LCDsend2x4(0x0f, 0);
 15951  17EF  0020               	movlb	0	; select bank0
 15952  17F0  01A2               	clrf	LCDsend2x4@mode
 15953  17F1  300F               	movlw	15
 15954  17F2  3189  2100  3197   	fcall	_LCDsend2x4
 15955  17F5                     l4662:
 15956                           
 15957                           ;LCD.c: 99: LCDsend2x4(0x01, 0);
 15958  17F5  0020               	movlb	0	; select bank0
 15959  17F6  01A2               	clrf	LCDsend2x4@mode
 15960  17F7  3001               	movlw	1
 15961  17F8  3189  2100  3197   	fcall	_LCDsend2x4
 15962                           
 15963                           ;LCD.c: 100: _delay((unsigned long)((2)*(1000000/4000.0)));
 15964  17FB  30A6               	movlw	166
 15965  17FC                     u4897:
 15966  17FC  0B89               	decfsz	9,f
 15967  17FD  2FFC               	goto	u4897
 15968  17FE  3200               	nop2
 15969  17FF                     l968:
 15970  17FF  0008               	return
 15971  1800                     __end_of_LCDinit:
 15972                           
 15973                           	psect	text42
 15974  0900                     __ptext42:	
 15975 ;; *************** function _LCDsend2x4 *****************
 15976 ;; Defined at:
 15977 ;;		line 57 in file "LCD.c"
 15978 ;; Parameters:    Size  Location     Type
 15979 ;;  c               1    wreg     unsigned char 
 15980 ;;  mode            1    2[BANK0 ] unsigned char 
 15981 ;; Auto vars:     Size  Location     Type
 15982 ;;  c               1    5[BANK0 ] unsigned char 
 15983 ;;  lc              1    7[BANK0 ] unsigned char 
 15984 ;;  hc              1    6[BANK0 ] unsigned char 
 15985 ;; Return value:  Size  Location     Type
 15986 ;;                  1    wreg      void 
 15987 ;; Registers used:
 15988 ;;		wreg, status,2, status,0, pclath, cstack
 15989 ;; Tracked objects:
 15990 ;;		On entry : 0/0
 15991 ;;		On exit  : 0/0
 15992 ;;		Unchanged: 0/0
 15993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15994 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15995 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15996 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15997 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15998 ;;Total ram usage:        6 bytes
 15999 ;; Hardware stack levels used:    1
 16000 ;; Hardware stack levels required when called:    7
 16001 ;; This function calls:
 16002 ;;		_WriteI2C
 16003 ;; This function is called by:
 16004 ;;		_LCDinit
 16005 ;;		_LCDcmd
 16006 ;;		_LCDchar
 16007 ;; This function uses a non-reentrant model
 16008 ;;
 16009                           
 16010                           
 16011                           ;psect for function _LCDsend2x4
 16012  0900                     _LCDsend2x4:
 16013                           
 16014                           ;incstack = 0
 16015                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 16016                           ;LCDsend2x4@c stored from wreg
 16017  0900  0020               	movlb	0	; select bank0
 16018  0901  00A5               	movwf	LCDsend2x4@c
 16019  0902                     l4034:
 16020                           
 16021                           ;LCD.c: 59: unsigned char hc;;LCD.c: 60: unsigned char lc;;LCD.c: 62: hc = c & 0xf0;
 16022  0902  0825               	movf	LCDsend2x4@c,w
 16023  0903  39F0               	andlw	240
 16024  0904  00A3               	movwf	??_LCDsend2x4
 16025  0905  0823               	movf	??_LCDsend2x4,w
 16026  0906  00A6               	movwf	LCDsend2x4@hc
 16027  0907                     l4036:
 16028                           
 16029                           ;LCD.c: 63: lc = (c << 4) & 0xf0;
 16030  0907  0825               	movf	LCDsend2x4@c,w
 16031  0908  00A3               	movwf	??_LCDsend2x4
 16032  0909  3003               	movlw	3
 16033  090A                     u2545:
 16034  090A  35A3               	lslf	??_LCDsend2x4,f
 16035  090B  3EFF               	addlw	-1
 16036  090C  1D03               	skipz
 16037  090D  290A               	goto	u2545
 16038  090E  3523               	lslf	??_LCDsend2x4,w
 16039  090F  39F0               	andlw	240
 16040  0910  00A4               	movwf	??_LCDsend2x4+1
 16041  0911  0824               	movf	??_LCDsend2x4+1,w
 16042  0912  00A7               	movwf	LCDsend2x4@lc
 16043  0913                     l4038:	
 16044                           ;LCD.c: 65: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16045                           
 16046  0913  0023               	movlb	3	; select bank3
 16047  0914  0C0F               	rrf	15,w	;volatile
 16048  0915  0C89               	rrf	9,f
 16049  0916  3901               	andlw	1
 16050  0917  0020               	movlb	0	; select bank0
 16051  0918  00A3               	movwf	??_LCDsend2x4
 16052  0919  0023               	movlb	3	; select bank3
 16053  091A  0811               	movf	17,w	;volatile
 16054  091B  391F               	andlw	31
 16055  091C  0020               	movlb	0	; select bank0
 16056  091D  0423               	iorwf	??_LCDsend2x4,w
 16057  091E  1D03               	btfss	3,2
 16058  091F  2921               	goto	u2551
 16059  0920  2922               	goto	u2550
 16060  0921                     u2551:
 16061  0921  2913               	goto	l4038
 16062  0922                     u2550:
 16063  0922                     l934:
 16064                           
 16065                           ;LCD.c: 66: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP1
      +                          STATbits.R_W));
 16066  0922  0023               	movlb	3	; select bank3
 16067  0923  1411               	bsf	17,0	;volatile
 16068  0924                     l935:
 16069  0924  1811               	btfsc	17,0	;volatile
 16070  0925  2927               	goto	u2561
 16071  0926  2928               	goto	u2560
 16072  0927                     u2561:
 16073  0927  2924               	goto	l935
 16074  0928                     u2560:
 16075  0928                     l4040:
 16076  0928  0023               	movlb	3	; select bank3
 16077  0929  0C0F               	rrf	15,w	;volatile
 16078  092A  0C89               	rrf	9,f
 16079  092B  3901               	andlw	1
 16080  092C  0020               	movlb	0	; select bank0
 16081  092D  00A3               	movwf	??_LCDsend2x4
 16082  092E  0023               	movlb	3	; select bank3
 16083  092F  0811               	movf	17,w	;volatile
 16084  0930  391F               	andlw	31
 16085  0931  0020               	movlb	0	; select bank0
 16086  0932  0423               	iorwf	??_LCDsend2x4,w
 16087  0933  1D03               	btfss	3,2
 16088  0934  2936               	goto	u2571
 16089  0935  2937               	goto	u2570
 16090  0936                     u2571:
 16091  0936  2928               	goto	l4040
 16092  0937                     u2570:
 16093  0937                     l4042:
 16094                           
 16095                           ;LCD.c: 67: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16096  0937  304E               	movlw	78
 16097  0938  3197  2730  3189   	fcall	_WriteI2C
 16098  093B                     l4044:
 16099  093B  0023               	movlb	3	; select bank3
 16100  093C  0C0F               	rrf	15,w	;volatile
 16101  093D  0C89               	rrf	9,f
 16102  093E  3901               	andlw	1
 16103  093F  0020               	movlb	0	; select bank0
 16104  0940  00A3               	movwf	??_LCDsend2x4
 16105  0941  0023               	movlb	3	; select bank3
 16106  0942  0811               	movf	17,w	;volatile
 16107  0943  391F               	andlw	31
 16108  0944  0020               	movlb	0	; select bank0
 16109  0945  0423               	iorwf	??_LCDsend2x4,w
 16110  0946  1D03               	btfss	3,2
 16111  0947  2949               	goto	u2581
 16112  0948  294A               	goto	u2580
 16113  0949                     u2581:
 16114  0949  293B               	goto	l4044
 16115  094A                     u2580:
 16116  094A                     l4046:
 16117                           
 16118                           ;LCD.c: 68: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16119  094A  0826               	movf	LCDsend2x4@hc,w
 16120  094B  0422               	iorwf	LCDsend2x4@mode,w
 16121  094C  3808               	iorlw	8
 16122  094D  3197  2730  3189   	fcall	_WriteI2C
 16123  0950                     l4048:
 16124  0950  0023               	movlb	3	; select bank3
 16125  0951  0C0F               	rrf	15,w	;volatile
 16126  0952  0C89               	rrf	9,f
 16127  0953  3901               	andlw	1
 16128  0954  0020               	movlb	0	; select bank0
 16129  0955  00A3               	movwf	??_LCDsend2x4
 16130  0956  0023               	movlb	3	; select bank3
 16131  0957  0811               	movf	17,w	;volatile
 16132  0958  391F               	andlw	31
 16133  0959  0020               	movlb	0	; select bank0
 16134  095A  0423               	iorwf	??_LCDsend2x4,w
 16135  095B  1D03               	btfss	3,2
 16136  095C  295E               	goto	u2591
 16137  095D  295F               	goto	u2590
 16138  095E                     u2591:
 16139  095E  2950               	goto	l4048
 16140  095F                     u2590:
 16141  095F                     l4050:
 16142                           
 16143                           ;LCD.c: 69: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.
      +                          R_W));
 16144  095F  0826               	movf	LCDsend2x4@hc,w
 16145  0960  0422               	iorwf	LCDsend2x4@mode,w
 16146  0961  380C               	iorlw	12
 16147  0962  3197  2730  3189   	fcall	_WriteI2C
 16148  0965                     l4052:
 16149  0965  0023               	movlb	3	; select bank3
 16150  0966  0C0F               	rrf	15,w	;volatile
 16151  0967  0C89               	rrf	9,f
 16152  0968  3901               	andlw	1
 16153  0969  0020               	movlb	0	; select bank0
 16154  096A  00A3               	movwf	??_LCDsend2x4
 16155  096B  0023               	movlb	3	; select bank3
 16156  096C  0811               	movf	17,w	;volatile
 16157  096D  391F               	andlw	31
 16158  096E  0020               	movlb	0	; select bank0
 16159  096F  0423               	iorwf	??_LCDsend2x4,w
 16160  0970  1D03               	btfss	3,2
 16161  0971  2973               	goto	u2601
 16162  0972  2974               	goto	u2600
 16163  0973                     u2601:
 16164  0973  2965               	goto	l4052
 16165  0974                     u2600:
 16166  0974                     l949:
 16167  0974                     l4054:	
 16168                           ;LCD.c: 70: _delay((unsigned long)((1)*(1000000/4000000.0)));
 16169                           
 16170                           
 16171                           ;LCD.c: 71: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16172  0974  0020               	movlb	0	; select bank0
 16173  0975  0826               	movf	LCDsend2x4@hc,w
 16174  0976  0422               	iorwf	LCDsend2x4@mode,w
 16175  0977  3808               	iorlw	8
 16176  0978  3197  2730  3189   	fcall	_WriteI2C
 16177  097B                     l4056:
 16178  097B  0023               	movlb	3	; select bank3
 16179  097C  0C0F               	rrf	15,w	;volatile
 16180  097D  0C89               	rrf	9,f
 16181  097E  3901               	andlw	1
 16182  097F  0020               	movlb	0	; select bank0
 16183  0980  00A3               	movwf	??_LCDsend2x4
 16184  0981  0023               	movlb	3	; select bank3
 16185  0982  0811               	movf	17,w	;volatile
 16186  0983  391F               	andlw	31
 16187  0984  0020               	movlb	0	; select bank0
 16188  0985  0423               	iorwf	??_LCDsend2x4,w
 16189  0986  1D03               	btfss	3,2
 16190  0987  2989               	goto	u2611
 16191  0988  298A               	goto	u2610
 16192  0989                     u2611:
 16193  0989  297B               	goto	l4056
 16194  098A                     u2610:
 16195  098A                     l4058:
 16196                           
 16197                           ;LCD.c: 72: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16198  098A  0827               	movf	LCDsend2x4@lc,w
 16199  098B  0422               	iorwf	LCDsend2x4@mode,w
 16200  098C  3808               	iorlw	8
 16201  098D  3197  2730  3189   	fcall	_WriteI2C
 16202  0990                     l4060:
 16203  0990  0023               	movlb	3	; select bank3
 16204  0991  0C0F               	rrf	15,w	;volatile
 16205  0992  0C89               	rrf	9,f
 16206  0993  3901               	andlw	1
 16207  0994  0020               	movlb	0	; select bank0
 16208  0995  00A3               	movwf	??_LCDsend2x4
 16209  0996  0023               	movlb	3	; select bank3
 16210  0997  0811               	movf	17,w	;volatile
 16211  0998  391F               	andlw	31
 16212  0999  0020               	movlb	0	; select bank0
 16213  099A  0423               	iorwf	??_LCDsend2x4,w
 16214  099B  1D03               	btfss	3,2
 16215  099C  299E               	goto	u2621
 16216  099D  299F               	goto	u2620
 16217  099E                     u2621:
 16218  099E  2990               	goto	l4060
 16219  099F                     u2620:
 16220  099F                     l4062:
 16221                           
 16222                           ;LCD.c: 73: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.
      +                          R_W));
 16223  099F  0827               	movf	LCDsend2x4@lc,w
 16224  09A0  0422               	iorwf	LCDsend2x4@mode,w
 16225  09A1  380C               	iorlw	12
 16226  09A2  3197  2730  3189   	fcall	_WriteI2C
 16227  09A5                     l4064:
 16228  09A5  0023               	movlb	3	; select bank3
 16229  09A6  0C0F               	rrf	15,w	;volatile
 16230  09A7  0C89               	rrf	9,f
 16231  09A8  3901               	andlw	1
 16232  09A9  0020               	movlb	0	; select bank0
 16233  09AA  00A3               	movwf	??_LCDsend2x4
 16234  09AB  0023               	movlb	3	; select bank3
 16235  09AC  0811               	movf	17,w	;volatile
 16236  09AD  391F               	andlw	31
 16237  09AE  0020               	movlb	0	; select bank0
 16238  09AF  0423               	iorwf	??_LCDsend2x4,w
 16239  09B0  1D03               	btfss	3,2
 16240  09B1  29B3               	goto	u2631
 16241  09B2  29B4               	goto	u2630
 16242  09B3                     u2631:
 16243  09B3  29A5               	goto	l4064
 16244  09B4                     u2630:
 16245  09B4                     l958:
 16246  09B4                     l4066:	
 16247                           ;LCD.c: 74: _delay((unsigned long)((1)*(1000000/4000000.0)));
 16248                           
 16249                           
 16250                           ;LCD.c: 75: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16251  09B4  0020               	movlb	0	; select bank0
 16252  09B5  0827               	movf	LCDsend2x4@lc,w
 16253  09B6  0422               	iorwf	LCDsend2x4@mode,w
 16254  09B7  3808               	iorlw	8
 16255  09B8  3197  2730  3189   	fcall	_WriteI2C
 16256  09BB                     l4068:
 16257  09BB  0023               	movlb	3	; select bank3
 16258  09BC  0C0F               	rrf	15,w	;volatile
 16259  09BD  0C89               	rrf	9,f
 16260  09BE  3901               	andlw	1
 16261  09BF  0020               	movlb	0	; select bank0
 16262  09C0  00A3               	movwf	??_LCDsend2x4
 16263  09C1  0023               	movlb	3	; select bank3
 16264  09C2  0811               	movf	17,w	;volatile
 16265  09C3  391F               	andlw	31
 16266  09C4  0020               	movlb	0	; select bank0
 16267  09C5  0423               	iorwf	??_LCDsend2x4,w
 16268  09C6  1D03               	btfss	3,2
 16269  09C7  29C9               	goto	u2641
 16270  09C8  29CA               	goto	u2640
 16271  09C9                     u2641:
 16272  09C9  29BB               	goto	l4068
 16273  09CA                     u2640:
 16274  09CA                     l961:
 16275                           
 16276                           ;LCD.c: 76: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 16277  09CA  0023               	movlb	3	; select bank3
 16278  09CB  1511               	bsf	17,2	;volatile
 16279  09CC                     l962:
 16280  09CC  1911               	btfsc	17,2	;volatile
 16281  09CD  29CF               	goto	u2651
 16282  09CE  29D0               	goto	u2650
 16283  09CF                     u2651:
 16284  09CF  29CC               	goto	l962
 16285  09D0                     u2650:
 16286  09D0                     l4070:
 16287                           
 16288                           ;LCD.c: 77: _delay((unsigned long)((50)*(1000000/4000000.0)));
 16289  09D0  3004               	movlw	4
 16290  09D1                     u4907:
 16291  09D1  0B89               	decfsz	9,f
 16292  09D2  29D1               	goto	u4907
 16293  09D3                     l965:
 16294  09D3  0008               	return
 16295  09D4                     __end_of_LCDsend2x4:
 16296                           
 16297                           	psect	text43
 16298  1687                     __ptext43:	
 16299 ;; *************** function _LCDsend *****************
 16300 ;; Defined at:
 16301 ;;		line 18 in file "LCD.c"
 16302 ;; Parameters:    Size  Location     Type
 16303 ;;  c               1    wreg     unsigned char 
 16304 ;; Auto vars:     Size  Location     Type
 16305 ;;  c               1    3[BANK0 ] unsigned char 
 16306 ;; Return value:  Size  Location     Type
 16307 ;;                  1    wreg      void 
 16308 ;; Registers used:
 16309 ;;		wreg, status,2, status,0, pclath, cstack
 16310 ;; Tracked objects:
 16311 ;;		On entry : 0/0
 16312 ;;		On exit  : 0/0
 16313 ;;		Unchanged: 0/0
 16314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16316 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16317 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16318 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16319 ;;Total ram usage:        2 bytes
 16320 ;; Hardware stack levels used:    1
 16321 ;; Hardware stack levels required when called:    7
 16322 ;; This function calls:
 16323 ;;		_WriteI2C
 16324 ;; This function is called by:
 16325 ;;		_LCDinit
 16326 ;; This function uses a non-reentrant model
 16327 ;;
 16328                           
 16329                           
 16330                           ;psect for function _LCDsend
 16331  1687                     _LCDsend:
 16332                           
 16333                           ;incstack = 0
 16334                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 16335                           ;LCDsend@c stored from wreg
 16336  1687  0020               	movlb	0	; select bank0
 16337  1688  00A3               	movwf	LCDsend@c
 16338  1689                     l4446:
 16339  1689                     l4448:	
 16340                           ;LCD.c: 20: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16341                           
 16342  1689  0023               	movlb	3	; select bank3
 16343  168A  0C0F               	rrf	15,w	;volatile
 16344  168B  0C89               	rrf	9,f
 16345  168C  3901               	andlw	1
 16346  168D  0020               	movlb	0	; select bank0
 16347  168E  00A2               	movwf	??_LCDsend
 16348  168F  0023               	movlb	3	; select bank3
 16349  1690  0811               	movf	17,w	;volatile
 16350  1691  391F               	andlw	31
 16351  1692  0020               	movlb	0	; select bank0
 16352  1693  0422               	iorwf	??_LCDsend,w
 16353  1694  1D03               	btfss	3,2
 16354  1695  2E97               	goto	u3141
 16355  1696  2E98               	goto	u3140
 16356  1697                     u3141:
 16357  1697  2E89               	goto	l4448
 16358  1698                     u3140:
 16359  1698                     l832:
 16360                           
 16361                           ;LCD.c: 21: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP1
      +                          STATbits.R_W));
 16362  1698  0023               	movlb	3	; select bank3
 16363  1699  1411               	bsf	17,0	;volatile
 16364  169A                     l833:
 16365  169A  1811               	btfsc	17,0	;volatile
 16366  169B  2E9D               	goto	u3151
 16367  169C  2E9E               	goto	u3150
 16368  169D                     u3151:
 16369  169D  2E9A               	goto	l833
 16370  169E                     u3150:
 16371  169E                     l4450:
 16372  169E  0023               	movlb	3	; select bank3
 16373  169F  0C0F               	rrf	15,w	;volatile
 16374  16A0  0C89               	rrf	9,f
 16375  16A1  3901               	andlw	1
 16376  16A2  0020               	movlb	0	; select bank0
 16377  16A3  00A2               	movwf	??_LCDsend
 16378  16A4  0023               	movlb	3	; select bank3
 16379  16A5  0811               	movf	17,w	;volatile
 16380  16A6  391F               	andlw	31
 16381  16A7  0020               	movlb	0	; select bank0
 16382  16A8  0422               	iorwf	??_LCDsend,w
 16383  16A9  1D03               	btfss	3,2
 16384  16AA  2EAC               	goto	u3161
 16385  16AB  2EAD               	goto	u3160
 16386  16AC                     u3161:
 16387  16AC  2E9E               	goto	l4450
 16388  16AD                     u3160:
 16389  16AD                     l4452:
 16390                           
 16391                           ;LCD.c: 22: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16392  16AD  304E               	movlw	78
 16393  16AE  3197  2730  3196   	fcall	_WriteI2C
 16394  16B1                     l4454:
 16395  16B1  0023               	movlb	3	; select bank3
 16396  16B2  0C0F               	rrf	15,w	;volatile
 16397  16B3  0C89               	rrf	9,f
 16398  16B4  3901               	andlw	1
 16399  16B5  0020               	movlb	0	; select bank0
 16400  16B6  00A2               	movwf	??_LCDsend
 16401  16B7  0023               	movlb	3	; select bank3
 16402  16B8  0811               	movf	17,w	;volatile
 16403  16B9  391F               	andlw	31
 16404  16BA  0020               	movlb	0	; select bank0
 16405  16BB  0422               	iorwf	??_LCDsend,w
 16406  16BC  1D03               	btfss	3,2
 16407  16BD  2EBF               	goto	u3171
 16408  16BE  2EC0               	goto	u3170
 16409  16BF                     u3171:
 16410  16BF  2EB1               	goto	l4454
 16411  16C0                     u3170:
 16412  16C0                     l4456:
 16413                           
 16414                           ;LCD.c: 23: WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16415  16C0  0823               	movf	LCDsend@c,w
 16416  16C1  3197  2730  3196   	fcall	_WriteI2C
 16417  16C4                     l4458:
 16418  16C4  0023               	movlb	3	; select bank3
 16419  16C5  0C0F               	rrf	15,w	;volatile
 16420  16C6  0C89               	rrf	9,f
 16421  16C7  3901               	andlw	1
 16422  16C8  0020               	movlb	0	; select bank0
 16423  16C9  00A2               	movwf	??_LCDsend
 16424  16CA  0023               	movlb	3	; select bank3
 16425  16CB  0811               	movf	17,w	;volatile
 16426  16CC  391F               	andlw	31
 16427  16CD  0020               	movlb	0	; select bank0
 16428  16CE  0422               	iorwf	??_LCDsend,w
 16429  16CF  1D03               	btfss	3,2
 16430  16D0  2ED2               	goto	u3181
 16431  16D1  2ED3               	goto	u3180
 16432  16D2                     u3181:
 16433  16D2  2EC4               	goto	l4458
 16434  16D3                     u3180:
 16435  16D3                     l844:
 16436                           
 16437                           ;LCD.c: 24: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 16438  16D3  0023               	movlb	3	; select bank3
 16439  16D4  1511               	bsf	17,2	;volatile
 16440  16D5                     l845:
 16441  16D5  1911               	btfsc	17,2	;volatile
 16442  16D6  2ED8               	goto	u3191
 16443  16D7  2ED9               	goto	u3190
 16444  16D8                     u3191:
 16445  16D8  2ED5               	goto	l845
 16446  16D9                     u3190:
 16447  16D9                     l848:
 16448  16D9  0008               	return
 16449  16DA                     __end_of_LCDsend:
 16450                           
 16451                           	psect	text44
 16452  1730                     __ptext44:	
 16453 ;; *************** function _WriteI2C *****************
 16454 ;; Defined at:
 16455 ;;		line 47 in file "I2C/i2c.c"
 16456 ;; Parameters:    Size  Location     Type
 16457 ;;  data_out        1    wreg     unsigned char 
 16458 ;; Auto vars:     Size  Location     Type
 16459 ;;  data_out        1    1[BANK0 ] unsigned char 
 16460 ;; Return value:  Size  Location     Type
 16461 ;;                  1    wreg      char 
 16462 ;; Registers used:
 16463 ;;		wreg, status,2, status,0
 16464 ;; Tracked objects:
 16465 ;;		On entry : 0/0
 16466 ;;		On exit  : 0/0
 16467 ;;		Unchanged: 0/0
 16468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16470 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16471 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16472 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16473 ;;Total ram usage:        2 bytes
 16474 ;; Hardware stack levels used:    1
 16475 ;; Hardware stack levels required when called:    6
 16476 ;; This function calls:
 16477 ;;		Nothing
 16478 ;; This function is called by:
 16479 ;;		_tsttc
 16480 ;;		_LCDsend
 16481 ;;		_LCDsend2x4
 16482 ;;		_LCDrecv
 16483 ;; This function uses a non-reentrant model
 16484 ;;
 16485                           
 16486                           
 16487                           ;psect for function _WriteI2C
 16488  1730                     _WriteI2C:
 16489                           
 16490                           ;incstack = 0
 16491                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 16492                           ;WriteI2C@data_out stored from wreg
 16493  1730  0020               	movlb	0	; select bank0
 16494  1731  00A1               	movwf	WriteI2C@data_out
 16495  1732                     l3982:
 16496                           
 16497                           ;i2c.c: 49: SSP1BUF = data_out;
 16498  1732  0821               	movf	WriteI2C@data_out,w
 16499  1733  0023               	movlb	3	; select bank3
 16500  1734  008C               	movwf	12	;volatile
 16501  1735                     l3984:
 16502                           
 16503                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 16504  1735  1F90               	btfss	16,7	;volatile
 16505  1736  2F38               	goto	u2431
 16506  1737  2F39               	goto	u2430
 16507  1738                     u2431:
 16508  1738  2F3A               	goto	l3990
 16509  1739                     u2430:
 16510  1739  2F89               	goto	l30
 16511  173A                     l3990:
 16512                           
 16513                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 16514  173A  300F               	movlw	15
 16515  173B  0510               	andwf	16,w	;volatile
 16516  173C  0020               	movlb	0	; select bank0
 16517  173D  00A0               	movwf	??_WriteI2C
 16518  173E  3008               	movlw	8
 16519  173F  0620               	xorwf	??_WriteI2C,w
 16520  1740  1903               	btfsc	3,2
 16521  1741  2F43               	goto	u2441
 16522  1742  2F44               	goto	u2440
 16523  1743                     u2441:
 16524  1743  2F5D               	goto	l4002
 16525  1744                     u2440:
 16526  1744                     l3992:
 16527  1744  300F               	movlw	15
 16528  1745  0023               	movlb	3	; select bank3
 16529  1746  0510               	andwf	16,w	;volatile
 16530  1747  0020               	movlb	0	; select bank0
 16531  1748  00A0               	movwf	??_WriteI2C
 16532  1749  300B               	movlw	11
 16533  174A  0620               	xorwf	??_WriteI2C,w
 16534  174B  1903               	btfsc	3,2
 16535  174C  2F4E               	goto	u2451
 16536  174D  2F4F               	goto	u2450
 16537  174E                     u2451:
 16538  174E  2F5D               	goto	l4002
 16539  174F                     u2450:
 16540  174F                     l3994:
 16541                           
 16542                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 16543  174F  0023               	movlb	3	; select bank3
 16544  1750  1610               	bsf	16,4	;volatile
 16545  1751                     l33:	
 16546                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 16547                           
 16548  1751  002E               	movlb	14	; select bank14
 16549  1752  1C0F               	btfss	15,0	;volatile
 16550  1753  2F55               	goto	u2461
 16551  1754  2F56               	goto	u2460
 16552  1755                     u2461:
 16553  1755  2F51               	goto	l33
 16554  1756                     u2460:
 16555  1756                     l35:
 16556                           
 16557                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 16558  1756  0023               	movlb	3	; select bank3
 16559  1757  190F               	btfsc	15,2	;volatile
 16560  1758  2F5A               	goto	u2471
 16561  1759  2F5B               	goto	u2470
 16562  175A                     u2471:
 16563  175A  2F89               	goto	l30
 16564  175B                     u2470:
 16565  175B                     l3996:
 16566  175B  080F               	movf	15,w	;volatile
 16567  175C  2F89               	goto	l30
 16568  175D                     l4002:
 16569                           
 16570                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 16571  175D  300F               	movlw	15
 16572  175E  0023               	movlb	3	; select bank3
 16573  175F  0510               	andwf	16,w	;volatile
 16574  1760  0020               	movlb	0	; select bank0
 16575  1761  00A0               	movwf	??_WriteI2C
 16576  1762  3008               	movlw	8
 16577  1763  0620               	xorwf	??_WriteI2C,w
 16578  1764  1903               	btfsc	3,2
 16579  1765  2F67               	goto	u2481
 16580  1766  2F68               	goto	u2480
 16581  1767                     u2481:
 16582  1767  2F73               	goto	l42
 16583  1768                     u2480:
 16584  1768                     l4004:
 16585  1768  300F               	movlw	15
 16586  1769  0023               	movlb	3	; select bank3
 16587  176A  0510               	andwf	16,w	;volatile
 16588  176B  0020               	movlb	0	; select bank0
 16589  176C  00A0               	movwf	??_WriteI2C
 16590  176D  300B               	movlw	11
 16591  176E  0620               	xorwf	??_WriteI2C,w
 16592  176F  1D03               	btfss	3,2
 16593  1770  2F72               	goto	u2491
 16594  1771  2F73               	goto	u2490
 16595  1772                     u2491:
 16596  1772  2F89               	goto	l30
 16597  1773                     u2490:
 16598  1773                     l42:
 16599  1773  0023               	movlb	3	; select bank3
 16600  1774  180F               	btfsc	15,0	;volatile
 16601  1775  2F77               	goto	u2501
 16602  1776  2F78               	goto	u2500
 16603  1777                     u2501:
 16604  1777  2F73               	goto	l42
 16605  1778                     u2500:
 16606  1778                     l4006:
 16607  1778  0023               	movlb	3	; select bank3
 16608  1779  0C0F               	rrf	15,w	;volatile
 16609  177A  0C89               	rrf	9,f
 16610  177B  3901               	andlw	1
 16611  177C  0020               	movlb	0	; select bank0
 16612  177D  00A0               	movwf	??_WriteI2C
 16613  177E  0023               	movlb	3	; select bank3
 16614  177F  0811               	movf	17,w	;volatile
 16615  1780  391F               	andlw	31
 16616  1781  0020               	movlb	0	; select bank0
 16617  1782  0420               	iorwf	??_WriteI2C,w
 16618  1783  1D03               	btfss	3,2
 16619  1784  2F86               	goto	u2511
 16620  1785  2F87               	goto	u2510
 16621  1786                     u2511:
 16622  1786  2F78               	goto	l4006
 16623  1787                     u2510:
 16624  1787                     l47:
 16625                           
 16626                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 16627  1787  0023               	movlb	3	; select bank3
 16628  1788  0811               	movf	17,w	;volatile
 16629  1789                     l30:
 16630  1789  0008               	return
 16631  178A                     __end_of_WriteI2C:
 16632                           
 16633                           	psect	intentry
 16634  0004                     __pintentry:	
 16635 ;; *************** function _INTERRUPT_InterruptManager *****************
 16636 ;; Defined at:
 16637 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 16638 ;; Parameters:    Size  Location     Type
 16639 ;;		None
 16640 ;; Auto vars:     Size  Location     Type
 16641 ;;		None
 16642 ;; Return value:  Size  Location     Type
 16643 ;;                  1    wreg      void 
 16644 ;; Registers used:
 16645 ;;		wreg, status,2, status,0, pclath, cstack
 16646 ;; Tracked objects:
 16647 ;;		On entry : 0/0
 16648 ;;		On exit  : 0/0
 16649 ;;		Unchanged: 0/0
 16650 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16652 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16654 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16655 ;;Total ram usage:        0 bytes
 16656 ;; Hardware stack levels used:    1
 16657 ;; Hardware stack levels required when called:    5
 16658 ;; This function calls:
 16659 ;;		_TMR0_ISR
 16660 ;;		_TMR2_ISR
 16661 ;; This function is called by:
 16662 ;;		Interrupt level 1
 16663 ;; This function uses a non-reentrant model
 16664 ;;
 16665                           
 16666  0004                     _INTERRUPT_InterruptManager:
 16667                           
 16668                           ;incstack = 0
 16669  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 16670                           
 16671                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 16672  0005  3180               	pagesel	$
 16673  0006                     i1l5378:
 16674                           
 16675                           ;interrupt_manager.c: 55: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 16676  0006  002E               	movlb	14	; select bank14
 16677  0007  1E96               	btfss	22,5	;volatile
 16678  0008  280A               	goto	u429_21
 16679  0009  280B               	goto	u429_20
 16680  000A                     u429_21:
 16681  000A  2813               	goto	i1l342
 16682  000B                     u429_20:
 16683  000B                     i1l5380:
 16684  000B  1E8C               	btfss	12,5	;volatile
 16685  000C  280E               	goto	u430_21
 16686  000D  280F               	goto	u430_20
 16687  000E                     u430_21:
 16688  000E  2813               	goto	i1l342
 16689  000F                     u430_20:
 16690  000F                     i1l5382:
 16691                           
 16692                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: TMR0_ISR();
 16693  000F  3194  2441  3180   	fcall	_TMR0_ISR
 16694                           
 16695                           ;interrupt_manager.c: 58: }
 16696  0012  2835               	goto	i1l352
 16697  0013                     i1l342:
 16698                           
 16699                           ;interrupt_manager.c: 59: else if(INTCONbits.PEIE == 1)
 16700  0013  1F0B               	btfss	11,6	;volatile
 16701  0014  2816               	goto	u431_21
 16702  0015  2817               	goto	u431_20
 16703  0016                     u431_21:
 16704  0016  2835               	goto	i1l352
 16705  0017                     u431_20:
 16706  0017                     i1l5384:
 16707                           
 16708                           ;interrupt_manager.c: 60: {;interrupt_manager.c: 61: if(PIE3bits.BCL1IE == 1 && PIR3bits
      +                          .BCL1IF == 1)
 16709  0017  1C99               	btfss	25,1	;volatile
 16710  0018  281A               	goto	u432_21
 16711  0019  281B               	goto	u432_20
 16712  001A                     u432_21:
 16713  001A  2820               	goto	i1l345
 16714  001B                     u432_20:
 16715  001B                     i1l5386:
 16716                           
 16717                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: i2c1_driver_busCollisionISR();
 16718  001B  1C8F               	btfss	15,1	;volatile
 16719  001C  281E               	goto	u433_21
 16720  001D  281F               	goto	u433_20
 16721  001E                     u433_21:
 16722  001E  2820               	goto	i1l345
 16723  001F                     u433_20:
 16724  001F  2835               	goto	i1l352
 16725  0020                     i1l345:
 16726                           
 16727                           ;interrupt_manager.c: 65: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 16728  0020  1C19               	btfss	25,0	;volatile
 16729  0021  2823               	goto	u434_21
 16730  0022  2824               	goto	u434_20
 16731  0023                     u434_21:
 16732  0023  2829               	goto	i1l347
 16733  0024                     u434_20:
 16734  0024                     i1l5390:
 16735                           
 16736                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: i2c1_driver_i2cISR();
 16737  0024  1C0F               	btfss	15,0	;volatile
 16738  0025  2827               	goto	u435_21
 16739  0026  2828               	goto	u435_20
 16740  0027                     u435_21:
 16741  0027  2829               	goto	i1l347
 16742  0028                     u435_20:
 16743  0028  2835               	goto	i1l352
 16744  0029                     i1l347:
 16745                           
 16746                           ;interrupt_manager.c: 69: else if(PIE4bits.TMR2IE == 1 && PIR4bits.TMR2IF == 1)
 16747  0029  1C9A               	btfss	26,1	;volatile
 16748  002A  282C               	goto	u436_21
 16749  002B  282D               	goto	u436_20
 16750  002C                     u436_21:
 16751  002C  2835               	goto	i1l351
 16752  002D                     u436_20:
 16753  002D                     i1l5394:
 16754  002D  1C90               	btfss	16,1	;volatile
 16755  002E  2830               	goto	u437_21
 16756  002F  2831               	goto	u437_20
 16757  0030                     u437_21:
 16758  0030  2835               	goto	i1l351
 16759  0031                     u437_20:
 16760  0031                     i1l5396:
 16761                           
 16762                           ;interrupt_manager.c: 70: {;interrupt_manager.c: 71: TMR2_ISR();
 16763  0031  3192  22AF  3180   	fcall	_TMR2_ISR
 16764                           
 16765                           ;interrupt_manager.c: 72: }
 16766  0034  2835               	goto	i1l352
 16767  0035                     i1l351:	
 16768                           ;interrupt_manager.c: 78: else;interrupt_manager.c: 79: {
 16769                           
 16770  0035                     i1l352:
 16771  0035  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 16772  0036  0009               	retfie
 16773  0037                     __end_of_INTERRUPT_InterruptManager:
 16774                           
 16775                           	psect	text46
 16776  12AF                     __ptext46:	
 16777 ;; *************** function _TMR2_ISR *****************
 16778 ;; Defined at:
 16779 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 16780 ;; Parameters:    Size  Location     Type
 16781 ;;		None
 16782 ;; Auto vars:     Size  Location     Type
 16783 ;;		None
 16784 ;; Return value:  Size  Location     Type
 16785 ;;                  1    wreg      void 
 16786 ;; Registers used:
 16787 ;;		wreg, status,2, status,0, pclath, cstack
 16788 ;; Tracked objects:
 16789 ;;		On entry : 0/0
 16790 ;;		On exit  : 0/0
 16791 ;;		Unchanged: 0/0
 16792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16797 ;;Total ram usage:        0 bytes
 16798 ;; Hardware stack levels used:    1
 16799 ;; Hardware stack levels required when called:    3
 16800 ;; This function calls:
 16801 ;;		_TMR2_CallBack
 16802 ;; This function is called by:
 16803 ;;		_INTERRUPT_InterruptManager
 16804 ;; This function uses a non-reentrant model
 16805 ;;
 16806                           
 16807                           
 16808                           ;psect for function _TMR2_ISR
 16809  12AF                     _TMR2_ISR:
 16810  12AF                     i1l4626:	
 16811                           ;incstack = 0
 16812                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 16813                           
 16814                           
 16815                           ;tmr2.c: 169: PIR4bits.TMR2IF = 0;
 16816  12AF  002E               	movlb	14	; select bank14
 16817  12B0  1090               	bcf	16,1	;volatile
 16818  12B1                     i1l4628:
 16819                           
 16820                           ;tmr2.c: 173: TMR2_CallBack();
 16821  12B1  3193  2330  3192   	fcall	_TMR2_CallBack
 16822  12B4                     i1l1262:
 16823  12B4  0008               	return
 16824  12B5                     __end_of_TMR2_ISR:
 16825                           
 16826                           	psect	text47
 16827  1330                     __ptext47:	
 16828 ;; *************** function _TMR2_CallBack *****************
 16829 ;; Defined at:
 16830 ;;		line 176 in file "mcc_generated_files/tmr2.c"
 16831 ;; Parameters:    Size  Location     Type
 16832 ;;		None
 16833 ;; Auto vars:     Size  Location     Type
 16834 ;;		None
 16835 ;; Return value:  Size  Location     Type
 16836 ;;                  1    wreg      void 
 16837 ;; Registers used:
 16838 ;;		wreg, status,2, status,0, pclath, cstack
 16839 ;; Tracked objects:
 16840 ;;		On entry : 0/0
 16841 ;;		On exit  : 0/0
 16842 ;;		Unchanged: 0/0
 16843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16848 ;;Total ram usage:        0 bytes
 16849 ;; Hardware stack levels used:    1
 16850 ;; Hardware stack levels required when called:    2
 16851 ;; This function calls:
 16852 ;;		Absolute function
 16853 ;;		_TMR2_DefaultInterruptHandler
 16854 ;;		_TMR2_callback
 16855 ;; This function is called by:
 16856 ;;		_TMR2_ISR
 16857 ;; This function uses a non-reentrant model
 16858 ;;
 16859                           
 16860                           
 16861                           ;psect for function _TMR2_CallBack
 16862  1330                     _TMR2_CallBack:
 16863  1330                     i1l4588:	
 16864                           ;incstack = 0
 16865                           ; Regs used in _TMR2_CallBack: [wreg+status,2+status,0+pclath+cstack]
 16866                           
 16867                           
 16868                           ;tmr2.c: 180: if(TMR2_InterruptHandler)
 16869  1330  0021               	movlb	1	; select bank1
 16870  1331  083E               	movf	_TMR2_InterruptHandler^(0+128),w
 16871  1332  043F               	iorwf	(_TMR2_InterruptHandler+1)^(0+128),w
 16872  1333  1903               	btfsc	3,2
 16873  1334  2B36               	goto	u339_21
 16874  1335  2B37               	goto	u339_20
 16875  1336                     u339_21:
 16876  1336  2B3C               	goto	i1l1266
 16877  1337                     u339_20:
 16878  1337                     i1l4590:
 16879                           
 16880                           ;tmr2.c: 181: {;tmr2.c: 182: TMR2_InterruptHandler();
 16881  1337  083F               	movf	(_TMR2_InterruptHandler+1)^(0+128),w
 16882  1338  008A               	movwf	10
 16883  1339  083E               	movf	_TMR2_InterruptHandler^(0+128),w
 16884  133A  000A               	callw
 16885  133B  3193               	pagesel	$
 16886  133C                     i1l1266:
 16887  133C  0008               	return
 16888  133D                     __end_of_TMR2_CallBack:
 16889                           
 16890                           	psect	text48
 16891  0002                     __ptext48:	
 16892 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 16893 ;; Defined at:
 16894 ;;		line 190 in file "mcc_generated_files/tmr2.c"
 16895 ;; Parameters:    Size  Location     Type
 16896 ;;		None
 16897 ;; Auto vars:     Size  Location     Type
 16898 ;;		None
 16899 ;; Return value:  Size  Location     Type
 16900 ;;                  1    wreg      void 
 16901 ;; Registers used:
 16902 ;;		None
 16903 ;; Tracked objects:
 16904 ;;		On entry : 0/0
 16905 ;;		On exit  : 0/0
 16906 ;;		Unchanged: 0/0
 16907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16912 ;;Total ram usage:        0 bytes
 16913 ;; Hardware stack levels used:    1
 16914 ;; This function calls:
 16915 ;;		Nothing
 16916 ;; This function is called by:
 16917 ;;		_TMR2_Initialize
 16918 ;;		_TMR2_CallBack
 16919 ;; This function uses a non-reentrant model
 16920 ;;
 16921                           
 16922                           
 16923                           ;psect for function _TMR2_DefaultInterruptHandler
 16924  0002                     _TMR2_DefaultInterruptHandler:
 16925  0002                     i1l1272:	
 16926                           ;incstack = 0
 16927                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 16928                           
 16929  0002  0008               	return
 16930  0003                     __end_of_TMR2_DefaultInterruptHandler:
 16931                           
 16932                           	psect	text49
 16933  14E8                     __ptext49:	
 16934 ;; *************** function _TMR2_callback *****************
 16935 ;; Defined at:
 16936 ;;		line 418 in file "main.c"
 16937 ;; Parameters:    Size  Location     Type
 16938 ;;		None
 16939 ;; Auto vars:     Size  Location     Type
 16940 ;;		None
 16941 ;; Return value:  Size  Location     Type
 16942 ;;                  1    wreg      void 
 16943 ;; Registers used:
 16944 ;;		wreg, status,2, status,0, pclath, cstack
 16945 ;; Tracked objects:
 16946 ;;		On entry : 0/0
 16947 ;;		On exit  : 0/0
 16948 ;;		Unchanged: 0/0
 16949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16954 ;;Total ram usage:        0 bytes
 16955 ;; Hardware stack levels used:    1
 16956 ;; Hardware stack levels required when called:    1
 16957 ;; This function calls:
 16958 ;;		_PWM6_LoadDutyValue
 16959 ;;		i1___lwmod
 16960 ;; This function is called by:
 16961 ;;		_main
 16962 ;;		_TMR2_CallBack
 16963 ;; This function uses a non-reentrant model
 16964 ;;
 16965                           
 16966                           
 16967                           ;psect for function _TMR2_callback
 16968  14E8                     _TMR2_callback:
 16969  14E8                     i1l4204:	
 16970                           ;incstack = 0
 16971                           ; Regs used in _TMR2_callback: [wreg+status,2+status,0+pclath+cstack]
 16972                           
 16973                           
 16974                           ;main.c: 419: if (ctl != 0){
 16975  14E8  0021               	movlb	1	; select bank1
 16976  14E9  0828               	movf	_ctl^(0+128),w
 16977  14EA  1903               	btfsc	3,2
 16978  14EB  2CED               	goto	u284_21
 16979  14EC  2CEE               	goto	u284_20
 16980  14ED                     u284_21:
 16981  14ED  2D09               	goto	i1l649
 16982  14EE                     u284_20:
 16983  14EE                     i1l4206:
 16984                           
 16985                           ;main.c: 420: PWM_DUTY += 20;
 16986  14EE  3014               	movlw	20
 16987  14EF  07A0               	addwf	_PWM_DUTY^(0+128),f
 16988  14F0  3000               	movlw	0
 16989  14F1  3DA1               	addwfc	(_PWM_DUTY+1)^(0+128),f
 16990  14F2                     i1l4208:
 16991                           
 16992                           ;main.c: 422: PWM_DUTY = (PWM_DUTY % 500);
 16993  14F2  30F4               	movlw	244
 16994  14F3  00F0               	movwf	i1___lwmod@divisor
 16995  14F4  3001               	movlw	1
 16996  14F5  00F1               	movwf	i1___lwmod@divisor+1
 16997  14F6  0821               	movf	(_PWM_DUTY+1)^(0+128),w
 16998  14F7  00F3               	movwf	i1___lwmod@dividend+1
 16999  14F8  0820               	movf	_PWM_DUTY^(0+128),w
 17000  14F9  00F2               	movwf	i1___lwmod@dividend
 17001  14FA  3195  2551  3194   	fcall	i1___lwmod
 17002  14FD  0871               	movf	?i1___lwmod+1,w
 17003  14FE  0021               	movlb	1	; select bank1
 17004  14FF  00A1               	movwf	(_PWM_DUTY+1)^(0+128)
 17005  1500  0870               	movf	?i1___lwmod,w
 17006  1501  00A0               	movwf	_PWM_DUTY^(0+128)
 17007  1502                     i1l4210:
 17008                           
 17009                           ;main.c: 423: PWM6_LoadDutyValue(PWM_DUTY);
 17010  1502  0821               	movf	(_PWM_DUTY+1)^(0+128),w
 17011  1503  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
 17012  1504  0820               	movf	_PWM_DUTY^(0+128),w
 17013  1505  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
 17014  1506  3193  23E9  3194   	fcall	_PWM6_LoadDutyValue
 17015  1509                     i1l649:
 17016  1509  0008               	return
 17017  150A                     __end_of_TMR2_callback:
 17018                           
 17019                           	psect	text50
 17020  13E9                     __ptext50:	
 17021 ;; *************** function _PWM6_LoadDutyValue *****************
 17022 ;; Defined at:
 17023 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 17024 ;; Parameters:    Size  Location     Type
 17025 ;;  dutyValue       2    0[COMMON] unsigned int 
 17026 ;; Auto vars:     Size  Location     Type
 17027 ;;		None
 17028 ;; Return value:  Size  Location     Type
 17029 ;;                  1    wreg      void 
 17030 ;; Registers used:
 17031 ;;		wreg, status,2, status,0
 17032 ;; Tracked objects:
 17033 ;;		On entry : 0/0
 17034 ;;		On exit  : 0/0
 17035 ;;		Unchanged: 0/0
 17036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17037 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17039 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17040 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17041 ;;Total ram usage:        4 bytes
 17042 ;; Hardware stack levels used:    1
 17043 ;; This function calls:
 17044 ;;		Nothing
 17045 ;; This function is called by:
 17046 ;;		_TMR2_callback
 17047 ;; This function uses a non-reentrant model
 17048 ;;
 17049                           
 17050                           
 17051                           ;psect for function _PWM6_LoadDutyValue
 17052  13E9                     _PWM6_LoadDutyValue:
 17053  13E9                     i1l4032:	
 17054                           ;incstack = 0
 17055                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 17056                           
 17057                           
 17058                           ;pwm6.c: 77: PWM6DCH = (dutyValue & 0x03FC)>>2;
 17059  13E9  0871               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 17060  13EA  00F3               	movwf	??_PWM6_LoadDutyValue+1
 17061  13EB  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 17062  13EC  00F2               	movwf	??_PWM6_LoadDutyValue
 17063  13ED  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 17064  13EE  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 17065  13EF  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 17066  13F0  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 17067  13F1  0872               	movf	??_PWM6_LoadDutyValue,w
 17068  13F2  0027               	movlb	7	; select bank7
 17069  13F3  008D               	movwf	13	;volatile
 17070                           
 17071                           ;pwm6.c: 80: PWM6DCL = (dutyValue & 0x0003)<<6;
 17072  13F4  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 17073  13F5  3903               	andlw	3
 17074  13F6  00F2               	movwf	??_PWM6_LoadDutyValue
 17075  13F7  3005               	movlw	5
 17076  13F8                     u253_25:
 17077  13F8  35F2               	lslf	??_PWM6_LoadDutyValue,f
 17078  13F9  3EFF               	addlw	-1
 17079  13FA  1D03               	skipz
 17080  13FB  2BF8               	goto	u253_25
 17081  13FC  3572               	lslf	??_PWM6_LoadDutyValue,w
 17082  13FD  008C               	movwf	12	;volatile
 17083  13FE                     i1l1186:
 17084  13FE  0008               	return
 17085  13FF                     __end_of_PWM6_LoadDutyValue:
 17086                           
 17087                           	psect	text51
 17088  1441                     __ptext51:	
 17089 ;; *************** function _TMR0_ISR *****************
 17090 ;; Defined at:
 17091 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 17092 ;; Parameters:    Size  Location     Type
 17093 ;;		None
 17094 ;; Auto vars:     Size  Location     Type
 17095 ;;		None
 17096 ;; Return value:  Size  Location     Type
 17097 ;;                  1    wreg      void 
 17098 ;; Registers used:
 17099 ;;		wreg, status,2, status,0, pclath, cstack
 17100 ;; Tracked objects:
 17101 ;;		On entry : 0/0
 17102 ;;		On exit  : 0/0
 17103 ;;		Unchanged: 0/0
 17104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17109 ;;Total ram usage:        0 bytes
 17110 ;; Hardware stack levels used:    1
 17111 ;; Hardware stack levels required when called:    4
 17112 ;; This function calls:
 17113 ;;		_TMR0_CallBack
 17114 ;; This function is called by:
 17115 ;;		_INTERRUPT_InterruptManager
 17116 ;; This function uses a non-reentrant model
 17117 ;;
 17118                           
 17119                           
 17120                           ;psect for function _TMR0_ISR
 17121  1441                     _TMR0_ISR:
 17122  1441                     i1l4618:	
 17123                           ;incstack = 0
 17124                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 17125                           
 17126                           
 17127                           ;tmr0.c: 123: static volatile uint16_t CountCallBack = 0;;tmr0.c: 126: PIR0bits.TMR0IF =
      +                           0;
 17128  1441  002E               	movlb	14	; select bank14
 17129  1442  128C               	bcf	12,5	;volatile
 17130  1443                     i1l4620:
 17131                           
 17132                           ;tmr0.c: 128: if (++CountCallBack >= 244)
 17133  1443  3001               	movlw	1
 17134  1444  0021               	movlb	1	; select bank1
 17135  1445  07A2               	addwf	TMR0_ISR@CountCallBack^(0+128),f	;volatile
 17136  1446  3000               	movlw	0
 17137  1447  3DA3               	addwfc	(TMR0_ISR@CountCallBack+1)^(0+128),f	;volatile
 17138  1448  3000               	movlw	0
 17139  1449  0223               	subwf	(TMR0_ISR@CountCallBack+1)^(0+128),w	;volatile
 17140  144A  30F4               	movlw	244
 17141  144B  1903               	skipnz
 17142  144C  0222               	subwf	TMR0_ISR@CountCallBack^(0+128),w	;volatile
 17143  144D  1C03               	skipc
 17144  144E  2C50               	goto	u341_21
 17145  144F  2C51               	goto	u341_20
 17146  1450                     u341_21:
 17147  1450  2C57               	goto	i1l398
 17148  1451                     u341_20:
 17149  1451                     i1l4622:
 17150                           
 17151                           ;tmr0.c: 129: {;tmr0.c: 131: TMR0_CallBack();
 17152  1451  3193  2323  3194   	fcall	_TMR0_CallBack
 17153  1454                     i1l4624:
 17154                           
 17155                           ;tmr0.c: 134: CountCallBack = 0;
 17156  1454  0021               	movlb	1	; select bank1
 17157  1455  01A2               	clrf	TMR0_ISR@CountCallBack^(0+128)	;volatile
 17158  1456  01A3               	clrf	(TMR0_ISR@CountCallBack+1)^(0+128)	;volatile
 17159  1457                     i1l398:
 17160  1457  0008               	return
 17161  1458                     __end_of_TMR0_ISR:
 17162                           
 17163                           	psect	text52
 17164  1323                     __ptext52:	
 17165 ;; *************** function _TMR0_CallBack *****************
 17166 ;; Defined at:
 17167 ;;		line 140 in file "mcc_generated_files/tmr0.c"
 17168 ;; Parameters:    Size  Location     Type
 17169 ;;		None
 17170 ;; Auto vars:     Size  Location     Type
 17171 ;;		None
 17172 ;; Return value:  Size  Location     Type
 17173 ;;                  1    wreg      void 
 17174 ;; Registers used:
 17175 ;;		wreg, status,2, status,0, pclath, cstack
 17176 ;; Tracked objects:
 17177 ;;		On entry : 0/0
 17178 ;;		On exit  : 0/0
 17179 ;;		Unchanged: 0/0
 17180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17185 ;;Total ram usage:        0 bytes
 17186 ;; Hardware stack levels used:    1
 17187 ;; Hardware stack levels required when called:    3
 17188 ;; This function calls:
 17189 ;;		Absolute function
 17190 ;;		_TMR0_DefaultInterruptHandler
 17191 ;;		_TMR0_callback
 17192 ;; This function is called by:
 17193 ;;		_TMR0_ISR
 17194 ;; This function uses a non-reentrant model
 17195 ;;
 17196                           
 17197                           
 17198                           ;psect for function _TMR0_CallBack
 17199  1323                     _TMR0_CallBack:
 17200  1323                     i1l4406:	
 17201                           ;incstack = 0
 17202                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
 17203                           
 17204                           
 17205                           ;tmr0.c: 144: if(TMR0_InterruptHandler)
 17206  1323  0021               	movlb	1	; select bank1
 17207  1324  0840               	movf	_TMR0_InterruptHandler^(0+128),w
 17208  1325  0441               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 17209  1326  1903               	btfsc	3,2
 17210  1327  2B29               	goto	u312_21
 17211  1328  2B2A               	goto	u312_20
 17212  1329                     u312_21:
 17213  1329  2B2F               	goto	i1l402
 17214  132A                     u312_20:
 17215  132A                     i1l4408:
 17216                           
 17217                           ;tmr0.c: 145: {;tmr0.c: 146: TMR0_InterruptHandler();
 17218  132A  0841               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 17219  132B  008A               	movwf	10
 17220  132C  0840               	movf	_TMR0_InterruptHandler^(0+128),w
 17221  132D  000A               	callw
 17222  132E  3193               	pagesel	$
 17223  132F                     i1l402:
 17224  132F  0008               	return
 17225  1330                     __end_of_TMR0_CallBack:
 17226                           
 17227                           	psect	text53
 17228  0803                     __ptext53:	
 17229 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 17230 ;; Defined at:
 17231 ;;		line 154 in file "mcc_generated_files/tmr0.c"
 17232 ;; Parameters:    Size  Location     Type
 17233 ;;		None
 17234 ;; Auto vars:     Size  Location     Type
 17235 ;;		None
 17236 ;; Return value:  Size  Location     Type
 17237 ;;                  1    wreg      void 
 17238 ;; Registers used:
 17239 ;;		None
 17240 ;; Tracked objects:
 17241 ;;		On entry : 0/0
 17242 ;;		On exit  : 0/0
 17243 ;;		Unchanged: 0/0
 17244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17249 ;;Total ram usage:        0 bytes
 17250 ;; Hardware stack levels used:    1
 17251 ;; This function calls:
 17252 ;;		Nothing
 17253 ;; This function is called by:
 17254 ;;		_TMR0_Initialize
 17255 ;;		_TMR0_CallBack
 17256 ;; This function uses a non-reentrant model
 17257 ;;
 17258                           
 17259                           
 17260                           ;psect for function _TMR0_DefaultInterruptHandler
 17261  0803                     _TMR0_DefaultInterruptHandler:
 17262  0803                     i1l408:	
 17263                           ;incstack = 0
 17264                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 17265                           
 17266  0803  0008               	return
 17267  0804                     __end_of_TMR0_DefaultInterruptHandler:
 17268                           
 17269                           	psect	text54
 17270  16DA                     __ptext54:	
 17271 ;; *************** function _TMR0_callback *****************
 17272 ;; Defined at:
 17273 ;;		line 429 in file "main.c"
 17274 ;; Parameters:    Size  Location     Type
 17275 ;;		None
 17276 ;; Auto vars:     Size  Location     Type
 17277 ;;		None
 17278 ;; Return value:  Size  Location     Type
 17279 ;;                  1    wreg      void 
 17280 ;; Registers used:
 17281 ;;		wreg, status,2, status,0, pclath, cstack
 17282 ;; Tracked objects:
 17283 ;;		On entry : 0/0
 17284 ;;		On exit  : 0/0
 17285 ;;		Unchanged: 0/0
 17286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17289 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17290 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17291 ;;Total ram usage:        2 bytes
 17292 ;; Hardware stack levels used:    1
 17293 ;; Hardware stack levels required when called:    2
 17294 ;; This function calls:
 17295 ;;		___awmod
 17296 ;;		___lbmod
 17297 ;;		i1___lwmod
 17298 ;;		i1_save_vars
 17299 ;; This function is called by:
 17300 ;;		_main
 17301 ;;		_TMR0_CallBack
 17302 ;; This function uses a non-reentrant model
 17303 ;;
 17304                           
 17305                           
 17306                           ;psect for function _TMR0_callback
 17307  16DA                     _TMR0_callback:
 17308  16DA                     i1l4212:	
 17309                           ;incstack = 0
 17310                           ; Regs used in _TMR0_callback: [wreg+status,2+status,0+pclath+cstack]
 17311                           
 17312                           
 17313                           ;main.c: 430: timer_flag++;
 17314  16DA  3001               	movlw	1
 17315  16DB  07F9               	addwf	_timer_flag,f	;volatile
 17316  16DC  3000               	movlw	0
 17317  16DD  3DFA               	addwfc	_timer_flag+1,f	;volatile
 17318  16DE                     i1l4214:
 17319  16DE  1003               	clrc
 17320  16DF  0020               	movlb	0	; select bank0
 17321  16E0  1F96               	btfss	22,7	;volatile
 17322  16E1  1403               	setc
 17323  16E2  1803               	btfsc	3,0
 17324  16E3  2EE5               	goto	u285_21
 17325  16E4  2EE8               	goto	u285_20
 17326  16E5                     u285_21:
 17327  16E5  0020               	movlb	0	; select bank0
 17328  16E6  1796               	bsf	22,7	;volatile
 17329  16E7  2EEA               	goto	u286_24
 17330  16E8                     u285_20:
 17331  16E8  0020               	movlb	0	; select bank0
 17332  16E9  1396               	bcf	22,7	;volatile
 17333  16EA                     u286_24:
 17334  16EA                     i1l4216:
 17335                           
 17336                           ;main.c: 432: if(timer_flag % 60 == 0){
 17337  16EA  303C               	movlw	60
 17338  16EB  00F0               	movwf	i1___lwmod@divisor
 17339  16EC  3000               	movlw	0
 17340  16ED  00F1               	movwf	i1___lwmod@divisor+1
 17341  16EE  087A               	movf	_timer_flag+1,w	;volatile
 17342  16EF  00F3               	movwf	i1___lwmod@dividend+1
 17343  16F0  0879               	movf	_timer_flag,w	;volatile
 17344  16F1  00F2               	movwf	i1___lwmod@dividend
 17345  16F2  3195  2551  3196   	fcall	i1___lwmod
 17346  16F5  0870               	movf	?i1___lwmod,w
 17347  16F6  0471               	iorwf	?i1___lwmod+1,w
 17348  16F7  1D03               	btfss	3,2
 17349  16F8  2EFA               	goto	u287_21
 17350  16F9  2EFB               	goto	u287_20
 17351  16FA                     u287_21:
 17352  16FA  2F00               	goto	i1l4220
 17353  16FB                     u287_20:
 17354  16FB                     i1l4218:
 17355                           
 17356                           ;main.c: 433: CLKM++;
 17357  16FB  3001               	movlw	1
 17358  16FC  00F7               	movwf	??_TMR0_callback
 17359  16FD  0877               	movf	??_TMR0_callback,w
 17360  16FE  0020               	movlb	0	; select bank0
 17361  16FF  07EF               	addwf	_CLKM,f
 17362  1700                     i1l4220:
 17363                           
 17364                           ;main.c: 435: };main.c: 436: if(CLKM % 60 == 0 && CLKM != 0){
 17365  1700  303C               	movlw	60
 17366  1701  00F0               	movwf	___awmod@divisor
 17367  1702  3000               	movlw	0
 17368  1703  00F1               	movwf	___awmod@divisor+1
 17369  1704  0020               	movlb	0	; select bank0
 17370  1705  086F               	movf	_CLKM,w
 17371  1706  00F7               	movwf	??_TMR0_callback
 17372  1707  01F8               	clrf	??_TMR0_callback+1
 17373  1708  0877               	movf	??_TMR0_callback,w
 17374  1709  00F2               	movwf	___awmod@dividend
 17375  170A  0878               	movf	??_TMR0_callback+1,w
 17376  170B  00F3               	movwf	___awmod@dividend+1
 17377  170C  3196  2634  3196   	fcall	___awmod
 17378  170F  0870               	movf	?___awmod,w
 17379  1710  0471               	iorwf	?___awmod+1,w
 17380  1711  1D03               	btfss	3,2
 17381  1712  2F14               	goto	u288_21
 17382  1713  2F15               	goto	u288_20
 17383  1714                     u288_21:
 17384  1714  2F2F               	goto	i1l656
 17385  1715                     u288_20:
 17386  1715                     i1l4222:
 17387  1715  0020               	movlb	0	; select bank0
 17388  1716  086F               	movf	_CLKM,w
 17389  1717  1903               	btfsc	3,2
 17390  1718  2F1A               	goto	u289_21
 17391  1719  2F1B               	goto	u289_20
 17392  171A                     u289_21:
 17393  171A  2F2F               	goto	i1l656
 17394  171B                     u289_20:
 17395  171B                     i1l4224:
 17396                           
 17397                           ;main.c: 437: CLKH++;
 17398  171B  3001               	movlw	1
 17399  171C  00F7               	movwf	??_TMR0_callback
 17400  171D  0877               	movf	??_TMR0_callback,w
 17401  171E  07FB               	addwf	_CLKH,f
 17402  171F                     i1l4226:
 17403                           
 17404                           ;main.c: 438: CLKH %= 24;
 17405  171F  3018               	movlw	24
 17406  1720  00F7               	movwf	??_TMR0_callback
 17407  1721  0877               	movf	??_TMR0_callback,w
 17408  1722  00F0               	movwf	___lbmod@divisor
 17409  1723  087B               	movf	_CLKH,w
 17410  1724  3195  250A  3196   	fcall	___lbmod
 17411  1727  00F8               	movwf	??_TMR0_callback+1
 17412  1728  0878               	movf	??_TMR0_callback+1,w
 17413  1729  00FB               	movwf	_CLKH
 17414  172A                     i1l4228:
 17415                           
 17416                           ;main.c: 439: CLKM = 0;
 17417  172A  0020               	movlb	0	; select bank0
 17418  172B  01EF               	clrf	_CLKM
 17419  172C                     i1l4230:
 17420                           
 17421                           ;main.c: 441: save_vars();
 17422  172C  3188  202F  3196   	fcall	i1_save_vars
 17423  172F                     i1l656:
 17424  172F  0008               	return
 17425  1730                     __end_of_TMR0_callback:
 17426                           
 17427                           	psect	text55
 17428  082F                     __ptext55:	
 17429 ;; *************** function i1_save_vars *****************
 17430 ;; Defined at:
 17431 ;;		line 446 in file "main.c"
 17432 ;; Parameters:    Size  Location     Type
 17433 ;;		None
 17434 ;; Auto vars:     Size  Location     Type
 17435 ;;  first           2    5[COMMON] unsigned int 
 17436 ;; Return value:  Size  Location     Type
 17437 ;;                  1    wreg      void 
 17438 ;; Registers used:
 17439 ;;		wreg, status,2, status,0, pclath, cstack
 17440 ;; Tracked objects:
 17441 ;;		On entry : 0/0
 17442 ;;		On exit  : 0/0
 17443 ;;		Unchanged: 0/0
 17444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17446 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17447 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17448 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17449 ;;Total ram usage:        3 bytes
 17450 ;; Hardware stack levels used:    1
 17451 ;; Hardware stack levels required when called:    1
 17452 ;; This function calls:
 17453 ;;		i1_DATAEE_WriteByte
 17454 ;; This function is called by:
 17455 ;;		_TMR0_callback
 17456 ;; This function uses a non-reentrant model
 17457 ;;
 17458                           
 17459                           
 17460                           ;psect for function i1_save_vars
 17461  082F                     i1_save_vars:
 17462  082F                     i1l4126:	
 17463                           ;incstack = 0
 17464                           ; Regs used in i1_save_vars: [wreg+status,2+status,0+pclath+cstack]
 17465                           
 17466                           
 17467                           ;main.c: 447: uint16_t first = 0x7096;
 17468  082F  3096               	movlw	150
 17469  0830  00F5               	movwf	i1save_vars@first
 17470  0831  3070               	movlw	112
 17471  0832  00F6               	movwf	i1save_vars@first+1
 17472  0833                     i1l4128:
 17473                           
 17474                           ;main.c: 448: CSUM = PMON + TALA + ALAH + ALAM + ALAS + ALAT + ALAL + ALAF + CLKH + CLKM
      +                          ;
 17475  0833  0021               	movlb	1	; select bank1
 17476  0834  083D               	movf	_PMON^(0+128),w
 17477  0835  073C               	addwf	_TALA^(0+128),w
 17478  0836  077D               	addwf	_ALAH,w
 17479  0837  077C               	addwf	_ALAM,w
 17480  0838  072B               	addwf	_ALAS^(0+128),w
 17481  0839  073B               	addwf	_ALAT^(0+128),w
 17482  083A  073A               	addwf	_ALAL^(0+128),w
 17483  083B  072A               	addwf	_ALAF^(0+128),w
 17484  083C  077B               	addwf	_CLKH,w
 17485  083D  0020               	movlb	0	; select bank0
 17486  083E  076F               	addwf	_CLKM,w
 17487  083F  00F4               	movwf	??i1_save_vars
 17488  0840  0874               	movf	??i1_save_vars,w
 17489  0841  0021               	movlb	1	; select bank1
 17490  0842  00A9               	movwf	_CSUM^(0+128)
 17491  0843                     i1l4130:
 17492                           
 17493                           ;main.c: 450: DATAEE_WriteByte(first++,0xaa);
 17494  0843  3096               	movlw	150
 17495  0844  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 17496  0845  3070               	movlw	112
 17497  0846  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 17498  0847  30AA               	movlw	170
 17499  0848  00F4               	movwf	??i1_save_vars
 17500  0849  0874               	movf	??i1_save_vars,w
 17501  084A  00F2               	movwf	i1DATAEE_WriteByte@bData
 17502  084B  3187  27E2  3188   	fcall	i1_DATAEE_WriteByte
 17503  084E                     i1l4132:
 17504  084E  3001               	movlw	1
 17505  084F  07F5               	addwf	i1save_vars@first,f
 17506  0850  3000               	movlw	0
 17507  0851  3DF6               	addwfc	i1save_vars@first+1,f
 17508  0852                     i1l4134:
 17509                           
 17510                           ;main.c: 451: DATAEE_WriteByte(first++,PMON);
 17511  0852  0876               	movf	i1save_vars@first+1,w
 17512  0853  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 17513  0854  0875               	movf	i1save_vars@first,w
 17514  0855  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 17515  0856  0021               	movlb	1	; select bank1
 17516  0857  083D               	movf	_PMON^(0+128),w
 17517  0858  00F4               	movwf	??i1_save_vars
 17518  0859  0874               	movf	??i1_save_vars,w
 17519  085A  00F2               	movwf	i1DATAEE_WriteByte@bData
 17520  085B  3187  27E2  3188   	fcall	i1_DATAEE_WriteByte
 17521  085E                     i1l4136:
 17522  085E  3001               	movlw	1
 17523  085F  07F5               	addwf	i1save_vars@first,f
 17524  0860  3000               	movlw	0
 17525  0861  3DF6               	addwfc	i1save_vars@first+1,f
 17526  0862                     i1l4138:
 17527                           
 17528                           ;main.c: 452: DATAEE_WriteByte(first++,TALA);
 17529  0862  0876               	movf	i1save_vars@first+1,w
 17530  0863  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 17531  0864  0875               	movf	i1save_vars@first,w
 17532  0865  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 17533  0866  0021               	movlb	1	; select bank1
 17534  0867  083C               	movf	_TALA^(0+128),w
 17535  0868  00F4               	movwf	??i1_save_vars
 17536  0869  0874               	movf	??i1_save_vars,w
 17537  086A  00F2               	movwf	i1DATAEE_WriteByte@bData
 17538  086B  3187  27E2  3188   	fcall	i1_DATAEE_WriteByte
 17539  086E                     i1l4140:
 17540  086E  3001               	movlw	1
 17541  086F  07F5               	addwf	i1save_vars@first,f
 17542  0870  3000               	movlw	0
 17543  0871  3DF6               	addwfc	i1save_vars@first+1,f
 17544  0872                     i1l4142:
 17545                           
 17546                           ;main.c: 453: DATAEE_WriteByte(first++,ALAH);
 17547  0872  0876               	movf	i1save_vars@first+1,w
 17548  0873  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 17549  0874  0875               	movf	i1save_vars@first,w
 17550  0875  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 17551  0876  087D               	movf	_ALAH,w
 17552  0877  00F4               	movwf	??i1_save_vars
 17553  0878  0874               	movf	??i1_save_vars,w
 17554  0879  00F2               	movwf	i1DATAEE_WriteByte@bData
 17555  087A  3187  27E2  3188   	fcall	i1_DATAEE_WriteByte
 17556  087D                     i1l4144:
 17557  087D  3001               	movlw	1
 17558  087E  07F5               	addwf	i1save_vars@first,f
 17559  087F  3000               	movlw	0
 17560  0880  3DF6               	addwfc	i1save_vars@first+1,f
 17561  0881                     i1l4146:
 17562                           
 17563                           ;main.c: 454: DATAEE_WriteByte(first++,ALAM);
 17564  0881  0876               	movf	i1save_vars@first+1,w
 17565  0882  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 17566  0883  0875               	movf	i1save_vars@first,w
 17567  0884  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 17568  0885  087C               	movf	_ALAM,w
 17569  0886  00F4               	movwf	??i1_save_vars
 17570  0887  0874               	movf	??i1_save_vars,w
 17571  0888  00F2               	movwf	i1DATAEE_WriteByte@bData
 17572  0889  3187  27E2  3188   	fcall	i1_DATAEE_WriteByte
 17573  088C                     i1l4148:
 17574  088C  3001               	movlw	1
 17575  088D  07F5               	addwf	i1save_vars@first,f
 17576  088E  3000               	movlw	0
 17577  088F  3DF6               	addwfc	i1save_vars@first+1,f
 17578  0890                     i1l4150:
 17579                           
 17580                           ;main.c: 455: DATAEE_WriteByte(first++,ALAS);
 17581  0890  0876               	movf	i1save_vars@first+1,w
 17582  0891  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 17583  0892  0875               	movf	i1save_vars@first,w
 17584  0893  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 17585  0894  0021               	movlb	1	; select bank1
 17586  0895  082B               	movf	_ALAS^(0+128),w
 17587  0896  00F4               	movwf	??i1_save_vars
 17588  0897  0874               	movf	??i1_save_vars,w
 17589  0898  00F2               	movwf	i1DATAEE_WriteByte@bData
 17590  0899  3187  27E2  3188   	fcall	i1_DATAEE_WriteByte
 17591  089C                     i1l4152:
 17592  089C  3001               	movlw	1
 17593  089D  07F5               	addwf	i1save_vars@first,f
 17594  089E  3000               	movlw	0
 17595  089F  3DF6               	addwfc	i1save_vars@first+1,f
 17596  08A0                     i1l4154:
 17597                           
 17598                           ;main.c: 456: DATAEE_WriteByte(first++,ALAT);
 17599  08A0  0876               	movf	i1save_vars@first+1,w
 17600  08A1  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 17601  08A2  0875               	movf	i1save_vars@first,w
 17602  08A3  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 17603  08A4  0021               	movlb	1	; select bank1
 17604  08A5  083B               	movf	_ALAT^(0+128),w
 17605  08A6  00F4               	movwf	??i1_save_vars
 17606  08A7  0874               	movf	??i1_save_vars,w
 17607  08A8  00F2               	movwf	i1DATAEE_WriteByte@bData
 17608  08A9  3187  27E2  3188   	fcall	i1_DATAEE_WriteByte
 17609  08AC                     i1l4156:
 17610  08AC  3001               	movlw	1
 17611  08AD  07F5               	addwf	i1save_vars@first,f
 17612  08AE  3000               	movlw	0
 17613  08AF  3DF6               	addwfc	i1save_vars@first+1,f
 17614  08B0                     i1l4158:
 17615                           
 17616                           ;main.c: 457: DATAEE_WriteByte(first++,ALAL);
 17617  08B0  0876               	movf	i1save_vars@first+1,w
 17618  08B1  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 17619  08B2  0875               	movf	i1save_vars@first,w
 17620  08B3  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 17621  08B4  0021               	movlb	1	; select bank1
 17622  08B5  083A               	movf	_ALAL^(0+128),w
 17623  08B6  00F4               	movwf	??i1_save_vars
 17624  08B7  0874               	movf	??i1_save_vars,w
 17625  08B8  00F2               	movwf	i1DATAEE_WriteByte@bData
 17626  08B9  3187  27E2  3188   	fcall	i1_DATAEE_WriteByte
 17627  08BC                     i1l4160:
 17628  08BC  3001               	movlw	1
 17629  08BD  07F5               	addwf	i1save_vars@first,f
 17630  08BE  3000               	movlw	0
 17631  08BF  3DF6               	addwfc	i1save_vars@first+1,f
 17632  08C0                     i1l4162:
 17633                           
 17634                           ;main.c: 458: DATAEE_WriteByte(first++,ALAF);
 17635  08C0  0876               	movf	i1save_vars@first+1,w
 17636  08C1  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 17637  08C2  0875               	movf	i1save_vars@first,w
 17638  08C3  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 17639  08C4  0021               	movlb	1	; select bank1
 17640  08C5  082A               	movf	_ALAF^(0+128),w
 17641  08C6  00F4               	movwf	??i1_save_vars
 17642  08C7  0874               	movf	??i1_save_vars,w
 17643  08C8  00F2               	movwf	i1DATAEE_WriteByte@bData
 17644  08C9  3187  27E2  3188   	fcall	i1_DATAEE_WriteByte
 17645  08CC                     i1l4164:
 17646  08CC  3001               	movlw	1
 17647  08CD  07F5               	addwf	i1save_vars@first,f
 17648  08CE  3000               	movlw	0
 17649  08CF  3DF6               	addwfc	i1save_vars@first+1,f
 17650  08D0                     i1l4166:
 17651                           
 17652                           ;main.c: 459: DATAEE_WriteByte(first++,CLKH);
 17653  08D0  0876               	movf	i1save_vars@first+1,w
 17654  08D1  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 17655  08D2  0875               	movf	i1save_vars@first,w
 17656  08D3  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 17657  08D4  087B               	movf	_CLKH,w
 17658  08D5  00F4               	movwf	??i1_save_vars
 17659  08D6  0874               	movf	??i1_save_vars,w
 17660  08D7  00F2               	movwf	i1DATAEE_WriteByte@bData
 17661  08D8  3187  27E2  3188   	fcall	i1_DATAEE_WriteByte
 17662  08DB                     i1l4168:
 17663  08DB  3001               	movlw	1
 17664  08DC  07F5               	addwf	i1save_vars@first,f
 17665  08DD  3000               	movlw	0
 17666  08DE  3DF6               	addwfc	i1save_vars@first+1,f
 17667  08DF                     i1l4170:
 17668                           
 17669                           ;main.c: 460: DATAEE_WriteByte(first++,CLKM);
 17670  08DF  0876               	movf	i1save_vars@first+1,w
 17671  08E0  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 17672  08E1  0875               	movf	i1save_vars@first,w
 17673  08E2  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 17674  08E3  0020               	movlb	0	; select bank0
 17675  08E4  086F               	movf	_CLKM,w
 17676  08E5  00F4               	movwf	??i1_save_vars
 17677  08E6  0874               	movf	??i1_save_vars,w
 17678  08E7  00F2               	movwf	i1DATAEE_WriteByte@bData
 17679  08E8  3187  27E2  3188   	fcall	i1_DATAEE_WriteByte
 17680  08EB                     i1l4172:
 17681  08EB  3001               	movlw	1
 17682  08EC  07F5               	addwf	i1save_vars@first,f
 17683  08ED  3000               	movlw	0
 17684  08EE  3DF6               	addwfc	i1save_vars@first+1,f
 17685  08EF                     i1l4174:
 17686                           
 17687                           ;main.c: 461: DATAEE_WriteByte(first++,CSUM);
 17688  08EF  0876               	movf	i1save_vars@first+1,w
 17689  08F0  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 17690  08F1  0875               	movf	i1save_vars@first,w
 17691  08F2  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 17692  08F3  0021               	movlb	1	; select bank1
 17693  08F4  0829               	movf	_CSUM^(0+128),w
 17694  08F5  00F4               	movwf	??i1_save_vars
 17695  08F6  0874               	movf	??i1_save_vars,w
 17696  08F7  00F2               	movwf	i1DATAEE_WriteByte@bData
 17697  08F8  3187  27E2  3188   	fcall	i1_DATAEE_WriteByte
 17698  08FB                     i1l4176:
 17699  08FB  3001               	movlw	1
 17700  08FC  07F5               	addwf	i1save_vars@first,f
 17701  08FD  3000               	movlw	0
 17702  08FE  3DF6               	addwfc	i1save_vars@first+1,f
 17703  08FF                     i1l659:
 17704  08FF  0008               	return
 17705  0900                     __end_ofi1_save_vars:
 17706                           
 17707                           	psect	text56
 17708  07E2                     __ptext56:	
 17709 ;; *************** function i1_DATAEE_WriteByte *****************
 17710 ;; Defined at:
 17711 ;;		line 180 in file "mcc_generated_files/memory.c"
 17712 ;; Parameters:    Size  Location     Type
 17713 ;;  bAdd            2    0[COMMON] unsigned int 
 17714 ;;  bData           1    2[COMMON] unsigned char 
 17715 ;; Auto vars:     Size  Location     Type
 17716 ;;  GIEBitValue     1    3[COMMON] unsigned char 
 17717 ;; Return value:  Size  Location     Type
 17718 ;;                  1    wreg      void 
 17719 ;; Registers used:
 17720 ;;		wreg, status,2, status,0
 17721 ;; Tracked objects:
 17722 ;;		On entry : 0/0
 17723 ;;		On exit  : 0/0
 17724 ;;		Unchanged: 0/0
 17725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17726 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17727 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17729 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17730 ;;Total ram usage:        4 bytes
 17731 ;; Hardware stack levels used:    1
 17732 ;; This function calls:
 17733 ;;		Nothing
 17734 ;; This function is called by:
 17735 ;;		i1_save_vars
 17736 ;; This function uses a non-reentrant model
 17737 ;;
 17738                           
 17739                           
 17740                           ;psect for function i1_DATAEE_WriteByte
 17741  07E2                     i1_DATAEE_WriteByte:
 17742  07E2                     i1l4012:	
 17743                           ;incstack = 0
 17744                           ; Regs used in i1_DATAEE_WriteByte: [wreg+status,2+status,0]
 17745                           
 17746                           
 17747                           ;memory.c: 182: uint8_t GIEBitValue = INTCONbits.GIE;
 17748  07E2  3000               	movlw	0
 17749  07E3  1B8B               	btfsc	11,7	;volatile
 17750  07E4  3001               	movlw	1
 17751  07E5  00F3               	movwf	i1DATAEE_WriteByte@GIEBitValue
 17752                           
 17753                           ;memory.c: 184: NVMADRH = ((bAdd >> 8) & 0xFF);
 17754  07E6  0871               	movf	i1DATAEE_WriteByte@bAdd+1,w
 17755  07E7  0030               	movlb	16	; select bank16
 17756  07E8  009B               	movwf	27	;volatile
 17757  07E9                     i1l4014:
 17758                           
 17759                           ;memory.c: 185: NVMADRL = (bAdd & 0xFF);
 17760  07E9  0870               	movf	i1DATAEE_WriteByte@bAdd,w
 17761  07EA  009A               	movwf	26	;volatile
 17762  07EB                     i1l4016:
 17763                           
 17764                           ;memory.c: 186: NVMDATL = bData;
 17765  07EB  0872               	movf	i1DATAEE_WriteByte@bData,w
 17766  07EC  009C               	movwf	28	;volatile
 17767  07ED                     i1l4018:
 17768                           
 17769                           ;memory.c: 187: NVMCON1bits.NVMREGS = 1;
 17770  07ED  171E               	bsf	30,6	;volsfr
 17771  07EE                     i1l4020:
 17772                           
 17773                           ;memory.c: 188: NVMCON1bits.WREN = 1;
 17774  07EE  151E               	bsf	30,2	;volsfr
 17775  07EF                     i1l4022:
 17776                           
 17777                           ;memory.c: 189: INTCONbits.GIE = 0;
 17778  07EF  138B               	bcf	11,7	;volatile
 17779  07F0                     i1l4024:
 17780                           
 17781                           ;memory.c: 190: NVMCON2 = 0x55;
 17782  07F0  3055               	movlw	85
 17783  07F1  009F               	movwf	31	;volsfr
 17784  07F2                     i1l4026:
 17785                           
 17786                           ;memory.c: 191: NVMCON2 = 0xAA;
 17787  07F2  30AA               	movlw	170
 17788  07F3  009F               	movwf	31	;volsfr
 17789  07F4                     i1l4028:
 17790                           
 17791                           ;memory.c: 192: NVMCON1bits.WR = 1;
 17792  07F4  149E               	bsf	30,1	;volsfr
 17793  07F5                     i1l449:	
 17794                           ;memory.c: 195: {
 17795                           
 17796  07F5  189E               	btfsc	30,1	;volsfr
 17797  07F6  2FF8               	goto	u252_21
 17798  07F7  2FF9               	goto	u252_20
 17799  07F8                     u252_21:
 17800  07F8  2FF5               	goto	i1l449
 17801  07F9                     u252_20:
 17802  07F9                     i1l451:
 17803                           
 17804                           ;memory.c: 196: };memory.c: 198: NVMCON1bits.WREN = 0;
 17805  07F9  111E               	bcf	30,2	;volsfr
 17806  07FA                     i1l4030:
 17807                           
 17808                           ;memory.c: 199: INTCONbits.GIE = GIEBitValue;
 17809  07FA  0C73               	rrf	i1DATAEE_WriteByte@GIEBitValue,w
 17810  07FB  1C03               	skipc
 17811  07FC  138B               	bcf	11,7	;volatile
 17812  07FD  1803               	skipnc
 17813  07FE  178B               	bsf	11,7	;volatile
 17814  07FF                     i1l452:
 17815  07FF  0008               	return
 17816  0800                     __end_ofi1_DATAEE_WriteByte:
 17817                           
 17818                           	psect	text57
 17819  1551                     __ptext57:	
 17820 ;; *************** function i1___lwmod *****************
 17821 ;; Defined at:
 17822 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
 17823 ;; Parameters:    Size  Location     Type
 17824 ;;  divisor         2    0[COMMON] unsigned int 
 17825 ;;  dividend        2    2[COMMON] unsigned int 
 17826 ;; Auto vars:     Size  Location     Type
 17827 ;;  counter         1    5[COMMON] unsigned char 
 17828 ;; Return value:  Size  Location     Type
 17829 ;;                  2    0[COMMON] unsigned int 
 17830 ;; Registers used:
 17831 ;;		wreg, status,2, status,0
 17832 ;; Tracked objects:
 17833 ;;		On entry : 0/0
 17834 ;;		On exit  : 0/0
 17835 ;;		Unchanged: 0/0
 17836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17837 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17838 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17839 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17840 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17841 ;;Total ram usage:        6 bytes
 17842 ;; Hardware stack levels used:    1
 17843 ;; This function calls:
 17844 ;;		Nothing
 17845 ;; This function is called by:
 17846 ;;		_TMR2_callback
 17847 ;;		_TMR0_callback
 17848 ;; This function uses a non-reentrant model
 17849 ;;
 17850                           
 17851                           
 17852                           ;psect for function i1___lwmod
 17853  1551                     i1___lwmod:
 17854  1551                     i1l4178:	
 17855                           ;incstack = 0
 17856                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
 17857                           
 17858  1551  0870               	movf	i1___lwmod@divisor,w
 17859  1552  0471               	iorwf	i1___lwmod@divisor+1,w
 17860  1553  1903               	btfsc	3,2
 17861  1554  2D56               	goto	u278_21
 17862  1555  2D57               	goto	u278_20
 17863  1556                     u278_21:
 17864  1556  2D80               	goto	i1l4196
 17865  1557                     u278_20:
 17866  1557                     i1l4180:
 17867  1557  01F5               	clrf	i1___lwmod@counter
 17868  1558  0AF5               	incf	i1___lwmod@counter,f
 17869  1559  2D63               	goto	i1l4186
 17870  155A                     i1l4182:
 17871  155A  3001               	movlw	1
 17872  155B                     u279_25:
 17873  155B  35F0               	lslf	i1___lwmod@divisor,f
 17874  155C  0DF1               	rlf	i1___lwmod@divisor+1,f
 17875  155D  0B89               	decfsz	9,f
 17876  155E  2D5B               	goto	u279_25
 17877  155F                     i1l4184:
 17878  155F  3001               	movlw	1
 17879  1560  00F4               	movwf	??i1___lwmod
 17880  1561  0874               	movf	??i1___lwmod,w
 17881  1562  07F5               	addwf	i1___lwmod@counter,f
 17882  1563                     i1l4186:
 17883  1563  1FF1               	btfss	i1___lwmod@divisor+1,7
 17884  1564  2D66               	goto	u280_21
 17885  1565  2D67               	goto	u280_20
 17886  1566                     u280_21:
 17887  1566  2D5A               	goto	i1l4182
 17888  1567                     u280_20:
 17889  1567                     i1l4188:
 17890  1567  0871               	movf	i1___lwmod@divisor+1,w
 17891  1568  0273               	subwf	i1___lwmod@dividend+1,w
 17892  1569  1D03               	skipz
 17893  156A  2D6D               	goto	u281_25
 17894  156B  0870               	movf	i1___lwmod@divisor,w
 17895  156C  0272               	subwf	i1___lwmod@dividend,w
 17896  156D                     u281_25:
 17897  156D  1C03               	skipc
 17898  156E  2D70               	goto	u281_21
 17899  156F  2D71               	goto	u281_20
 17900  1570                     u281_21:
 17901  1570  2D75               	goto	i1l4192
 17902  1571                     u281_20:
 17903  1571                     i1l4190:
 17904  1571  0870               	movf	i1___lwmod@divisor,w
 17905  1572  02F2               	subwf	i1___lwmod@dividend,f
 17906  1573  0871               	movf	i1___lwmod@divisor+1,w
 17907  1574  3BF3               	subwfb	i1___lwmod@dividend+1,f
 17908  1575                     i1l4192:
 17909  1575  3001               	movlw	1
 17910  1576                     u282_25:
 17911  1576  36F1               	lsrf	i1___lwmod@divisor+1,f
 17912  1577  0CF0               	rrf	i1___lwmod@divisor,f
 17913  1578  0B89               	decfsz	9,f
 17914  1579  2D76               	goto	u282_25
 17915  157A                     i1l4194:
 17916  157A  3001               	movlw	1
 17917  157B  02F5               	subwf	i1___lwmod@counter,f
 17918  157C  1D03               	btfss	3,2
 17919  157D  2D7F               	goto	u283_21
 17920  157E  2D80               	goto	u283_20
 17921  157F                     u283_21:
 17922  157F  2D67               	goto	i1l4188
 17923  1580                     u283_20:
 17924  1580                     i1l4196:
 17925  1580  0873               	movf	i1___lwmod@dividend+1,w
 17926  1581  00F1               	movwf	?i1___lwmod+1
 17927  1582  0872               	movf	i1___lwmod@dividend,w
 17928  1583  00F0               	movwf	?i1___lwmod
 17929  1584                     i1l1757:
 17930  1584  0008               	return
 17931  1585                     __end_ofi1___lwmod:
 17932                           
 17933                           	psect	text58
 17934  150A                     __ptext58:	
 17935 ;; *************** function ___lbmod *****************
 17936 ;; Defined at:
 17937 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lbmod.c"
 17938 ;; Parameters:    Size  Location     Type
 17939 ;;  dividend        1    wreg     unsigned char 
 17940 ;;  divisor         1    0[COMMON] unsigned char 
 17941 ;; Auto vars:     Size  Location     Type
 17942 ;;  dividend        1    3[COMMON] unsigned char 
 17943 ;;  rem             1    5[COMMON] unsigned char 
 17944 ;;  counter         1    4[COMMON] unsigned char 
 17945 ;; Return value:  Size  Location     Type
 17946 ;;                  1    wreg      unsigned char 
 17947 ;; Registers used:
 17948 ;;		wreg, status,2, status,0
 17949 ;; Tracked objects:
 17950 ;;		On entry : 0/0
 17951 ;;		On exit  : 0/0
 17952 ;;		Unchanged: 0/0
 17953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17954 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17955 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17956 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17957 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17958 ;;Total ram usage:        6 bytes
 17959 ;; Hardware stack levels used:    1
 17960 ;; This function calls:
 17961 ;;		Nothing
 17962 ;; This function is called by:
 17963 ;;		_TMR0_callback
 17964 ;; This function uses a non-reentrant model
 17965 ;;
 17966                           
 17967                           
 17968                           ;psect for function ___lbmod
 17969  150A                     ___lbmod:
 17970                           
 17971                           ;incstack = 0
 17972                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
 17973                           ;___lbmod@dividend stored from wreg
 17974  150A  00F3               	movwf	___lbmod@dividend
 17975  150B                     i1l4110:
 17976  150B  3008               	movlw	8
 17977  150C  00F1               	movwf	??___lbmod
 17978  150D  0871               	movf	??___lbmod,w
 17979  150E  00F4               	movwf	___lbmod@counter
 17980  150F                     i1l4112:
 17981  150F  01F5               	clrf	___lbmod@rem
 17982  1510                     i1l4114:
 17983  1510  0873               	movf	___lbmod@dividend,w
 17984  1511  00F1               	movwf	??___lbmod
 17985  1512  3007               	movlw	7
 17986  1513                     u275_25:
 17987  1513  36F1               	lsrf	??___lbmod,f
 17988  1514  0B89               	decfsz	9,f
 17989  1515  2D13               	goto	u275_25
 17990  1516  3575               	lslf	___lbmod@rem,w
 17991  1517  0471               	iorwf	??___lbmod,w
 17992  1518  00F2               	movwf	??___lbmod+1
 17993  1519  0872               	movf	??___lbmod+1,w
 17994  151A  00F5               	movwf	___lbmod@rem
 17995  151B                     i1l4116:
 17996  151B  1003               	clrc
 17997  151C  0DF3               	rlf	___lbmod@dividend,f
 17998  151D                     i1l4118:
 17999  151D  0870               	movf	___lbmod@divisor,w
 18000  151E  0275               	subwf	___lbmod@rem,w
 18001  151F  1C03               	skipc
 18002  1520  2D22               	goto	u276_21
 18003  1521  2D23               	goto	u276_20
 18004  1522                     u276_21:
 18005  1522  2D25               	goto	i1l1685
 18006  1523                     u276_20:
 18007  1523                     i1l4120:
 18008  1523  0870               	movf	___lbmod@divisor,w
 18009  1524  02F5               	subwf	___lbmod@rem,f
 18010  1525                     i1l1685:
 18011  1525  3001               	movlw	1
 18012  1526  02F4               	subwf	___lbmod@counter,f
 18013  1527  1D03               	btfss	3,2
 18014  1528  2D2A               	goto	u277_21
 18015  1529  2D2B               	goto	u277_20
 18016  152A                     u277_21:
 18017  152A  2D10               	goto	i1l4114
 18018  152B                     u277_20:
 18019  152B                     i1l4122:
 18020  152B  0875               	movf	___lbmod@rem,w
 18021  152C                     i1l1687:
 18022  152C  0008               	return
 18023  152D                     __end_of___lbmod:
 18024                           
 18025                           	psect	text59
 18026  1634                     __ptext59:	
 18027 ;; *************** function ___awmod *****************
 18028 ;; Defined at:
 18029 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awmod.c"
 18030 ;; Parameters:    Size  Location     Type
 18031 ;;  divisor         2    0[COMMON] int 
 18032 ;;  dividend        2    2[COMMON] int 
 18033 ;; Auto vars:     Size  Location     Type
 18034 ;;  sign            1    6[COMMON] unsigned char 
 18035 ;;  counter         1    5[COMMON] unsigned char 
 18036 ;; Return value:  Size  Location     Type
 18037 ;;                  2    0[COMMON] int 
 18038 ;; Registers used:
 18039 ;;		wreg, status,2, status,0
 18040 ;; Tracked objects:
 18041 ;;		On entry : 0/0
 18042 ;;		On exit  : 0/0
 18043 ;;		Unchanged: 0/0
 18044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18045 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18046 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18047 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18048 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18049 ;;Total ram usage:        7 bytes
 18050 ;; Hardware stack levels used:    1
 18051 ;; This function calls:
 18052 ;;		Nothing
 18053 ;; This function is called by:
 18054 ;;		_TMR0_callback
 18055 ;; This function uses a non-reentrant model
 18056 ;;
 18057                           
 18058                           
 18059                           ;psect for function ___awmod
 18060  1634                     ___awmod:
 18061  1634                     i1l4072:	
 18062                           ;incstack = 0
 18063                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 18064                           
 18065  1634  01F6               	clrf	___awmod@sign
 18066  1635                     i1l4074:
 18067  1635  1FF3               	btfss	___awmod@dividend+1,7
 18068  1636  2E38               	goto	u266_21
 18069  1637  2E39               	goto	u266_20
 18070  1638                     u266_21:
 18071  1638  2E40               	goto	i1l4080
 18072  1639                     u266_20:
 18073  1639                     i1l4076:
 18074  1639  09F2               	comf	___awmod@dividend,f
 18075  163A  09F3               	comf	___awmod@dividend+1,f
 18076  163B  0AF2               	incf	___awmod@dividend,f
 18077  163C  1903               	skipnz
 18078  163D  0AF3               	incf	___awmod@dividend+1,f
 18079  163E                     i1l4078:
 18080  163E  01F6               	clrf	___awmod@sign
 18081  163F  0AF6               	incf	___awmod@sign,f
 18082  1640                     i1l4080:
 18083  1640  1FF1               	btfss	___awmod@divisor+1,7
 18084  1641  2E43               	goto	u267_21
 18085  1642  2E44               	goto	u267_20
 18086  1643                     u267_21:
 18087  1643  2E49               	goto	i1l4084
 18088  1644                     u267_20:
 18089  1644                     i1l4082:
 18090  1644  09F0               	comf	___awmod@divisor,f
 18091  1645  09F1               	comf	___awmod@divisor+1,f
 18092  1646  0AF0               	incf	___awmod@divisor,f
 18093  1647  1903               	skipnz
 18094  1648  0AF1               	incf	___awmod@divisor+1,f
 18095  1649                     i1l4084:
 18096  1649  0870               	movf	___awmod@divisor,w
 18097  164A  0471               	iorwf	___awmod@divisor+1,w
 18098  164B  1903               	btfsc	3,2
 18099  164C  2E4E               	goto	u268_21
 18100  164D  2E4F               	goto	u268_20
 18101  164E                     u268_21:
 18102  164E  2E78               	goto	i1l4102
 18103  164F                     u268_20:
 18104  164F                     i1l4086:
 18105  164F  01F5               	clrf	___awmod@counter
 18106  1650  0AF5               	incf	___awmod@counter,f
 18107  1651  2E5B               	goto	i1l4092
 18108  1652                     i1l4088:
 18109  1652  3001               	movlw	1
 18110  1653                     u269_25:
 18111  1653  35F0               	lslf	___awmod@divisor,f
 18112  1654  0DF1               	rlf	___awmod@divisor+1,f
 18113  1655  0B89               	decfsz	9,f
 18114  1656  2E53               	goto	u269_25
 18115  1657                     i1l4090:
 18116  1657  3001               	movlw	1
 18117  1658  00F4               	movwf	??___awmod
 18118  1659  0874               	movf	??___awmod,w
 18119  165A  07F5               	addwf	___awmod@counter,f
 18120  165B                     i1l4092:
 18121  165B  1FF1               	btfss	___awmod@divisor+1,7
 18122  165C  2E5E               	goto	u270_21
 18123  165D  2E5F               	goto	u270_20
 18124  165E                     u270_21:
 18125  165E  2E52               	goto	i1l4088
 18126  165F                     u270_20:
 18127  165F                     i1l4094:
 18128  165F  0871               	movf	___awmod@divisor+1,w
 18129  1660  0273               	subwf	___awmod@dividend+1,w
 18130  1661  1D03               	skipz
 18131  1662  2E65               	goto	u271_25
 18132  1663  0870               	movf	___awmod@divisor,w
 18133  1664  0272               	subwf	___awmod@dividend,w
 18134  1665                     u271_25:
 18135  1665  1C03               	skipc
 18136  1666  2E68               	goto	u271_21
 18137  1667  2E69               	goto	u271_20
 18138  1668                     u271_21:
 18139  1668  2E6D               	goto	i1l4098
 18140  1669                     u271_20:
 18141  1669                     i1l4096:
 18142  1669  0870               	movf	___awmod@divisor,w
 18143  166A  02F2               	subwf	___awmod@dividend,f
 18144  166B  0871               	movf	___awmod@divisor+1,w
 18145  166C  3BF3               	subwfb	___awmod@dividend+1,f
 18146  166D                     i1l4098:
 18147  166D  3001               	movlw	1
 18148  166E                     u272_25:
 18149  166E  36F1               	lsrf	___awmod@divisor+1,f
 18150  166F  0CF0               	rrf	___awmod@divisor,f
 18151  1670  0B89               	decfsz	9,f
 18152  1671  2E6E               	goto	u272_25
 18153  1672                     i1l4100:
 18154  1672  3001               	movlw	1
 18155  1673  02F5               	subwf	___awmod@counter,f
 18156  1674  1D03               	btfss	3,2
 18157  1675  2E77               	goto	u273_21
 18158  1676  2E78               	goto	u273_20
 18159  1677                     u273_21:
 18160  1677  2E5F               	goto	i1l4094
 18161  1678                     u273_20:
 18162  1678                     i1l4102:
 18163  1678  0876               	movf	___awmod@sign,w
 18164  1679  1903               	btfsc	3,2
 18165  167A  2E7C               	goto	u274_21
 18166  167B  2E7D               	goto	u274_20
 18167  167C                     u274_21:
 18168  167C  2E82               	goto	i1l4106
 18169  167D                     u274_20:
 18170  167D                     i1l4104:
 18171  167D  09F2               	comf	___awmod@dividend,f
 18172  167E  09F3               	comf	___awmod@dividend+1,f
 18173  167F  0AF2               	incf	___awmod@dividend,f
 18174  1680  1903               	skipnz
 18175  1681  0AF3               	incf	___awmod@dividend+1,f
 18176  1682                     i1l4106:
 18177  1682  0873               	movf	___awmod@dividend+1,w
 18178  1683  00F1               	movwf	?___awmod+1
 18179  1684  0872               	movf	___awmod@dividend,w
 18180  1685  00F0               	movwf	?___awmod
 18181  1686                     i1l1641:
 18182  1686  0008               	return
 18183  1687                     __end_of___awmod:
 18184  007E                     btemp	set	126	;btemp
 18185  007E                     int$flags	set	126
 18186  007E                     wtemp0	set	126
 18187  2373                     
 18188                           	psect	config
 18189                           
 18190                           ;Config register CONFIG1 @ 0x8007
 18191                           ;	External Oscillator mode selection bits
 18192                           ;	FEXTOSC = OFF, Oscillator not enabled
 18193                           ;	Power-up default value for COSC bits
 18194                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 18195                           ;	Clock Out Enable bit
 18196                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 18197                           ;	Clock Switch Enable bit
 18198                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 18199                           ;	Fail-Safe Clock Monitor Enable bit
 18200                           ;	FCMEN = ON, FSCM timer enabled
 18201  8007                     	org	32775
 18202  8007  3FEC               	dw	16364
 18203                           
 18204                           ;Config register CONFIG2 @ 0x8008
 18205                           ;	Master Clear Enable bit
 18206                           ;	MCLRE = ON, MCLR pin is Master Clear function
 18207                           ;	Power-up Timer Enable bit
 18208                           ;	PWRTE = OFF, PWRT disabled
 18209                           ;	Low-Power BOR enable bit
 18210                           ;	LPBOREN = OFF, ULPBOR disabled
 18211                           ;	Brown-out reset enable bits
 18212                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 18213                           ;	Brown-out Reset Voltage Selection
 18214                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 18215                           ;	Zero-cross detect disable
 18216                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 18217                           ;	Peripheral Pin Select one-way control
 18218                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 18219                           ;	Stack Overflow/Underflow Reset Enable bit
 18220                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 18221                           ;	Background Debugger
 18222                           ;	DEBUG = OFF, Background Debugger disabled
 18223  8008                     	org	32776
 18224  8008  3FFF               	dw	16383
 18225                           
 18226                           ;Config register CONFIG3 @ 0x8009
 18227                           ;	WDT Period Select bits
 18228                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 18229                           ;	WDT operating mode
 18230                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 18231                           ;	WDT Window Select bits
 18232                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 18233                           ;	WDT input clock selector
 18234                           ;	WDTCCS = SC, Software Control
 18235  8009                     	org	32777
 18236  8009  3F9F               	dw	16287
 18237                           
 18238                           ;Config register CONFIG4 @ 0x800A
 18239                           ;	UserNVM self-write protection bits
 18240                           ;	WRT = OFF, Write protection off
 18241                           ;	Scanner Enable bit
 18242                           ;	SCANE = available, Scanner module is available for use
 18243                           ;	Low Voltage Programming Enable bit
 18244                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 18245  800A                     	org	32778
 18246  800A  3FFF               	dw	16383
 18247                           
 18248                           ;Config register CONFIG5 @ 0x800B
 18249                           ;	UserNVM Program memory code protection bit
 18250                           ;	CP = OFF, Program Memory code protection disabled
 18251                           ;	DataNVM code protection bit
 18252                           ;	CPD = OFF, Data EEPROM code protection disabled
 18253  800B                     	org	32779
 18254  800B  3FFF               	dw	16383

Data Sizes:
    Strings     42
    Constant    10
    Data        7
    BSS         19
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     77      80
    BANK1            80     12      34
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11            3      0       0
    BANK12            0      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_54(CODE[4]), STR_53(CODE[6]), STR_52(CODE[7]), STR_51(CODE[4]), 
		 -> STR_50(CODE[15]), STR_49(CODE[6]), STR_48(CODE[7]), STR_47(CODE[4]), 
		 -> STR_46(CODE[15]), STR_45(CODE[7]), STR_44(CODE[6]), STR_43(CODE[4]), 
		 -> STR_42(CODE[15]), STR_41(CODE[7]), STR_40(CODE[6]), STR_39(CODE[4]), 
		 -> STR_38(CODE[15]), STR_37(CODE[15]), STR_36(CODE[6]), STR_35(CODE[7]), 
		 -> STR_34(CODE[4]), STR_33(CODE[15]), STR_32(CODE[6]), STR_31(CODE[7]), 
		 -> STR_30(CODE[4]), STR_29(CODE[15]), STR_28(CODE[6]), STR_27(CODE[7]), 
		 -> STR_26(CODE[4]), STR_25(CODE[15]), STR_24(CODE[6]), STR_23(CODE[7]), 
		 -> STR_22(CODE[4]), STR_21(CODE[6]), STR_20(CODE[7]), STR_19(CODE[4]), 
		 -> STR_18(CODE[15]), STR_17(CODE[6]), STR_16(CODE[7]), STR_15(CODE[4]), 
		 -> STR_14(CODE[15]), STR_13(CODE[6]), STR_12(CODE[7]), STR_11(CODE[4]), 
		 -> STR_10(CODE[15]), STR_9(CODE[2]), STR_8(CODE[2]), STR_7(CODE[2]), 
		 -> STR_6(CODE[2]), STR_5(CODE[6]), STR_4(CODE[7]), STR_3(CODE[15]), 
		 -> STR_2(CODE[2]), STR_1(CODE[2]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> lcd@buf(BANK0[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), TMR2_callback(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), TMR2_callback(), Absolute function(), 

    LCDstr@p	PTR unsigned char  size(1) Largest target is 17
		 -> lcd@buf(BANK0[17]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_callback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_callback(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR2_callback->i1___lwmod
    _TMR0_CallBack->_TMR0_callback
    _TMR0_callback->___awmod
    _TMR0_callback->i1_save_vars
    i1_save_vars->i1_DATAEE_WriteByte

Critical Paths under _main in BANK0

    _main->_lcd
    _tsttc->_WriteI2C
    _save_vars->_DATAEE_WriteByte
    _lumin->_ADCC_GetConversionResult
    _lcd->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCDstr->_LCDchar
    _LCDchar->_LCDsend2x4
    _LCDcmd->_LCDsend2x4
    _check_vars->_DATAEE_ReadByte
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                39    39      0   25748
                                             71 BANK0      6     6      0
                                              0 BANK1     12    12      0
                            _LCDinit
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR2_SetInterruptHandler
                            ___lwmod
                      _checkButtonS1
                      _checkButtonS2
                         _check_vars
                    _conf_alarm_flag
                      _conf_alarm_hh
                      _conf_alarm_mm
                      _conf_alarm_ss
                      _conf_clock_hh
                      _conf_clock_mm
                      _conf_clock_ss
                         _conf_lumin
                          _conf_temp
                   _i2c1_driver_open
                                _lcd
                              _lumin
                          _save_vars
                              _tsttc
 ---------------------------------------------------------------------------------
 (1) _tsttc                                                2     2      0      68
                                              2 BANK0      2     2      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _save_vars                                            3     3      0    2950
                                              4 BANK0      3     3      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3    2673
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _lumin                                                4     4      0      92
                                              2 BANK0      4     4      0
           _ADCC_GetConversionResult
                    _ADCC_Initialize
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _lcd                                                 36    24     12   17287
                                             35 BANK0     36    24     12
                             _LCDcmd
                             _LCDstr
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             29    21      8    8843
                                             14 BANK0     21    13      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     396
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4    1271
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCDstr                                               3     3      0    2637
                                              9 BANK0      3     3      0
                            _LCDchar
 ---------------------------------------------------------------------------------
 (3) _LCDchar                                              1     1      0     810
                                              8 BANK0      1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDcmd                                               1     1      0     810
                                              8 BANK0      1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conf_temp                                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _conf_lumin                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _conf_clock_ss                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conf_clock_mm                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _conf_clock_hh                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _conf_alarm_ss                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _conf_alarm_mm                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _conf_alarm_hh                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _conf_alarm_flag                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_vars                                           4     4      0    2222
                                              2 BANK0      4     4      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2    1716
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _checkButtonS2                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _checkButtonS1                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     348
                    _ADCC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     832
                                              8 BANK0      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (4) _LCDsend2x4                                           6     5      1     788
                                              2 BANK0      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 BANK0      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0    2319
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR2_ISR                                             0     0      0     383
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (8) _TMR2_CallBack                                        0     0      0     383
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                      _TMR2_callback *
 ---------------------------------------------------------------------------------
 (9) _TMR2_callback                                        0     0      0     383
                 _PWM6_LoadDutyValue
                          i1___lwmod
 ---------------------------------------------------------------------------------
 (10) _PWM6_LoadDutyValue                                  4     2      2     120
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (9) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0    1936
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (8) _TMR0_CallBack                                        0     0      0    1936
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                      _TMR0_callback *
 ---------------------------------------------------------------------------------
 (9) _TMR0_callback                                        2     2      0    1936
                                              7 COMMON     2     2      0
                            ___awmod
                            ___lbmod
                          i1___lwmod
                        i1_save_vars
 ---------------------------------------------------------------------------------
 (10) i1_save_vars                                         3     3      0     990
                                              4 COMMON     3     3      0
                 i1_DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (11) i1_DATAEE_WriteByte                                  4     1      3     713
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (10) i1___lwmod                                           6     2      4     263
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (10) ___lbmod                                             6     5      1     235
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (10) ___awmod                                             7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (9) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _SYSTEM_Initialize
     _ADCC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR0_SetInterruptHandler
   _TMR2_SetInterruptHandler
   ___lwmod
     ___lwdiv (ARG)
   _checkButtonS1
   _checkButtonS2
   _check_vars
     _DATAEE_ReadByte
   _conf_alarm_flag
   _conf_alarm_hh
   _conf_alarm_mm
   _conf_alarm_ss
   _conf_clock_hh
   _conf_clock_mm
   _conf_clock_ss
   _conf_lumin
   _conf_temp
   _i2c1_driver_open
   _lcd
     _LCDcmd
       _LCDsend2x4
         _WriteI2C
     _LCDstr
       _LCDchar
         _LCDsend2x4
           _WriteI2C
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _lumin
     _ADCC_GetConversionResult
     _ADCC_Initialize
     _ADCC_StartConversion
   _save_vars
     _DATAEE_WriteByte
   _tsttc
     _ReadI2C
     _WriteI2C

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _TMR0_callback *
         ___awmod
         ___lbmod
         i1___lwmod
         i1_save_vars
           i1_DATAEE_WriteByte
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *
       _TMR2_callback *
         _PWM6_LoadDutyValue
         i1___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4D      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      C      22       7       42.5%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      80      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11               3      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      80      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sun Nov 15 21:10:49 2020

        __end_of_TMR2_SetInterruptHandler 12EE                                        l30 1789  
                                      l22 14BF                                        l23 14C1  
                                      l33 1751                                        l42 1773  
                                      l26 14C7                                        l35 1756  
                                      l47 1787                       ___wmul@multiplicand 0022  
             __size_of_PWM6_LoadDutyValue 0016                                       l122 15F6  
                                     l171 12DB                                       l235 1316  
                                     l405 12E4                                       l174 12C2  
                                     l168 142A                                       l451 1549  
                                     l452 1550                                       l701 0B03  
                                     l702 0B05                                       l455 1390  
                                     l720 0B59                                       l377 13E8  
                                     l449 1545                                       l713 0B41  
                                     l722 0B5D                                       l714 0B44  
                                     l642 0F95                                       l803 130A  
                                     l750 0BEA                                       l726 0B71  
                                     l751 0BED                                       l727 0B73  
                                     l719 0B57                                       l832 1698  
                                     l672 1486                                       l664 07E1  
                                     l760 0C08                                       l833 169A  
                                     l770 1381                                       l738 0BAC  
                                     l690 0ACA                                       l683 14A8  
                                     l659 0AB8                                       l739 0BAE  
                                     l844 16D3                                       l676 148B  
                                     l756 0C00                                       l845 16D5  
                                     l765 1373                                       l773 12AE  
                                     l757 0C02                                       l934 0922  
                                     l686 0AB9                                       l935 0924  
                                     l679 14A3                                       l783 1365  
                                     l848 16D9                                       l961 09CA  
                                     l793 13C0                                       l689 0AC8  
                                     l962 09CC                                       l778 1357  
                                     l971 12CA                                       l788 13A0  
                                     l980 1440                                       l965 09D3  
                                     l949 0974                                       l958 09B4  
                                     l798 13B0                                       l974 12F6  
                                     l968 17FF                                       _PR2 028D  
                                     _lcd 0070                                       _ctl 00A8  
                                     _reg 2373                   __size_of_PMD_Initialize 0008  
                            ___awmod@sign 0076                           _TMR2_Initialize 1458  
                                     wreg 0009                               ?_LCDsend2x4 0022  
                         __end_of_LCDchar 12F7                                      l1100 12FF  
                                    l1012 082E                                      l1009 066C  
                                    l1223 146E                                      l1091 1414  
                                    l1094 12D2                                      l1183 1349  
                                    l4002 175D                                      l4004 1768  
                                    l1436 0C26                                      l1269 12ED  
                                    l4006 1778                                      l1454 0CD9  
                                    l1471 0DA6                                      l4040 0928  
                                    l4200 12DC                                      l5000 0129  
                                    l4050 095F                                      l4042 0937  
                                    l4034 0902                                      l4202 12E5  
                                    l5010 0145                                      l5002 012E  
                                    l1475 14D3                                      l4060 0990  
                                    l4052 0965                                      l4044 093B  
                                    l4036 0907                                      l4300 15AA  
                                    l5100 02CC                                      l5004 0134  
                                    l5012 014A                                      l5020 0160  
                                    l1477 14E7                                      l4070 09D0  
                                    l4062 099F                                      l4054 0974  
                                    l4046 094A                                      l4038 0913  
                                    l4302 15AF                                      l5110 02FC  
                                    l5102 02D0                                      l5030 018F  
                                    l5022 0165                                      l5014 014E  
                                    l5006 0138                                      l4310 14B4  
                                    l4064 09A5                                      l4056 097B  
                                    l4048 0950                                      l4320 15C2  
                                    l4400 13DC                                      l4232 12F0  
                                    l4304 15B5                                      l4240 13D0  
                                    l5200 04AD                                      l5120 0331  
                                    l5112 031E                                      l5104 02E4  
                                    l5040 01C8                                      l5032 019C  
                                    l5024 0169                                      l5016 0157  
                                    l5008 0141                                      l4312 14C6  
                                    l4066 09B4                                      l4058 098A  
                                    l4330 15CD                                      l4322 15C4  
                                    l4402 13DD                                      l4250 14CF  
                                    l4242 13D2                                      l4234 13C3  
                                    l5210 04D6                                      l5202 04B1  
                                    l5130 035A                                      l5122 033A  
                                    l5114 0322                                      l5106 02E8  
                                    l5050 01F9                                      l5042 01CC  
                                    l5034 01A0                                      l5026 0187  
                                    l5018 015B                                      l4410 152D  
                                    ?_lcd 0043                                      l1747 1633  
                                    l4068 09BB                                      l4340 15E1  
                                    l4332 15CF                                      l4324 15C6  
                                    l4316 15BA                                      l4404 13E5  
                                    l4260 15F7                                      l4252 14D8  
                                    l4236 13C4                                      l4500 0C8B  
                                    l5300 065B                                      l5212 04DA  
                                    l5204 04BE                                      l5220 04F6  
                                    l5132 036A                                      l5124 033E  
                                    l5140 0398                                      l5108 02F8  
                                    l5116 0326                                      l5060 0222  
                                    l5052 01FD                                      l5036 01B0  
                                    l5028 018B                                      l5044 01D0  
                                    l4420 153F                                      l4412 1535  
                                    l4308 14A9                                      l1757 15B9  
                                    l4350 15EC                                      l4342 15E3  
                                    l4334 15D1                                      l4326 15C8  
                                    l4318 15C0                                      l4430 1382  
                                    l4270 160C                                      l4262 15FA  
                                    l4254 14DD                                      l4246 14C8  
                                    l4238 13CA                                      l4510 0CA3  
                                    l4502 0C92                                      l5302 0664  
                                    l5230 0527                                      l5222 04FD  
                                    l5214 04DE                                      l5206 04C2  
                                    l5150 03B4                                      l5142 039F  
                                    l5134 036E                                      l5126 0342  
                                    l5118 032D                                      l5070 0249  
                                    l5062 0226                                      l5054 0201  
                                    l5046 01D7                                      l5038 01B4  
                                    l4422 1540                                      l4414 1539  
                    _ADCC_StartConversion 12CB                                      l4360 12D3  
                                    l4352 15EF                                      l4344 15E5  
                                    l4336 15D3                                      l4328 15CA  
                                    l4600 1421                                      l4440 138D  
                                    l4432 1386                                      l4280 1629  
                                    l4272 1610                                      l4264 1600  
                                    l4256 14E3                                      l4248 14CB  
                                    l1928 13D3                                      l4520 0CBF  
                                    l4504 0C96                                      l5304 0668  
                                    l5240 0550                                      l5232 0534  
                                    l5224 0501                                      l5216 04EE  
                                    l5208 04D2                                      l5160 0402  
                                    l5152 03C8                                      l5144 03A3  
                                    l5136 0390                                      l5128 0356  
                                    l5080 0280                                      l5072 024D  
                                    l5064 023A                                      l5056 020E  
                                    l5048 01DB                                      l4424 1542  
                                    l4416 153D                                      l5400 0DA9  
                                    l4450 169E                                      l4362 12D6  
                                    l4354 15F1                                      l4346 15E7  
                                    l4338 15DF                                      l4370 1344  
                                    l4602 1424                                      l4442 138E  
                                    l4434 138A                                      l4610 1311  
                                    l4274 161F                                      l4266 1603  
                                    l4282 162F                                      l4290 158F  
                                    l4530 0CED                                      l4522 0CC9  
                                    l4506 0C9A                                      l5250 0573  
                                    l5242 0554                                      l5234 0538  
                                    l5226 051F                                      l5218 04F2  
                                    l5170 041E                                      l5162 0406  
                                    l5154 03CC                                      l5146 03AC  
                                    l5138 0394                                      l5090 02B0  
                                    l5082 0284                                      l5074 026B  
                                    l5066 023E                                      l5058 0212  
                                    l4426 1544                                      l4418 153E  
                                    l5410 0DBE                                      l5402 0DAC  
                                    l4452 16AD                                      l4372 13FF  
                                    l4364 12D7                                      l4356 15F3  
                                    l4348 15E9                                      l4380 145B  
                                    l4604 1427                                      l4436 138B  
                                    l4700 0706                                      l4612 1313  
                                    l4460 12C5                                      l4276 1623  
                                    l4268 1608                                      l4292 1594  
                                    l4540 0D05                                      l4532 0CF0  
                                    l4524 0CCF                                      l4516 0CA5  
                                    l4508 0C9E                                      l5260 05AA  
                                    l5252 0577                                      l5244 0564  
                                    l5236 0548                                      l5228 0523  
                                    l5180 044E                                      l5172 0422  
                                    l5156 03DC                                      l5148 03B0  
                                    l5164 040A                                      l5084 0294  
                                    l5076 026F                                      l5092 02B4  
                                    l5068 0242                                      l4428 154A  
                                    l5500 0ECB                                      l5420 0DC7  
                                    l5412 0DC1                                      l5404 0DB4  
                                    l4454 16B1                                      l4446 1689  
                                    l4630 178A                                      l4374 1411  
                                    l4366 12DA                                      l4358 12BB  
                                    l4390 1463                                      l4382 145C  
                                    l4438 138C                                      l4710 072D  
                                    l4702 070B                                      l4606 130B  
                                    l4462 142D                                      l4278 1624  
                                    l4294 1598                                      l4286 1585  
                                    l4550 0D27                                      l4542 0D0B  
                                    l4534 0CF4                                      l4526 0CD5  
                                    l4470 0C10                                      l5270 05DA  
                                    l5262 05AE                                      l5254 0595  
                                    l5246 0568                                      l5238 054C  
                                    l5190 047C                                      l5182 0452  
                                    l5174 0426                                      l5166 0411  
                                    l5158 03E0                                      l5094 02BB  
                                    l5086 0298                                      l5078 0273  
                                    l5510 0EE5                                      l5502 0ED0  
                                    l5430 0DFB                                      l5422 0DCA  
                                    l5414 0DC3                                      l5406 0DBC  
                                    l4456 16C0                                      l4448 1689  
                                    l4640 17AF                                      l4632 1793  
                                    l4376 1413                                      l4368 133D  
                                    l4392 146B                                      l4384 145F  
                                    l4720 0761                                      l4712 0739  
                                    l4704 0717                                      l4608 1310  
                                    l4464 142E                                      l4296 159C  
                                    l4288 158C                                      l4560 0D49  
                                    l4552 0D2E                                      l4544 0D12  
                                    l4536 0CFA                                      l4528 0CE4  
                                    l4472 0C16                                      l5280 060B  
                                    l5264 05BE                                      l5256 0599  
                                    l5272 05DE                                      l5248 056C  
                                    l5184 0456                                      l5176 043A  
                                    l5168 0415                                      l5192 0480  
                                    l5096 02BF                                      l5088 02AC  
                                    l4800 080B                                      l5520 0EFE  
                                    l5512 0EE9                                      l5504 0ED4  
                                    l5440 0E1E                                      l5432 0E01  
                                    l5424 0DCD                                      l5416 0DC4  
                                    l5408 0DBD                           __end_of_LCDinit 1800  
                                    l4458 16C4                                      l4650 17CB  
                                    l4642 17B3                                      l4634 1797  
                                    l4394 13D4                                      l4386 1460  
                                    l4378 1458                                      l4810 146F  
                                    l4730 079C                                      l4722 076C  
                                    l4714 073E                                      l4706 071C  
                                    l4466 1432                                      l4298 15A6  
                                    l4570 0D85                                      l4554 0D32  
                                    l4546 0D16                                      l4562 0D4D  
                                    l4538 0D01                                      l4490 0C54  
                                    l4482 0C2B                                      l4474 0C1D  
                                    l5290 0634                                      l5282 060F  
                                    l5274 05E5                                      l5266 05C2  
                                    l5258 059D                                      l5194 0487  
                                    l5186 045A                                      l5178 043E  
                                    l5098 02C8                                      l4802 0813  
                                    l5530 0F15                                      l5514 0EEE  
                                    l5506 0ED9                                      l5450 0E3E  
                                    l5442 0E26                                      l5434 0E07  
                                    l5426 0DD3                                      l5418 0DC6  
                                    l4660 17EF                                      l4652 17D7  
                                    l4644 17BB                                      l4636 179F  
                                    l4396 13D9                                      l4388 1462  
                                    l4812 1475                                      l4820 148C  
                                    l4740 07DD                                      l4732 07AD  
                                    l4724 077B                                      l4716 074B  
                                    l4708 0728                                      l4564 0D52  
                                    l4556 0D3C                                      l4548 0D21  
                                    l4492 0C63                                      l4484 0C34  
                                    l4476 0C22                                      l4572 0D8E  
                                    l4468 0C0B                                      l5292 0648  
                                    l5284 061C                                      l5276 05E9  
                                    l5268 05D6                                      l5196 048B  
                                    l5188 0478                                      l4580 12D0  
                                    l4804 0820                                      l4900 09D9  
                                    l5540 0F2B                                      l5532 0F1C  
                                    l5524 0F04                                      l5516 0EF5  
                                    l5508 0EE0                                      l5460 0E63  
                                    l5452 0E44                                      l5444 0E2B  
                                    l5436 0E13                                      l5428 0DEB  
                                    l4662 17F5                                      l4654 17DB  
                                    l4646 17BF                                      l4638 17A3  
                                    l4398 13DA                                      l4814 1479  
                                    l4822 1492                                      l4734 07B2  
                                    l4726 077F                                      l4718 0750  
                                    l4670 0683                                      l4830 1366  
                                    l4566 0D7A                                      l4558 0D42  
                                    l4574 0DA2                                      l4494 0C67  
                                    l4486 0C40                                      l4478 0C27  
                                    l5294 064C                                      l5286 0620  
                                    l5278 0607                                      l5198 04A9  
                                    l4582 12D1                                      l4806 082D  
                                    l4910 0A0C                                      l4902 09E9  
                                    l4750 0AE1                                      l5550 0F48  
                                    l5542 0F30                                      l5534 0F21  
                                    l5526 0F09                                      l5518 0EFA  
                                    l5470 0E79                                      l5462 0E68  
                                    l5454 0E58                                      l5446 0E32  
                                    l5438 0E19                                      l4656 17E3  
                                    l4648 17C7                                      l4592 1415  
                                    l4816 1482                                      l4824 1496  
                                    l4736 07C3                                      l4728 0790  
                                    l4680 06B1                                      l4672 068F  
                                    l4664 066D                                      l4832 136C  
                                    l4840 137B                                      l4568 0D81  
                                    l4488 0C43                                      l5288 0630  
                                    l5296 0650                                      l4584 12F7  
                                    l4920 0A39                                      l4912 0A19  
                                    l4904 09F5                                      l4760 0B1C  
                                    l4752 0AF0                                      l4744 0AB9  
                                    l5560 0F5B                                      l5552 0F4C  
                                    l5544 0F37                                      l5536 0F25  
                                    l5528 0F10                                      l5480 0E92  
                                    l5472 0E7D                                      l5464 0E6E  
                                    l5456 0E5C                                      l5448 0E38  
                                    l4658 17E9                                      l4594 1418  
                                    l4818 148A                                      l4826 149F  
                                    l4738 07CE                                      l4690 06D8  
                                    l4682 06B6                                      l4674 0694  
                                    l4666 0679                                      l4850 134A  
                                    l4834 136E                                      l4842 137D  
                                    l4498 0C73                                      l5298 0657  
                                    l4578 12CD                                      l4930 0A62  
                                    l4922 0A3E                                      l4914 0A1E  
                                    l4906 09FA                                      l4770 0B77  
                                    l4762 0B2B                                      l4754 0AF4  
                                    l4746 0ACE                                      l5570 0F92  
                                    l5562 0F60                                      l5546 0F3C  
                                    l5490 0EAC                                      l5482 0E97  
                                    l5474 0E82                                      l5466 0E72  
                                    l5458 0E5C                                      l4596 141B  
                                    l4828 14A7                                      l4692 06E4  
                                    l4684 06C2                                      l4676 06A0  
                                    l4668 067D                                      l4852 1350  
                                    l4860 135E                                      l4940 0A91  
                                    l4932 0A6F                                      l4924 0A4B  
                                    l4916 0A29                                      l4908 0A07  
                                    l4780 0BB2                                      l4772 0B86  
                                    l4764 0B32                                      l4756 0B09  
                                    l4748 0ADD                                      l5572 0FA8  
                                    l5556 0F52                                      l5548 0F43  
                                    l5492 0EB3                                      l5484 0E9E  
                                    l5476 0E89                                      l5468 0E74  
                                    l3990 173A                                      l3982 1732  
                                    l4598 141E                                      l4694 06E9  
                                    l4686 06C7                                      l4678 06A5  
                                    l4854 1352                                      l4862 1360  
                                    l4870 139A                                      l4838 1374  
                                    l4846 12AA                                      l4950 0072  
                                    l4942 0A96                                      l4934 0A74  
                                    l4926 0A50                                      l4918 0A2E  
                                    l4790 0BF1                                      l4782 0BC1  
                                    l4774 0B8A                                      l4766 0B48  
                                    l4758 0B18                                      l5574 0FF4  
                                    l5558 0F57                                      l5494 0EB8  
                                    l5486 0EA3                                      l5478 0E8E  
                                    l5566 0F62                                      l5398 0DA7  
                                    l3992 1744                                      l3984 1735  
                                    l4696 06F5                                      l4688 06D3  
                                    l4960 008D                                      l4952 0077  
                                    l4944 0AA1                                      l4936 0A81  
                                    l4928 0A5D                                      l4792 0C06  
                                    l4784 0BC5                                      l4776 0B99  
                                    l4768 0B62                                      l5496 0EBF  
                                    l5488 0EA7                                      l5568 0F8C  
                                    l3994 174F                                      l4698 06FA  
                                    l4890 1300                                      l4858 1358  
                                    l4866 1391                                      l4882 13A1  
                                    l4874 13B1                                      l4970 00C2  
                                    l4962 0096                                      l4954 007B  
                                    l4946 0AA6                                      l4938 0A86  
                                    l4786 0BD4                                      l4778 0B9D  
                                    l5498 0EC4                                      l3996 175B  
                                    l4892 1306                                      l4868 1398  
                                    l4884 13A8                                      l4876 13B8  
                                    l4980 00F2                                      l4972 00C6  
                                    l4964 009A                                      l4956 0084  
                                    l4796 0804                                      l4948 0AB3  
                                    l4788 0BDB                                      l4894 1309  
                                    l4886 13AA                                      l4878 13BA  
                                    l4990 010D                                      l4982 00F6  
                                    l4974 00CA                                      l4966 00A0  
                                    l4958 0089                                      l4798 080B  
                                    l4984 00FC                                      l4992 0112  
                                    l4976 00DE                                      l4968 00A4  
                                    l4994 0118                                      l4986 0100  
                                    l4978 00E2                                      l4898 09D4  
                                    l4996 011C                                      l4988 0109  
                                    l4998 0125                                      _ALAF 00AA  
                                    _ALAH 007D                                      _ALAL 00BA  
                         __end_of_LCDsend 16DA                                      _ALAM 007C  
                                    _ALAS 00AB                                      _ALAT 00BB  
                                    STR_1 182E                                      STR_2 1832  
                                    STR_3 1800                                      STR_4 1819  
                                    STR_5 1820                                      STR_6 181E  
                                    STR_7 1830                                      STR_8 182C  
                                    STR_9 1828                                      _CLKH 007B  
                                    _CLKM 006F                                      u3000 161F  
                                    u3001 161E                                      u3020 162F  
                                    u3100 14BF                                      u3021 162E  
                                    u3005 161B                                      u3101 14BE  
                                    _LATA 0016                                      u3030 158C  
                                    u3110 14C6                                      _LATB 0017  
                                    u3015 1625                                      u3031 158B  
                                    u3111 14C5                                      _LATC 0018  
                                    u3200 1440                                      u4000 05E5  
                                    _LATD 0019                                      u3201 143F  
                                    u4001 05E4                                      _LATE 001A  
                                    u3050 159C                                      u3210 0C16  
                                    u4010 0657                                      u3130 1549  
                                    u3051 159B                                      u3211 0C15  
                                    u4011 0656                                      u3131 1548  
                                    u2500 1778                                      u3140 1698  
                                    u3060 15A6                                      u3300 0CF4  
                                    u3220 0C40                                      u2501 1777  
                                    u3141 1697                                      u3061 15A5  
                                    u3045 1590                                      u3301 0CF3  
                                    u3221 0C3F                                      u2510 1787  
                                    u2430 1739                                      u3150 169E  
                                    u3310 0CFA                                      u3230 0C73  
                                    u2511 1786                                      u2431 1738  
                                    u3151 169D                                      u3311 0CF9  
                                    u3231 0C72                                      u2440 1744  
                                    u3160 16AD                                      u2600 0974  
                                    u3400 1310                                      u3080 15B5  
                                    u3320 0D0B                                      u3240 0C9A  
                                    u2441 1743                                      u3161 16AC  
                                    u2601 0973                                      u3401 130F  
                                    u3081 15B4                                      u3065 15A2  
                                    u3321 0D0A                                      u3241 0C99  
                                    u2450 174F                                      u3170 16C0  
                                    u2610 098A                                      u3330 0D20  
                                    u3250 0CBE                                      u3090 14B4  
                                    _T2PR 028D                                      u2451 174E  
                                    u3171 16BF                                      u2611 0989  
                                    u3075 15AB                                      u3331 0D1F  
                                    u3251 0CBD                                      u3091 14B3  
                                    _CSUM 00A9                                      u2460 1756  
                                    u3180 16D3                                      u2620 099F  
                                    u3420 0683                                      u3340 0D27  
                                    u3260 0CC9                                      u3500 0B18  
                                    u2461 1755                                      u3181 16D2  
                                    u2621 099E                                      u3421 0682  
                                    u3341 0D26                                      u3261 0CC8  
                                    u3501 0B17                                      u2470 175B  
                                    u3190 16D9                                      u2630 09B4  
                                    u2550 0922                                      u3430 073E  
                                    u3350 0D3C                                      u3270 0CCF  
                                    u3510 0B2B                                      u2471 175A  
                                    u3191 16D8                                      u2631 09B3  
                                    u2551 0921                                      u3431 073D  
                                    u3351 0D3B                                      u3271 0CCE  
                                    u3255 0CBA                                      u3511 0B2A  
                                    u2480 1768                                      u2640 09CA  
                                    u2560 0928                                      u3360 0D42  
                                    u3280 0CD5                                      u3600 0B99  
                                    u3520 0B41                                      u3440 0AC8  
                                    u4400 0E01                                      u2481 1767  
                                    u2641 09C9                                      u2561 0927  
                                    u2545 090A                                      u3361 0D41  
                                    u3281 0CD4                                      u3601 0B98  
                                    u3521 0B40                                      u3441 0AC7  
                                    u4401 0E00                                      u2490 1773  
                                    u2650 09D0                                      u2570 0937  
                                    u3370 0D8E                                      u3290 0CE4  
                                    u3610 0BAC                                      u3530 0B48  
                                    u3450 0ACE                                      u4410 0E07  
                                    u2491 1772                                      u2651 09CF  
                                    u2571 0936                                      u3371 0D8D  
                                    u3291 0CE3                                      u3611 0BAB  
                                    u3531 0B47                                      u3451 0ACD  
                                    u4411 0E06                                      u2580 094A  
                                    u2900 13CA                                      u3380 0DA2  
                                    u3620 0BB2                                      u3540 0B57  
                                    u3460 0ADD                                      u4500 0E6E  
                                    u4420 0E19                                      u2581 0949  
                                    u2901 13C9                                      u3381 0DA1  
                                    u3621 0BB1                                      u3541 0B56  
                                    u3461 0ADC                                      u4501 0E6D  
                                    u4421 0E18                                      u2590 095F  
                                    u3710 1475                                      u2910 13D0  
                                    u3630 0BC1                                      u3550 0B5D  
                                    u3470 0AF0                                      u4510 0E79  
                                    u4430 0E1E                                      u2591 095E  
                                    u3711 1474                                      u2911 13CF  
                                    u3295 0CE0                                      u3631 0BC0  
                                    u3551 0B5C                                      u3471 0AEF  
                                    u4511 0E78                                      u4431 0E1D  
                                    u3720 1479                                      u3800 135E  
                                    u2920 14CF                                      u3640 0BD4  
                                    u3560 0B62                                      u3480 0B03  
                                    u4600 0ED9                                      u4520 0E82  
                                    u4440 0E26                                      u3721 1478  
                                    u3801 135D                                      u2921 14CE  
                                    u3705 0825                                      u3641 0BD3  
                                    u3561 0B61                                      u3481 0B02  
                                    u4601 0ED8                                      u4521 0E81  
                                    u4441 0E25                                      u3730 148A  
                                    u3810 1398                                      u3650 0BEA  
                                    u3570 0B71                                      u3490 0B09  
                                    u4610 0EE5                                      u4530 0E8E  
                                    u4450 0E32                                      u3731 1489  
                                    u3811 1397                                      u3651 0BE9  
                                    u3571 0B70                                      u3491 0B08  
                                    u4611 0EE4                                      u4531 0E8D  
                                    u4451 0E31                                      u3740 1492  
                                    u3820 13B8                                      u3900 0165  
                                    u3660 0BF1                                      u3580 0B77  
                                    u4700 0F3C                                      u4620 0EEE  
                                    u4540 0E97                                      u4460 0E3E  
                                    u4380 0DD3                                      _PMD0 0796  
                                    u3741 1491                                      u3821 13B7  
                                    u3901 0164                                      u3661 0BF0  
                                    u3581 0B76                                      u4701 0F3B  
                                    u4621 0EED                                      u4541 0E96  
                                    u4461 0E3D                                      u4381 0DD2  
                                    _PMD1 0797                                      u3750 1496  
                                    u3830 13A8                                      u2950 14E3  
                                    u3910 01D7                                      u3670 0C00  
                                    u3590 0B86                                      u4710 0F48  
                                    u4630 0EFA                                      u4550 0EA3  
                                    u4470 0E44                                      u4390 0DEB  
                                    _PMD2 0798                                      u3751 1495  
                                    u3831 13A7                                      u2951 14E2  
                                    u2935 14D4                                      u3911 01D6  
                                    u3671 0BFF                                      u3591 0B85  
                                    u4711 0F47                                      u4631 0EF9  
                                    u4551 0EA2                                      u4471 0E43  
                                    u4391 0DEA                                      _PMD3 0799  
                                    u3760 14A7                                      u3840 1306  
                                    u2960 1600                                      u3920 0249  
                                    u3680 0C06                                      u4720 0F51  
                                    u4640 0F03                                      u4560 0EAC  
                                    u4480 0E58                                      _PMD4 079A  
                                    u3761 14A6                                      u3841 1305  
                                    u2961 15FF                                      u2945 14D9  
                                    u3921 0248                                      u3681 0C05  
                                    u4721 0F50                                      u4641 0F02  
                                    u4561 0EAB                                      u4481 0E57  
                                    _PMD5 079B                                      u3770 136C  
                                    u3930 02BB                                      u3850 0077  
                                    u4730 0F57                                      u4650 0F09  
                                    u4570 0EB8                                      u4490 0E68  
                                    u3771 136B                                      u3931 02BA  
                                    u3851 0076                                      u4731 0F56  
                                    u4651 0F08                                      u4571 0EB7  
                                    u4491 0E67                                      u3780 137B  
                                    u2980 1610                                      u3940 032D  
                                    u3860 00A0                                      u4740 0F60  
                                    u4660 0F15                                      u4580 0EC4  
                                    u3781 137A                                      u2981 160F  
                                    u3941 032C                                      u3861 009F  
                                    u4741 0F5F                                      u4661 0F14  
                                    u4581 0EC3                                      u3790 1350  
                                    u3950 039F                                      u3870 00FC  
                                    u4750 0F92                                      u4670 0F21  
                                    u4590 0ED0                                      u4807 178E  
                                    u3791 134F                                      u2975 1604  
                                    u3951 039E                                      u3871 00FB  
                                    u3695 0818                                      u4751 0F91  
                                    u4671 0F20                                      u4591 0ECF  
                                    u3960 0411                                      u3880 0118  
                                    u4680 0F2A                                      u4817 179C  
                                    u3961 0410                                      u3881 0117  
                                    u4681 0F29                                      u3970 0487  
                                    u3890 0134                                      u4690 0F30  
                                    u4907 09D1                                      u4827 17A4  
                                    u2995 1611                                      u3971 0486  
                                    u3891 0133                                      u4691 0F2F  
                                    u3980 04FD                                      u4837 17B0  
                                    u3981 04FC                                      _TALA 00BC  
                                    u3990 0573                                      u4847 17B8  
                                    u3991 0572                                      u4857 17C4  
                                    u4777 0FF8                                      u4867 17CC  
                                    u4787 149A                                      u4877 17D8  
                                    u4797 147D                                      u4887 17E0  
                                    u4897 17FC                                      _PMON 00BD  
                                    _TMR2 028C                                      _WPUA 0F39  
                                    _WPUB 0F44                                      _WPUC 0F4F  
                                    _WPUD 0F5A                                      _WPUE 0F65  
                                    _main 0DA7                                      lcd@h 0046  
                                    lcd@m 0047                                      lcd@s 0048  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                                      start 0037  
                         __end_of_ReadI2C 14C8                           ??_conf_alarm_hh 0020  
                         ??_conf_alarm_mm 0020                           ??_conf_alarm_ss 0020  
                                   ??_lcd 004F                 __size_of_DATAEE_WriteByte 0024  
                 __end_of_TMR0_Initialize 13E9                           ??_conf_clock_hh 0020  
                         ??_conf_clock_mm 0020                           ??_conf_clock_ss 0020  
          ??_TMR0_DefaultInterruptHandler 0070            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 12DC                                     _ADACQ 009D  
                                   _ADCAP 009B                                     _ADACT 0099  
                __end_of_i2c1_driver_open 1317                                     ?_main 0070  
                                   _ADCLK 0098                                     _ADCNT 010C  
                                   _ADPCH 009E                                     _ADREF 009A  
                                   _ADPRE 009C                                     STR_10 1800  
                                   STR_11 182A                                     STR_20 1819  
                                   STR_12 1819                                     STR_21 1820  
                                   STR_13 1820                                     STR_30 182A  
                                   STR_22 182A                                     STR_14 1800  
                                   STR_31 1819                                     STR_23 1819  
                                   STR_15 182A                                     STR_16 1819  
                                   STR_40 1820                                     STR_32 1820  
                                   STR_24 1820                                     STR_41 1819  
                                   STR_17 1820                                     STR_33 1800  
                                   STR_25 1800                                     STR_34 182A  
                                   STR_26 182A                                     STR_50 1800  
                                   STR_42 1800                                     STR_18 1800  
                                   STR_35 1819                                     STR_27 1819  
                                   STR_51 182A                                     STR_43 182A  
                                   STR_19 182A                                     STR_52 1819  
                                   STR_44 1820                                     STR_36 1820  
                                   STR_28 1820                           __end_of___awmod 1687  
                                   STR_45 1819                                     STR_53 1820  
                                   STR_37 1800                                     STR_29 1800  
                                   STR_46 1800                                     STR_38 1800  
                                   STR_54 1826                                     STR_47 182A  
                                   STR_39 182A                                     STR_48 1819  
                                   _ADRPT 010D                                     STR_49 1820  
                         __end_of___lbmod 152D                                     _T2CON 028E  
                                   _T2HLT 028F                           __end_of___lwdiv 1634  
                                   _T2TMR 028C                                     i1l402 132F  
                                   _T2RST 0291                                     i1l342 0013  
                                   i1l351 0035                                     i1l408 0803  
                                   i1l352 0035                                     i1l345 0020  
                         __end_of___lwmod 15BA                                     i1l451 07F9  
                                   i1l347 0029                                     i1l452 07FF  
                                   i1l449 07F5                                     i1l398 1457  
                                   i1l656 172F                                     i1l649 1509  
                                   i1l659 08FF                                     _OSCEN 0891  
                                   _TMR0H 001D                                     _TMR0L 001C  
                                   _TRISA 0011                                     _TRISB 0012  
                                   _TRISC 0013                                     _TRISD 0014  
                                   _TRISE 0015                                     _WPUC3 7A7B  
                                   _WPUC4 7A7C         __size_of_TMR0_SetInterruptHandler 0009  
                         _PWM6_Initialize 133D                 ?_TMR0_SetInterruptHandler 0020  
                        __end_of_TMR0_ISR 1458                          __end_of_TMR2_ISR 12B5  
                      i1___lwmod@dividend 0072                           _DATAEE_ReadByte 1382  
                         __end_of_dpowers 1819                     ?_ADCC_StartConversion 0070  
                         __end_of_isdigit 13D4                                     _lumin 0804  
                                   main@c 006A                                     main@l 006B  
                                   _tsttc 0AB9                               i1_save_vars 082F  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                           __end_of_sprintf 0DA7  
                      __size_ofi1___lwmod 0034                  __size_of_conf_alarm_flag 000B  
                         __initialization 0039                              __end_of_main 1000  
                          save_register@n 00B8                       __size_of_LCDsend2x4 00D4  
                 __end_of_TMR2_Initialize 146F               ?_INTERRUPT_InterruptManager 0070  
                _TMR2_SetInterruptHandler 12E5                                    ??_main 00AC  
                               ??_LCDchar 0028                            save_vars@first 0025  
                               ??_LCDinit 0028                                 ??_LCDsend 0022  
              __end_ofi1_DATAEE_WriteByte 0800                                    _ADACCH 0091  
                                  _ADACCL 0090                                    _ADCON0 0093  
                                  _ADCON1 0094                                    _ADCON2 0095  
                                  _ADCON3 0096                                    _ADERRH 0117  
                                  _ADERRL 0116                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    _ADRESH 008D  
                                  _ADRESL 008C                                    _ADSTAT 0097  
                                  _ADUTHH 0111                                    _ADUTHL 0110  
                                  ?_lumin 0070                          __end_of_WriteI2C 178A  
                                  _ANSELA 0F38                                    _ANSELB 0F43  
                                  _ANSELC 0F4E                                    _ANSELD 0F59  
                                  _ANSELE 0F64                                    _T0CON0 001E  
                                  _T0CON1 001F                                    ?_tsttc 0070  
                                  _RA6PPS 0F16                                    _RC3PPS 0F23  
                                  _RC4PPS 0F24                                    i1l1262 12B4  
                                  i1l1272 0002                                    _ODCONA 0F3A  
                                  i1l1186 13FE                                    i1l1266 133C  
                                  _ODCONB 0F45                                    _ODCONC 0F50  
                                  i1l4100 1672                                    i1l4020 07EE  
                                  i1l4012 07E2                                    _ODCOND 0F5B  
                                  _ODCONE 0F66                                    i1l4102 1678  
                                  i1l4110 150B                                    i1l4030 07FA  
                                  i1l4022 07EF                                    i1l4014 07E9  
                                  i1l4104 167D                                    i1l4120 1523  
                                  i1l4112 150F                                    i1l4024 07F0  
                                  i1l4016 07EB                                    i1l4032 13E9  
                                  i1l1641 1686                                    i1l4106 1682  
                                  i1l4122 152B                                    i1l4114 1510  
                                  i1l4026 07F2                                    i1l4018 07ED  
                                  i1l4130 0843                                    i1l4210 1502  
                                  i1l4116 151B                                    i1l4028 07F4  
                                  i1l4140 086E                                    i1l4132 084E  
                                  i1l4220 1700                                    i1l4212 16DA  
                                  i1l4204 14E8                                    i1l4118 151D  
                                  i1l4150 0890                                    i1l4142 0872  
                                  i1l4134 0852                                    i1l4126 082F  
                                  i1l4230 172C                                    i1l4222 1715  
                                  i1l4214 16DE                                    i1l4206 14EE  
                                  i1l4080 1640                                    i1l4072 1634  
                                  i1l4160 08BC                                    i1l4152 089C  
                                  i1l4144 087D                                    i1l4136 085E  
                                  i1l4128 0833                                    i1l4224 171B  
                                  i1l4216 16EA                                    i1l4208 14F2  
                                  i1l4090 1657                                    i1l4082 1644  
                                  i1l4074 1635                                    i1l4170 08DF  
                                  i1l4162 08C0                                    i1l4154 08A0  
                                  i1l4146 0881                                    i1l4138 0862  
                                  i1l4226 171F                                    i1l4218 16FB  
                                  i1l4092 165B                                    i1l4084 1649  
                                  i1l4076 1639                                    i1l4180 1557  
                                  i1l4172 08EB                                    i1l4164 08CC  
                                  i1l4156 08AC                                    i1l4148 088C  
                                  i1l4228 172A                                    i1l1685 1525  
                                  i1l1757 1584                                    i1l4094 165F  
                                  i1l4086 164F                                    i1l4078 163E  
                                  i1l4190 1571                                    i1l4182 155A  
                                  i1l4174 08EF                                    i1l4166 08D0  
                                  i1l4158 08B0                                    i1l4406 1323  
                                  i1l1687 152C                                    i1l4096 1669  
                                  i1l4088 1652                                    i1l4192 1575  
                                  i1l4184 155F                                    i1l4176 08FB  
                                  i1l4168 08DB                                    i1l4408 132A  
                                  i1l4098 166D                                    i1l4194 157A  
                                  i1l4186 1563                                    i1l4178 1551  
                                  i1l4188 1567                                    i1l4196 1580  
                                  i1l4620 1443                                    i1l4622 1451  
                                  i1l4624 1454                                    i1l4618 1441  
                                  i1l4626 12AF                                    i1l4628 12B1  
                                  i1l5380 000B                                    i1l4590 1337  
                                  i1l5390 0024                                    i1l5382 000F  
                                  i1l5384 0017                                    i1l5394 002D  
                                  i1l5386 001B                                    i1l5378 0006  
                                  i1l4588 1330                                    i1l5396 0031  
                                  u312_20 132A                                    u312_21 1329  
                                  _LCDcmd 12C3                                    u252_20 07F9  
                                  u252_21 07F8                                    u341_20 1451  
                                  u341_21 1450                                    u253_25 13F8  
                                  u270_20 165F                                    u430_20 000F  
                                  u270_21 165E                                    u430_21 000E  
                                  u271_20 1669                                    u431_20 0017  
                                  u271_21 1668                                    u431_21 0016  
                                  u271_25 1665                                    u280_20 1567  
                                  u432_20 001B                                    u280_21 1566  
                                  u432_21 001A                                    u272_25 166E  
                                  u273_20 1678                                    u281_20 1571  
                                  u433_20 001F                                    u273_21 1677  
                                  u281_21 1570                                    u433_21 001E  
                                  u281_25 156D                                    u274_20 167D  
                                  u266_20 1639                                    u434_20 0024  
                                  u274_21 167C                                    u266_21 1638  
                                  u434_21 0023                                    u282_25 1576  
                                  u267_20 1644                                    u283_20 1580  
                                  u339_20 1337                                    u435_20 0028  
                                  u267_21 1643                                    u283_21 157F  
                                  u339_21 1336                                    u435_21 0027  
                                  u275_25 1513                                    u268_20 164F  
                                  u276_20 1523                                    u284_20 14EE  
                                  u436_20 002D                                    u268_21 164E  
                                  u276_21 1522                                    u284_21 14ED  
                                  u436_21 002C                                    _LCDstr 142B  
                                  u277_20 152B                                    u285_20 16E8  
                                  u437_20 0031                                    u429_20 000B  
                                  u277_21 152A                                    u285_21 16E5  
                                  u437_21 0030                                    u429_21 000A  
                                  u269_25 1653                                    u278_20 1557  
                                  u278_21 1556                                    u286_24 16EA  
                                  u287_20 16FB                                    u287_21 16FA  
                                  u279_25 155B                                    u288_20 1715  
                                  u288_21 1714                                    u289_20 171B  
                                  u289_21 171A                                    _OSCFRQ 0893  
                               ??_ReadI2C 0020                               LCDsend2x4@c 0025  
              ??_ADCC_GetConversionResult 0022                              _CCPTMRS1bits 021F  
                                  ___wmul 14C8                                 ??___awmod 0074  
                               ??___lbmod 0071                                 ??___lwdiv 0024  
                               ??___lwmod 002C                          ?_TMR0_Initialize 0070  
                 __end_of_PWM6_Initialize 134A                                    lcd@buf 0055  
                                  lcd@ctl 0045                           ___awmod@divisor 0070  
                         ___awmod@counter 0075                   __end_of_DATAEE_ReadByte 1391  
                         _ADCC_Initialize 13FF                            _PMD_Initialize 12BB  
                            __pdataCOMMON 007D                         __end_ofi1___lwmod 1585  
                               ??_isdigit 0020                    ??_ADCC_StartConversion 0020  
           i1DATAEE_WriteByte@GIEBitValue 0073                     __end_of_TMR0_CallBack 1330  
TMR2_SetInterruptHandler@InterruptHandler 0020  TMR0_SetInterruptHandler@InterruptHandler 0020  
                               ??_sprintf 0036                         _SYSTEM_Initialize 1415  
                         ___lbmod@divisor 0070                   __end_of__initialization 006C  
                         ___lbmod@counter 0074                     __end_of_TMR2_CallBack 133D  
                      ?_SYSTEM_Initialize 0070                            __pcstackCOMMON 0070  
                            __pidataBANK1 12B5                       ??_SYSTEM_Initialize 0022  
                               ?_TMR0_ISR 0070                                 ?_TMR2_ISR 0070  
                        _DATAEE_WriteByte 152D                             __end_of_lumin 082F  
                           __end_of_tsttc 0C09                          ?_TMR2_Initialize 0070  
                  __end_of_PMD_Initialize 12C3                         ??_conf_alarm_flag 0020  
                   TMR0_ISR@CountCallBack 00A2                        __size_of_conf_temp 0010  
             ADCC_StartConversion@channel 0020                              ??_LCDsend2x4 0023  
               __end_of_SYSTEM_Initialize 142B                                   ??_lumin 0022  
                            sprintf@width 003F                     __end_of_TMR0_callback 1730  
                                 ??_tsttc 0022                                __pbssBANK0 006D  
                              __pbssBANK1 00A0                    i1DATAEE_WriteByte@bAdd 0070  
                                 ?_LCDcmd 0070                                _check_vars 066D  
                                 ?_LCDstr 0070                                   LCDcmd@c 0028  
                   __end_of_TMR2_callback 150A                                   LCDstr@c 002A  
                                 LCDstr@p 002B                                __pmaintext 0DA7  
                          lcd@temperature 0066          __end_of_TMR0_SetInterruptHandler 12E5  
                                 ?___wmul 0020                                ??_TMR0_ISR 0079  
                              ??_TMR2_ISR 0076                   __end_of_ADCC_Initialize 1415  
              __end_of_PWM6_LoadDutyValue 13FF                                __pintentry 0004  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                      __end_of_LCDsend2x4 09D4                        __size_of_save_vars 00E5  
                                 _ADPREVH 008F                                   _ADPREVL 008E  
                               ?_WriteI2C 0070                          ?_PWM6_Initialize 0070  
                                 _ADSTPTH 0113                                   _ADSTPTL 0112  
                         ?_PMD_Initialize 0070                          ?_DATAEE_ReadByte 0020  
                       ?_i2c1_driver_open 0070                                   _LCDchar 12EE  
                                 _LCDinit 178A                                   _LCDsend 1687  
                      ??_i2c1_driver_open 0020                                _conf_lumin 13A1  
                                 _OSCCON1 088D                                   _OSCCON3 088F  
                                 _NVMADRH 081B                                   _NVMADRL 081A  
                                 _NVMDATH 081D                                   _OSCTUNE 0892  
                                 _NVMDATL 081C                                   _NVMCON2 081F  
                                 _PWM6DCH 038D                                   _PWM6DCL 038C  
                                 _PWM6CON 038E                                   _SSP1ADD 018D  
                                 _SLRCONA 0F3B                                   _SLRCONB 0F46  
                                 _SLRCONC 0F51                                   _SLRCOND 0F5C  
                                 _SLRCONE 0F67                                   _SSP1BUF 018C  
                                 _SSP1MSK 018E                    __size_of_checkButtonS1 001D  
                  __size_of_checkButtonS2 001D                              ?i1_save_vars 0070  
                            LCDsend2x4@hc 0026                              LCDsend2x4@lc 0027  
                         __size_of_LCDcmd 0008                      DATAEE_WriteByte@bAdd 0020  
                      _i2c1_driver_i2cISR 00A4                           __size_of_LCDstr 0016  
                                 _ReadI2C 14A9                ??_TMR2_SetInterruptHandler 0022  
                       __end_of_conf_temp 13C1                                   ___awmod 1634  
                                 ___lbmod 150A                           __size_of___wmul 0020  
                                 ___lwdiv 15F7                                   ___lwmod 1585  
                   __end_of_conf_alarm_hh 1358                     __end_of_conf_alarm_mm 1366  
                   __end_of_conf_alarm_ss 13A1                                ??_WriteI2C 0020  
                   __end_of_conf_clock_hh 1374                     __end_of_conf_clock_mm 1382  
                                 __ptext1 0AB9                                   __ptext2 14A9  
                                 __ptext3 09D4                                   __ptext4 152D  
                                 __ptext5 0804                                   __ptext6 12CB  
                                 __ptext7 12F7                                   __ptext8 0070  
                                 __ptext9 0C09                     __end_of_conf_clock_ss 12AF  
                                 _dpowers 180F                     _OSCILLATOR_Initialize 12D3  
                               _T2CONbits 028E                              __size_of_lcd 05FD  
                                 _isdigit 13C1                          ___awmod@dividend 0072  
                                 lcd@alah 004C                                   lcd@alam 004D  
                                 lcd@alas 004E                  ??_PIN_MANAGER_Initialize 0020  
                               _T2HLTbits 028F                      lcd@temperature_alarm 004A  
              __size_of_SYSTEM_Initialize 0016                                   _sprintf 0C09  
                                 clrloop0 1318                      end_of_initialization 006C  
                               _T2RSTbits 0291                               ?_check_vars 0070  
                       __end_of_save_vars 0AB9                          i1save_vars@first 0075  
                      i1_DATAEE_WriteByte 07E2                             _checkButtonS1 146F  
                           _checkButtonS2 148C                       ?i1_DATAEE_WriteByte 0070  
                        ?_ADCC_Initialize 0070                                _timer_flag 0079  
                _TMR0_SetInterruptHandler 12DC                                 _PORTBbits 000D  
                               _PORTCbits 000E                          ___lbmod@dividend 0073  
                             ?_conf_lumin 0070                                 _TRISCbits 0013  
                               i1___lwmod 1551                      ??i1_DATAEE_WriteByte 0073  
                __end_of_DATAEE_WriteByte 1551                               ___lbmod@rem 0075  
                          __end_of_LCDcmd 12CB                            __end_of_LCDstr 1441  
                          LCDsend2x4@mode 0022                           _conf_alarm_flag 1300  
                          ?_checkButtonS1 0070                            ?_checkButtonS2 0070  
    __end_of_TMR2_DefaultInterruptHandler 0003     __size_of_TMR2_DefaultInterruptHandler 0001  
            _TMR2_DefaultInterruptHandler 0002                            __end_of___wmul 14E8  
                           __pidataCOMMON 0003                         __size_of_TMR0_ISR 0017  
                       __size_of_TMR2_ISR 0006                         i1___lwmod@divisor 0070  
                  ?_OSCILLATOR_Initialize 0070                       __size_of_check_vars 0175  
                       i1___lwmod@counter 0075         __size_of_ADCC_GetConversionResult 0009  
               ?_ADCC_GetConversionResult 0020                       start_initialization 0039  
                __size_of_TMR0_Initialize 0015           __size_of_PIN_MANAGER_Initialize 003D  
                             __end_of_lcd 066D                                ?i1___lwmod 0070  
                        WriteI2C@data_out 0021             __size_of_ADCC_StartConversion 0008  
                                ??_LCDcmd 0028                                  ??_LCDstr 0029  
                    __size_ofi1_save_vars 00D1                       DATAEE_ReadByte@bAdd 0020  
                     __size_of_conf_lumin 0010                          ??_PMD_Initialize 0020  
                                ??___wmul 0024                       lcd@luminosity_alarm 004B  
                  __size_of_TMR0_CallBack 000D                               __pdataBANK1 00B8  
           ?_TMR2_DefaultInterruptHandler 0070                         __size_of_WriteI2C 005A  
                 i1DATAEE_WriteByte@bData 0072                    __size_of_TMR2_CallBack 000D  
                             __pbssBIGRAM 2373                                  ?_LCDchar 0070  
                             __pbssCOMMON 0079                                  ?_LCDinit 0070  
                                ?_LCDsend 0070                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00AC  
                          check_vars@last 0024                        _PWM6_LoadDutyValue 13E9  
                __size_of_TMR2_Initialize 0017                            check_vars@pass 0023  
                            _isdigit$2823 0020                                  LCDchar@c 0028  
                 __end_of_conf_alarm_flag 130B                                  LCDsend@c 0023  
                     ?_PWM6_LoadDutyValue 0070                               sprintf@flag 003E  
               __size_of_i2c1_driver_open 000C                               sprintf@prec 003B  
                                ?_ReadI2C 0070                     _TMR0_InterruptHandler 00C0  
                               _btn1State 006E                                 _btn2State 006D  
                               __pnvBANK1 00BE                           ??_checkButtonS1 0020  
                         ??_checkButtonS2 0020                                 _main$3249 0067  
                        ___lwdiv@dividend 0022                    _PIN_MANAGER_Initialize 15BA  
                           lcd@luminosity 0043                                  ?___awmod 0070  
                                ?___lbmod 0070                                  ?___lwdiv 0020  
                                ?___lwmod 0028               _i2c1_driver_busCollisionISR 00A6  
                  __size_of_TMR0_callback 0056                      ??_PWM6_LoadDutyValue 0072  
                               _conf_temp 13B1              ??_INTERRUPT_InterruptManager 0079  
                                ?_isdigit 0070                    __size_of_TMR2_callback 0022  
                __size_of_PWM6_Initialize 000D                          ___lwdiv@quotient 0025  
                             ??i1___lwmod 0074                                  ?_sprintf 002E  
                           _TMR0_CallBack 1323                                  _T2CLKCON 0290  
                __size_of_DATAEE_ReadByte 000F                            __size_of_lumin 002B  
                          __size_of_tsttc 0150                              ??_check_vars 0022  
                       ??_TMR0_Initialize 0022                            ___wmul@product 0024  
                                _LATAbits 0016                                 clear_ram0 1317  
                           _TMR2_CallBack 1330                                  _PIE0bits 0716  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                               _save_vars 09D4       __size_of_INTERRUPT_InterruptManager 0033  
              ??_TMR0_SetInterruptHandler 0022                                  _PIR0bits 070C  
                                _PIR3bits 070F                                  _PIR4bits 0710  
                         lumin@luminosity 0024                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR0_ISR 1441  
                                _TMR2_ISR 12AF                                  _SSP1STAT 018F  
                              ?_conf_temp 0070                                  _PWM_DUTY 00A0  
                              _ADCON0bits 0093                                _ADCON1bits 0094  
                              _ADCON2bits 0095                                _ADCON3bits 0096  
                       ___wmul@multiplier 0020                        __end_of_check_vars 07E2  
                               main@new_c 0068                                 main@new_l 0069  
          ??_TMR2_DefaultInterruptHandler 0070         __size_of_TMR2_SetInterruptHandler 0009  
                            ??_conf_lumin 0020                                 main@state 006C  
               ?_TMR2_SetInterruptHandler 0020                          __size_of_LCDchar 0009  
                   DATAEE_WriteByte@bData 0022                          __size_of_LCDinit 0076  
                        __size_of_LCDsend 0053                            ?_TMR0_CallBack 0070  
                           _TMR0_callback 16DA                         ?_DATAEE_WriteByte 0020  
                        ?_conf_alarm_flag 0070                    __size_of_conf_alarm_hh 000E  
                  __size_of_conf_alarm_mm 000E                    __size_of_conf_alarm_ss 0010  
                       ??_TMR2_Initialize 0022                            ?_TMR2_CallBack 0070  
                      ??_DATAEE_WriteByte 0023                    __size_of_conf_clock_hh 000E  
                  __size_of_conf_clock_mm 000E                    __size_of_conf_clock_ss 0005  
                        __size_of_ReadI2C 001F                                _ADSTATbits 0097  
                              ?_save_vars 0070                             _TMR2_callback 14E8  
        __end_of_ADCC_GetConversionResult 1300                        __end_of_conf_lumin 13B1  
                 ??_OSCILLATOR_Initialize 0020                          __size_of___awmod 0053  
                        __size_of___lbmod 0023                          __size_of___lwdiv 003D  
                        __size_of___lwmod 0035                                  _WriteI2C 1730  
                              sprintf@val 003C                                _T0CON0bits 001E  
                __size_of_ADCC_Initialize 0016                          __size_of_isdigit 0013  
                         ___lwdiv@divisor 0020                           ___lwdiv@counter 0027  
                                __ptext10 13C1                                  __ptext11 14C8  
                                __ptext20 12AA                                  __ptext12 1585  
                                __ptext21 1374                                  __ptext13 15F7  
                                __ptext30 146F                                  __ptext22 1366  
                                __ptext14 142B                                  __ptext31 1415  
                                __ptext23 1391                                  __ptext15 12EE  
                                __ptext40 13FF                                  __ptext32 1458  
                                __ptext24 1358                                  __ptext16 12C3  
                                __ptext41 178A                                  __ptext33 12E5  
                                __ptext25 134A                                  __ptext17 130B  
                                __ptext50 13E9                                  __ptext42 0900  
                                __ptext34 13D4                                  __ptext26 1300  
                                __ptext18 13B1                                  __ptext51 1441  
                                __ptext43 1687                                  __ptext35 12DC  
                                __ptext27 066D                                  __ptext19 13A1  
                                __ptext52 1323                                  __ptext44 1730  
                                __ptext36 133D                                  __ptext28 1382  
                                __ptext53 0803                                  __ptext37 12BB  
                                __ptext29 148C                                  __ptext54 16DA  
                                __ptext46 12AF                                  __ptext38 15BA  
                                __ptext55 082F                                  __ptext47 1330  
                                __ptext39 12D3                                  __ptext56 07E2  
                                __ptext48 0002                                  __ptext57 1551  
                                __ptext49 14E8                                  __ptext58 150A  
                                __ptext59 1634                              _SSP1CON1bits 0190  
                            _SSP1CON2bits 0191               __size_ofi1_DATAEE_WriteByte 001E  
                          ?_TMR0_callback 0070                          __size_of_sprintf 019E  
             DATAEE_WriteByte@GIEBitValue 0023                          _i2c1_driver_open 130B  
                       ??_PWM6_Initialize 0020                             __size_of_main 0259  
    __end_of_TMR0_DefaultInterruptHandler 0804     __size_of_TMR0_DefaultInterruptHandler 0001  
            _TMR0_DefaultInterruptHandler 0803                            ?_TMR2_callback 0070  
                       ??_DATAEE_ReadByte 0022                                  lcd@alarm 0044  
                                lcd@state 0049                                tsttc@value 0023  
            __end_of_ADCC_StartConversion 12D3                                  int$flags 007E  
      __end_of_INTERRUPT_InterruptManager 0037                _INTERRUPT_InterruptManager 0004  
                            _SSP1STATbits 018F                               ??_conf_temp 0020  
                           _conf_alarm_hh 134A                             _conf_alarm_mm 1358  
                           _conf_alarm_ss 1391                             _conf_clock_hh 1366  
                           _conf_clock_mm 1374                             _conf_clock_ss 12AA  
                              _INTCONbits 000B                           ??_TMR0_CallBack 0079  
                             _NVMCON1bits 081E                            __pstringtext10 0000  
                                isdigit@c 0021                                _LCDsend2x4 0900  
                           ??i1_save_vars 0074                                  intlevel1 0000  
                               sprintf@ap 003A                                 sprintf@sp 0042  
                         ??_TMR2_CallBack 0076                          ___lwmod@dividend 002A  
                 ?_PIN_MANAGER_Initialize 0070                               ??_save_vars 0024  
           ?_TMR0_DefaultInterruptHandler 0070                  _ADCC_GetConversionResult 12F7  
                          ?_conf_alarm_hh 0070                            ?_conf_alarm_mm 0070  
                          ?_conf_alarm_ss 0070                             __pstringtext1 180F  
                           __pstringtext2 1800                             __pstringtext3 1819  
                           __pstringtext4 1820                             __pstringtext5 1826  
                           __pstringtext6 182A                             __pstringtext7 182E  
                           __pstringtext8 1830                             __pstringtext9 1832  
                          ?_conf_clock_hh 0070                            ?_conf_clock_mm 0070  
                          ?_conf_clock_ss 0070                                  sprintf@c 0041  
                                sprintf@f 002E                                _SSP1DATPPS 0EC6  
                              _SSP1CLKPPS 0EC5                           ___lwmod@divisor 0028  
                         _TMR0_Initialize 13D4                           ___lwmod@counter 002D  
                         ??_TMR0_callback 0077               PWM6_LoadDutyValue@dutyValue 0070  
          __end_of_PIN_MANAGER_Initialize 15F7                         ??_ADCC_Initialize 0020  
                         ??_TMR2_callback 0076                     _TMR2_InterruptHandler 00BE  
                     __end_ofi1_save_vars 0900                     __end_of_checkButtonS1 148C  
                   __end_of_checkButtonS2 14A9  
