

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sun Nov 15 17:46:19 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    16                           	psect	cinit,global,class=CODE,merge=1,delta=2
    17                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	clrtext,global,class=CODE,delta=2
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    24                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    27                           	psect	text1,local,class=CODE,merge=1,delta=2
    28                           	psect	text2,local,class=CODE,merge=1,delta=2
    29                           	psect	text3,local,class=CODE,merge=1,delta=2
    30                           	psect	text4,local,class=CODE,merge=1,delta=2
    31                           	psect	text5,local,class=CODE,merge=1,delta=2
    32                           	psect	text6,local,class=CODE,merge=1,delta=2
    33                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text12,local,class=CODE,merge=1,delta=2
    39                           	psect	text13,local,class=CODE,merge=1,delta=2
    40                           	psect	text14,local,class=CODE,merge=1,delta=2
    41                           	psect	text15,local,class=CODE,merge=1,delta=2
    42                           	psect	text16,local,class=CODE,merge=1,delta=2
    43                           	psect	text17,local,class=CODE,merge=1,delta=2
    44                           	psect	text18,local,class=CODE,merge=1,delta=2
    45                           	psect	text19,local,class=CODE,merge=1,delta=2
    46                           	psect	text20,local,class=CODE,merge=1,delta=2
    47                           	psect	text21,local,class=CODE,merge=1,delta=2
    48                           	psect	text22,local,class=CODE,merge=1,delta=2
    49                           	psect	text23,local,class=CODE,merge=1,delta=2
    50                           	psect	text24,local,class=CODE,merge=1,delta=2
    51                           	psect	text25,local,class=CODE,merge=1,delta=2
    52                           	psect	text26,local,class=CODE,merge=1,delta=2
    53                           	psect	text27,local,class=CODE,merge=1,delta=2
    54                           	psect	text28,local,class=CODE,merge=1,delta=2
    55                           	psect	text29,local,class=CODE,merge=1,delta=2
    56                           	psect	text30,local,class=CODE,merge=1,delta=2
    57                           	psect	text31,local,class=CODE,merge=1,delta=2
    58                           	psect	text32,local,class=CODE,merge=1,delta=2
    59                           	psect	text33,local,class=CODE,merge=1,delta=2
    60                           	psect	text34,local,class=CODE,merge=1,delta=2
    61                           	psect	text35,local,class=CODE,merge=1,delta=2
    62                           	psect	text36,local,class=CODE,merge=1,delta=2
    63                           	psect	text37,local,class=CODE,merge=1,delta=2
    64                           	psect	intentry,global,class=CODE,delta=2
    65                           	psect	text39,local,class=CODE,merge=1,delta=2
    66                           	psect	text40,local,class=CODE,merge=1,delta=2
    67                           	psect	text41,local,class=CODE,merge=1,delta=2
    68                           	psect	text42,local,class=CODE,merge=1,delta=2
    69                           	psect	text43,local,class=CODE,merge=1,delta=2
    70                           	psect	text44,local,class=CODE,merge=1,delta=2,group=2
    71                           	psect	text45,local,class=CODE,merge=1,delta=2,group=2
    72                           	psect	text46,local,class=CODE,merge=1,delta=2
    73                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    74                           	dabs	1,0x620,48
    75                           	dabs	1,0x5A3,77
    76                           	dabs	1,0x2373,0,_reg
    77                           	dabs	1,0x7E,2
    78  0000                     
    79                           ; Version 2.20
    80                           ; Generated 30/04/2020 GMT
    81                           ; 
    82                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    83                           ; All rights reserved.
    84                           ; 
    85                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    86                           ; 
    87                           ; Redistribution and use in source and binary forms, with or without modification, are
    88                           ; permitted provided that the following conditions are met:
    89                           ; 
    90                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    91                           ;        conditions and the following disclaimer.
    92                           ; 
    93                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    94                           ;        of conditions and the following disclaimer in the documentation and/or other
    95                           ;        materials provided with the distribution.
    96                           ; 
    97                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    98                           ;        software without specific prior written permission.
    99                           ; 
   100                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   101                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   102                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   103                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   104                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   105                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   106                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   107                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   108                           ; 
   109                           ; 
   110                           ; Code-generator required, PIC16F18875 Definitions
   111                           ; 
   112                           ; SFR Addresses
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0008                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000D                     	;# 
   127  000E                     	;# 
   128  000F                     	;# 
   129  0010                     	;# 
   130  0011                     	;# 
   131  0012                     	;# 
   132  0013                     	;# 
   133  0014                     	;# 
   134  0015                     	;# 
   135  0016                     	;# 
   136  0017                     	;# 
   137  0018                     	;# 
   138  0019                     	;# 
   139  001A                     	;# 
   140  001C                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001D                     	;# 
   144  001E                     	;# 
   145  001F                     	;# 
   146  008C                     	;# 
   147  008C                     	;# 
   148  008D                     	;# 
   149  008E                     	;# 
   150  008E                     	;# 
   151  008F                     	;# 
   152  0090                     	;# 
   153  0090                     	;# 
   154  0091                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0095                     	;# 
   158  0096                     	;# 
   159  0097                     	;# 
   160  0098                     	;# 
   161  0099                     	;# 
   162  009A                     	;# 
   163  009B                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  010C                     	;# 
   168  010D                     	;# 
   169  010E                     	;# 
   170  010E                     	;# 
   171  010F                     	;# 
   172  0110                     	;# 
   173  0110                     	;# 
   174  0111                     	;# 
   175  0112                     	;# 
   176  0112                     	;# 
   177  0113                     	;# 
   178  0114                     	;# 
   179  0114                     	;# 
   180  0115                     	;# 
   181  0116                     	;# 
   182  0116                     	;# 
   183  0117                     	;# 
   184  0119                     	;# 
   185  0119                     	;# 
   186  0119                     	;# 
   187  011A                     	;# 
   188  011A                     	;# 
   189  011A                     	;# 
   190  011B                     	;# 
   191  011B                     	;# 
   192  011B                     	;# 
   193  011B                     	;# 
   194  011B                     	;# 
   195  011C                     	;# 
   196  011C                     	;# 
   197  011C                     	;# 
   198  011D                     	;# 
   199  011D                     	;# 
   200  011D                     	;# 
   201  011E                     	;# 
   202  011E                     	;# 
   203  011E                     	;# 
   204  011F                     	;# 
   205  011F                     	;# 
   206  011F                     	;# 
   207  011F                     	;# 
   208  011F                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  018E                     	;# 
   212  018F                     	;# 
   213  0190                     	;# 
   214  0191                     	;# 
   215  0192                     	;# 
   216  0196                     	;# 
   217  0197                     	;# 
   218  0198                     	;# 
   219  0199                     	;# 
   220  019A                     	;# 
   221  019B                     	;# 
   222  019C                     	;# 
   223  020C                     	;# 
   224  020C                     	;# 
   225  020D                     	;# 
   226  020E                     	;# 
   227  020F                     	;# 
   228  020F                     	;# 
   229  0210                     	;# 
   230  0210                     	;# 
   231  0211                     	;# 
   232  0211                     	;# 
   233  0212                     	;# 
   234  0212                     	;# 
   235  0213                     	;# 
   236  0214                     	;# 
   237  0215                     	;# 
   238  0215                     	;# 
   239  0216                     	;# 
   240  0216                     	;# 
   241  0217                     	;# 
   242  0217                     	;# 
   243  0218                     	;# 
   244  0218                     	;# 
   245  0219                     	;# 
   246  021A                     	;# 
   247  021B                     	;# 
   248  021B                     	;# 
   249  021C                     	;# 
   250  021C                     	;# 
   251  021D                     	;# 
   252  021D                     	;# 
   253  021E                     	;# 
   254  021F                     	;# 
   255  028C                     	;# 
   256  028C                     	;# 
   257  028D                     	;# 
   258  028D                     	;# 
   259  028E                     	;# 
   260  028F                     	;# 
   261  0290                     	;# 
   262  0290                     	;# 
   263  0291                     	;# 
   264  0292                     	;# 
   265  0292                     	;# 
   266  0293                     	;# 
   267  0293                     	;# 
   268  0294                     	;# 
   269  0295                     	;# 
   270  0296                     	;# 
   271  0296                     	;# 
   272  0297                     	;# 
   273  0298                     	;# 
   274  0298                     	;# 
   275  0299                     	;# 
   276  0299                     	;# 
   277  029A                     	;# 
   278  029B                     	;# 
   279  029C                     	;# 
   280  029C                     	;# 
   281  029D                     	;# 
   282  030C                     	;# 
   283  030C                     	;# 
   284  030D                     	;# 
   285  030E                     	;# 
   286  030F                     	;# 
   287  0310                     	;# 
   288  0310                     	;# 
   289  0311                     	;# 
   290  0312                     	;# 
   291  0313                     	;# 
   292  0314                     	;# 
   293  0314                     	;# 
   294  0315                     	;# 
   295  0316                     	;# 
   296  0317                     	;# 
   297  0318                     	;# 
   298  0318                     	;# 
   299  0319                     	;# 
   300  031A                     	;# 
   301  031B                     	;# 
   302  031C                     	;# 
   303  031C                     	;# 
   304  031D                     	;# 
   305  031E                     	;# 
   306  031F                     	;# 
   307  038C                     	;# 
   308  038C                     	;# 
   309  038D                     	;# 
   310  038E                     	;# 
   311  0390                     	;# 
   312  0390                     	;# 
   313  0391                     	;# 
   314  0392                     	;# 
   315  040C                     	;# 
   316  040D                     	;# 
   317  040E                     	;# 
   318  040F                     	;# 
   319  0410                     	;# 
   320  0411                     	;# 
   321  0416                     	;# 
   322  0416                     	;# 
   323  0417                     	;# 
   324  0418                     	;# 
   325  0418                     	;# 
   326  0419                     	;# 
   327  041A                     	;# 
   328  041A                     	;# 
   329  041B                     	;# 
   330  041C                     	;# 
   331  041C                     	;# 
   332  041D                     	;# 
   333  041E                     	;# 
   334  041F                     	;# 
   335  048C                     	;# 
   336  048C                     	;# 
   337  048D                     	;# 
   338  048E                     	;# 
   339  048F                     	;# 
   340  048F                     	;# 
   341  0490                     	;# 
   342  0491                     	;# 
   343  0492                     	;# 
   344  0492                     	;# 
   345  0493                     	;# 
   346  0494                     	;# 
   347  0495                     	;# 
   348  0495                     	;# 
   349  0496                     	;# 
   350  0497                     	;# 
   351  0498                     	;# 
   352  0499                     	;# 
   353  049A                     	;# 
   354  049B                     	;# 
   355  049C                     	;# 
   356  049D                     	;# 
   357  050C                     	;# 
   358  050C                     	;# 
   359  050D                     	;# 
   360  050E                     	;# 
   361  050F                     	;# 
   362  050F                     	;# 
   363  0510                     	;# 
   364  0511                     	;# 
   365  0512                     	;# 
   366  0512                     	;# 
   367  0513                     	;# 
   368  0514                     	;# 
   369  0515                     	;# 
   370  0515                     	;# 
   371  0516                     	;# 
   372  0517                     	;# 
   373  0518                     	;# 
   374  0519                     	;# 
   375  051A                     	;# 
   376  051B                     	;# 
   377  051C                     	;# 
   378  051D                     	;# 
   379  058C                     	;# 
   380  058C                     	;# 
   381  058D                     	;# 
   382  058E                     	;# 
   383  058F                     	;# 
   384  058F                     	;# 
   385  0590                     	;# 
   386  0591                     	;# 
   387  0592                     	;# 
   388  0593                     	;# 
   389  060C                     	;# 
   390  060D                     	;# 
   391  060E                     	;# 
   392  060F                     	;# 
   393  0610                     	;# 
   394  0611                     	;# 
   395  0612                     	;# 
   396  0613                     	;# 
   397  0614                     	;# 
   398  0616                     	;# 
   399  0617                     	;# 
   400  0618                     	;# 
   401  0619                     	;# 
   402  061A                     	;# 
   403  061B                     	;# 
   404  061C                     	;# 
   405  061D                     	;# 
   406  061E                     	;# 
   407  068C                     	;# 
   408  068D                     	;# 
   409  068E                     	;# 
   410  068F                     	;# 
   411  0690                     	;# 
   412  0691                     	;# 
   413  0692                     	;# 
   414  0693                     	;# 
   415  0694                     	;# 
   416  070C                     	;# 
   417  070D                     	;# 
   418  070E                     	;# 
   419  070F                     	;# 
   420  0710                     	;# 
   421  0711                     	;# 
   422  0712                     	;# 
   423  0713                     	;# 
   424  0714                     	;# 
   425  0716                     	;# 
   426  0717                     	;# 
   427  0718                     	;# 
   428  0719                     	;# 
   429  071A                     	;# 
   430  071B                     	;# 
   431  071C                     	;# 
   432  071D                     	;# 
   433  071E                     	;# 
   434  0796                     	;# 
   435  0797                     	;# 
   436  0798                     	;# 
   437  0799                     	;# 
   438  079A                     	;# 
   439  079B                     	;# 
   440  080C                     	;# 
   441  080D                     	;# 
   442  080E                     	;# 
   443  080F                     	;# 
   444  0810                     	;# 
   445  0811                     	;# 
   446  0812                     	;# 
   447  0813                     	;# 
   448  0814                     	;# 
   449  081A                     	;# 
   450  081B                     	;# 
   451  081C                     	;# 
   452  081D                     	;# 
   453  081E                     	;# 
   454  081F                     	;# 
   455  088C                     	;# 
   456  088D                     	;# 
   457  088E                     	;# 
   458  088F                     	;# 
   459  0890                     	;# 
   460  0891                     	;# 
   461  0892                     	;# 
   462  0893                     	;# 
   463  0895                     	;# 
   464  0896                     	;# 
   465  0897                     	;# 
   466  0898                     	;# 
   467  0899                     	;# 
   468  089A                     	;# 
   469  089B                     	;# 
   470  090C                     	;# 
   471  090E                     	;# 
   472  090F                     	;# 
   473  091F                     	;# 
   474  091F                     	;# 
   475  098F                     	;# 
   476  098F                     	;# 
   477  0990                     	;# 
   478  0991                     	;# 
   479  0992                     	;# 
   480  0993                     	;# 
   481  0994                     	;# 
   482  0995                     	;# 
   483  0996                     	;# 
   484  0997                     	;# 
   485  0E0F                     	;# 
   486  0E10                     	;# 
   487  0E11                     	;# 
   488  0E12                     	;# 
   489  0E13                     	;# 
   490  0E14                     	;# 
   491  0E15                     	;# 
   492  0E16                     	;# 
   493  0E17                     	;# 
   494  0E18                     	;# 
   495  0E19                     	;# 
   496  0E1A                     	;# 
   497  0E1B                     	;# 
   498  0E1C                     	;# 
   499  0E1D                     	;# 
   500  0E1E                     	;# 
   501  0E1F                     	;# 
   502  0E20                     	;# 
   503  0E21                     	;# 
   504  0E22                     	;# 
   505  0E23                     	;# 
   506  0E24                     	;# 
   507  0E25                     	;# 
   508  0E26                     	;# 
   509  0E27                     	;# 
   510  0E28                     	;# 
   511  0E29                     	;# 
   512  0E2A                     	;# 
   513  0E2B                     	;# 
   514  0E2C                     	;# 
   515  0E2D                     	;# 
   516  0E2E                     	;# 
   517  0E2F                     	;# 
   518  0E30                     	;# 
   519  0E31                     	;# 
   520  0E32                     	;# 
   521  0E33                     	;# 
   522  0E34                     	;# 
   523  0E35                     	;# 
   524  0E36                     	;# 
   525  0E37                     	;# 
   526  0E8F                     	;# 
   527  0E90                     	;# 
   528  0E91                     	;# 
   529  0E92                     	;# 
   530  0E93                     	;# 
   531  0E94                     	;# 
   532  0E95                     	;# 
   533  0E96                     	;# 
   534  0E97                     	;# 
   535  0E9C                     	;# 
   536  0E9D                     	;# 
   537  0E9E                     	;# 
   538  0EA1                     	;# 
   539  0EA2                     	;# 
   540  0EA3                     	;# 
   541  0EA4                     	;# 
   542  0EA5                     	;# 
   543  0EA9                     	;# 
   544  0EAA                     	;# 
   545  0EAB                     	;# 
   546  0EAC                     	;# 
   547  0EB1                     	;# 
   548  0EB2                     	;# 
   549  0EB3                     	;# 
   550  0EB8                     	;# 
   551  0EB9                     	;# 
   552  0EBA                     	;# 
   553  0EBB                     	;# 
   554  0EBC                     	;# 
   555  0EBD                     	;# 
   556  0EBE                     	;# 
   557  0EC3                     	;# 
   558  0EC5                     	;# 
   559  0EC6                     	;# 
   560  0EC7                     	;# 
   561  0EC8                     	;# 
   562  0EC9                     	;# 
   563  0ECA                     	;# 
   564  0ECB                     	;# 
   565  0ECC                     	;# 
   566  0F10                     	;# 
   567  0F11                     	;# 
   568  0F12                     	;# 
   569  0F13                     	;# 
   570  0F14                     	;# 
   571  0F15                     	;# 
   572  0F16                     	;# 
   573  0F17                     	;# 
   574  0F18                     	;# 
   575  0F19                     	;# 
   576  0F1A                     	;# 
   577  0F1B                     	;# 
   578  0F1C                     	;# 
   579  0F1D                     	;# 
   580  0F1E                     	;# 
   581  0F1F                     	;# 
   582  0F20                     	;# 
   583  0F21                     	;# 
   584  0F22                     	;# 
   585  0F23                     	;# 
   586  0F24                     	;# 
   587  0F25                     	;# 
   588  0F26                     	;# 
   589  0F27                     	;# 
   590  0F28                     	;# 
   591  0F29                     	;# 
   592  0F2A                     	;# 
   593  0F2B                     	;# 
   594  0F2C                     	;# 
   595  0F2D                     	;# 
   596  0F2E                     	;# 
   597  0F2F                     	;# 
   598  0F30                     	;# 
   599  0F31                     	;# 
   600  0F32                     	;# 
   601  0F38                     	;# 
   602  0F39                     	;# 
   603  0F3A                     	;# 
   604  0F3B                     	;# 
   605  0F3C                     	;# 
   606  0F3D                     	;# 
   607  0F3E                     	;# 
   608  0F3F                     	;# 
   609  0F40                     	;# 
   610  0F41                     	;# 
   611  0F43                     	;# 
   612  0F44                     	;# 
   613  0F45                     	;# 
   614  0F46                     	;# 
   615  0F47                     	;# 
   616  0F48                     	;# 
   617  0F49                     	;# 
   618  0F4A                     	;# 
   619  0F4B                     	;# 
   620  0F4C                     	;# 
   621  0F4E                     	;# 
   622  0F4F                     	;# 
   623  0F50                     	;# 
   624  0F51                     	;# 
   625  0F52                     	;# 
   626  0F53                     	;# 
   627  0F54                     	;# 
   628  0F55                     	;# 
   629  0F56                     	;# 
   630  0F57                     	;# 
   631  0F59                     	;# 
   632  0F5A                     	;# 
   633  0F5B                     	;# 
   634  0F5C                     	;# 
   635  0F5D                     	;# 
   636  0F61                     	;# 
   637  0F62                     	;# 
   638  0F64                     	;# 
   639  0F65                     	;# 
   640  0F66                     	;# 
   641  0F67                     	;# 
   642  0F68                     	;# 
   643  0F69                     	;# 
   644  0F6A                     	;# 
   645  0F6B                     	;# 
   646  0F6C                     	;# 
   647  0F6D                     	;# 
   648  0FE4                     	;# 
   649  0FE5                     	;# 
   650  0FE6                     	;# 
   651  0FE7                     	;# 
   652  0FE8                     	;# 
   653  0FE9                     	;# 
   654  0FEA                     	;# 
   655  0FEB                     	;# 
   656  0FED                     	;# 
   657  0FEE                     	;# 
   658  0FEF                     	;# 
   659  0000                     	;# 
   660  0001                     	;# 
   661  0002                     	;# 
   662  0003                     	;# 
   663  0004                     	;# 
   664  0005                     	;# 
   665  0006                     	;# 
   666  0007                     	;# 
   667  0008                     	;# 
   668  0009                     	;# 
   669  000A                     	;# 
   670  000B                     	;# 
   671  000C                     	;# 
   672  000D                     	;# 
   673  000E                     	;# 
   674  000F                     	;# 
   675  0010                     	;# 
   676  0011                     	;# 
   677  0012                     	;# 
   678  0013                     	;# 
   679  0014                     	;# 
   680  0015                     	;# 
   681  0016                     	;# 
   682  0017                     	;# 
   683  0018                     	;# 
   684  0019                     	;# 
   685  001A                     	;# 
   686  001C                     	;# 
   687  001C                     	;# 
   688  001D                     	;# 
   689  001D                     	;# 
   690  001E                     	;# 
   691  001F                     	;# 
   692  008C                     	;# 
   693  008C                     	;# 
   694  008D                     	;# 
   695  008E                     	;# 
   696  008E                     	;# 
   697  008F                     	;# 
   698  0090                     	;# 
   699  0090                     	;# 
   700  0091                     	;# 
   701  0093                     	;# 
   702  0094                     	;# 
   703  0095                     	;# 
   704  0096                     	;# 
   705  0097                     	;# 
   706  0098                     	;# 
   707  0099                     	;# 
   708  009A                     	;# 
   709  009B                     	;# 
   710  009C                     	;# 
   711  009D                     	;# 
   712  009E                     	;# 
   713  010C                     	;# 
   714  010D                     	;# 
   715  010E                     	;# 
   716  010E                     	;# 
   717  010F                     	;# 
   718  0110                     	;# 
   719  0110                     	;# 
   720  0111                     	;# 
   721  0112                     	;# 
   722  0112                     	;# 
   723  0113                     	;# 
   724  0114                     	;# 
   725  0114                     	;# 
   726  0115                     	;# 
   727  0116                     	;# 
   728  0116                     	;# 
   729  0117                     	;# 
   730  0119                     	;# 
   731  0119                     	;# 
   732  0119                     	;# 
   733  011A                     	;# 
   734  011A                     	;# 
   735  011A                     	;# 
   736  011B                     	;# 
   737  011B                     	;# 
   738  011B                     	;# 
   739  011B                     	;# 
   740  011B                     	;# 
   741  011C                     	;# 
   742  011C                     	;# 
   743  011C                     	;# 
   744  011D                     	;# 
   745  011D                     	;# 
   746  011D                     	;# 
   747  011E                     	;# 
   748  011E                     	;# 
   749  011E                     	;# 
   750  011F                     	;# 
   751  011F                     	;# 
   752  011F                     	;# 
   753  011F                     	;# 
   754  011F                     	;# 
   755  018C                     	;# 
   756  018D                     	;# 
   757  018E                     	;# 
   758  018F                     	;# 
   759  0190                     	;# 
   760  0191                     	;# 
   761  0192                     	;# 
   762  0196                     	;# 
   763  0197                     	;# 
   764  0198                     	;# 
   765  0199                     	;# 
   766  019A                     	;# 
   767  019B                     	;# 
   768  019C                     	;# 
   769  020C                     	;# 
   770  020C                     	;# 
   771  020D                     	;# 
   772  020E                     	;# 
   773  020F                     	;# 
   774  020F                     	;# 
   775  0210                     	;# 
   776  0210                     	;# 
   777  0211                     	;# 
   778  0211                     	;# 
   779  0212                     	;# 
   780  0212                     	;# 
   781  0213                     	;# 
   782  0214                     	;# 
   783  0215                     	;# 
   784  0215                     	;# 
   785  0216                     	;# 
   786  0216                     	;# 
   787  0217                     	;# 
   788  0217                     	;# 
   789  0218                     	;# 
   790  0218                     	;# 
   791  0219                     	;# 
   792  021A                     	;# 
   793  021B                     	;# 
   794  021B                     	;# 
   795  021C                     	;# 
   796  021C                     	;# 
   797  021D                     	;# 
   798  021D                     	;# 
   799  021E                     	;# 
   800  021F                     	;# 
   801  028C                     	;# 
   802  028C                     	;# 
   803  028D                     	;# 
   804  028D                     	;# 
   805  028E                     	;# 
   806  028F                     	;# 
   807  0290                     	;# 
   808  0290                     	;# 
   809  0291                     	;# 
   810  0292                     	;# 
   811  0292                     	;# 
   812  0293                     	;# 
   813  0293                     	;# 
   814  0294                     	;# 
   815  0295                     	;# 
   816  0296                     	;# 
   817  0296                     	;# 
   818  0297                     	;# 
   819  0298                     	;# 
   820  0298                     	;# 
   821  0299                     	;# 
   822  0299                     	;# 
   823  029A                     	;# 
   824  029B                     	;# 
   825  029C                     	;# 
   826  029C                     	;# 
   827  029D                     	;# 
   828  030C                     	;# 
   829  030C                     	;# 
   830  030D                     	;# 
   831  030E                     	;# 
   832  030F                     	;# 
   833  0310                     	;# 
   834  0310                     	;# 
   835  0311                     	;# 
   836  0312                     	;# 
   837  0313                     	;# 
   838  0314                     	;# 
   839  0314                     	;# 
   840  0315                     	;# 
   841  0316                     	;# 
   842  0317                     	;# 
   843  0318                     	;# 
   844  0318                     	;# 
   845  0319                     	;# 
   846  031A                     	;# 
   847  031B                     	;# 
   848  031C                     	;# 
   849  031C                     	;# 
   850  031D                     	;# 
   851  031E                     	;# 
   852  031F                     	;# 
   853  038C                     	;# 
   854  038C                     	;# 
   855  038D                     	;# 
   856  038E                     	;# 
   857  0390                     	;# 
   858  0390                     	;# 
   859  0391                     	;# 
   860  0392                     	;# 
   861  040C                     	;# 
   862  040D                     	;# 
   863  040E                     	;# 
   864  040F                     	;# 
   865  0410                     	;# 
   866  0411                     	;# 
   867  0416                     	;# 
   868  0416                     	;# 
   869  0417                     	;# 
   870  0418                     	;# 
   871  0418                     	;# 
   872  0419                     	;# 
   873  041A                     	;# 
   874  041A                     	;# 
   875  041B                     	;# 
   876  041C                     	;# 
   877  041C                     	;# 
   878  041D                     	;# 
   879  041E                     	;# 
   880  041F                     	;# 
   881  048C                     	;# 
   882  048C                     	;# 
   883  048D                     	;# 
   884  048E                     	;# 
   885  048F                     	;# 
   886  048F                     	;# 
   887  0490                     	;# 
   888  0491                     	;# 
   889  0492                     	;# 
   890  0492                     	;# 
   891  0493                     	;# 
   892  0494                     	;# 
   893  0495                     	;# 
   894  0495                     	;# 
   895  0496                     	;# 
   896  0497                     	;# 
   897  0498                     	;# 
   898  0499                     	;# 
   899  049A                     	;# 
   900  049B                     	;# 
   901  049C                     	;# 
   902  049D                     	;# 
   903  050C                     	;# 
   904  050C                     	;# 
   905  050D                     	;# 
   906  050E                     	;# 
   907  050F                     	;# 
   908  050F                     	;# 
   909  0510                     	;# 
   910  0511                     	;# 
   911  0512                     	;# 
   912  0512                     	;# 
   913  0513                     	;# 
   914  0514                     	;# 
   915  0515                     	;# 
   916  0515                     	;# 
   917  0516                     	;# 
   918  0517                     	;# 
   919  0518                     	;# 
   920  0519                     	;# 
   921  051A                     	;# 
   922  051B                     	;# 
   923  051C                     	;# 
   924  051D                     	;# 
   925  058C                     	;# 
   926  058C                     	;# 
   927  058D                     	;# 
   928  058E                     	;# 
   929  058F                     	;# 
   930  058F                     	;# 
   931  0590                     	;# 
   932  0591                     	;# 
   933  0592                     	;# 
   934  0593                     	;# 
   935  060C                     	;# 
   936  060D                     	;# 
   937  060E                     	;# 
   938  060F                     	;# 
   939  0610                     	;# 
   940  0611                     	;# 
   941  0612                     	;# 
   942  0613                     	;# 
   943  0614                     	;# 
   944  0616                     	;# 
   945  0617                     	;# 
   946  0618                     	;# 
   947  0619                     	;# 
   948  061A                     	;# 
   949  061B                     	;# 
   950  061C                     	;# 
   951  061D                     	;# 
   952  061E                     	;# 
   953  068C                     	;# 
   954  068D                     	;# 
   955  068E                     	;# 
   956  068F                     	;# 
   957  0690                     	;# 
   958  0691                     	;# 
   959  0692                     	;# 
   960  0693                     	;# 
   961  0694                     	;# 
   962  070C                     	;# 
   963  070D                     	;# 
   964  070E                     	;# 
   965  070F                     	;# 
   966  0710                     	;# 
   967  0711                     	;# 
   968  0712                     	;# 
   969  0713                     	;# 
   970  0714                     	;# 
   971  0716                     	;# 
   972  0717                     	;# 
   973  0718                     	;# 
   974  0719                     	;# 
   975  071A                     	;# 
   976  071B                     	;# 
   977  071C                     	;# 
   978  071D                     	;# 
   979  071E                     	;# 
   980  0796                     	;# 
   981  0797                     	;# 
   982  0798                     	;# 
   983  0799                     	;# 
   984  079A                     	;# 
   985  079B                     	;# 
   986  080C                     	;# 
   987  080D                     	;# 
   988  080E                     	;# 
   989  080F                     	;# 
   990  0810                     	;# 
   991  0811                     	;# 
   992  0812                     	;# 
   993  0813                     	;# 
   994  0814                     	;# 
   995  081A                     	;# 
   996  081B                     	;# 
   997  081C                     	;# 
   998  081D                     	;# 
   999  081E                     	;# 
  1000  081F                     	;# 
  1001  088C                     	;# 
  1002  088D                     	;# 
  1003  088E                     	;# 
  1004  088F                     	;# 
  1005  0890                     	;# 
  1006  0891                     	;# 
  1007  0892                     	;# 
  1008  0893                     	;# 
  1009  0895                     	;# 
  1010  0896                     	;# 
  1011  0897                     	;# 
  1012  0898                     	;# 
  1013  0899                     	;# 
  1014  089A                     	;# 
  1015  089B                     	;# 
  1016  090C                     	;# 
  1017  090E                     	;# 
  1018  090F                     	;# 
  1019  091F                     	;# 
  1020  091F                     	;# 
  1021  098F                     	;# 
  1022  098F                     	;# 
  1023  0990                     	;# 
  1024  0991                     	;# 
  1025  0992                     	;# 
  1026  0993                     	;# 
  1027  0994                     	;# 
  1028  0995                     	;# 
  1029  0996                     	;# 
  1030  0997                     	;# 
  1031  0E0F                     	;# 
  1032  0E10                     	;# 
  1033  0E11                     	;# 
  1034  0E12                     	;# 
  1035  0E13                     	;# 
  1036  0E14                     	;# 
  1037  0E15                     	;# 
  1038  0E16                     	;# 
  1039  0E17                     	;# 
  1040  0E18                     	;# 
  1041  0E19                     	;# 
  1042  0E1A                     	;# 
  1043  0E1B                     	;# 
  1044  0E1C                     	;# 
  1045  0E1D                     	;# 
  1046  0E1E                     	;# 
  1047  0E1F                     	;# 
  1048  0E20                     	;# 
  1049  0E21                     	;# 
  1050  0E22                     	;# 
  1051  0E23                     	;# 
  1052  0E24                     	;# 
  1053  0E25                     	;# 
  1054  0E26                     	;# 
  1055  0E27                     	;# 
  1056  0E28                     	;# 
  1057  0E29                     	;# 
  1058  0E2A                     	;# 
  1059  0E2B                     	;# 
  1060  0E2C                     	;# 
  1061  0E2D                     	;# 
  1062  0E2E                     	;# 
  1063  0E2F                     	;# 
  1064  0E30                     	;# 
  1065  0E31                     	;# 
  1066  0E32                     	;# 
  1067  0E33                     	;# 
  1068  0E34                     	;# 
  1069  0E35                     	;# 
  1070  0E36                     	;# 
  1071  0E37                     	;# 
  1072  0E8F                     	;# 
  1073  0E90                     	;# 
  1074  0E91                     	;# 
  1075  0E92                     	;# 
  1076  0E93                     	;# 
  1077  0E94                     	;# 
  1078  0E95                     	;# 
  1079  0E96                     	;# 
  1080  0E97                     	;# 
  1081  0E9C                     	;# 
  1082  0E9D                     	;# 
  1083  0E9E                     	;# 
  1084  0EA1                     	;# 
  1085  0EA2                     	;# 
  1086  0EA3                     	;# 
  1087  0EA4                     	;# 
  1088  0EA5                     	;# 
  1089  0EA9                     	;# 
  1090  0EAA                     	;# 
  1091  0EAB                     	;# 
  1092  0EAC                     	;# 
  1093  0EB1                     	;# 
  1094  0EB2                     	;# 
  1095  0EB3                     	;# 
  1096  0EB8                     	;# 
  1097  0EB9                     	;# 
  1098  0EBA                     	;# 
  1099  0EBB                     	;# 
  1100  0EBC                     	;# 
  1101  0EBD                     	;# 
  1102  0EBE                     	;# 
  1103  0EC3                     	;# 
  1104  0EC5                     	;# 
  1105  0EC6                     	;# 
  1106  0EC7                     	;# 
  1107  0EC8                     	;# 
  1108  0EC9                     	;# 
  1109  0ECA                     	;# 
  1110  0ECB                     	;# 
  1111  0ECC                     	;# 
  1112  0F10                     	;# 
  1113  0F11                     	;# 
  1114  0F12                     	;# 
  1115  0F13                     	;# 
  1116  0F14                     	;# 
  1117  0F15                     	;# 
  1118  0F16                     	;# 
  1119  0F17                     	;# 
  1120  0F18                     	;# 
  1121  0F19                     	;# 
  1122  0F1A                     	;# 
  1123  0F1B                     	;# 
  1124  0F1C                     	;# 
  1125  0F1D                     	;# 
  1126  0F1E                     	;# 
  1127  0F1F                     	;# 
  1128  0F20                     	;# 
  1129  0F21                     	;# 
  1130  0F22                     	;# 
  1131  0F23                     	;# 
  1132  0F24                     	;# 
  1133  0F25                     	;# 
  1134  0F26                     	;# 
  1135  0F27                     	;# 
  1136  0F28                     	;# 
  1137  0F29                     	;# 
  1138  0F2A                     	;# 
  1139  0F2B                     	;# 
  1140  0F2C                     	;# 
  1141  0F2D                     	;# 
  1142  0F2E                     	;# 
  1143  0F2F                     	;# 
  1144  0F30                     	;# 
  1145  0F31                     	;# 
  1146  0F32                     	;# 
  1147  0F38                     	;# 
  1148  0F39                     	;# 
  1149  0F3A                     	;# 
  1150  0F3B                     	;# 
  1151  0F3C                     	;# 
  1152  0F3D                     	;# 
  1153  0F3E                     	;# 
  1154  0F3F                     	;# 
  1155  0F40                     	;# 
  1156  0F41                     	;# 
  1157  0F43                     	;# 
  1158  0F44                     	;# 
  1159  0F45                     	;# 
  1160  0F46                     	;# 
  1161  0F47                     	;# 
  1162  0F48                     	;# 
  1163  0F49                     	;# 
  1164  0F4A                     	;# 
  1165  0F4B                     	;# 
  1166  0F4C                     	;# 
  1167  0F4E                     	;# 
  1168  0F4F                     	;# 
  1169  0F50                     	;# 
  1170  0F51                     	;# 
  1171  0F52                     	;# 
  1172  0F53                     	;# 
  1173  0F54                     	;# 
  1174  0F55                     	;# 
  1175  0F56                     	;# 
  1176  0F57                     	;# 
  1177  0F59                     	;# 
  1178  0F5A                     	;# 
  1179  0F5B                     	;# 
  1180  0F5C                     	;# 
  1181  0F5D                     	;# 
  1182  0F61                     	;# 
  1183  0F62                     	;# 
  1184  0F64                     	;# 
  1185  0F65                     	;# 
  1186  0F66                     	;# 
  1187  0F67                     	;# 
  1188  0F68                     	;# 
  1189  0F69                     	;# 
  1190  0F6A                     	;# 
  1191  0F6B                     	;# 
  1192  0F6C                     	;# 
  1193  0F6D                     	;# 
  1194  0FE4                     	;# 
  1195  0FE5                     	;# 
  1196  0FE6                     	;# 
  1197  0FE7                     	;# 
  1198  0FE8                     	;# 
  1199  0FE9                     	;# 
  1200  0FEA                     	;# 
  1201  0FEB                     	;# 
  1202  0FED                     	;# 
  1203  0FEE                     	;# 
  1204  0FEF                     	;# 
  1205  0000                     	;# 
  1206  0001                     	;# 
  1207  0002                     	;# 
  1208  0003                     	;# 
  1209  0004                     	;# 
  1210  0005                     	;# 
  1211  0006                     	;# 
  1212  0007                     	;# 
  1213  0008                     	;# 
  1214  0009                     	;# 
  1215  000A                     	;# 
  1216  000B                     	;# 
  1217  000C                     	;# 
  1218  000D                     	;# 
  1219  000E                     	;# 
  1220  000F                     	;# 
  1221  0010                     	;# 
  1222  0011                     	;# 
  1223  0012                     	;# 
  1224  0013                     	;# 
  1225  0014                     	;# 
  1226  0015                     	;# 
  1227  0016                     	;# 
  1228  0017                     	;# 
  1229  0018                     	;# 
  1230  0019                     	;# 
  1231  001A                     	;# 
  1232  001C                     	;# 
  1233  001C                     	;# 
  1234  001D                     	;# 
  1235  001D                     	;# 
  1236  001E                     	;# 
  1237  001F                     	;# 
  1238  008C                     	;# 
  1239  008C                     	;# 
  1240  008D                     	;# 
  1241  008E                     	;# 
  1242  008E                     	;# 
  1243  008F                     	;# 
  1244  0090                     	;# 
  1245  0090                     	;# 
  1246  0091                     	;# 
  1247  0093                     	;# 
  1248  0094                     	;# 
  1249  0095                     	;# 
  1250  0096                     	;# 
  1251  0097                     	;# 
  1252  0098                     	;# 
  1253  0099                     	;# 
  1254  009A                     	;# 
  1255  009B                     	;# 
  1256  009C                     	;# 
  1257  009D                     	;# 
  1258  009E                     	;# 
  1259  010C                     	;# 
  1260  010D                     	;# 
  1261  010E                     	;# 
  1262  010E                     	;# 
  1263  010F                     	;# 
  1264  0110                     	;# 
  1265  0110                     	;# 
  1266  0111                     	;# 
  1267  0112                     	;# 
  1268  0112                     	;# 
  1269  0113                     	;# 
  1270  0114                     	;# 
  1271  0114                     	;# 
  1272  0115                     	;# 
  1273  0116                     	;# 
  1274  0116                     	;# 
  1275  0117                     	;# 
  1276  0119                     	;# 
  1277  0119                     	;# 
  1278  0119                     	;# 
  1279  011A                     	;# 
  1280  011A                     	;# 
  1281  011A                     	;# 
  1282  011B                     	;# 
  1283  011B                     	;# 
  1284  011B                     	;# 
  1285  011B                     	;# 
  1286  011B                     	;# 
  1287  011C                     	;# 
  1288  011C                     	;# 
  1289  011C                     	;# 
  1290  011D                     	;# 
  1291  011D                     	;# 
  1292  011D                     	;# 
  1293  011E                     	;# 
  1294  011E                     	;# 
  1295  011E                     	;# 
  1296  011F                     	;# 
  1297  011F                     	;# 
  1298  011F                     	;# 
  1299  011F                     	;# 
  1300  011F                     	;# 
  1301  018C                     	;# 
  1302  018D                     	;# 
  1303  018E                     	;# 
  1304  018F                     	;# 
  1305  0190                     	;# 
  1306  0191                     	;# 
  1307  0192                     	;# 
  1308  0196                     	;# 
  1309  0197                     	;# 
  1310  0198                     	;# 
  1311  0199                     	;# 
  1312  019A                     	;# 
  1313  019B                     	;# 
  1314  019C                     	;# 
  1315  020C                     	;# 
  1316  020C                     	;# 
  1317  020D                     	;# 
  1318  020E                     	;# 
  1319  020F                     	;# 
  1320  020F                     	;# 
  1321  0210                     	;# 
  1322  0210                     	;# 
  1323  0211                     	;# 
  1324  0211                     	;# 
  1325  0212                     	;# 
  1326  0212                     	;# 
  1327  0213                     	;# 
  1328  0214                     	;# 
  1329  0215                     	;# 
  1330  0215                     	;# 
  1331  0216                     	;# 
  1332  0216                     	;# 
  1333  0217                     	;# 
  1334  0217                     	;# 
  1335  0218                     	;# 
  1336  0218                     	;# 
  1337  0219                     	;# 
  1338  021A                     	;# 
  1339  021B                     	;# 
  1340  021B                     	;# 
  1341  021C                     	;# 
  1342  021C                     	;# 
  1343  021D                     	;# 
  1344  021D                     	;# 
  1345  021E                     	;# 
  1346  021F                     	;# 
  1347  028C                     	;# 
  1348  028C                     	;# 
  1349  028D                     	;# 
  1350  028D                     	;# 
  1351  028E                     	;# 
  1352  028F                     	;# 
  1353  0290                     	;# 
  1354  0290                     	;# 
  1355  0291                     	;# 
  1356  0292                     	;# 
  1357  0292                     	;# 
  1358  0293                     	;# 
  1359  0293                     	;# 
  1360  0294                     	;# 
  1361  0295                     	;# 
  1362  0296                     	;# 
  1363  0296                     	;# 
  1364  0297                     	;# 
  1365  0298                     	;# 
  1366  0298                     	;# 
  1367  0299                     	;# 
  1368  0299                     	;# 
  1369  029A                     	;# 
  1370  029B                     	;# 
  1371  029C                     	;# 
  1372  029C                     	;# 
  1373  029D                     	;# 
  1374  030C                     	;# 
  1375  030C                     	;# 
  1376  030D                     	;# 
  1377  030E                     	;# 
  1378  030F                     	;# 
  1379  0310                     	;# 
  1380  0310                     	;# 
  1381  0311                     	;# 
  1382  0312                     	;# 
  1383  0313                     	;# 
  1384  0314                     	;# 
  1385  0314                     	;# 
  1386  0315                     	;# 
  1387  0316                     	;# 
  1388  0317                     	;# 
  1389  0318                     	;# 
  1390  0318                     	;# 
  1391  0319                     	;# 
  1392  031A                     	;# 
  1393  031B                     	;# 
  1394  031C                     	;# 
  1395  031C                     	;# 
  1396  031D                     	;# 
  1397  031E                     	;# 
  1398  031F                     	;# 
  1399  038C                     	;# 
  1400  038C                     	;# 
  1401  038D                     	;# 
  1402  038E                     	;# 
  1403  0390                     	;# 
  1404  0390                     	;# 
  1405  0391                     	;# 
  1406  0392                     	;# 
  1407  040C                     	;# 
  1408  040D                     	;# 
  1409  040E                     	;# 
  1410  040F                     	;# 
  1411  0410                     	;# 
  1412  0411                     	;# 
  1413  0416                     	;# 
  1414  0416                     	;# 
  1415  0417                     	;# 
  1416  0418                     	;# 
  1417  0418                     	;# 
  1418  0419                     	;# 
  1419  041A                     	;# 
  1420  041A                     	;# 
  1421  041B                     	;# 
  1422  041C                     	;# 
  1423  041C                     	;# 
  1424  041D                     	;# 
  1425  041E                     	;# 
  1426  041F                     	;# 
  1427  048C                     	;# 
  1428  048C                     	;# 
  1429  048D                     	;# 
  1430  048E                     	;# 
  1431  048F                     	;# 
  1432  048F                     	;# 
  1433  0490                     	;# 
  1434  0491                     	;# 
  1435  0492                     	;# 
  1436  0492                     	;# 
  1437  0493                     	;# 
  1438  0494                     	;# 
  1439  0495                     	;# 
  1440  0495                     	;# 
  1441  0496                     	;# 
  1442  0497                     	;# 
  1443  0498                     	;# 
  1444  0499                     	;# 
  1445  049A                     	;# 
  1446  049B                     	;# 
  1447  049C                     	;# 
  1448  049D                     	;# 
  1449  050C                     	;# 
  1450  050C                     	;# 
  1451  050D                     	;# 
  1452  050E                     	;# 
  1453  050F                     	;# 
  1454  050F                     	;# 
  1455  0510                     	;# 
  1456  0511                     	;# 
  1457  0512                     	;# 
  1458  0512                     	;# 
  1459  0513                     	;# 
  1460  0514                     	;# 
  1461  0515                     	;# 
  1462  0515                     	;# 
  1463  0516                     	;# 
  1464  0517                     	;# 
  1465  0518                     	;# 
  1466  0519                     	;# 
  1467  051A                     	;# 
  1468  051B                     	;# 
  1469  051C                     	;# 
  1470  051D                     	;# 
  1471  058C                     	;# 
  1472  058C                     	;# 
  1473  058D                     	;# 
  1474  058E                     	;# 
  1475  058F                     	;# 
  1476  058F                     	;# 
  1477  0590                     	;# 
  1478  0591                     	;# 
  1479  0592                     	;# 
  1480  0593                     	;# 
  1481  060C                     	;# 
  1482  060D                     	;# 
  1483  060E                     	;# 
  1484  060F                     	;# 
  1485  0610                     	;# 
  1486  0611                     	;# 
  1487  0612                     	;# 
  1488  0613                     	;# 
  1489  0614                     	;# 
  1490  0616                     	;# 
  1491  0617                     	;# 
  1492  0618                     	;# 
  1493  0619                     	;# 
  1494  061A                     	;# 
  1495  061B                     	;# 
  1496  061C                     	;# 
  1497  061D                     	;# 
  1498  061E                     	;# 
  1499  068C                     	;# 
  1500  068D                     	;# 
  1501  068E                     	;# 
  1502  068F                     	;# 
  1503  0690                     	;# 
  1504  0691                     	;# 
  1505  0692                     	;# 
  1506  0693                     	;# 
  1507  0694                     	;# 
  1508  070C                     	;# 
  1509  070D                     	;# 
  1510  070E                     	;# 
  1511  070F                     	;# 
  1512  0710                     	;# 
  1513  0711                     	;# 
  1514  0712                     	;# 
  1515  0713                     	;# 
  1516  0714                     	;# 
  1517  0716                     	;# 
  1518  0717                     	;# 
  1519  0718                     	;# 
  1520  0719                     	;# 
  1521  071A                     	;# 
  1522  071B                     	;# 
  1523  071C                     	;# 
  1524  071D                     	;# 
  1525  071E                     	;# 
  1526  0796                     	;# 
  1527  0797                     	;# 
  1528  0798                     	;# 
  1529  0799                     	;# 
  1530  079A                     	;# 
  1531  079B                     	;# 
  1532  080C                     	;# 
  1533  080D                     	;# 
  1534  080E                     	;# 
  1535  080F                     	;# 
  1536  0810                     	;# 
  1537  0811                     	;# 
  1538  0812                     	;# 
  1539  0813                     	;# 
  1540  0814                     	;# 
  1541  081A                     	;# 
  1542  081B                     	;# 
  1543  081C                     	;# 
  1544  081D                     	;# 
  1545  081E                     	;# 
  1546  081F                     	;# 
  1547  088C                     	;# 
  1548  088D                     	;# 
  1549  088E                     	;# 
  1550  088F                     	;# 
  1551  0890                     	;# 
  1552  0891                     	;# 
  1553  0892                     	;# 
  1554  0893                     	;# 
  1555  0895                     	;# 
  1556  0896                     	;# 
  1557  0897                     	;# 
  1558  0898                     	;# 
  1559  0899                     	;# 
  1560  089A                     	;# 
  1561  089B                     	;# 
  1562  090C                     	;# 
  1563  090E                     	;# 
  1564  090F                     	;# 
  1565  091F                     	;# 
  1566  091F                     	;# 
  1567  098F                     	;# 
  1568  098F                     	;# 
  1569  0990                     	;# 
  1570  0991                     	;# 
  1571  0992                     	;# 
  1572  0993                     	;# 
  1573  0994                     	;# 
  1574  0995                     	;# 
  1575  0996                     	;# 
  1576  0997                     	;# 
  1577  0E0F                     	;# 
  1578  0E10                     	;# 
  1579  0E11                     	;# 
  1580  0E12                     	;# 
  1581  0E13                     	;# 
  1582  0E14                     	;# 
  1583  0E15                     	;# 
  1584  0E16                     	;# 
  1585  0E17                     	;# 
  1586  0E18                     	;# 
  1587  0E19                     	;# 
  1588  0E1A                     	;# 
  1589  0E1B                     	;# 
  1590  0E1C                     	;# 
  1591  0E1D                     	;# 
  1592  0E1E                     	;# 
  1593  0E1F                     	;# 
  1594  0E20                     	;# 
  1595  0E21                     	;# 
  1596  0E22                     	;# 
  1597  0E23                     	;# 
  1598  0E24                     	;# 
  1599  0E25                     	;# 
  1600  0E26                     	;# 
  1601  0E27                     	;# 
  1602  0E28                     	;# 
  1603  0E29                     	;# 
  1604  0E2A                     	;# 
  1605  0E2B                     	;# 
  1606  0E2C                     	;# 
  1607  0E2D                     	;# 
  1608  0E2E                     	;# 
  1609  0E2F                     	;# 
  1610  0E30                     	;# 
  1611  0E31                     	;# 
  1612  0E32                     	;# 
  1613  0E33                     	;# 
  1614  0E34                     	;# 
  1615  0E35                     	;# 
  1616  0E36                     	;# 
  1617  0E37                     	;# 
  1618  0E8F                     	;# 
  1619  0E90                     	;# 
  1620  0E91                     	;# 
  1621  0E92                     	;# 
  1622  0E93                     	;# 
  1623  0E94                     	;# 
  1624  0E95                     	;# 
  1625  0E96                     	;# 
  1626  0E97                     	;# 
  1627  0E9C                     	;# 
  1628  0E9D                     	;# 
  1629  0E9E                     	;# 
  1630  0EA1                     	;# 
  1631  0EA2                     	;# 
  1632  0EA3                     	;# 
  1633  0EA4                     	;# 
  1634  0EA5                     	;# 
  1635  0EA9                     	;# 
  1636  0EAA                     	;# 
  1637  0EAB                     	;# 
  1638  0EAC                     	;# 
  1639  0EB1                     	;# 
  1640  0EB2                     	;# 
  1641  0EB3                     	;# 
  1642  0EB8                     	;# 
  1643  0EB9                     	;# 
  1644  0EBA                     	;# 
  1645  0EBB                     	;# 
  1646  0EBC                     	;# 
  1647  0EBD                     	;# 
  1648  0EBE                     	;# 
  1649  0EC3                     	;# 
  1650  0EC5                     	;# 
  1651  0EC6                     	;# 
  1652  0EC7                     	;# 
  1653  0EC8                     	;# 
  1654  0EC9                     	;# 
  1655  0ECA                     	;# 
  1656  0ECB                     	;# 
  1657  0ECC                     	;# 
  1658  0F10                     	;# 
  1659  0F11                     	;# 
  1660  0F12                     	;# 
  1661  0F13                     	;# 
  1662  0F14                     	;# 
  1663  0F15                     	;# 
  1664  0F16                     	;# 
  1665  0F17                     	;# 
  1666  0F18                     	;# 
  1667  0F19                     	;# 
  1668  0F1A                     	;# 
  1669  0F1B                     	;# 
  1670  0F1C                     	;# 
  1671  0F1D                     	;# 
  1672  0F1E                     	;# 
  1673  0F1F                     	;# 
  1674  0F20                     	;# 
  1675  0F21                     	;# 
  1676  0F22                     	;# 
  1677  0F23                     	;# 
  1678  0F24                     	;# 
  1679  0F25                     	;# 
  1680  0F26                     	;# 
  1681  0F27                     	;# 
  1682  0F28                     	;# 
  1683  0F29                     	;# 
  1684  0F2A                     	;# 
  1685  0F2B                     	;# 
  1686  0F2C                     	;# 
  1687  0F2D                     	;# 
  1688  0F2E                     	;# 
  1689  0F2F                     	;# 
  1690  0F30                     	;# 
  1691  0F31                     	;# 
  1692  0F32                     	;# 
  1693  0F38                     	;# 
  1694  0F39                     	;# 
  1695  0F3A                     	;# 
  1696  0F3B                     	;# 
  1697  0F3C                     	;# 
  1698  0F3D                     	;# 
  1699  0F3E                     	;# 
  1700  0F3F                     	;# 
  1701  0F40                     	;# 
  1702  0F41                     	;# 
  1703  0F43                     	;# 
  1704  0F44                     	;# 
  1705  0F45                     	;# 
  1706  0F46                     	;# 
  1707  0F47                     	;# 
  1708  0F48                     	;# 
  1709  0F49                     	;# 
  1710  0F4A                     	;# 
  1711  0F4B                     	;# 
  1712  0F4C                     	;# 
  1713  0F4E                     	;# 
  1714  0F4F                     	;# 
  1715  0F50                     	;# 
  1716  0F51                     	;# 
  1717  0F52                     	;# 
  1718  0F53                     	;# 
  1719  0F54                     	;# 
  1720  0F55                     	;# 
  1721  0F56                     	;# 
  1722  0F57                     	;# 
  1723  0F59                     	;# 
  1724  0F5A                     	;# 
  1725  0F5B                     	;# 
  1726  0F5C                     	;# 
  1727  0F5D                     	;# 
  1728  0F61                     	;# 
  1729  0F62                     	;# 
  1730  0F64                     	;# 
  1731  0F65                     	;# 
  1732  0F66                     	;# 
  1733  0F67                     	;# 
  1734  0F68                     	;# 
  1735  0F69                     	;# 
  1736  0F6A                     	;# 
  1737  0F6B                     	;# 
  1738  0F6C                     	;# 
  1739  0F6D                     	;# 
  1740  0FE4                     	;# 
  1741  0FE5                     	;# 
  1742  0FE6                     	;# 
  1743  0FE7                     	;# 
  1744  0FE8                     	;# 
  1745  0FE9                     	;# 
  1746  0FEA                     	;# 
  1747  0FEB                     	;# 
  1748  0FED                     	;# 
  1749  0FEE                     	;# 
  1750  0FEF                     	;# 
  1751  0000                     	;# 
  1752  0001                     	;# 
  1753  0002                     	;# 
  1754  0003                     	;# 
  1755  0004                     	;# 
  1756  0005                     	;# 
  1757  0006                     	;# 
  1758  0007                     	;# 
  1759  0008                     	;# 
  1760  0009                     	;# 
  1761  000A                     	;# 
  1762  000B                     	;# 
  1763  000C                     	;# 
  1764  000D                     	;# 
  1765  000E                     	;# 
  1766  000F                     	;# 
  1767  0010                     	;# 
  1768  0011                     	;# 
  1769  0012                     	;# 
  1770  0013                     	;# 
  1771  0014                     	;# 
  1772  0015                     	;# 
  1773  0016                     	;# 
  1774  0017                     	;# 
  1775  0018                     	;# 
  1776  0019                     	;# 
  1777  001A                     	;# 
  1778  001C                     	;# 
  1779  001C                     	;# 
  1780  001D                     	;# 
  1781  001D                     	;# 
  1782  001E                     	;# 
  1783  001F                     	;# 
  1784  008C                     	;# 
  1785  008C                     	;# 
  1786  008D                     	;# 
  1787  008E                     	;# 
  1788  008E                     	;# 
  1789  008F                     	;# 
  1790  0090                     	;# 
  1791  0090                     	;# 
  1792  0091                     	;# 
  1793  0093                     	;# 
  1794  0094                     	;# 
  1795  0095                     	;# 
  1796  0096                     	;# 
  1797  0097                     	;# 
  1798  0098                     	;# 
  1799  0099                     	;# 
  1800  009A                     	;# 
  1801  009B                     	;# 
  1802  009C                     	;# 
  1803  009D                     	;# 
  1804  009E                     	;# 
  1805  010C                     	;# 
  1806  010D                     	;# 
  1807  010E                     	;# 
  1808  010E                     	;# 
  1809  010F                     	;# 
  1810  0110                     	;# 
  1811  0110                     	;# 
  1812  0111                     	;# 
  1813  0112                     	;# 
  1814  0112                     	;# 
  1815  0113                     	;# 
  1816  0114                     	;# 
  1817  0114                     	;# 
  1818  0115                     	;# 
  1819  0116                     	;# 
  1820  0116                     	;# 
  1821  0117                     	;# 
  1822  0119                     	;# 
  1823  0119                     	;# 
  1824  0119                     	;# 
  1825  011A                     	;# 
  1826  011A                     	;# 
  1827  011A                     	;# 
  1828  011B                     	;# 
  1829  011B                     	;# 
  1830  011B                     	;# 
  1831  011B                     	;# 
  1832  011B                     	;# 
  1833  011C                     	;# 
  1834  011C                     	;# 
  1835  011C                     	;# 
  1836  011D                     	;# 
  1837  011D                     	;# 
  1838  011D                     	;# 
  1839  011E                     	;# 
  1840  011E                     	;# 
  1841  011E                     	;# 
  1842  011F                     	;# 
  1843  011F                     	;# 
  1844  011F                     	;# 
  1845  011F                     	;# 
  1846  011F                     	;# 
  1847  018C                     	;# 
  1848  018D                     	;# 
  1849  018E                     	;# 
  1850  018F                     	;# 
  1851  0190                     	;# 
  1852  0191                     	;# 
  1853  0192                     	;# 
  1854  0196                     	;# 
  1855  0197                     	;# 
  1856  0198                     	;# 
  1857  0199                     	;# 
  1858  019A                     	;# 
  1859  019B                     	;# 
  1860  019C                     	;# 
  1861  020C                     	;# 
  1862  020C                     	;# 
  1863  020D                     	;# 
  1864  020E                     	;# 
  1865  020F                     	;# 
  1866  020F                     	;# 
  1867  0210                     	;# 
  1868  0210                     	;# 
  1869  0211                     	;# 
  1870  0211                     	;# 
  1871  0212                     	;# 
  1872  0212                     	;# 
  1873  0213                     	;# 
  1874  0214                     	;# 
  1875  0215                     	;# 
  1876  0215                     	;# 
  1877  0216                     	;# 
  1878  0216                     	;# 
  1879  0217                     	;# 
  1880  0217                     	;# 
  1881  0218                     	;# 
  1882  0218                     	;# 
  1883  0219                     	;# 
  1884  021A                     	;# 
  1885  021B                     	;# 
  1886  021B                     	;# 
  1887  021C                     	;# 
  1888  021C                     	;# 
  1889  021D                     	;# 
  1890  021D                     	;# 
  1891  021E                     	;# 
  1892  021F                     	;# 
  1893  028C                     	;# 
  1894  028C                     	;# 
  1895  028D                     	;# 
  1896  028D                     	;# 
  1897  028E                     	;# 
  1898  028F                     	;# 
  1899  0290                     	;# 
  1900  0290                     	;# 
  1901  0291                     	;# 
  1902  0292                     	;# 
  1903  0292                     	;# 
  1904  0293                     	;# 
  1905  0293                     	;# 
  1906  0294                     	;# 
  1907  0295                     	;# 
  1908  0296                     	;# 
  1909  0296                     	;# 
  1910  0297                     	;# 
  1911  0298                     	;# 
  1912  0298                     	;# 
  1913  0299                     	;# 
  1914  0299                     	;# 
  1915  029A                     	;# 
  1916  029B                     	;# 
  1917  029C                     	;# 
  1918  029C                     	;# 
  1919  029D                     	;# 
  1920  030C                     	;# 
  1921  030C                     	;# 
  1922  030D                     	;# 
  1923  030E                     	;# 
  1924  030F                     	;# 
  1925  0310                     	;# 
  1926  0310                     	;# 
  1927  0311                     	;# 
  1928  0312                     	;# 
  1929  0313                     	;# 
  1930  0314                     	;# 
  1931  0314                     	;# 
  1932  0315                     	;# 
  1933  0316                     	;# 
  1934  0317                     	;# 
  1935  0318                     	;# 
  1936  0318                     	;# 
  1937  0319                     	;# 
  1938  031A                     	;# 
  1939  031B                     	;# 
  1940  031C                     	;# 
  1941  031C                     	;# 
  1942  031D                     	;# 
  1943  031E                     	;# 
  1944  031F                     	;# 
  1945  038C                     	;# 
  1946  038C                     	;# 
  1947  038D                     	;# 
  1948  038E                     	;# 
  1949  0390                     	;# 
  1950  0390                     	;# 
  1951  0391                     	;# 
  1952  0392                     	;# 
  1953  040C                     	;# 
  1954  040D                     	;# 
  1955  040E                     	;# 
  1956  040F                     	;# 
  1957  0410                     	;# 
  1958  0411                     	;# 
  1959  0416                     	;# 
  1960  0416                     	;# 
  1961  0417                     	;# 
  1962  0418                     	;# 
  1963  0418                     	;# 
  1964  0419                     	;# 
  1965  041A                     	;# 
  1966  041A                     	;# 
  1967  041B                     	;# 
  1968  041C                     	;# 
  1969  041C                     	;# 
  1970  041D                     	;# 
  1971  041E                     	;# 
  1972  041F                     	;# 
  1973  048C                     	;# 
  1974  048C                     	;# 
  1975  048D                     	;# 
  1976  048E                     	;# 
  1977  048F                     	;# 
  1978  048F                     	;# 
  1979  0490                     	;# 
  1980  0491                     	;# 
  1981  0492                     	;# 
  1982  0492                     	;# 
  1983  0493                     	;# 
  1984  0494                     	;# 
  1985  0495                     	;# 
  1986  0495                     	;# 
  1987  0496                     	;# 
  1988  0497                     	;# 
  1989  0498                     	;# 
  1990  0499                     	;# 
  1991  049A                     	;# 
  1992  049B                     	;# 
  1993  049C                     	;# 
  1994  049D                     	;# 
  1995  050C                     	;# 
  1996  050C                     	;# 
  1997  050D                     	;# 
  1998  050E                     	;# 
  1999  050F                     	;# 
  2000  050F                     	;# 
  2001  0510                     	;# 
  2002  0511                     	;# 
  2003  0512                     	;# 
  2004  0512                     	;# 
  2005  0513                     	;# 
  2006  0514                     	;# 
  2007  0515                     	;# 
  2008  0515                     	;# 
  2009  0516                     	;# 
  2010  0517                     	;# 
  2011  0518                     	;# 
  2012  0519                     	;# 
  2013  051A                     	;# 
  2014  051B                     	;# 
  2015  051C                     	;# 
  2016  051D                     	;# 
  2017  058C                     	;# 
  2018  058C                     	;# 
  2019  058D                     	;# 
  2020  058E                     	;# 
  2021  058F                     	;# 
  2022  058F                     	;# 
  2023  0590                     	;# 
  2024  0591                     	;# 
  2025  0592                     	;# 
  2026  0593                     	;# 
  2027  060C                     	;# 
  2028  060D                     	;# 
  2029  060E                     	;# 
  2030  060F                     	;# 
  2031  0610                     	;# 
  2032  0611                     	;# 
  2033  0612                     	;# 
  2034  0613                     	;# 
  2035  0614                     	;# 
  2036  0616                     	;# 
  2037  0617                     	;# 
  2038  0618                     	;# 
  2039  0619                     	;# 
  2040  061A                     	;# 
  2041  061B                     	;# 
  2042  061C                     	;# 
  2043  061D                     	;# 
  2044  061E                     	;# 
  2045  068C                     	;# 
  2046  068D                     	;# 
  2047  068E                     	;# 
  2048  068F                     	;# 
  2049  0690                     	;# 
  2050  0691                     	;# 
  2051  0692                     	;# 
  2052  0693                     	;# 
  2053  0694                     	;# 
  2054  070C                     	;# 
  2055  070D                     	;# 
  2056  070E                     	;# 
  2057  070F                     	;# 
  2058  0710                     	;# 
  2059  0711                     	;# 
  2060  0712                     	;# 
  2061  0713                     	;# 
  2062  0714                     	;# 
  2063  0716                     	;# 
  2064  0717                     	;# 
  2065  0718                     	;# 
  2066  0719                     	;# 
  2067  071A                     	;# 
  2068  071B                     	;# 
  2069  071C                     	;# 
  2070  071D                     	;# 
  2071  071E                     	;# 
  2072  0796                     	;# 
  2073  0797                     	;# 
  2074  0798                     	;# 
  2075  0799                     	;# 
  2076  079A                     	;# 
  2077  079B                     	;# 
  2078  080C                     	;# 
  2079  080D                     	;# 
  2080  080E                     	;# 
  2081  080F                     	;# 
  2082  0810                     	;# 
  2083  0811                     	;# 
  2084  0812                     	;# 
  2085  0813                     	;# 
  2086  0814                     	;# 
  2087  081A                     	;# 
  2088  081B                     	;# 
  2089  081C                     	;# 
  2090  081D                     	;# 
  2091  081E                     	;# 
  2092  081F                     	;# 
  2093  088C                     	;# 
  2094  088D                     	;# 
  2095  088E                     	;# 
  2096  088F                     	;# 
  2097  0890                     	;# 
  2098  0891                     	;# 
  2099  0892                     	;# 
  2100  0893                     	;# 
  2101  0895                     	;# 
  2102  0896                     	;# 
  2103  0897                     	;# 
  2104  0898                     	;# 
  2105  0899                     	;# 
  2106  089A                     	;# 
  2107  089B                     	;# 
  2108  090C                     	;# 
  2109  090E                     	;# 
  2110  090F                     	;# 
  2111  091F                     	;# 
  2112  091F                     	;# 
  2113  098F                     	;# 
  2114  098F                     	;# 
  2115  0990                     	;# 
  2116  0991                     	;# 
  2117  0992                     	;# 
  2118  0993                     	;# 
  2119  0994                     	;# 
  2120  0995                     	;# 
  2121  0996                     	;# 
  2122  0997                     	;# 
  2123  0E0F                     	;# 
  2124  0E10                     	;# 
  2125  0E11                     	;# 
  2126  0E12                     	;# 
  2127  0E13                     	;# 
  2128  0E14                     	;# 
  2129  0E15                     	;# 
  2130  0E16                     	;# 
  2131  0E17                     	;# 
  2132  0E18                     	;# 
  2133  0E19                     	;# 
  2134  0E1A                     	;# 
  2135  0E1B                     	;# 
  2136  0E1C                     	;# 
  2137  0E1D                     	;# 
  2138  0E1E                     	;# 
  2139  0E1F                     	;# 
  2140  0E20                     	;# 
  2141  0E21                     	;# 
  2142  0E22                     	;# 
  2143  0E23                     	;# 
  2144  0E24                     	;# 
  2145  0E25                     	;# 
  2146  0E26                     	;# 
  2147  0E27                     	;# 
  2148  0E28                     	;# 
  2149  0E29                     	;# 
  2150  0E2A                     	;# 
  2151  0E2B                     	;# 
  2152  0E2C                     	;# 
  2153  0E2D                     	;# 
  2154  0E2E                     	;# 
  2155  0E2F                     	;# 
  2156  0E30                     	;# 
  2157  0E31                     	;# 
  2158  0E32                     	;# 
  2159  0E33                     	;# 
  2160  0E34                     	;# 
  2161  0E35                     	;# 
  2162  0E36                     	;# 
  2163  0E37                     	;# 
  2164  0E8F                     	;# 
  2165  0E90                     	;# 
  2166  0E91                     	;# 
  2167  0E92                     	;# 
  2168  0E93                     	;# 
  2169  0E94                     	;# 
  2170  0E95                     	;# 
  2171  0E96                     	;# 
  2172  0E97                     	;# 
  2173  0E9C                     	;# 
  2174  0E9D                     	;# 
  2175  0E9E                     	;# 
  2176  0EA1                     	;# 
  2177  0EA2                     	;# 
  2178  0EA3                     	;# 
  2179  0EA4                     	;# 
  2180  0EA5                     	;# 
  2181  0EA9                     	;# 
  2182  0EAA                     	;# 
  2183  0EAB                     	;# 
  2184  0EAC                     	;# 
  2185  0EB1                     	;# 
  2186  0EB2                     	;# 
  2187  0EB3                     	;# 
  2188  0EB8                     	;# 
  2189  0EB9                     	;# 
  2190  0EBA                     	;# 
  2191  0EBB                     	;# 
  2192  0EBC                     	;# 
  2193  0EBD                     	;# 
  2194  0EBE                     	;# 
  2195  0EC3                     	;# 
  2196  0EC5                     	;# 
  2197  0EC6                     	;# 
  2198  0EC7                     	;# 
  2199  0EC8                     	;# 
  2200  0EC9                     	;# 
  2201  0ECA                     	;# 
  2202  0ECB                     	;# 
  2203  0ECC                     	;# 
  2204  0F10                     	;# 
  2205  0F11                     	;# 
  2206  0F12                     	;# 
  2207  0F13                     	;# 
  2208  0F14                     	;# 
  2209  0F15                     	;# 
  2210  0F16                     	;# 
  2211  0F17                     	;# 
  2212  0F18                     	;# 
  2213  0F19                     	;# 
  2214  0F1A                     	;# 
  2215  0F1B                     	;# 
  2216  0F1C                     	;# 
  2217  0F1D                     	;# 
  2218  0F1E                     	;# 
  2219  0F1F                     	;# 
  2220  0F20                     	;# 
  2221  0F21                     	;# 
  2222  0F22                     	;# 
  2223  0F23                     	;# 
  2224  0F24                     	;# 
  2225  0F25                     	;# 
  2226  0F26                     	;# 
  2227  0F27                     	;# 
  2228  0F28                     	;# 
  2229  0F29                     	;# 
  2230  0F2A                     	;# 
  2231  0F2B                     	;# 
  2232  0F2C                     	;# 
  2233  0F2D                     	;# 
  2234  0F2E                     	;# 
  2235  0F2F                     	;# 
  2236  0F30                     	;# 
  2237  0F31                     	;# 
  2238  0F32                     	;# 
  2239  0F38                     	;# 
  2240  0F39                     	;# 
  2241  0F3A                     	;# 
  2242  0F3B                     	;# 
  2243  0F3C                     	;# 
  2244  0F3D                     	;# 
  2245  0F3E                     	;# 
  2246  0F3F                     	;# 
  2247  0F40                     	;# 
  2248  0F41                     	;# 
  2249  0F43                     	;# 
  2250  0F44                     	;# 
  2251  0F45                     	;# 
  2252  0F46                     	;# 
  2253  0F47                     	;# 
  2254  0F48                     	;# 
  2255  0F49                     	;# 
  2256  0F4A                     	;# 
  2257  0F4B                     	;# 
  2258  0F4C                     	;# 
  2259  0F4E                     	;# 
  2260  0F4F                     	;# 
  2261  0F50                     	;# 
  2262  0F51                     	;# 
  2263  0F52                     	;# 
  2264  0F53                     	;# 
  2265  0F54                     	;# 
  2266  0F55                     	;# 
  2267  0F56                     	;# 
  2268  0F57                     	;# 
  2269  0F59                     	;# 
  2270  0F5A                     	;# 
  2271  0F5B                     	;# 
  2272  0F5C                     	;# 
  2273  0F5D                     	;# 
  2274  0F61                     	;# 
  2275  0F62                     	;# 
  2276  0F64                     	;# 
  2277  0F65                     	;# 
  2278  0F66                     	;# 
  2279  0F67                     	;# 
  2280  0F68                     	;# 
  2281  0F69                     	;# 
  2282  0F6A                     	;# 
  2283  0F6B                     	;# 
  2284  0F6C                     	;# 
  2285  0F6D                     	;# 
  2286  0FE4                     	;# 
  2287  0FE5                     	;# 
  2288  0FE6                     	;# 
  2289  0FE7                     	;# 
  2290  0FE8                     	;# 
  2291  0FE9                     	;# 
  2292  0FEA                     	;# 
  2293  0FEB                     	;# 
  2294  0FED                     	;# 
  2295  0FEE                     	;# 
  2296  0FEF                     	;# 
  2297  0000                     	;# 
  2298  0001                     	;# 
  2299  0002                     	;# 
  2300  0003                     	;# 
  2301  0004                     	;# 
  2302  0005                     	;# 
  2303  0006                     	;# 
  2304  0007                     	;# 
  2305  0008                     	;# 
  2306  0009                     	;# 
  2307  000A                     	;# 
  2308  000B                     	;# 
  2309  000C                     	;# 
  2310  000D                     	;# 
  2311  000E                     	;# 
  2312  000F                     	;# 
  2313  0010                     	;# 
  2314  0011                     	;# 
  2315  0012                     	;# 
  2316  0013                     	;# 
  2317  0014                     	;# 
  2318  0015                     	;# 
  2319  0016                     	;# 
  2320  0017                     	;# 
  2321  0018                     	;# 
  2322  0019                     	;# 
  2323  001A                     	;# 
  2324  001C                     	;# 
  2325  001C                     	;# 
  2326  001D                     	;# 
  2327  001D                     	;# 
  2328  001E                     	;# 
  2329  001F                     	;# 
  2330  008C                     	;# 
  2331  008C                     	;# 
  2332  008D                     	;# 
  2333  008E                     	;# 
  2334  008E                     	;# 
  2335  008F                     	;# 
  2336  0090                     	;# 
  2337  0090                     	;# 
  2338  0091                     	;# 
  2339  0093                     	;# 
  2340  0094                     	;# 
  2341  0095                     	;# 
  2342  0096                     	;# 
  2343  0097                     	;# 
  2344  0098                     	;# 
  2345  0099                     	;# 
  2346  009A                     	;# 
  2347  009B                     	;# 
  2348  009C                     	;# 
  2349  009D                     	;# 
  2350  009E                     	;# 
  2351  010C                     	;# 
  2352  010D                     	;# 
  2353  010E                     	;# 
  2354  010E                     	;# 
  2355  010F                     	;# 
  2356  0110                     	;# 
  2357  0110                     	;# 
  2358  0111                     	;# 
  2359  0112                     	;# 
  2360  0112                     	;# 
  2361  0113                     	;# 
  2362  0114                     	;# 
  2363  0114                     	;# 
  2364  0115                     	;# 
  2365  0116                     	;# 
  2366  0116                     	;# 
  2367  0117                     	;# 
  2368  0119                     	;# 
  2369  0119                     	;# 
  2370  0119                     	;# 
  2371  011A                     	;# 
  2372  011A                     	;# 
  2373  011A                     	;# 
  2374  011B                     	;# 
  2375  011B                     	;# 
  2376  011B                     	;# 
  2377  011B                     	;# 
  2378  011B                     	;# 
  2379  011C                     	;# 
  2380  011C                     	;# 
  2381  011C                     	;# 
  2382  011D                     	;# 
  2383  011D                     	;# 
  2384  011D                     	;# 
  2385  011E                     	;# 
  2386  011E                     	;# 
  2387  011E                     	;# 
  2388  011F                     	;# 
  2389  011F                     	;# 
  2390  011F                     	;# 
  2391  011F                     	;# 
  2392  011F                     	;# 
  2393  018C                     	;# 
  2394  018D                     	;# 
  2395  018E                     	;# 
  2396  018F                     	;# 
  2397  0190                     	;# 
  2398  0191                     	;# 
  2399  0192                     	;# 
  2400  0196                     	;# 
  2401  0197                     	;# 
  2402  0198                     	;# 
  2403  0199                     	;# 
  2404  019A                     	;# 
  2405  019B                     	;# 
  2406  019C                     	;# 
  2407  020C                     	;# 
  2408  020C                     	;# 
  2409  020D                     	;# 
  2410  020E                     	;# 
  2411  020F                     	;# 
  2412  020F                     	;# 
  2413  0210                     	;# 
  2414  0210                     	;# 
  2415  0211                     	;# 
  2416  0211                     	;# 
  2417  0212                     	;# 
  2418  0212                     	;# 
  2419  0213                     	;# 
  2420  0214                     	;# 
  2421  0215                     	;# 
  2422  0215                     	;# 
  2423  0216                     	;# 
  2424  0216                     	;# 
  2425  0217                     	;# 
  2426  0217                     	;# 
  2427  0218                     	;# 
  2428  0218                     	;# 
  2429  0219                     	;# 
  2430  021A                     	;# 
  2431  021B                     	;# 
  2432  021B                     	;# 
  2433  021C                     	;# 
  2434  021C                     	;# 
  2435  021D                     	;# 
  2436  021D                     	;# 
  2437  021E                     	;# 
  2438  021F                     	;# 
  2439  028C                     	;# 
  2440  028C                     	;# 
  2441  028D                     	;# 
  2442  028D                     	;# 
  2443  028E                     	;# 
  2444  028F                     	;# 
  2445  0290                     	;# 
  2446  0290                     	;# 
  2447  0291                     	;# 
  2448  0292                     	;# 
  2449  0292                     	;# 
  2450  0293                     	;# 
  2451  0293                     	;# 
  2452  0294                     	;# 
  2453  0295                     	;# 
  2454  0296                     	;# 
  2455  0296                     	;# 
  2456  0297                     	;# 
  2457  0298                     	;# 
  2458  0298                     	;# 
  2459  0299                     	;# 
  2460  0299                     	;# 
  2461  029A                     	;# 
  2462  029B                     	;# 
  2463  029C                     	;# 
  2464  029C                     	;# 
  2465  029D                     	;# 
  2466  030C                     	;# 
  2467  030C                     	;# 
  2468  030D                     	;# 
  2469  030E                     	;# 
  2470  030F                     	;# 
  2471  0310                     	;# 
  2472  0310                     	;# 
  2473  0311                     	;# 
  2474  0312                     	;# 
  2475  0313                     	;# 
  2476  0314                     	;# 
  2477  0314                     	;# 
  2478  0315                     	;# 
  2479  0316                     	;# 
  2480  0317                     	;# 
  2481  0318                     	;# 
  2482  0318                     	;# 
  2483  0319                     	;# 
  2484  031A                     	;# 
  2485  031B                     	;# 
  2486  031C                     	;# 
  2487  031C                     	;# 
  2488  031D                     	;# 
  2489  031E                     	;# 
  2490  031F                     	;# 
  2491  038C                     	;# 
  2492  038C                     	;# 
  2493  038D                     	;# 
  2494  038E                     	;# 
  2495  0390                     	;# 
  2496  0390                     	;# 
  2497  0391                     	;# 
  2498  0392                     	;# 
  2499  040C                     	;# 
  2500  040D                     	;# 
  2501  040E                     	;# 
  2502  040F                     	;# 
  2503  0410                     	;# 
  2504  0411                     	;# 
  2505  0416                     	;# 
  2506  0416                     	;# 
  2507  0417                     	;# 
  2508  0418                     	;# 
  2509  0418                     	;# 
  2510  0419                     	;# 
  2511  041A                     	;# 
  2512  041A                     	;# 
  2513  041B                     	;# 
  2514  041C                     	;# 
  2515  041C                     	;# 
  2516  041D                     	;# 
  2517  041E                     	;# 
  2518  041F                     	;# 
  2519  048C                     	;# 
  2520  048C                     	;# 
  2521  048D                     	;# 
  2522  048E                     	;# 
  2523  048F                     	;# 
  2524  048F                     	;# 
  2525  0490                     	;# 
  2526  0491                     	;# 
  2527  0492                     	;# 
  2528  0492                     	;# 
  2529  0493                     	;# 
  2530  0494                     	;# 
  2531  0495                     	;# 
  2532  0495                     	;# 
  2533  0496                     	;# 
  2534  0497                     	;# 
  2535  0498                     	;# 
  2536  0499                     	;# 
  2537  049A                     	;# 
  2538  049B                     	;# 
  2539  049C                     	;# 
  2540  049D                     	;# 
  2541  050C                     	;# 
  2542  050C                     	;# 
  2543  050D                     	;# 
  2544  050E                     	;# 
  2545  050F                     	;# 
  2546  050F                     	;# 
  2547  0510                     	;# 
  2548  0511                     	;# 
  2549  0512                     	;# 
  2550  0512                     	;# 
  2551  0513                     	;# 
  2552  0514                     	;# 
  2553  0515                     	;# 
  2554  0515                     	;# 
  2555  0516                     	;# 
  2556  0517                     	;# 
  2557  0518                     	;# 
  2558  0519                     	;# 
  2559  051A                     	;# 
  2560  051B                     	;# 
  2561  051C                     	;# 
  2562  051D                     	;# 
  2563  058C                     	;# 
  2564  058C                     	;# 
  2565  058D                     	;# 
  2566  058E                     	;# 
  2567  058F                     	;# 
  2568  058F                     	;# 
  2569  0590                     	;# 
  2570  0591                     	;# 
  2571  0592                     	;# 
  2572  0593                     	;# 
  2573  060C                     	;# 
  2574  060D                     	;# 
  2575  060E                     	;# 
  2576  060F                     	;# 
  2577  0610                     	;# 
  2578  0611                     	;# 
  2579  0612                     	;# 
  2580  0613                     	;# 
  2581  0614                     	;# 
  2582  0616                     	;# 
  2583  0617                     	;# 
  2584  0618                     	;# 
  2585  0619                     	;# 
  2586  061A                     	;# 
  2587  061B                     	;# 
  2588  061C                     	;# 
  2589  061D                     	;# 
  2590  061E                     	;# 
  2591  068C                     	;# 
  2592  068D                     	;# 
  2593  068E                     	;# 
  2594  068F                     	;# 
  2595  0690                     	;# 
  2596  0691                     	;# 
  2597  0692                     	;# 
  2598  0693                     	;# 
  2599  0694                     	;# 
  2600  070C                     	;# 
  2601  070D                     	;# 
  2602  070E                     	;# 
  2603  070F                     	;# 
  2604  0710                     	;# 
  2605  0711                     	;# 
  2606  0712                     	;# 
  2607  0713                     	;# 
  2608  0714                     	;# 
  2609  0716                     	;# 
  2610  0717                     	;# 
  2611  0718                     	;# 
  2612  0719                     	;# 
  2613  071A                     	;# 
  2614  071B                     	;# 
  2615  071C                     	;# 
  2616  071D                     	;# 
  2617  071E                     	;# 
  2618  0796                     	;# 
  2619  0797                     	;# 
  2620  0798                     	;# 
  2621  0799                     	;# 
  2622  079A                     	;# 
  2623  079B                     	;# 
  2624  080C                     	;# 
  2625  080D                     	;# 
  2626  080E                     	;# 
  2627  080F                     	;# 
  2628  0810                     	;# 
  2629  0811                     	;# 
  2630  0812                     	;# 
  2631  0813                     	;# 
  2632  0814                     	;# 
  2633  081A                     	;# 
  2634  081B                     	;# 
  2635  081C                     	;# 
  2636  081D                     	;# 
  2637  081E                     	;# 
  2638  081F                     	;# 
  2639  088C                     	;# 
  2640  088D                     	;# 
  2641  088E                     	;# 
  2642  088F                     	;# 
  2643  0890                     	;# 
  2644  0891                     	;# 
  2645  0892                     	;# 
  2646  0893                     	;# 
  2647  0895                     	;# 
  2648  0896                     	;# 
  2649  0897                     	;# 
  2650  0898                     	;# 
  2651  0899                     	;# 
  2652  089A                     	;# 
  2653  089B                     	;# 
  2654  090C                     	;# 
  2655  090E                     	;# 
  2656  090F                     	;# 
  2657  091F                     	;# 
  2658  091F                     	;# 
  2659  098F                     	;# 
  2660  098F                     	;# 
  2661  0990                     	;# 
  2662  0991                     	;# 
  2663  0992                     	;# 
  2664  0993                     	;# 
  2665  0994                     	;# 
  2666  0995                     	;# 
  2667  0996                     	;# 
  2668  0997                     	;# 
  2669  0E0F                     	;# 
  2670  0E10                     	;# 
  2671  0E11                     	;# 
  2672  0E12                     	;# 
  2673  0E13                     	;# 
  2674  0E14                     	;# 
  2675  0E15                     	;# 
  2676  0E16                     	;# 
  2677  0E17                     	;# 
  2678  0E18                     	;# 
  2679  0E19                     	;# 
  2680  0E1A                     	;# 
  2681  0E1B                     	;# 
  2682  0E1C                     	;# 
  2683  0E1D                     	;# 
  2684  0E1E                     	;# 
  2685  0E1F                     	;# 
  2686  0E20                     	;# 
  2687  0E21                     	;# 
  2688  0E22                     	;# 
  2689  0E23                     	;# 
  2690  0E24                     	;# 
  2691  0E25                     	;# 
  2692  0E26                     	;# 
  2693  0E27                     	;# 
  2694  0E28                     	;# 
  2695  0E29                     	;# 
  2696  0E2A                     	;# 
  2697  0E2B                     	;# 
  2698  0E2C                     	;# 
  2699  0E2D                     	;# 
  2700  0E2E                     	;# 
  2701  0E2F                     	;# 
  2702  0E30                     	;# 
  2703  0E31                     	;# 
  2704  0E32                     	;# 
  2705  0E33                     	;# 
  2706  0E34                     	;# 
  2707  0E35                     	;# 
  2708  0E36                     	;# 
  2709  0E37                     	;# 
  2710  0E8F                     	;# 
  2711  0E90                     	;# 
  2712  0E91                     	;# 
  2713  0E92                     	;# 
  2714  0E93                     	;# 
  2715  0E94                     	;# 
  2716  0E95                     	;# 
  2717  0E96                     	;# 
  2718  0E97                     	;# 
  2719  0E9C                     	;# 
  2720  0E9D                     	;# 
  2721  0E9E                     	;# 
  2722  0EA1                     	;# 
  2723  0EA2                     	;# 
  2724  0EA3                     	;# 
  2725  0EA4                     	;# 
  2726  0EA5                     	;# 
  2727  0EA9                     	;# 
  2728  0EAA                     	;# 
  2729  0EAB                     	;# 
  2730  0EAC                     	;# 
  2731  0EB1                     	;# 
  2732  0EB2                     	;# 
  2733  0EB3                     	;# 
  2734  0EB8                     	;# 
  2735  0EB9                     	;# 
  2736  0EBA                     	;# 
  2737  0EBB                     	;# 
  2738  0EBC                     	;# 
  2739  0EBD                     	;# 
  2740  0EBE                     	;# 
  2741  0EC3                     	;# 
  2742  0EC5                     	;# 
  2743  0EC6                     	;# 
  2744  0EC7                     	;# 
  2745  0EC8                     	;# 
  2746  0EC9                     	;# 
  2747  0ECA                     	;# 
  2748  0ECB                     	;# 
  2749  0ECC                     	;# 
  2750  0F10                     	;# 
  2751  0F11                     	;# 
  2752  0F12                     	;# 
  2753  0F13                     	;# 
  2754  0F14                     	;# 
  2755  0F15                     	;# 
  2756  0F16                     	;# 
  2757  0F17                     	;# 
  2758  0F18                     	;# 
  2759  0F19                     	;# 
  2760  0F1A                     	;# 
  2761  0F1B                     	;# 
  2762  0F1C                     	;# 
  2763  0F1D                     	;# 
  2764  0F1E                     	;# 
  2765  0F1F                     	;# 
  2766  0F20                     	;# 
  2767  0F21                     	;# 
  2768  0F22                     	;# 
  2769  0F23                     	;# 
  2770  0F24                     	;# 
  2771  0F25                     	;# 
  2772  0F26                     	;# 
  2773  0F27                     	;# 
  2774  0F28                     	;# 
  2775  0F29                     	;# 
  2776  0F2A                     	;# 
  2777  0F2B                     	;# 
  2778  0F2C                     	;# 
  2779  0F2D                     	;# 
  2780  0F2E                     	;# 
  2781  0F2F                     	;# 
  2782  0F30                     	;# 
  2783  0F31                     	;# 
  2784  0F32                     	;# 
  2785  0F38                     	;# 
  2786  0F39                     	;# 
  2787  0F3A                     	;# 
  2788  0F3B                     	;# 
  2789  0F3C                     	;# 
  2790  0F3D                     	;# 
  2791  0F3E                     	;# 
  2792  0F3F                     	;# 
  2793  0F40                     	;# 
  2794  0F41                     	;# 
  2795  0F43                     	;# 
  2796  0F44                     	;# 
  2797  0F45                     	;# 
  2798  0F46                     	;# 
  2799  0F47                     	;# 
  2800  0F48                     	;# 
  2801  0F49                     	;# 
  2802  0F4A                     	;# 
  2803  0F4B                     	;# 
  2804  0F4C                     	;# 
  2805  0F4E                     	;# 
  2806  0F4F                     	;# 
  2807  0F50                     	;# 
  2808  0F51                     	;# 
  2809  0F52                     	;# 
  2810  0F53                     	;# 
  2811  0F54                     	;# 
  2812  0F55                     	;# 
  2813  0F56                     	;# 
  2814  0F57                     	;# 
  2815  0F59                     	;# 
  2816  0F5A                     	;# 
  2817  0F5B                     	;# 
  2818  0F5C                     	;# 
  2819  0F5D                     	;# 
  2820  0F61                     	;# 
  2821  0F62                     	;# 
  2822  0F64                     	;# 
  2823  0F65                     	;# 
  2824  0F66                     	;# 
  2825  0F67                     	;# 
  2826  0F68                     	;# 
  2827  0F69                     	;# 
  2828  0F6A                     	;# 
  2829  0F6B                     	;# 
  2830  0F6C                     	;# 
  2831  0F6D                     	;# 
  2832  0FE4                     	;# 
  2833  0FE5                     	;# 
  2834  0FE6                     	;# 
  2835  0FE7                     	;# 
  2836  0FE8                     	;# 
  2837  0FE9                     	;# 
  2838  0FEA                     	;# 
  2839  0FEB                     	;# 
  2840  0FED                     	;# 
  2841  0FEE                     	;# 
  2842  0FEF                     	;# 
  2843  0000                     	;# 
  2844  0001                     	;# 
  2845  0002                     	;# 
  2846  0003                     	;# 
  2847  0004                     	;# 
  2848  0005                     	;# 
  2849  0006                     	;# 
  2850  0007                     	;# 
  2851  0008                     	;# 
  2852  0009                     	;# 
  2853  000A                     	;# 
  2854  000B                     	;# 
  2855  000C                     	;# 
  2856  000D                     	;# 
  2857  000E                     	;# 
  2858  000F                     	;# 
  2859  0010                     	;# 
  2860  0011                     	;# 
  2861  0012                     	;# 
  2862  0013                     	;# 
  2863  0014                     	;# 
  2864  0015                     	;# 
  2865  0016                     	;# 
  2866  0017                     	;# 
  2867  0018                     	;# 
  2868  0019                     	;# 
  2869  001A                     	;# 
  2870  001C                     	;# 
  2871  001C                     	;# 
  2872  001D                     	;# 
  2873  001D                     	;# 
  2874  001E                     	;# 
  2875  001F                     	;# 
  2876  008C                     	;# 
  2877  008C                     	;# 
  2878  008D                     	;# 
  2879  008E                     	;# 
  2880  008E                     	;# 
  2881  008F                     	;# 
  2882  0090                     	;# 
  2883  0090                     	;# 
  2884  0091                     	;# 
  2885  0093                     	;# 
  2886  0094                     	;# 
  2887  0095                     	;# 
  2888  0096                     	;# 
  2889  0097                     	;# 
  2890  0098                     	;# 
  2891  0099                     	;# 
  2892  009A                     	;# 
  2893  009B                     	;# 
  2894  009C                     	;# 
  2895  009D                     	;# 
  2896  009E                     	;# 
  2897  010C                     	;# 
  2898  010D                     	;# 
  2899  010E                     	;# 
  2900  010E                     	;# 
  2901  010F                     	;# 
  2902  0110                     	;# 
  2903  0110                     	;# 
  2904  0111                     	;# 
  2905  0112                     	;# 
  2906  0112                     	;# 
  2907  0113                     	;# 
  2908  0114                     	;# 
  2909  0114                     	;# 
  2910  0115                     	;# 
  2911  0116                     	;# 
  2912  0116                     	;# 
  2913  0117                     	;# 
  2914  0119                     	;# 
  2915  0119                     	;# 
  2916  0119                     	;# 
  2917  011A                     	;# 
  2918  011A                     	;# 
  2919  011A                     	;# 
  2920  011B                     	;# 
  2921  011B                     	;# 
  2922  011B                     	;# 
  2923  011B                     	;# 
  2924  011B                     	;# 
  2925  011C                     	;# 
  2926  011C                     	;# 
  2927  011C                     	;# 
  2928  011D                     	;# 
  2929  011D                     	;# 
  2930  011D                     	;# 
  2931  011E                     	;# 
  2932  011E                     	;# 
  2933  011E                     	;# 
  2934  011F                     	;# 
  2935  011F                     	;# 
  2936  011F                     	;# 
  2937  011F                     	;# 
  2938  011F                     	;# 
  2939  018C                     	;# 
  2940  018D                     	;# 
  2941  018E                     	;# 
  2942  018F                     	;# 
  2943  0190                     	;# 
  2944  0191                     	;# 
  2945  0192                     	;# 
  2946  0196                     	;# 
  2947  0197                     	;# 
  2948  0198                     	;# 
  2949  0199                     	;# 
  2950  019A                     	;# 
  2951  019B                     	;# 
  2952  019C                     	;# 
  2953  020C                     	;# 
  2954  020C                     	;# 
  2955  020D                     	;# 
  2956  020E                     	;# 
  2957  020F                     	;# 
  2958  020F                     	;# 
  2959  0210                     	;# 
  2960  0210                     	;# 
  2961  0211                     	;# 
  2962  0211                     	;# 
  2963  0212                     	;# 
  2964  0212                     	;# 
  2965  0213                     	;# 
  2966  0214                     	;# 
  2967  0215                     	;# 
  2968  0215                     	;# 
  2969  0216                     	;# 
  2970  0216                     	;# 
  2971  0217                     	;# 
  2972  0217                     	;# 
  2973  0218                     	;# 
  2974  0218                     	;# 
  2975  0219                     	;# 
  2976  021A                     	;# 
  2977  021B                     	;# 
  2978  021B                     	;# 
  2979  021C                     	;# 
  2980  021C                     	;# 
  2981  021D                     	;# 
  2982  021D                     	;# 
  2983  021E                     	;# 
  2984  021F                     	;# 
  2985  028C                     	;# 
  2986  028C                     	;# 
  2987  028D                     	;# 
  2988  028D                     	;# 
  2989  028E                     	;# 
  2990  028F                     	;# 
  2991  0290                     	;# 
  2992  0290                     	;# 
  2993  0291                     	;# 
  2994  0292                     	;# 
  2995  0292                     	;# 
  2996  0293                     	;# 
  2997  0293                     	;# 
  2998  0294                     	;# 
  2999  0295                     	;# 
  3000  0296                     	;# 
  3001  0296                     	;# 
  3002  0297                     	;# 
  3003  0298                     	;# 
  3004  0298                     	;# 
  3005  0299                     	;# 
  3006  0299                     	;# 
  3007  029A                     	;# 
  3008  029B                     	;# 
  3009  029C                     	;# 
  3010  029C                     	;# 
  3011  029D                     	;# 
  3012  030C                     	;# 
  3013  030C                     	;# 
  3014  030D                     	;# 
  3015  030E                     	;# 
  3016  030F                     	;# 
  3017  0310                     	;# 
  3018  0310                     	;# 
  3019  0311                     	;# 
  3020  0312                     	;# 
  3021  0313                     	;# 
  3022  0314                     	;# 
  3023  0314                     	;# 
  3024  0315                     	;# 
  3025  0316                     	;# 
  3026  0317                     	;# 
  3027  0318                     	;# 
  3028  0318                     	;# 
  3029  0319                     	;# 
  3030  031A                     	;# 
  3031  031B                     	;# 
  3032  031C                     	;# 
  3033  031C                     	;# 
  3034  031D                     	;# 
  3035  031E                     	;# 
  3036  031F                     	;# 
  3037  038C                     	;# 
  3038  038C                     	;# 
  3039  038D                     	;# 
  3040  038E                     	;# 
  3041  0390                     	;# 
  3042  0390                     	;# 
  3043  0391                     	;# 
  3044  0392                     	;# 
  3045  040C                     	;# 
  3046  040D                     	;# 
  3047  040E                     	;# 
  3048  040F                     	;# 
  3049  0410                     	;# 
  3050  0411                     	;# 
  3051  0416                     	;# 
  3052  0416                     	;# 
  3053  0417                     	;# 
  3054  0418                     	;# 
  3055  0418                     	;# 
  3056  0419                     	;# 
  3057  041A                     	;# 
  3058  041A                     	;# 
  3059  041B                     	;# 
  3060  041C                     	;# 
  3061  041C                     	;# 
  3062  041D                     	;# 
  3063  041E                     	;# 
  3064  041F                     	;# 
  3065  048C                     	;# 
  3066  048C                     	;# 
  3067  048D                     	;# 
  3068  048E                     	;# 
  3069  048F                     	;# 
  3070  048F                     	;# 
  3071  0490                     	;# 
  3072  0491                     	;# 
  3073  0492                     	;# 
  3074  0492                     	;# 
  3075  0493                     	;# 
  3076  0494                     	;# 
  3077  0495                     	;# 
  3078  0495                     	;# 
  3079  0496                     	;# 
  3080  0497                     	;# 
  3081  0498                     	;# 
  3082  0499                     	;# 
  3083  049A                     	;# 
  3084  049B                     	;# 
  3085  049C                     	;# 
  3086  049D                     	;# 
  3087  050C                     	;# 
  3088  050C                     	;# 
  3089  050D                     	;# 
  3090  050E                     	;# 
  3091  050F                     	;# 
  3092  050F                     	;# 
  3093  0510                     	;# 
  3094  0511                     	;# 
  3095  0512                     	;# 
  3096  0512                     	;# 
  3097  0513                     	;# 
  3098  0514                     	;# 
  3099  0515                     	;# 
  3100  0515                     	;# 
  3101  0516                     	;# 
  3102  0517                     	;# 
  3103  0518                     	;# 
  3104  0519                     	;# 
  3105  051A                     	;# 
  3106  051B                     	;# 
  3107  051C                     	;# 
  3108  051D                     	;# 
  3109  058C                     	;# 
  3110  058C                     	;# 
  3111  058D                     	;# 
  3112  058E                     	;# 
  3113  058F                     	;# 
  3114  058F                     	;# 
  3115  0590                     	;# 
  3116  0591                     	;# 
  3117  0592                     	;# 
  3118  0593                     	;# 
  3119  060C                     	;# 
  3120  060D                     	;# 
  3121  060E                     	;# 
  3122  060F                     	;# 
  3123  0610                     	;# 
  3124  0611                     	;# 
  3125  0612                     	;# 
  3126  0613                     	;# 
  3127  0614                     	;# 
  3128  0616                     	;# 
  3129  0617                     	;# 
  3130  0618                     	;# 
  3131  0619                     	;# 
  3132  061A                     	;# 
  3133  061B                     	;# 
  3134  061C                     	;# 
  3135  061D                     	;# 
  3136  061E                     	;# 
  3137  068C                     	;# 
  3138  068D                     	;# 
  3139  068E                     	;# 
  3140  068F                     	;# 
  3141  0690                     	;# 
  3142  0691                     	;# 
  3143  0692                     	;# 
  3144  0693                     	;# 
  3145  0694                     	;# 
  3146  070C                     	;# 
  3147  070D                     	;# 
  3148  070E                     	;# 
  3149  070F                     	;# 
  3150  0710                     	;# 
  3151  0711                     	;# 
  3152  0712                     	;# 
  3153  0713                     	;# 
  3154  0714                     	;# 
  3155  0716                     	;# 
  3156  0717                     	;# 
  3157  0718                     	;# 
  3158  0719                     	;# 
  3159  071A                     	;# 
  3160  071B                     	;# 
  3161  071C                     	;# 
  3162  071D                     	;# 
  3163  071E                     	;# 
  3164  0796                     	;# 
  3165  0797                     	;# 
  3166  0798                     	;# 
  3167  0799                     	;# 
  3168  079A                     	;# 
  3169  079B                     	;# 
  3170  080C                     	;# 
  3171  080D                     	;# 
  3172  080E                     	;# 
  3173  080F                     	;# 
  3174  0810                     	;# 
  3175  0811                     	;# 
  3176  0812                     	;# 
  3177  0813                     	;# 
  3178  0814                     	;# 
  3179  081A                     	;# 
  3180  081B                     	;# 
  3181  081C                     	;# 
  3182  081D                     	;# 
  3183  081E                     	;# 
  3184  081F                     	;# 
  3185  088C                     	;# 
  3186  088D                     	;# 
  3187  088E                     	;# 
  3188  088F                     	;# 
  3189  0890                     	;# 
  3190  0891                     	;# 
  3191  0892                     	;# 
  3192  0893                     	;# 
  3193  0895                     	;# 
  3194  0896                     	;# 
  3195  0897                     	;# 
  3196  0898                     	;# 
  3197  0899                     	;# 
  3198  089A                     	;# 
  3199  089B                     	;# 
  3200  090C                     	;# 
  3201  090E                     	;# 
  3202  090F                     	;# 
  3203  091F                     	;# 
  3204  091F                     	;# 
  3205  098F                     	;# 
  3206  098F                     	;# 
  3207  0990                     	;# 
  3208  0991                     	;# 
  3209  0992                     	;# 
  3210  0993                     	;# 
  3211  0994                     	;# 
  3212  0995                     	;# 
  3213  0996                     	;# 
  3214  0997                     	;# 
  3215  0E0F                     	;# 
  3216  0E10                     	;# 
  3217  0E11                     	;# 
  3218  0E12                     	;# 
  3219  0E13                     	;# 
  3220  0E14                     	;# 
  3221  0E15                     	;# 
  3222  0E16                     	;# 
  3223  0E17                     	;# 
  3224  0E18                     	;# 
  3225  0E19                     	;# 
  3226  0E1A                     	;# 
  3227  0E1B                     	;# 
  3228  0E1C                     	;# 
  3229  0E1D                     	;# 
  3230  0E1E                     	;# 
  3231  0E1F                     	;# 
  3232  0E20                     	;# 
  3233  0E21                     	;# 
  3234  0E22                     	;# 
  3235  0E23                     	;# 
  3236  0E24                     	;# 
  3237  0E25                     	;# 
  3238  0E26                     	;# 
  3239  0E27                     	;# 
  3240  0E28                     	;# 
  3241  0E29                     	;# 
  3242  0E2A                     	;# 
  3243  0E2B                     	;# 
  3244  0E2C                     	;# 
  3245  0E2D                     	;# 
  3246  0E2E                     	;# 
  3247  0E2F                     	;# 
  3248  0E30                     	;# 
  3249  0E31                     	;# 
  3250  0E32                     	;# 
  3251  0E33                     	;# 
  3252  0E34                     	;# 
  3253  0E35                     	;# 
  3254  0E36                     	;# 
  3255  0E37                     	;# 
  3256  0E8F                     	;# 
  3257  0E90                     	;# 
  3258  0E91                     	;# 
  3259  0E92                     	;# 
  3260  0E93                     	;# 
  3261  0E94                     	;# 
  3262  0E95                     	;# 
  3263  0E96                     	;# 
  3264  0E97                     	;# 
  3265  0E9C                     	;# 
  3266  0E9D                     	;# 
  3267  0E9E                     	;# 
  3268  0EA1                     	;# 
  3269  0EA2                     	;# 
  3270  0EA3                     	;# 
  3271  0EA4                     	;# 
  3272  0EA5                     	;# 
  3273  0EA9                     	;# 
  3274  0EAA                     	;# 
  3275  0EAB                     	;# 
  3276  0EAC                     	;# 
  3277  0EB1                     	;# 
  3278  0EB2                     	;# 
  3279  0EB3                     	;# 
  3280  0EB8                     	;# 
  3281  0EB9                     	;# 
  3282  0EBA                     	;# 
  3283  0EBB                     	;# 
  3284  0EBC                     	;# 
  3285  0EBD                     	;# 
  3286  0EBE                     	;# 
  3287  0EC3                     	;# 
  3288  0EC5                     	;# 
  3289  0EC6                     	;# 
  3290  0EC7                     	;# 
  3291  0EC8                     	;# 
  3292  0EC9                     	;# 
  3293  0ECA                     	;# 
  3294  0ECB                     	;# 
  3295  0ECC                     	;# 
  3296  0F10                     	;# 
  3297  0F11                     	;# 
  3298  0F12                     	;# 
  3299  0F13                     	;# 
  3300  0F14                     	;# 
  3301  0F15                     	;# 
  3302  0F16                     	;# 
  3303  0F17                     	;# 
  3304  0F18                     	;# 
  3305  0F19                     	;# 
  3306  0F1A                     	;# 
  3307  0F1B                     	;# 
  3308  0F1C                     	;# 
  3309  0F1D                     	;# 
  3310  0F1E                     	;# 
  3311  0F1F                     	;# 
  3312  0F20                     	;# 
  3313  0F21                     	;# 
  3314  0F22                     	;# 
  3315  0F23                     	;# 
  3316  0F24                     	;# 
  3317  0F25                     	;# 
  3318  0F26                     	;# 
  3319  0F27                     	;# 
  3320  0F28                     	;# 
  3321  0F29                     	;# 
  3322  0F2A                     	;# 
  3323  0F2B                     	;# 
  3324  0F2C                     	;# 
  3325  0F2D                     	;# 
  3326  0F2E                     	;# 
  3327  0F2F                     	;# 
  3328  0F30                     	;# 
  3329  0F31                     	;# 
  3330  0F32                     	;# 
  3331  0F38                     	;# 
  3332  0F39                     	;# 
  3333  0F3A                     	;# 
  3334  0F3B                     	;# 
  3335  0F3C                     	;# 
  3336  0F3D                     	;# 
  3337  0F3E                     	;# 
  3338  0F3F                     	;# 
  3339  0F40                     	;# 
  3340  0F41                     	;# 
  3341  0F43                     	;# 
  3342  0F44                     	;# 
  3343  0F45                     	;# 
  3344  0F46                     	;# 
  3345  0F47                     	;# 
  3346  0F48                     	;# 
  3347  0F49                     	;# 
  3348  0F4A                     	;# 
  3349  0F4B                     	;# 
  3350  0F4C                     	;# 
  3351  0F4E                     	;# 
  3352  0F4F                     	;# 
  3353  0F50                     	;# 
  3354  0F51                     	;# 
  3355  0F52                     	;# 
  3356  0F53                     	;# 
  3357  0F54                     	;# 
  3358  0F55                     	;# 
  3359  0F56                     	;# 
  3360  0F57                     	;# 
  3361  0F59                     	;# 
  3362  0F5A                     	;# 
  3363  0F5B                     	;# 
  3364  0F5C                     	;# 
  3365  0F5D                     	;# 
  3366  0F61                     	;# 
  3367  0F62                     	;# 
  3368  0F64                     	;# 
  3369  0F65                     	;# 
  3370  0F66                     	;# 
  3371  0F67                     	;# 
  3372  0F68                     	;# 
  3373  0F69                     	;# 
  3374  0F6A                     	;# 
  3375  0F6B                     	;# 
  3376  0F6C                     	;# 
  3377  0F6D                     	;# 
  3378  0FE4                     	;# 
  3379  0FE5                     	;# 
  3380  0FE6                     	;# 
  3381  0FE7                     	;# 
  3382  0FE8                     	;# 
  3383  0FE9                     	;# 
  3384  0FEA                     	;# 
  3385  0FEB                     	;# 
  3386  0FED                     	;# 
  3387  0FEE                     	;# 
  3388  0FEF                     	;# 
  3389  0000                     	;# 
  3390  0001                     	;# 
  3391  0002                     	;# 
  3392  0003                     	;# 
  3393  0004                     	;# 
  3394  0005                     	;# 
  3395  0006                     	;# 
  3396  0007                     	;# 
  3397  0008                     	;# 
  3398  0009                     	;# 
  3399  000A                     	;# 
  3400  000B                     	;# 
  3401  000C                     	;# 
  3402  000D                     	;# 
  3403  000E                     	;# 
  3404  000F                     	;# 
  3405  0010                     	;# 
  3406  0011                     	;# 
  3407  0012                     	;# 
  3408  0013                     	;# 
  3409  0014                     	;# 
  3410  0015                     	;# 
  3411  0016                     	;# 
  3412  0017                     	;# 
  3413  0018                     	;# 
  3414  0019                     	;# 
  3415  001A                     	;# 
  3416  001C                     	;# 
  3417  001C                     	;# 
  3418  001D                     	;# 
  3419  001D                     	;# 
  3420  001E                     	;# 
  3421  001F                     	;# 
  3422  008C                     	;# 
  3423  008C                     	;# 
  3424  008D                     	;# 
  3425  008E                     	;# 
  3426  008E                     	;# 
  3427  008F                     	;# 
  3428  0090                     	;# 
  3429  0090                     	;# 
  3430  0091                     	;# 
  3431  0093                     	;# 
  3432  0094                     	;# 
  3433  0095                     	;# 
  3434  0096                     	;# 
  3435  0097                     	;# 
  3436  0098                     	;# 
  3437  0099                     	;# 
  3438  009A                     	;# 
  3439  009B                     	;# 
  3440  009C                     	;# 
  3441  009D                     	;# 
  3442  009E                     	;# 
  3443  010C                     	;# 
  3444  010D                     	;# 
  3445  010E                     	;# 
  3446  010E                     	;# 
  3447  010F                     	;# 
  3448  0110                     	;# 
  3449  0110                     	;# 
  3450  0111                     	;# 
  3451  0112                     	;# 
  3452  0112                     	;# 
  3453  0113                     	;# 
  3454  0114                     	;# 
  3455  0114                     	;# 
  3456  0115                     	;# 
  3457  0116                     	;# 
  3458  0116                     	;# 
  3459  0117                     	;# 
  3460  0119                     	;# 
  3461  0119                     	;# 
  3462  0119                     	;# 
  3463  011A                     	;# 
  3464  011A                     	;# 
  3465  011A                     	;# 
  3466  011B                     	;# 
  3467  011B                     	;# 
  3468  011B                     	;# 
  3469  011B                     	;# 
  3470  011B                     	;# 
  3471  011C                     	;# 
  3472  011C                     	;# 
  3473  011C                     	;# 
  3474  011D                     	;# 
  3475  011D                     	;# 
  3476  011D                     	;# 
  3477  011E                     	;# 
  3478  011E                     	;# 
  3479  011E                     	;# 
  3480  011F                     	;# 
  3481  011F                     	;# 
  3482  011F                     	;# 
  3483  011F                     	;# 
  3484  011F                     	;# 
  3485  018C                     	;# 
  3486  018D                     	;# 
  3487  018E                     	;# 
  3488  018F                     	;# 
  3489  0190                     	;# 
  3490  0191                     	;# 
  3491  0192                     	;# 
  3492  0196                     	;# 
  3493  0197                     	;# 
  3494  0198                     	;# 
  3495  0199                     	;# 
  3496  019A                     	;# 
  3497  019B                     	;# 
  3498  019C                     	;# 
  3499  020C                     	;# 
  3500  020C                     	;# 
  3501  020D                     	;# 
  3502  020E                     	;# 
  3503  020F                     	;# 
  3504  020F                     	;# 
  3505  0210                     	;# 
  3506  0210                     	;# 
  3507  0211                     	;# 
  3508  0211                     	;# 
  3509  0212                     	;# 
  3510  0212                     	;# 
  3511  0213                     	;# 
  3512  0214                     	;# 
  3513  0215                     	;# 
  3514  0215                     	;# 
  3515  0216                     	;# 
  3516  0216                     	;# 
  3517  0217                     	;# 
  3518  0217                     	;# 
  3519  0218                     	;# 
  3520  0218                     	;# 
  3521  0219                     	;# 
  3522  021A                     	;# 
  3523  021B                     	;# 
  3524  021B                     	;# 
  3525  021C                     	;# 
  3526  021C                     	;# 
  3527  021D                     	;# 
  3528  021D                     	;# 
  3529  021E                     	;# 
  3530  021F                     	;# 
  3531  028C                     	;# 
  3532  028C                     	;# 
  3533  028D                     	;# 
  3534  028D                     	;# 
  3535  028E                     	;# 
  3536  028F                     	;# 
  3537  0290                     	;# 
  3538  0290                     	;# 
  3539  0291                     	;# 
  3540  0292                     	;# 
  3541  0292                     	;# 
  3542  0293                     	;# 
  3543  0293                     	;# 
  3544  0294                     	;# 
  3545  0295                     	;# 
  3546  0296                     	;# 
  3547  0296                     	;# 
  3548  0297                     	;# 
  3549  0298                     	;# 
  3550  0298                     	;# 
  3551  0299                     	;# 
  3552  0299                     	;# 
  3553  029A                     	;# 
  3554  029B                     	;# 
  3555  029C                     	;# 
  3556  029C                     	;# 
  3557  029D                     	;# 
  3558  030C                     	;# 
  3559  030C                     	;# 
  3560  030D                     	;# 
  3561  030E                     	;# 
  3562  030F                     	;# 
  3563  0310                     	;# 
  3564  0310                     	;# 
  3565  0311                     	;# 
  3566  0312                     	;# 
  3567  0313                     	;# 
  3568  0314                     	;# 
  3569  0314                     	;# 
  3570  0315                     	;# 
  3571  0316                     	;# 
  3572  0317                     	;# 
  3573  0318                     	;# 
  3574  0318                     	;# 
  3575  0319                     	;# 
  3576  031A                     	;# 
  3577  031B                     	;# 
  3578  031C                     	;# 
  3579  031C                     	;# 
  3580  031D                     	;# 
  3581  031E                     	;# 
  3582  031F                     	;# 
  3583  038C                     	;# 
  3584  038C                     	;# 
  3585  038D                     	;# 
  3586  038E                     	;# 
  3587  0390                     	;# 
  3588  0390                     	;# 
  3589  0391                     	;# 
  3590  0392                     	;# 
  3591  040C                     	;# 
  3592  040D                     	;# 
  3593  040E                     	;# 
  3594  040F                     	;# 
  3595  0410                     	;# 
  3596  0411                     	;# 
  3597  0416                     	;# 
  3598  0416                     	;# 
  3599  0417                     	;# 
  3600  0418                     	;# 
  3601  0418                     	;# 
  3602  0419                     	;# 
  3603  041A                     	;# 
  3604  041A                     	;# 
  3605  041B                     	;# 
  3606  041C                     	;# 
  3607  041C                     	;# 
  3608  041D                     	;# 
  3609  041E                     	;# 
  3610  041F                     	;# 
  3611  048C                     	;# 
  3612  048C                     	;# 
  3613  048D                     	;# 
  3614  048E                     	;# 
  3615  048F                     	;# 
  3616  048F                     	;# 
  3617  0490                     	;# 
  3618  0491                     	;# 
  3619  0492                     	;# 
  3620  0492                     	;# 
  3621  0493                     	;# 
  3622  0494                     	;# 
  3623  0495                     	;# 
  3624  0495                     	;# 
  3625  0496                     	;# 
  3626  0497                     	;# 
  3627  0498                     	;# 
  3628  0499                     	;# 
  3629  049A                     	;# 
  3630  049B                     	;# 
  3631  049C                     	;# 
  3632  049D                     	;# 
  3633  050C                     	;# 
  3634  050C                     	;# 
  3635  050D                     	;# 
  3636  050E                     	;# 
  3637  050F                     	;# 
  3638  050F                     	;# 
  3639  0510                     	;# 
  3640  0511                     	;# 
  3641  0512                     	;# 
  3642  0512                     	;# 
  3643  0513                     	;# 
  3644  0514                     	;# 
  3645  0515                     	;# 
  3646  0515                     	;# 
  3647  0516                     	;# 
  3648  0517                     	;# 
  3649  0518                     	;# 
  3650  0519                     	;# 
  3651  051A                     	;# 
  3652  051B                     	;# 
  3653  051C                     	;# 
  3654  051D                     	;# 
  3655  058C                     	;# 
  3656  058C                     	;# 
  3657  058D                     	;# 
  3658  058E                     	;# 
  3659  058F                     	;# 
  3660  058F                     	;# 
  3661  0590                     	;# 
  3662  0591                     	;# 
  3663  0592                     	;# 
  3664  0593                     	;# 
  3665  060C                     	;# 
  3666  060D                     	;# 
  3667  060E                     	;# 
  3668  060F                     	;# 
  3669  0610                     	;# 
  3670  0611                     	;# 
  3671  0612                     	;# 
  3672  0613                     	;# 
  3673  0614                     	;# 
  3674  0616                     	;# 
  3675  0617                     	;# 
  3676  0618                     	;# 
  3677  0619                     	;# 
  3678  061A                     	;# 
  3679  061B                     	;# 
  3680  061C                     	;# 
  3681  061D                     	;# 
  3682  061E                     	;# 
  3683  068C                     	;# 
  3684  068D                     	;# 
  3685  068E                     	;# 
  3686  068F                     	;# 
  3687  0690                     	;# 
  3688  0691                     	;# 
  3689  0692                     	;# 
  3690  0693                     	;# 
  3691  0694                     	;# 
  3692  070C                     	;# 
  3693  070D                     	;# 
  3694  070E                     	;# 
  3695  070F                     	;# 
  3696  0710                     	;# 
  3697  0711                     	;# 
  3698  0712                     	;# 
  3699  0713                     	;# 
  3700  0714                     	;# 
  3701  0716                     	;# 
  3702  0717                     	;# 
  3703  0718                     	;# 
  3704  0719                     	;# 
  3705  071A                     	;# 
  3706  071B                     	;# 
  3707  071C                     	;# 
  3708  071D                     	;# 
  3709  071E                     	;# 
  3710  0796                     	;# 
  3711  0797                     	;# 
  3712  0798                     	;# 
  3713  0799                     	;# 
  3714  079A                     	;# 
  3715  079B                     	;# 
  3716  080C                     	;# 
  3717  080D                     	;# 
  3718  080E                     	;# 
  3719  080F                     	;# 
  3720  0810                     	;# 
  3721  0811                     	;# 
  3722  0812                     	;# 
  3723  0813                     	;# 
  3724  0814                     	;# 
  3725  081A                     	;# 
  3726  081B                     	;# 
  3727  081C                     	;# 
  3728  081D                     	;# 
  3729  081E                     	;# 
  3730  081F                     	;# 
  3731  088C                     	;# 
  3732  088D                     	;# 
  3733  088E                     	;# 
  3734  088F                     	;# 
  3735  0890                     	;# 
  3736  0891                     	;# 
  3737  0892                     	;# 
  3738  0893                     	;# 
  3739  0895                     	;# 
  3740  0896                     	;# 
  3741  0897                     	;# 
  3742  0898                     	;# 
  3743  0899                     	;# 
  3744  089A                     	;# 
  3745  089B                     	;# 
  3746  090C                     	;# 
  3747  090E                     	;# 
  3748  090F                     	;# 
  3749  091F                     	;# 
  3750  091F                     	;# 
  3751  098F                     	;# 
  3752  098F                     	;# 
  3753  0990                     	;# 
  3754  0991                     	;# 
  3755  0992                     	;# 
  3756  0993                     	;# 
  3757  0994                     	;# 
  3758  0995                     	;# 
  3759  0996                     	;# 
  3760  0997                     	;# 
  3761  0E0F                     	;# 
  3762  0E10                     	;# 
  3763  0E11                     	;# 
  3764  0E12                     	;# 
  3765  0E13                     	;# 
  3766  0E14                     	;# 
  3767  0E15                     	;# 
  3768  0E16                     	;# 
  3769  0E17                     	;# 
  3770  0E18                     	;# 
  3771  0E19                     	;# 
  3772  0E1A                     	;# 
  3773  0E1B                     	;# 
  3774  0E1C                     	;# 
  3775  0E1D                     	;# 
  3776  0E1E                     	;# 
  3777  0E1F                     	;# 
  3778  0E20                     	;# 
  3779  0E21                     	;# 
  3780  0E22                     	;# 
  3781  0E23                     	;# 
  3782  0E24                     	;# 
  3783  0E25                     	;# 
  3784  0E26                     	;# 
  3785  0E27                     	;# 
  3786  0E28                     	;# 
  3787  0E29                     	;# 
  3788  0E2A                     	;# 
  3789  0E2B                     	;# 
  3790  0E2C                     	;# 
  3791  0E2D                     	;# 
  3792  0E2E                     	;# 
  3793  0E2F                     	;# 
  3794  0E30                     	;# 
  3795  0E31                     	;# 
  3796  0E32                     	;# 
  3797  0E33                     	;# 
  3798  0E34                     	;# 
  3799  0E35                     	;# 
  3800  0E36                     	;# 
  3801  0E37                     	;# 
  3802  0E8F                     	;# 
  3803  0E90                     	;# 
  3804  0E91                     	;# 
  3805  0E92                     	;# 
  3806  0E93                     	;# 
  3807  0E94                     	;# 
  3808  0E95                     	;# 
  3809  0E96                     	;# 
  3810  0E97                     	;# 
  3811  0E9C                     	;# 
  3812  0E9D                     	;# 
  3813  0E9E                     	;# 
  3814  0EA1                     	;# 
  3815  0EA2                     	;# 
  3816  0EA3                     	;# 
  3817  0EA4                     	;# 
  3818  0EA5                     	;# 
  3819  0EA9                     	;# 
  3820  0EAA                     	;# 
  3821  0EAB                     	;# 
  3822  0EAC                     	;# 
  3823  0EB1                     	;# 
  3824  0EB2                     	;# 
  3825  0EB3                     	;# 
  3826  0EB8                     	;# 
  3827  0EB9                     	;# 
  3828  0EBA                     	;# 
  3829  0EBB                     	;# 
  3830  0EBC                     	;# 
  3831  0EBD                     	;# 
  3832  0EBE                     	;# 
  3833  0EC3                     	;# 
  3834  0EC5                     	;# 
  3835  0EC6                     	;# 
  3836  0EC7                     	;# 
  3837  0EC8                     	;# 
  3838  0EC9                     	;# 
  3839  0ECA                     	;# 
  3840  0ECB                     	;# 
  3841  0ECC                     	;# 
  3842  0F10                     	;# 
  3843  0F11                     	;# 
  3844  0F12                     	;# 
  3845  0F13                     	;# 
  3846  0F14                     	;# 
  3847  0F15                     	;# 
  3848  0F16                     	;# 
  3849  0F17                     	;# 
  3850  0F18                     	;# 
  3851  0F19                     	;# 
  3852  0F1A                     	;# 
  3853  0F1B                     	;# 
  3854  0F1C                     	;# 
  3855  0F1D                     	;# 
  3856  0F1E                     	;# 
  3857  0F1F                     	;# 
  3858  0F20                     	;# 
  3859  0F21                     	;# 
  3860  0F22                     	;# 
  3861  0F23                     	;# 
  3862  0F24                     	;# 
  3863  0F25                     	;# 
  3864  0F26                     	;# 
  3865  0F27                     	;# 
  3866  0F28                     	;# 
  3867  0F29                     	;# 
  3868  0F2A                     	;# 
  3869  0F2B                     	;# 
  3870  0F2C                     	;# 
  3871  0F2D                     	;# 
  3872  0F2E                     	;# 
  3873  0F2F                     	;# 
  3874  0F30                     	;# 
  3875  0F31                     	;# 
  3876  0F32                     	;# 
  3877  0F38                     	;# 
  3878  0F39                     	;# 
  3879  0F3A                     	;# 
  3880  0F3B                     	;# 
  3881  0F3C                     	;# 
  3882  0F3D                     	;# 
  3883  0F3E                     	;# 
  3884  0F3F                     	;# 
  3885  0F40                     	;# 
  3886  0F41                     	;# 
  3887  0F43                     	;# 
  3888  0F44                     	;# 
  3889  0F45                     	;# 
  3890  0F46                     	;# 
  3891  0F47                     	;# 
  3892  0F48                     	;# 
  3893  0F49                     	;# 
  3894  0F4A                     	;# 
  3895  0F4B                     	;# 
  3896  0F4C                     	;# 
  3897  0F4E                     	;# 
  3898  0F4F                     	;# 
  3899  0F50                     	;# 
  3900  0F51                     	;# 
  3901  0F52                     	;# 
  3902  0F53                     	;# 
  3903  0F54                     	;# 
  3904  0F55                     	;# 
  3905  0F56                     	;# 
  3906  0F57                     	;# 
  3907  0F59                     	;# 
  3908  0F5A                     	;# 
  3909  0F5B                     	;# 
  3910  0F5C                     	;# 
  3911  0F5D                     	;# 
  3912  0F61                     	;# 
  3913  0F62                     	;# 
  3914  0F64                     	;# 
  3915  0F65                     	;# 
  3916  0F66                     	;# 
  3917  0F67                     	;# 
  3918  0F68                     	;# 
  3919  0F69                     	;# 
  3920  0F6A                     	;# 
  3921  0F6B                     	;# 
  3922  0F6C                     	;# 
  3923  0F6D                     	;# 
  3924  0FE4                     	;# 
  3925  0FE5                     	;# 
  3926  0FE6                     	;# 
  3927  0FE7                     	;# 
  3928  0FE8                     	;# 
  3929  0FE9                     	;# 
  3930  0FEA                     	;# 
  3931  0FEB                     	;# 
  3932  0FED                     	;# 
  3933  0FEE                     	;# 
  3934  0FEF                     	;# 
  3935  0000                     	;# 
  3936  0001                     	;# 
  3937  0002                     	;# 
  3938  0003                     	;# 
  3939  0004                     	;# 
  3940  0005                     	;# 
  3941  0006                     	;# 
  3942  0007                     	;# 
  3943  0008                     	;# 
  3944  0009                     	;# 
  3945  000A                     	;# 
  3946  000B                     	;# 
  3947  000C                     	;# 
  3948  000D                     	;# 
  3949  000E                     	;# 
  3950  000F                     	;# 
  3951  0010                     	;# 
  3952  0011                     	;# 
  3953  0012                     	;# 
  3954  0013                     	;# 
  3955  0014                     	;# 
  3956  0015                     	;# 
  3957  0016                     	;# 
  3958  0017                     	;# 
  3959  0018                     	;# 
  3960  0019                     	;# 
  3961  001A                     	;# 
  3962  001C                     	;# 
  3963  001C                     	;# 
  3964  001D                     	;# 
  3965  001D                     	;# 
  3966  001E                     	;# 
  3967  001F                     	;# 
  3968  008C                     	;# 
  3969  008C                     	;# 
  3970  008D                     	;# 
  3971  008E                     	;# 
  3972  008E                     	;# 
  3973  008F                     	;# 
  3974  0090                     	;# 
  3975  0090                     	;# 
  3976  0091                     	;# 
  3977  0093                     	;# 
  3978  0094                     	;# 
  3979  0095                     	;# 
  3980  0096                     	;# 
  3981  0097                     	;# 
  3982  0098                     	;# 
  3983  0099                     	;# 
  3984  009A                     	;# 
  3985  009B                     	;# 
  3986  009C                     	;# 
  3987  009D                     	;# 
  3988  009E                     	;# 
  3989  010C                     	;# 
  3990  010D                     	;# 
  3991  010E                     	;# 
  3992  010E                     	;# 
  3993  010F                     	;# 
  3994  0110                     	;# 
  3995  0110                     	;# 
  3996  0111                     	;# 
  3997  0112                     	;# 
  3998  0112                     	;# 
  3999  0113                     	;# 
  4000  0114                     	;# 
  4001  0114                     	;# 
  4002  0115                     	;# 
  4003  0116                     	;# 
  4004  0116                     	;# 
  4005  0117                     	;# 
  4006  0119                     	;# 
  4007  0119                     	;# 
  4008  0119                     	;# 
  4009  011A                     	;# 
  4010  011A                     	;# 
  4011  011A                     	;# 
  4012  011B                     	;# 
  4013  011B                     	;# 
  4014  011B                     	;# 
  4015  011B                     	;# 
  4016  011B                     	;# 
  4017  011C                     	;# 
  4018  011C                     	;# 
  4019  011C                     	;# 
  4020  011D                     	;# 
  4021  011D                     	;# 
  4022  011D                     	;# 
  4023  011E                     	;# 
  4024  011E                     	;# 
  4025  011E                     	;# 
  4026  011F                     	;# 
  4027  011F                     	;# 
  4028  011F                     	;# 
  4029  011F                     	;# 
  4030  011F                     	;# 
  4031  018C                     	;# 
  4032  018D                     	;# 
  4033  018E                     	;# 
  4034  018F                     	;# 
  4035  0190                     	;# 
  4036  0191                     	;# 
  4037  0192                     	;# 
  4038  0196                     	;# 
  4039  0197                     	;# 
  4040  0198                     	;# 
  4041  0199                     	;# 
  4042  019A                     	;# 
  4043  019B                     	;# 
  4044  019C                     	;# 
  4045  020C                     	;# 
  4046  020C                     	;# 
  4047  020D                     	;# 
  4048  020E                     	;# 
  4049  020F                     	;# 
  4050  020F                     	;# 
  4051  0210                     	;# 
  4052  0210                     	;# 
  4053  0211                     	;# 
  4054  0211                     	;# 
  4055  0212                     	;# 
  4056  0212                     	;# 
  4057  0213                     	;# 
  4058  0214                     	;# 
  4059  0215                     	;# 
  4060  0215                     	;# 
  4061  0216                     	;# 
  4062  0216                     	;# 
  4063  0217                     	;# 
  4064  0217                     	;# 
  4065  0218                     	;# 
  4066  0218                     	;# 
  4067  0219                     	;# 
  4068  021A                     	;# 
  4069  021B                     	;# 
  4070  021B                     	;# 
  4071  021C                     	;# 
  4072  021C                     	;# 
  4073  021D                     	;# 
  4074  021D                     	;# 
  4075  021E                     	;# 
  4076  021F                     	;# 
  4077  028C                     	;# 
  4078  028C                     	;# 
  4079  028D                     	;# 
  4080  028D                     	;# 
  4081  028E                     	;# 
  4082  028F                     	;# 
  4083  0290                     	;# 
  4084  0290                     	;# 
  4085  0291                     	;# 
  4086  0292                     	;# 
  4087  0292                     	;# 
  4088  0293                     	;# 
  4089  0293                     	;# 
  4090  0294                     	;# 
  4091  0295                     	;# 
  4092  0296                     	;# 
  4093  0296                     	;# 
  4094  0297                     	;# 
  4095  0298                     	;# 
  4096  0298                     	;# 
  4097  0299                     	;# 
  4098  0299                     	;# 
  4099  029A                     	;# 
  4100  029B                     	;# 
  4101  029C                     	;# 
  4102  029C                     	;# 
  4103  029D                     	;# 
  4104  030C                     	;# 
  4105  030C                     	;# 
  4106  030D                     	;# 
  4107  030E                     	;# 
  4108  030F                     	;# 
  4109  0310                     	;# 
  4110  0310                     	;# 
  4111  0311                     	;# 
  4112  0312                     	;# 
  4113  0313                     	;# 
  4114  0314                     	;# 
  4115  0314                     	;# 
  4116  0315                     	;# 
  4117  0316                     	;# 
  4118  0317                     	;# 
  4119  0318                     	;# 
  4120  0318                     	;# 
  4121  0319                     	;# 
  4122  031A                     	;# 
  4123  031B                     	;# 
  4124  031C                     	;# 
  4125  031C                     	;# 
  4126  031D                     	;# 
  4127  031E                     	;# 
  4128  031F                     	;# 
  4129  038C                     	;# 
  4130  038C                     	;# 
  4131  038D                     	;# 
  4132  038E                     	;# 
  4133  0390                     	;# 
  4134  0390                     	;# 
  4135  0391                     	;# 
  4136  0392                     	;# 
  4137  040C                     	;# 
  4138  040D                     	;# 
  4139  040E                     	;# 
  4140  040F                     	;# 
  4141  0410                     	;# 
  4142  0411                     	;# 
  4143  0416                     	;# 
  4144  0416                     	;# 
  4145  0417                     	;# 
  4146  0418                     	;# 
  4147  0418                     	;# 
  4148  0419                     	;# 
  4149  041A                     	;# 
  4150  041A                     	;# 
  4151  041B                     	;# 
  4152  041C                     	;# 
  4153  041C                     	;# 
  4154  041D                     	;# 
  4155  041E                     	;# 
  4156  041F                     	;# 
  4157  048C                     	;# 
  4158  048C                     	;# 
  4159  048D                     	;# 
  4160  048E                     	;# 
  4161  048F                     	;# 
  4162  048F                     	;# 
  4163  0490                     	;# 
  4164  0491                     	;# 
  4165  0492                     	;# 
  4166  0492                     	;# 
  4167  0493                     	;# 
  4168  0494                     	;# 
  4169  0495                     	;# 
  4170  0495                     	;# 
  4171  0496                     	;# 
  4172  0497                     	;# 
  4173  0498                     	;# 
  4174  0499                     	;# 
  4175  049A                     	;# 
  4176  049B                     	;# 
  4177  049C                     	;# 
  4178  049D                     	;# 
  4179  050C                     	;# 
  4180  050C                     	;# 
  4181  050D                     	;# 
  4182  050E                     	;# 
  4183  050F                     	;# 
  4184  050F                     	;# 
  4185  0510                     	;# 
  4186  0511                     	;# 
  4187  0512                     	;# 
  4188  0512                     	;# 
  4189  0513                     	;# 
  4190  0514                     	;# 
  4191  0515                     	;# 
  4192  0515                     	;# 
  4193  0516                     	;# 
  4194  0517                     	;# 
  4195  0518                     	;# 
  4196  0519                     	;# 
  4197  051A                     	;# 
  4198  051B                     	;# 
  4199  051C                     	;# 
  4200  051D                     	;# 
  4201  058C                     	;# 
  4202  058C                     	;# 
  4203  058D                     	;# 
  4204  058E                     	;# 
  4205  058F                     	;# 
  4206  058F                     	;# 
  4207  0590                     	;# 
  4208  0591                     	;# 
  4209  0592                     	;# 
  4210  0593                     	;# 
  4211  060C                     	;# 
  4212  060D                     	;# 
  4213  060E                     	;# 
  4214  060F                     	;# 
  4215  0610                     	;# 
  4216  0611                     	;# 
  4217  0612                     	;# 
  4218  0613                     	;# 
  4219  0614                     	;# 
  4220  0616                     	;# 
  4221  0617                     	;# 
  4222  0618                     	;# 
  4223  0619                     	;# 
  4224  061A                     	;# 
  4225  061B                     	;# 
  4226  061C                     	;# 
  4227  061D                     	;# 
  4228  061E                     	;# 
  4229  068C                     	;# 
  4230  068D                     	;# 
  4231  068E                     	;# 
  4232  068F                     	;# 
  4233  0690                     	;# 
  4234  0691                     	;# 
  4235  0692                     	;# 
  4236  0693                     	;# 
  4237  0694                     	;# 
  4238  070C                     	;# 
  4239  070D                     	;# 
  4240  070E                     	;# 
  4241  070F                     	;# 
  4242  0710                     	;# 
  4243  0711                     	;# 
  4244  0712                     	;# 
  4245  0713                     	;# 
  4246  0714                     	;# 
  4247  0716                     	;# 
  4248  0717                     	;# 
  4249  0718                     	;# 
  4250  0719                     	;# 
  4251  071A                     	;# 
  4252  071B                     	;# 
  4253  071C                     	;# 
  4254  071D                     	;# 
  4255  071E                     	;# 
  4256  0796                     	;# 
  4257  0797                     	;# 
  4258  0798                     	;# 
  4259  0799                     	;# 
  4260  079A                     	;# 
  4261  079B                     	;# 
  4262  080C                     	;# 
  4263  080D                     	;# 
  4264  080E                     	;# 
  4265  080F                     	;# 
  4266  0810                     	;# 
  4267  0811                     	;# 
  4268  0812                     	;# 
  4269  0813                     	;# 
  4270  0814                     	;# 
  4271  081A                     	;# 
  4272  081B                     	;# 
  4273  081C                     	;# 
  4274  081D                     	;# 
  4275  081E                     	;# 
  4276  081F                     	;# 
  4277  088C                     	;# 
  4278  088D                     	;# 
  4279  088E                     	;# 
  4280  088F                     	;# 
  4281  0890                     	;# 
  4282  0891                     	;# 
  4283  0892                     	;# 
  4284  0893                     	;# 
  4285  0895                     	;# 
  4286  0896                     	;# 
  4287  0897                     	;# 
  4288  0898                     	;# 
  4289  0899                     	;# 
  4290  089A                     	;# 
  4291  089B                     	;# 
  4292  090C                     	;# 
  4293  090E                     	;# 
  4294  090F                     	;# 
  4295  091F                     	;# 
  4296  091F                     	;# 
  4297  098F                     	;# 
  4298  098F                     	;# 
  4299  0990                     	;# 
  4300  0991                     	;# 
  4301  0992                     	;# 
  4302  0993                     	;# 
  4303  0994                     	;# 
  4304  0995                     	;# 
  4305  0996                     	;# 
  4306  0997                     	;# 
  4307  0E0F                     	;# 
  4308  0E10                     	;# 
  4309  0E11                     	;# 
  4310  0E12                     	;# 
  4311  0E13                     	;# 
  4312  0E14                     	;# 
  4313  0E15                     	;# 
  4314  0E16                     	;# 
  4315  0E17                     	;# 
  4316  0E18                     	;# 
  4317  0E19                     	;# 
  4318  0E1A                     	;# 
  4319  0E1B                     	;# 
  4320  0E1C                     	;# 
  4321  0E1D                     	;# 
  4322  0E1E                     	;# 
  4323  0E1F                     	;# 
  4324  0E20                     	;# 
  4325  0E21                     	;# 
  4326  0E22                     	;# 
  4327  0E23                     	;# 
  4328  0E24                     	;# 
  4329  0E25                     	;# 
  4330  0E26                     	;# 
  4331  0E27                     	;# 
  4332  0E28                     	;# 
  4333  0E29                     	;# 
  4334  0E2A                     	;# 
  4335  0E2B                     	;# 
  4336  0E2C                     	;# 
  4337  0E2D                     	;# 
  4338  0E2E                     	;# 
  4339  0E2F                     	;# 
  4340  0E30                     	;# 
  4341  0E31                     	;# 
  4342  0E32                     	;# 
  4343  0E33                     	;# 
  4344  0E34                     	;# 
  4345  0E35                     	;# 
  4346  0E36                     	;# 
  4347  0E37                     	;# 
  4348  0E8F                     	;# 
  4349  0E90                     	;# 
  4350  0E91                     	;# 
  4351  0E92                     	;# 
  4352  0E93                     	;# 
  4353  0E94                     	;# 
  4354  0E95                     	;# 
  4355  0E96                     	;# 
  4356  0E97                     	;# 
  4357  0E9C                     	;# 
  4358  0E9D                     	;# 
  4359  0E9E                     	;# 
  4360  0EA1                     	;# 
  4361  0EA2                     	;# 
  4362  0EA3                     	;# 
  4363  0EA4                     	;# 
  4364  0EA5                     	;# 
  4365  0EA9                     	;# 
  4366  0EAA                     	;# 
  4367  0EAB                     	;# 
  4368  0EAC                     	;# 
  4369  0EB1                     	;# 
  4370  0EB2                     	;# 
  4371  0EB3                     	;# 
  4372  0EB8                     	;# 
  4373  0EB9                     	;# 
  4374  0EBA                     	;# 
  4375  0EBB                     	;# 
  4376  0EBC                     	;# 
  4377  0EBD                     	;# 
  4378  0EBE                     	;# 
  4379  0EC3                     	;# 
  4380  0EC5                     	;# 
  4381  0EC6                     	;# 
  4382  0EC7                     	;# 
  4383  0EC8                     	;# 
  4384  0EC9                     	;# 
  4385  0ECA                     	;# 
  4386  0ECB                     	;# 
  4387  0ECC                     	;# 
  4388  0F10                     	;# 
  4389  0F11                     	;# 
  4390  0F12                     	;# 
  4391  0F13                     	;# 
  4392  0F14                     	;# 
  4393  0F15                     	;# 
  4394  0F16                     	;# 
  4395  0F17                     	;# 
  4396  0F18                     	;# 
  4397  0F19                     	;# 
  4398  0F1A                     	;# 
  4399  0F1B                     	;# 
  4400  0F1C                     	;# 
  4401  0F1D                     	;# 
  4402  0F1E                     	;# 
  4403  0F1F                     	;# 
  4404  0F20                     	;# 
  4405  0F21                     	;# 
  4406  0F22                     	;# 
  4407  0F23                     	;# 
  4408  0F24                     	;# 
  4409  0F25                     	;# 
  4410  0F26                     	;# 
  4411  0F27                     	;# 
  4412  0F28                     	;# 
  4413  0F29                     	;# 
  4414  0F2A                     	;# 
  4415  0F2B                     	;# 
  4416  0F2C                     	;# 
  4417  0F2D                     	;# 
  4418  0F2E                     	;# 
  4419  0F2F                     	;# 
  4420  0F30                     	;# 
  4421  0F31                     	;# 
  4422  0F32                     	;# 
  4423  0F38                     	;# 
  4424  0F39                     	;# 
  4425  0F3A                     	;# 
  4426  0F3B                     	;# 
  4427  0F3C                     	;# 
  4428  0F3D                     	;# 
  4429  0F3E                     	;# 
  4430  0F3F                     	;# 
  4431  0F40                     	;# 
  4432  0F41                     	;# 
  4433  0F43                     	;# 
  4434  0F44                     	;# 
  4435  0F45                     	;# 
  4436  0F46                     	;# 
  4437  0F47                     	;# 
  4438  0F48                     	;# 
  4439  0F49                     	;# 
  4440  0F4A                     	;# 
  4441  0F4B                     	;# 
  4442  0F4C                     	;# 
  4443  0F4E                     	;# 
  4444  0F4F                     	;# 
  4445  0F50                     	;# 
  4446  0F51                     	;# 
  4447  0F52                     	;# 
  4448  0F53                     	;# 
  4449  0F54                     	;# 
  4450  0F55                     	;# 
  4451  0F56                     	;# 
  4452  0F57                     	;# 
  4453  0F59                     	;# 
  4454  0F5A                     	;# 
  4455  0F5B                     	;# 
  4456  0F5C                     	;# 
  4457  0F5D                     	;# 
  4458  0F61                     	;# 
  4459  0F62                     	;# 
  4460  0F64                     	;# 
  4461  0F65                     	;# 
  4462  0F66                     	;# 
  4463  0F67                     	;# 
  4464  0F68                     	;# 
  4465  0F69                     	;# 
  4466  0F6A                     	;# 
  4467  0F6B                     	;# 
  4468  0F6C                     	;# 
  4469  0F6D                     	;# 
  4470  0FE4                     	;# 
  4471  0FE5                     	;# 
  4472  0FE6                     	;# 
  4473  0FE7                     	;# 
  4474  0FE8                     	;# 
  4475  0FE9                     	;# 
  4476  0FEA                     	;# 
  4477  0FEB                     	;# 
  4478  0FED                     	;# 
  4479  0FEE                     	;# 
  4480  0FEF                     	;# 
  4481  0000                     	;# 
  4482  0001                     	;# 
  4483  0002                     	;# 
  4484  0003                     	;# 
  4485  0004                     	;# 
  4486  0005                     	;# 
  4487  0006                     	;# 
  4488  0007                     	;# 
  4489  0008                     	;# 
  4490  0009                     	;# 
  4491  000A                     	;# 
  4492  000B                     	;# 
  4493  000C                     	;# 
  4494  000D                     	;# 
  4495  000E                     	;# 
  4496  000F                     	;# 
  4497  0010                     	;# 
  4498  0011                     	;# 
  4499  0012                     	;# 
  4500  0013                     	;# 
  4501  0014                     	;# 
  4502  0015                     	;# 
  4503  0016                     	;# 
  4504  0017                     	;# 
  4505  0018                     	;# 
  4506  0019                     	;# 
  4507  001A                     	;# 
  4508  001C                     	;# 
  4509  001C                     	;# 
  4510  001D                     	;# 
  4511  001D                     	;# 
  4512  001E                     	;# 
  4513  001F                     	;# 
  4514  008C                     	;# 
  4515  008C                     	;# 
  4516  008D                     	;# 
  4517  008E                     	;# 
  4518  008E                     	;# 
  4519  008F                     	;# 
  4520  0090                     	;# 
  4521  0090                     	;# 
  4522  0091                     	;# 
  4523  0093                     	;# 
  4524  0094                     	;# 
  4525  0095                     	;# 
  4526  0096                     	;# 
  4527  0097                     	;# 
  4528  0098                     	;# 
  4529  0099                     	;# 
  4530  009A                     	;# 
  4531  009B                     	;# 
  4532  009C                     	;# 
  4533  009D                     	;# 
  4534  009E                     	;# 
  4535  010C                     	;# 
  4536  010D                     	;# 
  4537  010E                     	;# 
  4538  010E                     	;# 
  4539  010F                     	;# 
  4540  0110                     	;# 
  4541  0110                     	;# 
  4542  0111                     	;# 
  4543  0112                     	;# 
  4544  0112                     	;# 
  4545  0113                     	;# 
  4546  0114                     	;# 
  4547  0114                     	;# 
  4548  0115                     	;# 
  4549  0116                     	;# 
  4550  0116                     	;# 
  4551  0117                     	;# 
  4552  0119                     	;# 
  4553  0119                     	;# 
  4554  0119                     	;# 
  4555  011A                     	;# 
  4556  011A                     	;# 
  4557  011A                     	;# 
  4558  011B                     	;# 
  4559  011B                     	;# 
  4560  011B                     	;# 
  4561  011B                     	;# 
  4562  011B                     	;# 
  4563  011C                     	;# 
  4564  011C                     	;# 
  4565  011C                     	;# 
  4566  011D                     	;# 
  4567  011D                     	;# 
  4568  011D                     	;# 
  4569  011E                     	;# 
  4570  011E                     	;# 
  4571  011E                     	;# 
  4572  011F                     	;# 
  4573  011F                     	;# 
  4574  011F                     	;# 
  4575  011F                     	;# 
  4576  011F                     	;# 
  4577  018C                     	;# 
  4578  018D                     	;# 
  4579  018E                     	;# 
  4580  018F                     	;# 
  4581  0190                     	;# 
  4582  0191                     	;# 
  4583  0192                     	;# 
  4584  0196                     	;# 
  4585  0197                     	;# 
  4586  0198                     	;# 
  4587  0199                     	;# 
  4588  019A                     	;# 
  4589  019B                     	;# 
  4590  019C                     	;# 
  4591  020C                     	;# 
  4592  020C                     	;# 
  4593  020D                     	;# 
  4594  020E                     	;# 
  4595  020F                     	;# 
  4596  020F                     	;# 
  4597  0210                     	;# 
  4598  0210                     	;# 
  4599  0211                     	;# 
  4600  0211                     	;# 
  4601  0212                     	;# 
  4602  0212                     	;# 
  4603  0213                     	;# 
  4604  0214                     	;# 
  4605  0215                     	;# 
  4606  0215                     	;# 
  4607  0216                     	;# 
  4608  0216                     	;# 
  4609  0217                     	;# 
  4610  0217                     	;# 
  4611  0218                     	;# 
  4612  0218                     	;# 
  4613  0219                     	;# 
  4614  021A                     	;# 
  4615  021B                     	;# 
  4616  021B                     	;# 
  4617  021C                     	;# 
  4618  021C                     	;# 
  4619  021D                     	;# 
  4620  021D                     	;# 
  4621  021E                     	;# 
  4622  021F                     	;# 
  4623  028C                     	;# 
  4624  028C                     	;# 
  4625  028D                     	;# 
  4626  028D                     	;# 
  4627  028E                     	;# 
  4628  028F                     	;# 
  4629  0290                     	;# 
  4630  0290                     	;# 
  4631  0291                     	;# 
  4632  0292                     	;# 
  4633  0292                     	;# 
  4634  0293                     	;# 
  4635  0293                     	;# 
  4636  0294                     	;# 
  4637  0295                     	;# 
  4638  0296                     	;# 
  4639  0296                     	;# 
  4640  0297                     	;# 
  4641  0298                     	;# 
  4642  0298                     	;# 
  4643  0299                     	;# 
  4644  0299                     	;# 
  4645  029A                     	;# 
  4646  029B                     	;# 
  4647  029C                     	;# 
  4648  029C                     	;# 
  4649  029D                     	;# 
  4650  030C                     	;# 
  4651  030C                     	;# 
  4652  030D                     	;# 
  4653  030E                     	;# 
  4654  030F                     	;# 
  4655  0310                     	;# 
  4656  0310                     	;# 
  4657  0311                     	;# 
  4658  0312                     	;# 
  4659  0313                     	;# 
  4660  0314                     	;# 
  4661  0314                     	;# 
  4662  0315                     	;# 
  4663  0316                     	;# 
  4664  0317                     	;# 
  4665  0318                     	;# 
  4666  0318                     	;# 
  4667  0319                     	;# 
  4668  031A                     	;# 
  4669  031B                     	;# 
  4670  031C                     	;# 
  4671  031C                     	;# 
  4672  031D                     	;# 
  4673  031E                     	;# 
  4674  031F                     	;# 
  4675  038C                     	;# 
  4676  038C                     	;# 
  4677  038D                     	;# 
  4678  038E                     	;# 
  4679  0390                     	;# 
  4680  0390                     	;# 
  4681  0391                     	;# 
  4682  0392                     	;# 
  4683  040C                     	;# 
  4684  040D                     	;# 
  4685  040E                     	;# 
  4686  040F                     	;# 
  4687  0410                     	;# 
  4688  0411                     	;# 
  4689  0416                     	;# 
  4690  0416                     	;# 
  4691  0417                     	;# 
  4692  0418                     	;# 
  4693  0418                     	;# 
  4694  0419                     	;# 
  4695  041A                     	;# 
  4696  041A                     	;# 
  4697  041B                     	;# 
  4698  041C                     	;# 
  4699  041C                     	;# 
  4700  041D                     	;# 
  4701  041E                     	;# 
  4702  041F                     	;# 
  4703  048C                     	;# 
  4704  048C                     	;# 
  4705  048D                     	;# 
  4706  048E                     	;# 
  4707  048F                     	;# 
  4708  048F                     	;# 
  4709  0490                     	;# 
  4710  0491                     	;# 
  4711  0492                     	;# 
  4712  0492                     	;# 
  4713  0493                     	;# 
  4714  0494                     	;# 
  4715  0495                     	;# 
  4716  0495                     	;# 
  4717  0496                     	;# 
  4718  0497                     	;# 
  4719  0498                     	;# 
  4720  0499                     	;# 
  4721  049A                     	;# 
  4722  049B                     	;# 
  4723  049C                     	;# 
  4724  049D                     	;# 
  4725  050C                     	;# 
  4726  050C                     	;# 
  4727  050D                     	;# 
  4728  050E                     	;# 
  4729  050F                     	;# 
  4730  050F                     	;# 
  4731  0510                     	;# 
  4732  0511                     	;# 
  4733  0512                     	;# 
  4734  0512                     	;# 
  4735  0513                     	;# 
  4736  0514                     	;# 
  4737  0515                     	;# 
  4738  0515                     	;# 
  4739  0516                     	;# 
  4740  0517                     	;# 
  4741  0518                     	;# 
  4742  0519                     	;# 
  4743  051A                     	;# 
  4744  051B                     	;# 
  4745  051C                     	;# 
  4746  051D                     	;# 
  4747  058C                     	;# 
  4748  058C                     	;# 
  4749  058D                     	;# 
  4750  058E                     	;# 
  4751  058F                     	;# 
  4752  058F                     	;# 
  4753  0590                     	;# 
  4754  0591                     	;# 
  4755  0592                     	;# 
  4756  0593                     	;# 
  4757  060C                     	;# 
  4758  060D                     	;# 
  4759  060E                     	;# 
  4760  060F                     	;# 
  4761  0610                     	;# 
  4762  0611                     	;# 
  4763  0612                     	;# 
  4764  0613                     	;# 
  4765  0614                     	;# 
  4766  0616                     	;# 
  4767  0617                     	;# 
  4768  0618                     	;# 
  4769  0619                     	;# 
  4770  061A                     	;# 
  4771  061B                     	;# 
  4772  061C                     	;# 
  4773  061D                     	;# 
  4774  061E                     	;# 
  4775  068C                     	;# 
  4776  068D                     	;# 
  4777  068E                     	;# 
  4778  068F                     	;# 
  4779  0690                     	;# 
  4780  0691                     	;# 
  4781  0692                     	;# 
  4782  0693                     	;# 
  4783  0694                     	;# 
  4784  070C                     	;# 
  4785  070D                     	;# 
  4786  070E                     	;# 
  4787  070F                     	;# 
  4788  0710                     	;# 
  4789  0711                     	;# 
  4790  0712                     	;# 
  4791  0713                     	;# 
  4792  0714                     	;# 
  4793  0716                     	;# 
  4794  0717                     	;# 
  4795  0718                     	;# 
  4796  0719                     	;# 
  4797  071A                     	;# 
  4798  071B                     	;# 
  4799  071C                     	;# 
  4800  071D                     	;# 
  4801  071E                     	;# 
  4802  0796                     	;# 
  4803  0797                     	;# 
  4804  0798                     	;# 
  4805  0799                     	;# 
  4806  079A                     	;# 
  4807  079B                     	;# 
  4808  080C                     	;# 
  4809  080D                     	;# 
  4810  080E                     	;# 
  4811  080F                     	;# 
  4812  0810                     	;# 
  4813  0811                     	;# 
  4814  0812                     	;# 
  4815  0813                     	;# 
  4816  0814                     	;# 
  4817  081A                     	;# 
  4818  081B                     	;# 
  4819  081C                     	;# 
  4820  081D                     	;# 
  4821  081E                     	;# 
  4822  081F                     	;# 
  4823  088C                     	;# 
  4824  088D                     	;# 
  4825  088E                     	;# 
  4826  088F                     	;# 
  4827  0890                     	;# 
  4828  0891                     	;# 
  4829  0892                     	;# 
  4830  0893                     	;# 
  4831  0895                     	;# 
  4832  0896                     	;# 
  4833  0897                     	;# 
  4834  0898                     	;# 
  4835  0899                     	;# 
  4836  089A                     	;# 
  4837  089B                     	;# 
  4838  090C                     	;# 
  4839  090E                     	;# 
  4840  090F                     	;# 
  4841  091F                     	;# 
  4842  091F                     	;# 
  4843  098F                     	;# 
  4844  098F                     	;# 
  4845  0990                     	;# 
  4846  0991                     	;# 
  4847  0992                     	;# 
  4848  0993                     	;# 
  4849  0994                     	;# 
  4850  0995                     	;# 
  4851  0996                     	;# 
  4852  0997                     	;# 
  4853  0E0F                     	;# 
  4854  0E10                     	;# 
  4855  0E11                     	;# 
  4856  0E12                     	;# 
  4857  0E13                     	;# 
  4858  0E14                     	;# 
  4859  0E15                     	;# 
  4860  0E16                     	;# 
  4861  0E17                     	;# 
  4862  0E18                     	;# 
  4863  0E19                     	;# 
  4864  0E1A                     	;# 
  4865  0E1B                     	;# 
  4866  0E1C                     	;# 
  4867  0E1D                     	;# 
  4868  0E1E                     	;# 
  4869  0E1F                     	;# 
  4870  0E20                     	;# 
  4871  0E21                     	;# 
  4872  0E22                     	;# 
  4873  0E23                     	;# 
  4874  0E24                     	;# 
  4875  0E25                     	;# 
  4876  0E26                     	;# 
  4877  0E27                     	;# 
  4878  0E28                     	;# 
  4879  0E29                     	;# 
  4880  0E2A                     	;# 
  4881  0E2B                     	;# 
  4882  0E2C                     	;# 
  4883  0E2D                     	;# 
  4884  0E2E                     	;# 
  4885  0E2F                     	;# 
  4886  0E30                     	;# 
  4887  0E31                     	;# 
  4888  0E32                     	;# 
  4889  0E33                     	;# 
  4890  0E34                     	;# 
  4891  0E35                     	;# 
  4892  0E36                     	;# 
  4893  0E37                     	;# 
  4894  0E8F                     	;# 
  4895  0E90                     	;# 
  4896  0E91                     	;# 
  4897  0E92                     	;# 
  4898  0E93                     	;# 
  4899  0E94                     	;# 
  4900  0E95                     	;# 
  4901  0E96                     	;# 
  4902  0E97                     	;# 
  4903  0E9C                     	;# 
  4904  0E9D                     	;# 
  4905  0E9E                     	;# 
  4906  0EA1                     	;# 
  4907  0EA2                     	;# 
  4908  0EA3                     	;# 
  4909  0EA4                     	;# 
  4910  0EA5                     	;# 
  4911  0EA9                     	;# 
  4912  0EAA                     	;# 
  4913  0EAB                     	;# 
  4914  0EAC                     	;# 
  4915  0EB1                     	;# 
  4916  0EB2                     	;# 
  4917  0EB3                     	;# 
  4918  0EB8                     	;# 
  4919  0EB9                     	;# 
  4920  0EBA                     	;# 
  4921  0EBB                     	;# 
  4922  0EBC                     	;# 
  4923  0EBD                     	;# 
  4924  0EBE                     	;# 
  4925  0EC3                     	;# 
  4926  0EC5                     	;# 
  4927  0EC6                     	;# 
  4928  0EC7                     	;# 
  4929  0EC8                     	;# 
  4930  0EC9                     	;# 
  4931  0ECA                     	;# 
  4932  0ECB                     	;# 
  4933  0ECC                     	;# 
  4934  0F10                     	;# 
  4935  0F11                     	;# 
  4936  0F12                     	;# 
  4937  0F13                     	;# 
  4938  0F14                     	;# 
  4939  0F15                     	;# 
  4940  0F16                     	;# 
  4941  0F17                     	;# 
  4942  0F18                     	;# 
  4943  0F19                     	;# 
  4944  0F1A                     	;# 
  4945  0F1B                     	;# 
  4946  0F1C                     	;# 
  4947  0F1D                     	;# 
  4948  0F1E                     	;# 
  4949  0F1F                     	;# 
  4950  0F20                     	;# 
  4951  0F21                     	;# 
  4952  0F22                     	;# 
  4953  0F23                     	;# 
  4954  0F24                     	;# 
  4955  0F25                     	;# 
  4956  0F26                     	;# 
  4957  0F27                     	;# 
  4958  0F28                     	;# 
  4959  0F29                     	;# 
  4960  0F2A                     	;# 
  4961  0F2B                     	;# 
  4962  0F2C                     	;# 
  4963  0F2D                     	;# 
  4964  0F2E                     	;# 
  4965  0F2F                     	;# 
  4966  0F30                     	;# 
  4967  0F31                     	;# 
  4968  0F32                     	;# 
  4969  0F38                     	;# 
  4970  0F39                     	;# 
  4971  0F3A                     	;# 
  4972  0F3B                     	;# 
  4973  0F3C                     	;# 
  4974  0F3D                     	;# 
  4975  0F3E                     	;# 
  4976  0F3F                     	;# 
  4977  0F40                     	;# 
  4978  0F41                     	;# 
  4979  0F43                     	;# 
  4980  0F44                     	;# 
  4981  0F45                     	;# 
  4982  0F46                     	;# 
  4983  0F47                     	;# 
  4984  0F48                     	;# 
  4985  0F49                     	;# 
  4986  0F4A                     	;# 
  4987  0F4B                     	;# 
  4988  0F4C                     	;# 
  4989  0F4E                     	;# 
  4990  0F4F                     	;# 
  4991  0F50                     	;# 
  4992  0F51                     	;# 
  4993  0F52                     	;# 
  4994  0F53                     	;# 
  4995  0F54                     	;# 
  4996  0F55                     	;# 
  4997  0F56                     	;# 
  4998  0F57                     	;# 
  4999  0F59                     	;# 
  5000  0F5A                     	;# 
  5001  0F5B                     	;# 
  5002  0F5C                     	;# 
  5003  0F5D                     	;# 
  5004  0F61                     	;# 
  5005  0F62                     	;# 
  5006  0F64                     	;# 
  5007  0F65                     	;# 
  5008  0F66                     	;# 
  5009  0F67                     	;# 
  5010  0F68                     	;# 
  5011  0F69                     	;# 
  5012  0F6A                     	;# 
  5013  0F6B                     	;# 
  5014  0F6C                     	;# 
  5015  0F6D                     	;# 
  5016  0FE4                     	;# 
  5017  0FE5                     	;# 
  5018  0FE6                     	;# 
  5019  0FE7                     	;# 
  5020  0FE8                     	;# 
  5021  0FE9                     	;# 
  5022  0FEA                     	;# 
  5023  0FEB                     	;# 
  5024  0FED                     	;# 
  5025  0FEE                     	;# 
  5026  0FEF                     	;# 
  5027  0000                     	;# 
  5028  0001                     	;# 
  5029  0002                     	;# 
  5030  0003                     	;# 
  5031  0004                     	;# 
  5032  0005                     	;# 
  5033  0006                     	;# 
  5034  0007                     	;# 
  5035  0008                     	;# 
  5036  0009                     	;# 
  5037  000A                     	;# 
  5038  000B                     	;# 
  5039  000C                     	;# 
  5040  000D                     	;# 
  5041  000E                     	;# 
  5042  000F                     	;# 
  5043  0010                     	;# 
  5044  0011                     	;# 
  5045  0012                     	;# 
  5046  0013                     	;# 
  5047  0014                     	;# 
  5048  0015                     	;# 
  5049  0016                     	;# 
  5050  0017                     	;# 
  5051  0018                     	;# 
  5052  0019                     	;# 
  5053  001A                     	;# 
  5054  001C                     	;# 
  5055  001C                     	;# 
  5056  001D                     	;# 
  5057  001D                     	;# 
  5058  001E                     	;# 
  5059  001F                     	;# 
  5060  008C                     	;# 
  5061  008C                     	;# 
  5062  008D                     	;# 
  5063  008E                     	;# 
  5064  008E                     	;# 
  5065  008F                     	;# 
  5066  0090                     	;# 
  5067  0090                     	;# 
  5068  0091                     	;# 
  5069  0093                     	;# 
  5070  0094                     	;# 
  5071  0095                     	;# 
  5072  0096                     	;# 
  5073  0097                     	;# 
  5074  0098                     	;# 
  5075  0099                     	;# 
  5076  009A                     	;# 
  5077  009B                     	;# 
  5078  009C                     	;# 
  5079  009D                     	;# 
  5080  009E                     	;# 
  5081  010C                     	;# 
  5082  010D                     	;# 
  5083  010E                     	;# 
  5084  010E                     	;# 
  5085  010F                     	;# 
  5086  0110                     	;# 
  5087  0110                     	;# 
  5088  0111                     	;# 
  5089  0112                     	;# 
  5090  0112                     	;# 
  5091  0113                     	;# 
  5092  0114                     	;# 
  5093  0114                     	;# 
  5094  0115                     	;# 
  5095  0116                     	;# 
  5096  0116                     	;# 
  5097  0117                     	;# 
  5098  0119                     	;# 
  5099  0119                     	;# 
  5100  0119                     	;# 
  5101  011A                     	;# 
  5102  011A                     	;# 
  5103  011A                     	;# 
  5104  011B                     	;# 
  5105  011B                     	;# 
  5106  011B                     	;# 
  5107  011B                     	;# 
  5108  011B                     	;# 
  5109  011C                     	;# 
  5110  011C                     	;# 
  5111  011C                     	;# 
  5112  011D                     	;# 
  5113  011D                     	;# 
  5114  011D                     	;# 
  5115  011E                     	;# 
  5116  011E                     	;# 
  5117  011E                     	;# 
  5118  011F                     	;# 
  5119  011F                     	;# 
  5120  011F                     	;# 
  5121  011F                     	;# 
  5122  011F                     	;# 
  5123  018C                     	;# 
  5124  018D                     	;# 
  5125  018E                     	;# 
  5126  018F                     	;# 
  5127  0190                     	;# 
  5128  0191                     	;# 
  5129  0192                     	;# 
  5130  0196                     	;# 
  5131  0197                     	;# 
  5132  0198                     	;# 
  5133  0199                     	;# 
  5134  019A                     	;# 
  5135  019B                     	;# 
  5136  019C                     	;# 
  5137  020C                     	;# 
  5138  020C                     	;# 
  5139  020D                     	;# 
  5140  020E                     	;# 
  5141  020F                     	;# 
  5142  020F                     	;# 
  5143  0210                     	;# 
  5144  0210                     	;# 
  5145  0211                     	;# 
  5146  0211                     	;# 
  5147  0212                     	;# 
  5148  0212                     	;# 
  5149  0213                     	;# 
  5150  0214                     	;# 
  5151  0215                     	;# 
  5152  0215                     	;# 
  5153  0216                     	;# 
  5154  0216                     	;# 
  5155  0217                     	;# 
  5156  0217                     	;# 
  5157  0218                     	;# 
  5158  0218                     	;# 
  5159  0219                     	;# 
  5160  021A                     	;# 
  5161  021B                     	;# 
  5162  021B                     	;# 
  5163  021C                     	;# 
  5164  021C                     	;# 
  5165  021D                     	;# 
  5166  021D                     	;# 
  5167  021E                     	;# 
  5168  021F                     	;# 
  5169  028C                     	;# 
  5170  028C                     	;# 
  5171  028D                     	;# 
  5172  028D                     	;# 
  5173  028E                     	;# 
  5174  028F                     	;# 
  5175  0290                     	;# 
  5176  0290                     	;# 
  5177  0291                     	;# 
  5178  0292                     	;# 
  5179  0292                     	;# 
  5180  0293                     	;# 
  5181  0293                     	;# 
  5182  0294                     	;# 
  5183  0295                     	;# 
  5184  0296                     	;# 
  5185  0296                     	;# 
  5186  0297                     	;# 
  5187  0298                     	;# 
  5188  0298                     	;# 
  5189  0299                     	;# 
  5190  0299                     	;# 
  5191  029A                     	;# 
  5192  029B                     	;# 
  5193  029C                     	;# 
  5194  029C                     	;# 
  5195  029D                     	;# 
  5196  030C                     	;# 
  5197  030C                     	;# 
  5198  030D                     	;# 
  5199  030E                     	;# 
  5200  030F                     	;# 
  5201  0310                     	;# 
  5202  0310                     	;# 
  5203  0311                     	;# 
  5204  0312                     	;# 
  5205  0313                     	;# 
  5206  0314                     	;# 
  5207  0314                     	;# 
  5208  0315                     	;# 
  5209  0316                     	;# 
  5210  0317                     	;# 
  5211  0318                     	;# 
  5212  0318                     	;# 
  5213  0319                     	;# 
  5214  031A                     	;# 
  5215  031B                     	;# 
  5216  031C                     	;# 
  5217  031C                     	;# 
  5218  031D                     	;# 
  5219  031E                     	;# 
  5220  031F                     	;# 
  5221  038C                     	;# 
  5222  038C                     	;# 
  5223  038D                     	;# 
  5224  038E                     	;# 
  5225  0390                     	;# 
  5226  0390                     	;# 
  5227  0391                     	;# 
  5228  0392                     	;# 
  5229  040C                     	;# 
  5230  040D                     	;# 
  5231  040E                     	;# 
  5232  040F                     	;# 
  5233  0410                     	;# 
  5234  0411                     	;# 
  5235  0416                     	;# 
  5236  0416                     	;# 
  5237  0417                     	;# 
  5238  0418                     	;# 
  5239  0418                     	;# 
  5240  0419                     	;# 
  5241  041A                     	;# 
  5242  041A                     	;# 
  5243  041B                     	;# 
  5244  041C                     	;# 
  5245  041C                     	;# 
  5246  041D                     	;# 
  5247  041E                     	;# 
  5248  041F                     	;# 
  5249  048C                     	;# 
  5250  048C                     	;# 
  5251  048D                     	;# 
  5252  048E                     	;# 
  5253  048F                     	;# 
  5254  048F                     	;# 
  5255  0490                     	;# 
  5256  0491                     	;# 
  5257  0492                     	;# 
  5258  0492                     	;# 
  5259  0493                     	;# 
  5260  0494                     	;# 
  5261  0495                     	;# 
  5262  0495                     	;# 
  5263  0496                     	;# 
  5264  0497                     	;# 
  5265  0498                     	;# 
  5266  0499                     	;# 
  5267  049A                     	;# 
  5268  049B                     	;# 
  5269  049C                     	;# 
  5270  049D                     	;# 
  5271  050C                     	;# 
  5272  050C                     	;# 
  5273  050D                     	;# 
  5274  050E                     	;# 
  5275  050F                     	;# 
  5276  050F                     	;# 
  5277  0510                     	;# 
  5278  0511                     	;# 
  5279  0512                     	;# 
  5280  0512                     	;# 
  5281  0513                     	;# 
  5282  0514                     	;# 
  5283  0515                     	;# 
  5284  0515                     	;# 
  5285  0516                     	;# 
  5286  0517                     	;# 
  5287  0518                     	;# 
  5288  0519                     	;# 
  5289  051A                     	;# 
  5290  051B                     	;# 
  5291  051C                     	;# 
  5292  051D                     	;# 
  5293  058C                     	;# 
  5294  058C                     	;# 
  5295  058D                     	;# 
  5296  058E                     	;# 
  5297  058F                     	;# 
  5298  058F                     	;# 
  5299  0590                     	;# 
  5300  0591                     	;# 
  5301  0592                     	;# 
  5302  0593                     	;# 
  5303  060C                     	;# 
  5304  060D                     	;# 
  5305  060E                     	;# 
  5306  060F                     	;# 
  5307  0610                     	;# 
  5308  0611                     	;# 
  5309  0612                     	;# 
  5310  0613                     	;# 
  5311  0614                     	;# 
  5312  0616                     	;# 
  5313  0617                     	;# 
  5314  0618                     	;# 
  5315  0619                     	;# 
  5316  061A                     	;# 
  5317  061B                     	;# 
  5318  061C                     	;# 
  5319  061D                     	;# 
  5320  061E                     	;# 
  5321  068C                     	;# 
  5322  068D                     	;# 
  5323  068E                     	;# 
  5324  068F                     	;# 
  5325  0690                     	;# 
  5326  0691                     	;# 
  5327  0692                     	;# 
  5328  0693                     	;# 
  5329  0694                     	;# 
  5330  070C                     	;# 
  5331  070D                     	;# 
  5332  070E                     	;# 
  5333  070F                     	;# 
  5334  0710                     	;# 
  5335  0711                     	;# 
  5336  0712                     	;# 
  5337  0713                     	;# 
  5338  0714                     	;# 
  5339  0716                     	;# 
  5340  0717                     	;# 
  5341  0718                     	;# 
  5342  0719                     	;# 
  5343  071A                     	;# 
  5344  071B                     	;# 
  5345  071C                     	;# 
  5346  071D                     	;# 
  5347  071E                     	;# 
  5348  0796                     	;# 
  5349  0797                     	;# 
  5350  0798                     	;# 
  5351  0799                     	;# 
  5352  079A                     	;# 
  5353  079B                     	;# 
  5354  080C                     	;# 
  5355  080D                     	;# 
  5356  080E                     	;# 
  5357  080F                     	;# 
  5358  0810                     	;# 
  5359  0811                     	;# 
  5360  0812                     	;# 
  5361  0813                     	;# 
  5362  0814                     	;# 
  5363  081A                     	;# 
  5364  081B                     	;# 
  5365  081C                     	;# 
  5366  081D                     	;# 
  5367  081E                     	;# 
  5368  081F                     	;# 
  5369  088C                     	;# 
  5370  088D                     	;# 
  5371  088E                     	;# 
  5372  088F                     	;# 
  5373  0890                     	;# 
  5374  0891                     	;# 
  5375  0892                     	;# 
  5376  0893                     	;# 
  5377  0895                     	;# 
  5378  0896                     	;# 
  5379  0897                     	;# 
  5380  0898                     	;# 
  5381  0899                     	;# 
  5382  089A                     	;# 
  5383  089B                     	;# 
  5384  090C                     	;# 
  5385  090E                     	;# 
  5386  090F                     	;# 
  5387  091F                     	;# 
  5388  091F                     	;# 
  5389  098F                     	;# 
  5390  098F                     	;# 
  5391  0990                     	;# 
  5392  0991                     	;# 
  5393  0992                     	;# 
  5394  0993                     	;# 
  5395  0994                     	;# 
  5396  0995                     	;# 
  5397  0996                     	;# 
  5398  0997                     	;# 
  5399  0E0F                     	;# 
  5400  0E10                     	;# 
  5401  0E11                     	;# 
  5402  0E12                     	;# 
  5403  0E13                     	;# 
  5404  0E14                     	;# 
  5405  0E15                     	;# 
  5406  0E16                     	;# 
  5407  0E17                     	;# 
  5408  0E18                     	;# 
  5409  0E19                     	;# 
  5410  0E1A                     	;# 
  5411  0E1B                     	;# 
  5412  0E1C                     	;# 
  5413  0E1D                     	;# 
  5414  0E1E                     	;# 
  5415  0E1F                     	;# 
  5416  0E20                     	;# 
  5417  0E21                     	;# 
  5418  0E22                     	;# 
  5419  0E23                     	;# 
  5420  0E24                     	;# 
  5421  0E25                     	;# 
  5422  0E26                     	;# 
  5423  0E27                     	;# 
  5424  0E28                     	;# 
  5425  0E29                     	;# 
  5426  0E2A                     	;# 
  5427  0E2B                     	;# 
  5428  0E2C                     	;# 
  5429  0E2D                     	;# 
  5430  0E2E                     	;# 
  5431  0E2F                     	;# 
  5432  0E30                     	;# 
  5433  0E31                     	;# 
  5434  0E32                     	;# 
  5435  0E33                     	;# 
  5436  0E34                     	;# 
  5437  0E35                     	;# 
  5438  0E36                     	;# 
  5439  0E37                     	;# 
  5440  0E8F                     	;# 
  5441  0E90                     	;# 
  5442  0E91                     	;# 
  5443  0E92                     	;# 
  5444  0E93                     	;# 
  5445  0E94                     	;# 
  5446  0E95                     	;# 
  5447  0E96                     	;# 
  5448  0E97                     	;# 
  5449  0E9C                     	;# 
  5450  0E9D                     	;# 
  5451  0E9E                     	;# 
  5452  0EA1                     	;# 
  5453  0EA2                     	;# 
  5454  0EA3                     	;# 
  5455  0EA4                     	;# 
  5456  0EA5                     	;# 
  5457  0EA9                     	;# 
  5458  0EAA                     	;# 
  5459  0EAB                     	;# 
  5460  0EAC                     	;# 
  5461  0EB1                     	;# 
  5462  0EB2                     	;# 
  5463  0EB3                     	;# 
  5464  0EB8                     	;# 
  5465  0EB9                     	;# 
  5466  0EBA                     	;# 
  5467  0EBB                     	;# 
  5468  0EBC                     	;# 
  5469  0EBD                     	;# 
  5470  0EBE                     	;# 
  5471  0EC3                     	;# 
  5472  0EC5                     	;# 
  5473  0EC6                     	;# 
  5474  0EC7                     	;# 
  5475  0EC8                     	;# 
  5476  0EC9                     	;# 
  5477  0ECA                     	;# 
  5478  0ECB                     	;# 
  5479  0ECC                     	;# 
  5480  0F10                     	;# 
  5481  0F11                     	;# 
  5482  0F12                     	;# 
  5483  0F13                     	;# 
  5484  0F14                     	;# 
  5485  0F15                     	;# 
  5486  0F16                     	;# 
  5487  0F17                     	;# 
  5488  0F18                     	;# 
  5489  0F19                     	;# 
  5490  0F1A                     	;# 
  5491  0F1B                     	;# 
  5492  0F1C                     	;# 
  5493  0F1D                     	;# 
  5494  0F1E                     	;# 
  5495  0F1F                     	;# 
  5496  0F20                     	;# 
  5497  0F21                     	;# 
  5498  0F22                     	;# 
  5499  0F23                     	;# 
  5500  0F24                     	;# 
  5501  0F25                     	;# 
  5502  0F26                     	;# 
  5503  0F27                     	;# 
  5504  0F28                     	;# 
  5505  0F29                     	;# 
  5506  0F2A                     	;# 
  5507  0F2B                     	;# 
  5508  0F2C                     	;# 
  5509  0F2D                     	;# 
  5510  0F2E                     	;# 
  5511  0F2F                     	;# 
  5512  0F30                     	;# 
  5513  0F31                     	;# 
  5514  0F32                     	;# 
  5515  0F38                     	;# 
  5516  0F39                     	;# 
  5517  0F3A                     	;# 
  5518  0F3B                     	;# 
  5519  0F3C                     	;# 
  5520  0F3D                     	;# 
  5521  0F3E                     	;# 
  5522  0F3F                     	;# 
  5523  0F40                     	;# 
  5524  0F41                     	;# 
  5525  0F43                     	;# 
  5526  0F44                     	;# 
  5527  0F45                     	;# 
  5528  0F46                     	;# 
  5529  0F47                     	;# 
  5530  0F48                     	;# 
  5531  0F49                     	;# 
  5532  0F4A                     	;# 
  5533  0F4B                     	;# 
  5534  0F4C                     	;# 
  5535  0F4E                     	;# 
  5536  0F4F                     	;# 
  5537  0F50                     	;# 
  5538  0F51                     	;# 
  5539  0F52                     	;# 
  5540  0F53                     	;# 
  5541  0F54                     	;# 
  5542  0F55                     	;# 
  5543  0F56                     	;# 
  5544  0F57                     	;# 
  5545  0F59                     	;# 
  5546  0F5A                     	;# 
  5547  0F5B                     	;# 
  5548  0F5C                     	;# 
  5549  0F5D                     	;# 
  5550  0F61                     	;# 
  5551  0F62                     	;# 
  5552  0F64                     	;# 
  5553  0F65                     	;# 
  5554  0F66                     	;# 
  5555  0F67                     	;# 
  5556  0F68                     	;# 
  5557  0F69                     	;# 
  5558  0F6A                     	;# 
  5559  0F6B                     	;# 
  5560  0F6C                     	;# 
  5561  0F6D                     	;# 
  5562  0FE4                     	;# 
  5563  0FE5                     	;# 
  5564  0FE6                     	;# 
  5565  0FE7                     	;# 
  5566  0FE8                     	;# 
  5567  0FE9                     	;# 
  5568  0FEA                     	;# 
  5569  0FEB                     	;# 
  5570  0FED                     	;# 
  5571  0FEE                     	;# 
  5572  0FEF                     	;# 
  5573  0000                     	;# 
  5574  0001                     	;# 
  5575  0002                     	;# 
  5576  0003                     	;# 
  5577  0004                     	;# 
  5578  0005                     	;# 
  5579  0006                     	;# 
  5580  0007                     	;# 
  5581  0008                     	;# 
  5582  0009                     	;# 
  5583  000A                     	;# 
  5584  000B                     	;# 
  5585  000C                     	;# 
  5586  000D                     	;# 
  5587  000E                     	;# 
  5588  000F                     	;# 
  5589  0010                     	;# 
  5590  0011                     	;# 
  5591  0012                     	;# 
  5592  0013                     	;# 
  5593  0014                     	;# 
  5594  0015                     	;# 
  5595  0016                     	;# 
  5596  0017                     	;# 
  5597  0018                     	;# 
  5598  0019                     	;# 
  5599  001A                     	;# 
  5600  001C                     	;# 
  5601  001C                     	;# 
  5602  001D                     	;# 
  5603  001D                     	;# 
  5604  001E                     	;# 
  5605  001F                     	;# 
  5606  008C                     	;# 
  5607  008C                     	;# 
  5608  008D                     	;# 
  5609  008E                     	;# 
  5610  008E                     	;# 
  5611  008F                     	;# 
  5612  0090                     	;# 
  5613  0090                     	;# 
  5614  0091                     	;# 
  5615  0093                     	;# 
  5616  0094                     	;# 
  5617  0095                     	;# 
  5618  0096                     	;# 
  5619  0097                     	;# 
  5620  0098                     	;# 
  5621  0099                     	;# 
  5622  009A                     	;# 
  5623  009B                     	;# 
  5624  009C                     	;# 
  5625  009D                     	;# 
  5626  009E                     	;# 
  5627  010C                     	;# 
  5628  010D                     	;# 
  5629  010E                     	;# 
  5630  010E                     	;# 
  5631  010F                     	;# 
  5632  0110                     	;# 
  5633  0110                     	;# 
  5634  0111                     	;# 
  5635  0112                     	;# 
  5636  0112                     	;# 
  5637  0113                     	;# 
  5638  0114                     	;# 
  5639  0114                     	;# 
  5640  0115                     	;# 
  5641  0116                     	;# 
  5642  0116                     	;# 
  5643  0117                     	;# 
  5644  0119                     	;# 
  5645  0119                     	;# 
  5646  0119                     	;# 
  5647  011A                     	;# 
  5648  011A                     	;# 
  5649  011A                     	;# 
  5650  011B                     	;# 
  5651  011B                     	;# 
  5652  011B                     	;# 
  5653  011B                     	;# 
  5654  011B                     	;# 
  5655  011C                     	;# 
  5656  011C                     	;# 
  5657  011C                     	;# 
  5658  011D                     	;# 
  5659  011D                     	;# 
  5660  011D                     	;# 
  5661  011E                     	;# 
  5662  011E                     	;# 
  5663  011E                     	;# 
  5664  011F                     	;# 
  5665  011F                     	;# 
  5666  011F                     	;# 
  5667  011F                     	;# 
  5668  011F                     	;# 
  5669  018C                     	;# 
  5670  018D                     	;# 
  5671  018E                     	;# 
  5672  018F                     	;# 
  5673  0190                     	;# 
  5674  0191                     	;# 
  5675  0192                     	;# 
  5676  0196                     	;# 
  5677  0197                     	;# 
  5678  0198                     	;# 
  5679  0199                     	;# 
  5680  019A                     	;# 
  5681  019B                     	;# 
  5682  019C                     	;# 
  5683  020C                     	;# 
  5684  020C                     	;# 
  5685  020D                     	;# 
  5686  020E                     	;# 
  5687  020F                     	;# 
  5688  020F                     	;# 
  5689  0210                     	;# 
  5690  0210                     	;# 
  5691  0211                     	;# 
  5692  0211                     	;# 
  5693  0212                     	;# 
  5694  0212                     	;# 
  5695  0213                     	;# 
  5696  0214                     	;# 
  5697  0215                     	;# 
  5698  0215                     	;# 
  5699  0216                     	;# 
  5700  0216                     	;# 
  5701  0217                     	;# 
  5702  0217                     	;# 
  5703  0218                     	;# 
  5704  0218                     	;# 
  5705  0219                     	;# 
  5706  021A                     	;# 
  5707  021B                     	;# 
  5708  021B                     	;# 
  5709  021C                     	;# 
  5710  021C                     	;# 
  5711  021D                     	;# 
  5712  021D                     	;# 
  5713  021E                     	;# 
  5714  021F                     	;# 
  5715  028C                     	;# 
  5716  028C                     	;# 
  5717  028D                     	;# 
  5718  028D                     	;# 
  5719  028E                     	;# 
  5720  028F                     	;# 
  5721  0290                     	;# 
  5722  0290                     	;# 
  5723  0291                     	;# 
  5724  0292                     	;# 
  5725  0292                     	;# 
  5726  0293                     	;# 
  5727  0293                     	;# 
  5728  0294                     	;# 
  5729  0295                     	;# 
  5730  0296                     	;# 
  5731  0296                     	;# 
  5732  0297                     	;# 
  5733  0298                     	;# 
  5734  0298                     	;# 
  5735  0299                     	;# 
  5736  0299                     	;# 
  5737  029A                     	;# 
  5738  029B                     	;# 
  5739  029C                     	;# 
  5740  029C                     	;# 
  5741  029D                     	;# 
  5742  030C                     	;# 
  5743  030C                     	;# 
  5744  030D                     	;# 
  5745  030E                     	;# 
  5746  030F                     	;# 
  5747  0310                     	;# 
  5748  0310                     	;# 
  5749  0311                     	;# 
  5750  0312                     	;# 
  5751  0313                     	;# 
  5752  0314                     	;# 
  5753  0314                     	;# 
  5754  0315                     	;# 
  5755  0316                     	;# 
  5756  0317                     	;# 
  5757  0318                     	;# 
  5758  0318                     	;# 
  5759  0319                     	;# 
  5760  031A                     	;# 
  5761  031B                     	;# 
  5762  031C                     	;# 
  5763  031C                     	;# 
  5764  031D                     	;# 
  5765  031E                     	;# 
  5766  031F                     	;# 
  5767  038C                     	;# 
  5768  038C                     	;# 
  5769  038D                     	;# 
  5770  038E                     	;# 
  5771  0390                     	;# 
  5772  0390                     	;# 
  5773  0391                     	;# 
  5774  0392                     	;# 
  5775  040C                     	;# 
  5776  040D                     	;# 
  5777  040E                     	;# 
  5778  040F                     	;# 
  5779  0410                     	;# 
  5780  0411                     	;# 
  5781  0416                     	;# 
  5782  0416                     	;# 
  5783  0417                     	;# 
  5784  0418                     	;# 
  5785  0418                     	;# 
  5786  0419                     	;# 
  5787  041A                     	;# 
  5788  041A                     	;# 
  5789  041B                     	;# 
  5790  041C                     	;# 
  5791  041C                     	;# 
  5792  041D                     	;# 
  5793  041E                     	;# 
  5794  041F                     	;# 
  5795  048C                     	;# 
  5796  048C                     	;# 
  5797  048D                     	;# 
  5798  048E                     	;# 
  5799  048F                     	;# 
  5800  048F                     	;# 
  5801  0490                     	;# 
  5802  0491                     	;# 
  5803  0492                     	;# 
  5804  0492                     	;# 
  5805  0493                     	;# 
  5806  0494                     	;# 
  5807  0495                     	;# 
  5808  0495                     	;# 
  5809  0496                     	;# 
  5810  0497                     	;# 
  5811  0498                     	;# 
  5812  0499                     	;# 
  5813  049A                     	;# 
  5814  049B                     	;# 
  5815  049C                     	;# 
  5816  049D                     	;# 
  5817  050C                     	;# 
  5818  050C                     	;# 
  5819  050D                     	;# 
  5820  050E                     	;# 
  5821  050F                     	;# 
  5822  050F                     	;# 
  5823  0510                     	;# 
  5824  0511                     	;# 
  5825  0512                     	;# 
  5826  0512                     	;# 
  5827  0513                     	;# 
  5828  0514                     	;# 
  5829  0515                     	;# 
  5830  0515                     	;# 
  5831  0516                     	;# 
  5832  0517                     	;# 
  5833  0518                     	;# 
  5834  0519                     	;# 
  5835  051A                     	;# 
  5836  051B                     	;# 
  5837  051C                     	;# 
  5838  051D                     	;# 
  5839  058C                     	;# 
  5840  058C                     	;# 
  5841  058D                     	;# 
  5842  058E                     	;# 
  5843  058F                     	;# 
  5844  058F                     	;# 
  5845  0590                     	;# 
  5846  0591                     	;# 
  5847  0592                     	;# 
  5848  0593                     	;# 
  5849  060C                     	;# 
  5850  060D                     	;# 
  5851  060E                     	;# 
  5852  060F                     	;# 
  5853  0610                     	;# 
  5854  0611                     	;# 
  5855  0612                     	;# 
  5856  0613                     	;# 
  5857  0614                     	;# 
  5858  0616                     	;# 
  5859  0617                     	;# 
  5860  0618                     	;# 
  5861  0619                     	;# 
  5862  061A                     	;# 
  5863  061B                     	;# 
  5864  061C                     	;# 
  5865  061D                     	;# 
  5866  061E                     	;# 
  5867  068C                     	;# 
  5868  068D                     	;# 
  5869  068E                     	;# 
  5870  068F                     	;# 
  5871  0690                     	;# 
  5872  0691                     	;# 
  5873  0692                     	;# 
  5874  0693                     	;# 
  5875  0694                     	;# 
  5876  070C                     	;# 
  5877  070D                     	;# 
  5878  070E                     	;# 
  5879  070F                     	;# 
  5880  0710                     	;# 
  5881  0711                     	;# 
  5882  0712                     	;# 
  5883  0713                     	;# 
  5884  0714                     	;# 
  5885  0716                     	;# 
  5886  0717                     	;# 
  5887  0718                     	;# 
  5888  0719                     	;# 
  5889  071A                     	;# 
  5890  071B                     	;# 
  5891  071C                     	;# 
  5892  071D                     	;# 
  5893  071E                     	;# 
  5894  0796                     	;# 
  5895  0797                     	;# 
  5896  0798                     	;# 
  5897  0799                     	;# 
  5898  079A                     	;# 
  5899  079B                     	;# 
  5900  080C                     	;# 
  5901  080D                     	;# 
  5902  080E                     	;# 
  5903  080F                     	;# 
  5904  0810                     	;# 
  5905  0811                     	;# 
  5906  0812                     	;# 
  5907  0813                     	;# 
  5908  0814                     	;# 
  5909  081A                     	;# 
  5910  081B                     	;# 
  5911  081C                     	;# 
  5912  081D                     	;# 
  5913  081E                     	;# 
  5914  081F                     	;# 
  5915  088C                     	;# 
  5916  088D                     	;# 
  5917  088E                     	;# 
  5918  088F                     	;# 
  5919  0890                     	;# 
  5920  0891                     	;# 
  5921  0892                     	;# 
  5922  0893                     	;# 
  5923  0895                     	;# 
  5924  0896                     	;# 
  5925  0897                     	;# 
  5926  0898                     	;# 
  5927  0899                     	;# 
  5928  089A                     	;# 
  5929  089B                     	;# 
  5930  090C                     	;# 
  5931  090E                     	;# 
  5932  090F                     	;# 
  5933  091F                     	;# 
  5934  091F                     	;# 
  5935  098F                     	;# 
  5936  098F                     	;# 
  5937  0990                     	;# 
  5938  0991                     	;# 
  5939  0992                     	;# 
  5940  0993                     	;# 
  5941  0994                     	;# 
  5942  0995                     	;# 
  5943  0996                     	;# 
  5944  0997                     	;# 
  5945  0E0F                     	;# 
  5946  0E10                     	;# 
  5947  0E11                     	;# 
  5948  0E12                     	;# 
  5949  0E13                     	;# 
  5950  0E14                     	;# 
  5951  0E15                     	;# 
  5952  0E16                     	;# 
  5953  0E17                     	;# 
  5954  0E18                     	;# 
  5955  0E19                     	;# 
  5956  0E1A                     	;# 
  5957  0E1B                     	;# 
  5958  0E1C                     	;# 
  5959  0E1D                     	;# 
  5960  0E1E                     	;# 
  5961  0E1F                     	;# 
  5962  0E20                     	;# 
  5963  0E21                     	;# 
  5964  0E22                     	;# 
  5965  0E23                     	;# 
  5966  0E24                     	;# 
  5967  0E25                     	;# 
  5968  0E26                     	;# 
  5969  0E27                     	;# 
  5970  0E28                     	;# 
  5971  0E29                     	;# 
  5972  0E2A                     	;# 
  5973  0E2B                     	;# 
  5974  0E2C                     	;# 
  5975  0E2D                     	;# 
  5976  0E2E                     	;# 
  5977  0E2F                     	;# 
  5978  0E30                     	;# 
  5979  0E31                     	;# 
  5980  0E32                     	;# 
  5981  0E33                     	;# 
  5982  0E34                     	;# 
  5983  0E35                     	;# 
  5984  0E36                     	;# 
  5985  0E37                     	;# 
  5986  0E8F                     	;# 
  5987  0E90                     	;# 
  5988  0E91                     	;# 
  5989  0E92                     	;# 
  5990  0E93                     	;# 
  5991  0E94                     	;# 
  5992  0E95                     	;# 
  5993  0E96                     	;# 
  5994  0E97                     	;# 
  5995  0E9C                     	;# 
  5996  0E9D                     	;# 
  5997  0E9E                     	;# 
  5998  0EA1                     	;# 
  5999  0EA2                     	;# 
  6000  0EA3                     	;# 
  6001  0EA4                     	;# 
  6002  0EA5                     	;# 
  6003  0EA9                     	;# 
  6004  0EAA                     	;# 
  6005  0EAB                     	;# 
  6006  0EAC                     	;# 
  6007  0EB1                     	;# 
  6008  0EB2                     	;# 
  6009  0EB3                     	;# 
  6010  0EB8                     	;# 
  6011  0EB9                     	;# 
  6012  0EBA                     	;# 
  6013  0EBB                     	;# 
  6014  0EBC                     	;# 
  6015  0EBD                     	;# 
  6016  0EBE                     	;# 
  6017  0EC3                     	;# 
  6018  0EC5                     	;# 
  6019  0EC6                     	;# 
  6020  0EC7                     	;# 
  6021  0EC8                     	;# 
  6022  0EC9                     	;# 
  6023  0ECA                     	;# 
  6024  0ECB                     	;# 
  6025  0ECC                     	;# 
  6026  0F10                     	;# 
  6027  0F11                     	;# 
  6028  0F12                     	;# 
  6029  0F13                     	;# 
  6030  0F14                     	;# 
  6031  0F15                     	;# 
  6032  0F16                     	;# 
  6033  0F17                     	;# 
  6034  0F18                     	;# 
  6035  0F19                     	;# 
  6036  0F1A                     	;# 
  6037  0F1B                     	;# 
  6038  0F1C                     	;# 
  6039  0F1D                     	;# 
  6040  0F1E                     	;# 
  6041  0F1F                     	;# 
  6042  0F20                     	;# 
  6043  0F21                     	;# 
  6044  0F22                     	;# 
  6045  0F23                     	;# 
  6046  0F24                     	;# 
  6047  0F25                     	;# 
  6048  0F26                     	;# 
  6049  0F27                     	;# 
  6050  0F28                     	;# 
  6051  0F29                     	;# 
  6052  0F2A                     	;# 
  6053  0F2B                     	;# 
  6054  0F2C                     	;# 
  6055  0F2D                     	;# 
  6056  0F2E                     	;# 
  6057  0F2F                     	;# 
  6058  0F30                     	;# 
  6059  0F31                     	;# 
  6060  0F32                     	;# 
  6061  0F38                     	;# 
  6062  0F39                     	;# 
  6063  0F3A                     	;# 
  6064  0F3B                     	;# 
  6065  0F3C                     	;# 
  6066  0F3D                     	;# 
  6067  0F3E                     	;# 
  6068  0F3F                     	;# 
  6069  0F40                     	;# 
  6070  0F41                     	;# 
  6071  0F43                     	;# 
  6072  0F44                     	;# 
  6073  0F45                     	;# 
  6074  0F46                     	;# 
  6075  0F47                     	;# 
  6076  0F48                     	;# 
  6077  0F49                     	;# 
  6078  0F4A                     	;# 
  6079  0F4B                     	;# 
  6080  0F4C                     	;# 
  6081  0F4E                     	;# 
  6082  0F4F                     	;# 
  6083  0F50                     	;# 
  6084  0F51                     	;# 
  6085  0F52                     	;# 
  6086  0F53                     	;# 
  6087  0F54                     	;# 
  6088  0F55                     	;# 
  6089  0F56                     	;# 
  6090  0F57                     	;# 
  6091  0F59                     	;# 
  6092  0F5A                     	;# 
  6093  0F5B                     	;# 
  6094  0F5C                     	;# 
  6095  0F5D                     	;# 
  6096  0F61                     	;# 
  6097  0F62                     	;# 
  6098  0F64                     	;# 
  6099  0F65                     	;# 
  6100  0F66                     	;# 
  6101  0F67                     	;# 
  6102  0F68                     	;# 
  6103  0F69                     	;# 
  6104  0F6A                     	;# 
  6105  0F6B                     	;# 
  6106  0F6C                     	;# 
  6107  0F6D                     	;# 
  6108  0FE4                     	;# 
  6109  0FE5                     	;# 
  6110  0FE6                     	;# 
  6111  0FE7                     	;# 
  6112  0FE8                     	;# 
  6113  0FE9                     	;# 
  6114  0FEA                     	;# 
  6115  0FEB                     	;# 
  6116  0FED                     	;# 
  6117  0FEE                     	;# 
  6118  0FEF                     	;_reg
  6119                           
  6120                           	psect	idataCOMMON
  6121  0003                     __pidataCOMMON:
  6122                           
  6123                           ;initializer for _ALAH
  6124  0003  340C               	retlw	12
  6125                           
  6126                           	psect	idataBANK1
  6127  07FC                     __pidataBANK1:
  6128                           
  6129                           ;initializer for _ALAL
  6130  07FC  3404               	retlw	4
  6131                           
  6132                           ;initializer for _ALAT
  6133  07FD  341C               	retlw	28
  6134                           
  6135                           ;initializer for _TALA
  6136  07FE  3405               	retlw	5
  6137                           
  6138                           ;initializer for _PMON
  6139  07FF  3403               	retlw	3
  6140                           
  6141                           	psect	stringtext1
  6142  100F                     __pstringtext1:
  6143  100F                     _dpowers:
  6144  100F  3401               	retlw	1
  6145  1010  3400               	retlw	0
  6146  1011  340A               	retlw	10
  6147  1012  3400               	retlw	0
  6148  1013  3464               	retlw	100
  6149  1014  3400               	retlw	0
  6150  1015  34E8               	retlw	232
  6151  1016  3403               	retlw	3
  6152  1017  3410               	retlw	16
  6153  1018  3427               	retlw	39
  6154  1019                     __end_of_dpowers:
  6155                           
  6156                           	psect	nvBANK1
  6157  00BA                     __pnvBANK1:
  6158  00BA                     _TMR0_InterruptHandler:
  6159  00BA                     	ds	2
  6160  000E                     _PORTCbits	set	14
  6161  000D                     _PORTBbits	set	13
  6162  0013                     _TRISCbits	set	19
  6163  001E                     _T0CON0bits	set	30
  6164  001E                     _T0CON0	set	30
  6165  001C                     _TMR0L	set	28
  6166  001D                     _TMR0H	set	29
  6167  001F                     _T0CON1	set	31
  6168  000B                     _INTCONbits	set	11
  6169  0014                     _TRISD	set	20
  6170  0013                     _TRISC	set	19
  6171  0012                     _TRISB	set	18
  6172  0011                     _TRISA	set	17
  6173  0015                     _TRISE	set	21
  6174  0018                     _LATC	set	24
  6175  0017                     _LATB	set	23
  6176  0016                     _LATA	set	22
  6177  0019                     _LATD	set	25
  6178  001A                     _LATE	set	26
  6179  0094                     _ADCON1bits	set	148
  6180  008E                     _ADPREVL	set	142
  6181  008F                     _ADPREVH	set	143
  6182  0097                     _ADSTATbits	set	151
  6183  0090                     _ADACCL	set	144
  6184  0091                     _ADACCH	set	145
  6185  0095                     _ADCON2bits	set	149
  6186  009C                     _ADPRE	set	156
  6187  0096                     _ADCON3bits	set	150
  6188  008C                     _ADRESL	set	140
  6189  008D                     _ADRESH	set	141
  6190  0093                     _ADCON0bits	set	147
  6191  009D                     _ADACQ	set	157
  6192  0093                     _ADCON0	set	147
  6193  0098                     _ADCLK	set	152
  6194  0099                     _ADACT	set	153
  6195  009A                     _ADREF	set	154
  6196  0097                     _ADSTAT	set	151
  6197  0096                     _ADCON3	set	150
  6198  0095                     _ADCON2	set	149
  6199  0094                     _ADCON1	set	148
  6200  009B                     _ADCAP	set	155
  6201  009E                     _ADPCH	set	158
  6202  0116                     _ADERRL	set	278
  6203  0117                     _ADERRH	set	279
  6204  0114                     _ADFLTRL	set	276
  6205  0115                     _ADFLTRH	set	277
  6206  010C                     _ADCNT	set	268
  6207  010D                     _ADRPT	set	269
  6208  0113                     _ADSTPTH	set	275
  6209  0112                     _ADSTPTL	set	274
  6210  0111                     _ADUTHH	set	273
  6211  0110                     _ADUTHL	set	272
  6212  010F                     _ADLTHH	set	271
  6213  010E                     _ADLTHL	set	270
  6214  018E                     _SSP1MSK	set	398
  6215  018D                     _SSP1ADD	set	397
  6216  018F                     _SSP1STAT	set	399
  6217  0191                     _SSP1CON2	set	401
  6218  0190                     _SSP1CON1bits	set	400
  6219  018C                     _SSP1BUF	set	396
  6220  018F                     _SSP1STATbits	set	399
  6221  0191                     _SSP1CON2bits	set	401
  6222  0190                     _SSP1CON1	set	400
  6223  070C                     _PIR0bits	set	1804
  6224  0716                     _PIE0bits	set	1814
  6225  0719                     _PIE3bits	set	1817
  6226  070F                     _PIR3bits	set	1807
  6227  079B                     _PMD5	set	1947
  6228  079A                     _PMD4	set	1946
  6229  0799                     _PMD3	set	1945
  6230  0798                     _PMD2	set	1944
  6231  0797                     _PMD1	set	1943
  6232  0796                     _PMD0	set	1942
  6233  081F                     _NVMCON2	set	2079
  6234  081C                     _NVMDATL	set	2076
  6235  081D                     _NVMDATH	set	2077
  6236  081E                     _NVMCON1bits	set	2078
  6237  081B                     _NVMADRH	set	2075
  6238  081A                     _NVMADRL	set	2074
  6239  0892                     _OSCTUNE	set	2194
  6240  0893                     _OSCFRQ	set	2195
  6241  0891                     _OSCEN	set	2193
  6242  088F                     _OSCCON3	set	2191
  6243  088D                     _OSCCON1	set	2189
  6244  0EC6                     _SSP1DATPPS	set	3782
  6245  0EC5                     _SSP1CLKPPS	set	3781
  6246  0F24                     _RC4PPS	set	3876
  6247  0F23                     _RC3PPS	set	3875
  6248  0F67                     _SLRCONE	set	3943
  6249  0F5C                     _SLRCOND	set	3932
  6250  0F51                     _SLRCONC	set	3921
  6251  0F46                     _SLRCONB	set	3910
  6252  0F3B                     _SLRCONA	set	3899
  6253  0F5B                     _ODCOND	set	3931
  6254  0F50                     _ODCONC	set	3920
  6255  0F45                     _ODCONB	set	3909
  6256  0F3A                     _ODCONA	set	3898
  6257  0F66                     _ODCONE	set	3942
  6258  0F4F                     _WPUC	set	3919
  6259  0F39                     _WPUA	set	3897
  6260  0F44                     _WPUB	set	3908
  6261  0F65                     _WPUE	set	3941
  6262  0F5A                     _WPUD	set	3930
  6263  0F38                     _ANSELA	set	3896
  6264  0F64                     _ANSELE	set	3940
  6265  0F43                     _ANSELB	set	3907
  6266  0F4E                     _ANSELC	set	3918
  6267  0F59                     _ANSELD	set	3929
  6268  7A7C                     _WPUC4	set	31356
  6269  7A7B                     _WPUC3	set	31355
  6270                           
  6271                           	psect	stringtext2
  6272  1000                     __pstringtext2:
  6273  1000                     STR_3:
  6274  1000  3425               	retlw	37	;'%'
  6275  1001  3430               	retlw	48	;'0'
  6276  1002  3432               	retlw	50	;'2'
  6277  1003  3464               	retlw	100	;'d'
  6278  1004  343A               	retlw	58	;':'
  6279  1005  3425               	retlw	37	;'%'
  6280  1006  3430               	retlw	48	;'0'
  6281  1007  3432               	retlw	50	;'2'
  6282  1008  3464               	retlw	100	;'d'
  6283  1009  343A               	retlw	58	;':'
  6284  100A  3425               	retlw	37	;'%'
  6285  100B  3430               	retlw	48	;'0'
  6286  100C  3432               	retlw	50	;'2'
  6287  100D  3464               	retlw	100	;'d'
  6288  100E  3400               	retlw	0
  6289                           
  6290                           	psect	stringtext3
  6291  1019                     __pstringtext3:
  6292  1019                     STR_4:
  6293  1019  3425               	retlw	37	;'%'
  6294  101A  3430               	retlw	48	;'0'
  6295  101B  3432               	retlw	50	;'2'
  6296  101C  3464               	retlw	100	;'d'
  6297  101D  3420               	retlw	32	;' '
  6298  101E  3443               	retlw	67	;'C'
  6299  101F  3400               	retlw	0
  6300                           
  6301                           	psect	stringtext4
  6302  1020                     __pstringtext4:
  6303  1020                     STR_5:
  6304  1020  344C               	retlw	76	;'L'
  6305  1021  3425               	retlw	37	;'%'
  6306  1022  3430               	retlw	48	;'0'
  6307  1023  3431               	retlw	49	;'1'
  6308  1024  3464               	retlw	100	;'d'
  6309  1025  3400               	retlw	0
  6310                           
  6311                           	psect	stringtext5
  6312  1026                     __pstringtext5:
  6313  1026                     STR_10:
  6314  1026  3443               	retlw	67	;'C'
  6315  1027  3454               	retlw	84	;'T'
  6316  1028  344C               	retlw	76	;'L'
  6317  1029  3400               	retlw	0
  6318                           
  6319                           	psect	stringtext6
  6320  102A                     __pstringtext6:
  6321  102A                     STR_1:
  6322  102A  3441               	retlw	65	;'A'
  6323  102B  3400               	retlw	0
  6324                           
  6325                           	psect	stringtext7
  6326  102C                     __pstringtext7:
  6327  102C                     STR_7:
  6328  102C  3454               	retlw	84	;'T'
  6329  102D  3400               	retlw	0
  6330                           
  6331                           	psect	stringtext8
  6332  102E                     __pstringtext8:
  6333  102E                     STR_2:
  6334  102E  3461               	retlw	97	;'a'
  6335  102F  3400               	retlw	0
  6336                           
  6337                           	psect	stringtext9
  6338  0000                     __pstringtext9:
  6339  101E                     
  6340                           	psect	cinit
  6341  002A                     start_initialization:	
  6342                           ; #config settings
  6343                           
  6344  002A                     __initialization:	;BIGRAM
  6345                           
  6346                           ; Initialize objects allocated to COMMON
  6347  002A  3180  2003  3180   	fcall	__pidataCOMMON	;fetch initializer
  6348  002D  00FD               	movwf	__pdataCOMMON& (0+127)
  6349                           
  6350                           ; Initialize objects allocated to BANK1
  6351  002E  0021               	movlb	1	; select bank1
  6352  002F  3187  27FC  3180   	fcall	__pidataBANK1	;fetch initializer
  6353  0032  00B6               	movwf	__pdataBANK1& (0+127)
  6354  0033  3187  27FD  3180   	fcall	__pidataBANK1+1	;fetch initializer
  6355  0036  00B7               	movwf	(__pdataBANK1+1)& (0+127)
  6356  0037  3187  27FE  3180   	fcall	__pidataBANK1+2	;fetch initializer
  6357  003A  00B8               	movwf	(__pdataBANK1+2)& (0+127)
  6358  003B  3187  27FF  3180   	fcall	__pidataBANK1+3	;fetch initializer
  6359  003E  00B9               	movwf	(__pdataBANK1+3)& (0+127)
  6360                           
  6361                           ; Clear objects allocated to BIGRAM
  6362  003F  3073               	movlw	low (0+9075)
  6363  0040  0084               	movwf	4
  6364  0041  3023               	movlw	high (0+9075)
  6365  0042  0085               	movwf	5
  6366  0043  307D               	movlw	125
  6367  0044  00FE               	movwf	btemp
  6368  0045  3000               	movlw	0
  6369  0046  00FF               	movwf	btemp+1
  6370  0047  318A  22BF  3180   	fcall	clear_ram0
  6371                           
  6372                           ; Clear objects allocated to COMMON
  6373  004A  01F9               	clrf	__pbssCOMMON& (0+127)
  6374  004B  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  6375  004C  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  6376  004D  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  6377                           
  6378                           ; Clear objects allocated to BANK0
  6379  004E  0020               	movlb	0	; select bank0
  6380  004F  01EC               	clrf	__pbssBANK0& (0+127)
  6381  0050  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  6382  0051  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  6383  0052  01EF               	clrf	(__pbssBANK0+3)& (0+127)
  6384                           
  6385                           ; Clear objects allocated to BANK1
  6386  0053  30AC               	movlw	low __pbssBANK1
  6387  0054  0084               	movwf	4
  6388  0055  3000               	movlw	high __pbssBANK1
  6389  0056  0085               	movwf	5
  6390  0057  300A               	movlw	10
  6391  0058  00FE               	movwf	btemp
  6392  0059  3000               	movlw	0
  6393  005A  00FF               	movwf	btemp+1
  6394  005B  318A  22BF  3180   	fcall	clear_ram0
  6395  005E                     end_of_initialization:	
  6396                           ;End of C runtime variable initialization code
  6397                           
  6398  005E                     __end_of__initialization:
  6399  005E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6400  005F  0020               	movlb	0
  6401  0060  3183  2B19         	ljmp	_main	;jump to C main() function
  6402                           
  6403                           	psect	bssCOMMON
  6404  0079                     __pbssCOMMON:
  6405  0079                     save_register@n:
  6406  0079                     	ds	2
  6407  007B                     _timer_flag:
  6408  007B                     	ds	2
  6409                           
  6410                           	psect	dataCOMMON
  6411  007D                     __pdataCOMMON:
  6412  007D                     _ALAH:
  6413  007D                     	ds	1
  6414                           
  6415                           	psect	bssBANK0
  6416  006C                     __pbssBANK0:
  6417  006C                     _btn2State:
  6418  006C                     	ds	1
  6419  006D                     _btn1State:
  6420  006D                     	ds	1
  6421  006E                     _CLKM:
  6422  006E                     	ds	1
  6423  006F                     _CLKH:
  6424  006F                     	ds	1
  6425                           
  6426                           	psect	bssBANK1
  6427  00AC                     __pbssBANK1:
  6428  00AC                     TMR0_ISR@CountCallBack:
  6429  00AC                     	ds	2
  6430  00AE                     _i2c1_driver_i2cISR:
  6431  00AE                     	ds	2
  6432  00B0                     _i2c1_driver_busCollisionISR:
  6433  00B0                     	ds	2
  6434  00B2                     _CSUM:
  6435  00B2                     	ds	1
  6436  00B3                     _ALAF:
  6437  00B3                     	ds	1
  6438  00B4                     _ALAS:
  6439  00B4                     	ds	1
  6440  00B5                     _ALAM:
  6441  00B5                     	ds	1
  6442                           
  6443                           	psect	dataBANK1
  6444  00B6                     __pdataBANK1:
  6445  00B6                     _ALAL:
  6446  00B6                     	ds	1
  6447  00B7                     _ALAT:
  6448  00B7                     	ds	1
  6449  00B8                     _TALA:
  6450  00B8                     	ds	1
  6451  00B9                     _PMON:
  6452  00B9                     	ds	1
  6453                           
  6454                           	psect	clrtext
  6455  0ABF                     clear_ram0:	
  6456                           ;	Called with FSR0 containing the base address, and
  6457                           ;	btemp/btemp+1 has the size to clear
  6458                           
  6459  0ABF  0064               	clrwdt	;clear the watchdog before getting into this loop
  6460  0AC0                     clrloop0:
  6461  0AC0  0180               	clrf	0	;clear RAM location pointed to by FSR
  6462  0AC1  3101               	addfsr 0,1
  6463  0AC2  3001               	movlw	1
  6464  0AC3  02FE               	subwf	btemp,f
  6465  0AC4  3000               	movlw	0
  6466  0AC5  3BFF               	subwfb	btemp+1,f
  6467  0AC6  087F               	movf	btemp+1,w
  6468  0AC7  047E               	iorwf	btemp,w
  6469  0AC8  1D03               	skipz
  6470  0AC9  2AC0               	goto	clrloop0	;have we reached the end yet?
  6471  0ACA  3400               	retlw	0	;all done for this memory range, return
  6472                           
  6473                           	psect	cstackBANK1
  6474  00A0                     __pcstackBANK1:
  6475  00A0                     ??_main:
  6476                           
  6477                           ; 1 bytes @ 0x0
  6478  00A0                     	ds	12
  6479                           
  6480                           	psect	cstackCOMMON
  6481  0070                     __pcstackCOMMON:
  6482  0070                     ?_isdigit:
  6483  0070                     ?_i2c1_driver_open:	
  6484                           ; 1 bit 
  6485                           
  6486  0070                     ?_PMD_Initialize:	
  6487                           ; 1 bit 
  6488                           
  6489  0070                     ?_OSCILLATOR_Initialize:	
  6490                           ; 1 bytes @ 0x0
  6491                           
  6492  0070                     ?_ADCC_Initialize:	
  6493                           ; 1 bytes @ 0x0
  6494                           
  6495  0070                     ?_TMR0_Initialize:	
  6496                           ; 1 bytes @ 0x0
  6497                           
  6498  0070                     ?_TMR0_ISR:	
  6499                           ; 1 bytes @ 0x0
  6500                           
  6501  0070                     ?_TMR0_DefaultInterruptHandler:	
  6502                           ; 1 bytes @ 0x0
  6503                           
  6504  0070                     ??_TMR0_DefaultInterruptHandler:	
  6505                           ; 1 bytes @ 0x0
  6506                           
  6507  0070                     ?_TMR0_CallBack:	
  6508                           ; 1 bytes @ 0x0
  6509                           
  6510  0070                     ?_TMR0_callback:	
  6511                           ; 1 bytes @ 0x0
  6512                           
  6513  0070                     ?_LCDinit:	
  6514                           ; 1 bytes @ 0x0
  6515                           
  6516  0070                     ?_tsttc:	
  6517                           ; 1 bytes @ 0x0
  6518                           
  6519  0070                     ?_lumin:	
  6520                           ; 1 bytes @ 0x0
  6521                           
  6522  0070                     ?_checkButtonS1:	
  6523                           ; 1 bytes @ 0x0
  6524                           
  6525  0070                     ?_checkButtonS2:	
  6526                           ; 1 bytes @ 0x0
  6527                           
  6528  0070                     ?_conf_clock_hh:	
  6529                           ; 1 bytes @ 0x0
  6530                           
  6531  0070                     ?_conf_clock_mm:	
  6532                           ; 1 bytes @ 0x0
  6533                           
  6534  0070                     ?_conf_clock_ss:	
  6535                           ; 1 bytes @ 0x0
  6536                           
  6537  0070                     ?_conf_alarm_hh:	
  6538                           ; 1 bytes @ 0x0
  6539                           
  6540  0070                     ?_conf_alarm_mm:	
  6541                           ; 1 bytes @ 0x0
  6542                           
  6543  0070                     ?_conf_alarm_ss:	
  6544                           ; 1 bytes @ 0x0
  6545                           
  6546  0070                     ?_conf_temp:	
  6547                           ; 1 bytes @ 0x0
  6548                           
  6549  0070                     ?_conf_lumin:	
  6550                           ; 1 bytes @ 0x0
  6551                           
  6552  0070                     ?_conf_alarm_flag:	
  6553                           ; 1 bytes @ 0x0
  6554                           
  6555  0070                     ?_ADCC_StartConversion:	
  6556                           ; 1 bytes @ 0x0
  6557                           
  6558  0070                     ?_ReadI2C:	
  6559                           ; 1 bytes @ 0x0
  6560                           
  6561  0070                     ?_WriteI2C:	
  6562                           ; 1 bytes @ 0x0
  6563                           
  6564  0070                     ?_PIN_MANAGER_Initialize:	
  6565                           ; 1 bytes @ 0x0
  6566                           
  6567  0070                     ?_SYSTEM_Initialize:	
  6568                           ; 1 bytes @ 0x0
  6569                           
  6570  0070                     ?_INTERRUPT_InterruptManager:	
  6571                           ; 1 bytes @ 0x0
  6572                           
  6573  0070                     ?_DATAEE_WriteByte:	
  6574                           ; 1 bytes @ 0x0
  6575                           
  6576  0070                     ?_main:	
  6577                           ; 1 bytes @ 0x0
  6578                           
  6579  0070                     ?_LCDsend:	
  6580                           ; 1 bytes @ 0x0
  6581                           
  6582  0070                     ?_LCDcmd:	
  6583                           ; 1 bytes @ 0x0
  6584                           
  6585  0070                     ?_LCDchar:	
  6586                           ; 1 bytes @ 0x0
  6587                           
  6588  0070                     ?_LCDstr:	
  6589                           ; 1 bytes @ 0x0
  6590                           
  6591  0070                     ?___lbmod:	
  6592                           ; 1 bytes @ 0x0
  6593                           
  6594  0070                     ?___awmod:	
  6595                           ; 1 bytes @ 0x0
  6596                           
  6597  0070                     ?i1___lwmod:	
  6598                           ; 2 bytes @ 0x0
  6599                           
  6600  0070                     ___lbmod@divisor:	
  6601                           ; 2 bytes @ 0x0
  6602                           
  6603  0070                     DATAEE_WriteByte@bAdd:	
  6604                           ; 1 bytes @ 0x0
  6605                           
  6606  0070                     ___awmod@divisor:	
  6607                           ; 2 bytes @ 0x0
  6608                           
  6609  0070                     i1___lwmod@divisor:	
  6610                           ; 2 bytes @ 0x0
  6611                           
  6612                           
  6613                           ; 2 bytes @ 0x0
  6614  0070                     	ds	1
  6615  0071                     ??___lbmod:
  6616                           
  6617                           ; 1 bytes @ 0x1
  6618  0071                     	ds	1
  6619  0072                     DATAEE_WriteByte@bData:
  6620  0072                     ___awmod@dividend:	
  6621                           ; 1 bytes @ 0x2
  6622                           
  6623  0072                     i1___lwmod@dividend:	
  6624                           ; 2 bytes @ 0x2
  6625                           
  6626                           
  6627                           ; 2 bytes @ 0x2
  6628  0072                     	ds	1
  6629  0073                     ??_DATAEE_WriteByte:
  6630  0073                     DATAEE_WriteByte@GIEBitValue:	
  6631                           ; 1 bytes @ 0x3
  6632                           
  6633  0073                     ___lbmod@dividend:	
  6634                           ; 1 bytes @ 0x3
  6635                           
  6636                           
  6637                           ; 1 bytes @ 0x3
  6638  0073                     	ds	1
  6639  0074                     ??___awmod:
  6640  0074                     ??i1___lwmod:	
  6641                           ; 1 bytes @ 0x4
  6642                           
  6643  0074                     ___lbmod@counter:	
  6644                           ; 1 bytes @ 0x4
  6645                           
  6646                           
  6647                           ; 1 bytes @ 0x4
  6648  0074                     	ds	1
  6649  0075                     ___awmod@counter:
  6650  0075                     ___lbmod@rem:	
  6651                           ; 1 bytes @ 0x5
  6652                           
  6653  0075                     i1___lwmod@counter:	
  6654                           ; 1 bytes @ 0x5
  6655                           
  6656                           
  6657                           ; 1 bytes @ 0x5
  6658  0075                     	ds	1
  6659  0076                     ___awmod@sign:
  6660                           
  6661                           ; 1 bytes @ 0x6
  6662  0076                     	ds	1
  6663  0077                     ??_TMR0_callback:
  6664                           
  6665                           ; 1 bytes @ 0x7
  6666  0077                     	ds	2
  6667  0079                     ??_TMR0_ISR:
  6668  0079                     ??_TMR0_CallBack:	
  6669                           ; 1 bytes @ 0x9
  6670                           
  6671  0079                     ??_INTERRUPT_InterruptManager:	
  6672                           ; 1 bytes @ 0x9
  6673                           
  6674                           
  6675                           	psect	cstackBANK0
  6676  0020                     __pcstackBANK0:	
  6677                           ; 1 bytes @ 0x9
  6678                           
  6679  0020                     ??_PMD_Initialize:
  6680  0020                     ??_OSCILLATOR_Initialize:	
  6681                           ; 1 bytes @ 0x0
  6682                           
  6683  0020                     ??_ADCC_Initialize:	
  6684                           ; 1 bytes @ 0x0
  6685                           
  6686  0020                     ?_TMR0_SetInterruptHandler:	
  6687                           ; 1 bytes @ 0x0
  6688                           
  6689  0020                     ??_checkButtonS1:	
  6690                           ; 1 bytes @ 0x0
  6691                           
  6692  0020                     ??_checkButtonS2:	
  6693                           ; 1 bytes @ 0x0
  6694                           
  6695  0020                     ??_conf_clock_hh:	
  6696                           ; 1 bytes @ 0x0
  6697                           
  6698  0020                     ??_conf_clock_mm:	
  6699                           ; 1 bytes @ 0x0
  6700                           
  6701  0020                     ??_conf_clock_ss:	
  6702                           ; 1 bytes @ 0x0
  6703                           
  6704  0020                     ??_conf_alarm_hh:	
  6705                           ; 1 bytes @ 0x0
  6706                           
  6707  0020                     ??_conf_alarm_mm:	
  6708                           ; 1 bytes @ 0x0
  6709                           
  6710  0020                     ??_conf_alarm_ss:	
  6711                           ; 1 bytes @ 0x0
  6712                           
  6713  0020                     ??_conf_temp:	
  6714                           ; 1 bytes @ 0x0
  6715                           
  6716  0020                     ??_conf_lumin:	
  6717                           ; 1 bytes @ 0x0
  6718                           
  6719  0020                     ??_conf_alarm_flag:	
  6720                           ; 1 bytes @ 0x0
  6721                           
  6722  0020                     ??_ADCC_StartConversion:	
  6723                           ; 1 bytes @ 0x0
  6724                           
  6725  0020                     ??_isdigit:	
  6726                           ; 1 bytes @ 0x0
  6727                           
  6728  0020                     ??_ReadI2C:	
  6729                           ; 1 bytes @ 0x0
  6730                           
  6731  0020                     ??_WriteI2C:	
  6732                           ; 1 bytes @ 0x0
  6733                           
  6734  0020                     ??_PIN_MANAGER_Initialize:	
  6735                           ; 1 bytes @ 0x0
  6736                           
  6737  0020                     ??_i2c1_driver_open:	
  6738                           ; 1 bytes @ 0x0
  6739                           
  6740  0020                     ?_ADCC_GetConversionResult:	
  6741                           ; 1 bytes @ 0x0
  6742                           
  6743  0020                     ?___wmul:	
  6744                           ; 2 bytes @ 0x0
  6745                           
  6746  0020                     ?___lwdiv:	
  6747                           ; 2 bytes @ 0x0
  6748                           
  6749  0020                     ADCC_StartConversion@channel:	
  6750                           ; 2 bytes @ 0x0
  6751                           
  6752  0020                     _isdigit$2362:	
  6753                           ; 1 bytes @ 0x0
  6754                           
  6755  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  6756                           ; 1 bytes @ 0x0
  6757                           
  6758  0020                     ___wmul@multiplier:	
  6759                           ; 2 bytes @ 0x0
  6760                           
  6761  0020                     ___lwdiv@divisor:	
  6762                           ; 2 bytes @ 0x0
  6763                           
  6764                           
  6765                           ; 2 bytes @ 0x0
  6766  0020                     	ds	1
  6767  0021                     WriteI2C@data_out:
  6768  0021                     isdigit@c:	
  6769                           ; 1 bytes @ 0x1
  6770                           
  6771                           
  6772                           ; 1 bytes @ 0x1
  6773  0021                     	ds	1
  6774  0022                     ??_TMR0_Initialize:
  6775  0022                     ??_TMR0_SetInterruptHandler:	
  6776                           ; 1 bytes @ 0x2
  6777                           
  6778  0022                     ??_tsttc:	
  6779                           ; 1 bytes @ 0x2
  6780                           
  6781  0022                     ??_lumin:	
  6782                           ; 1 bytes @ 0x2
  6783                           
  6784  0022                     ??_ADCC_GetConversionResult:	
  6785                           ; 1 bytes @ 0x2
  6786                           
  6787  0022                     ??_SYSTEM_Initialize:	
  6788                           ; 1 bytes @ 0x2
  6789                           
  6790  0022                     ??_LCDsend:	
  6791                           ; 1 bytes @ 0x2
  6792                           
  6793  0022                     ?_LCDsend2x4:	
  6794                           ; 1 bytes @ 0x2
  6795                           
  6796  0022                     LCDsend2x4@mode:	
  6797                           ; 1 bytes @ 0x2
  6798                           
  6799  0022                     ___wmul@multiplicand:	
  6800                           ; 1 bytes @ 0x2
  6801                           
  6802  0022                     ___lwdiv@dividend:	
  6803                           ; 2 bytes @ 0x2
  6804                           
  6805                           
  6806                           ; 2 bytes @ 0x2
  6807  0022                     	ds	1
  6808  0023                     ??_LCDsend2x4:
  6809  0023                     tsttc@value:	
  6810                           ; 1 bytes @ 0x3
  6811                           
  6812  0023                     LCDsend@c:	
  6813                           ; 1 bytes @ 0x3
  6814                           
  6815                           
  6816                           ; 1 bytes @ 0x3
  6817  0023                     	ds	1
  6818  0024                     ??___wmul:
  6819  0024                     ??___lwdiv:	
  6820                           ; 1 bytes @ 0x4
  6821                           
  6822  0024                     lumin@luminosity:	
  6823                           ; 1 bytes @ 0x4
  6824                           
  6825  0024                     ___wmul@product:	
  6826                           ; 2 bytes @ 0x4
  6827                           
  6828                           
  6829                           ; 2 bytes @ 0x4
  6830  0024                     	ds	1
  6831  0025                     LCDsend2x4@c:
  6832  0025                     ___lwdiv@quotient:	
  6833                           ; 1 bytes @ 0x5
  6834                           
  6835                           
  6836                           ; 2 bytes @ 0x5
  6837  0025                     	ds	1
  6838  0026                     LCDsend2x4@hc:
  6839                           
  6840                           ; 1 bytes @ 0x6
  6841  0026                     	ds	1
  6842  0027                     LCDsend2x4@lc:
  6843  0027                     ___lwdiv@counter:	
  6844                           ; 1 bytes @ 0x7
  6845                           
  6846                           
  6847                           ; 1 bytes @ 0x7
  6848  0027                     	ds	1
  6849  0028                     ??_LCDinit:
  6850  0028                     ??_LCDcmd:	
  6851                           ; 1 bytes @ 0x8
  6852                           
  6853  0028                     ??_LCDchar:	
  6854                           ; 1 bytes @ 0x8
  6855                           
  6856  0028                     ?___lwmod:	
  6857                           ; 1 bytes @ 0x8
  6858                           
  6859  0028                     LCDcmd@c:	
  6860                           ; 2 bytes @ 0x8
  6861                           
  6862  0028                     LCDchar@c:	
  6863                           ; 1 bytes @ 0x8
  6864                           
  6865  0028                     ___lwmod@divisor:	
  6866                           ; 1 bytes @ 0x8
  6867                           
  6868                           
  6869                           ; 2 bytes @ 0x8
  6870  0028                     	ds	1
  6871  0029                     ??_LCDstr:
  6872                           
  6873                           ; 1 bytes @ 0x9
  6874  0029                     	ds	1
  6875  002A                     LCDstr@c:
  6876  002A                     ___lwmod@dividend:	
  6877                           ; 1 bytes @ 0xA
  6878                           
  6879                           
  6880                           ; 2 bytes @ 0xA
  6881  002A                     	ds	1
  6882  002B                     LCDstr@p:
  6883                           
  6884                           ; 1 bytes @ 0xB
  6885  002B                     	ds	1
  6886  002C                     ??___lwmod:
  6887                           
  6888                           ; 1 bytes @ 0xC
  6889  002C                     	ds	1
  6890  002D                     ___lwmod@counter:
  6891                           
  6892                           ; 1 bytes @ 0xD
  6893  002D                     	ds	1
  6894  002E                     ?_sprintf:
  6895  002E                     sprintf@f:	
  6896                           ; 2 bytes @ 0xE
  6897                           
  6898                           
  6899                           ; 2 bytes @ 0xE
  6900  002E                     	ds	8
  6901  0036                     ??_sprintf:
  6902                           
  6903                           ; 1 bytes @ 0x16
  6904  0036                     	ds	4
  6905  003A                     sprintf@ap:
  6906                           
  6907                           ; 1 bytes @ 0x1A
  6908  003A                     	ds	1
  6909  003B                     sprintf@prec:
  6910                           
  6911                           ; 1 bytes @ 0x1B
  6912  003B                     	ds	1
  6913  003C                     sprintf@val:
  6914                           
  6915                           ; 2 bytes @ 0x1C
  6916  003C                     	ds	2
  6917  003E                     sprintf@flag:
  6918                           
  6919                           ; 1 bytes @ 0x1E
  6920  003E                     	ds	1
  6921  003F                     sprintf@width:
  6922                           
  6923                           ; 2 bytes @ 0x1F
  6924  003F                     	ds	2
  6925  0041                     sprintf@c:
  6926                           
  6927                           ; 1 bytes @ 0x21
  6928  0041                     	ds	1
  6929  0042                     sprintf@sp:
  6930                           
  6931                           ; 1 bytes @ 0x22
  6932  0042                     	ds	1
  6933  0043                     ?_lcd:
  6934  0043                     lcd@luminosity:	
  6935                           ; 1 bytes @ 0x23
  6936                           
  6937                           
  6938                           ; 1 bytes @ 0x23
  6939  0043                     	ds	1
  6940  0044                     lcd@alarm:
  6941                           
  6942                           ; 1 bytes @ 0x24
  6943  0044                     	ds	1
  6944  0045                     lcd@ctl:
  6945                           
  6946                           ; 1 bytes @ 0x25
  6947  0045                     	ds	1
  6948  0046                     lcd@h:
  6949                           
  6950                           ; 1 bytes @ 0x26
  6951  0046                     	ds	1
  6952  0047                     lcd@m:
  6953                           
  6954                           ; 1 bytes @ 0x27
  6955  0047                     	ds	1
  6956  0048                     lcd@s:
  6957                           
  6958                           ; 1 bytes @ 0x28
  6959  0048                     	ds	1
  6960  0049                     lcd@state:
  6961                           
  6962                           ; 1 bytes @ 0x29
  6963  0049                     	ds	1
  6964  004A                     lcd@temperature_alarm:
  6965                           
  6966                           ; 1 bytes @ 0x2A
  6967  004A                     	ds	1
  6968  004B                     lcd@luminosity_alarm:
  6969                           
  6970                           ; 1 bytes @ 0x2B
  6971  004B                     	ds	1
  6972  004C                     lcd@alah:
  6973                           
  6974                           ; 1 bytes @ 0x2C
  6975  004C                     	ds	1
  6976  004D                     lcd@alam:
  6977                           
  6978                           ; 1 bytes @ 0x2D
  6979  004D                     	ds	1
  6980  004E                     lcd@alas:
  6981                           
  6982                           ; 1 bytes @ 0x2E
  6983  004E                     	ds	1
  6984  004F                     ??_lcd:
  6985                           
  6986                           ; 1 bytes @ 0x2F
  6987  004F                     	ds	6
  6988  0055                     lcd@buf:
  6989                           
  6990                           ; 17 bytes @ 0x35
  6991  0055                     	ds	17
  6992  0066                     lcd@temperature:
  6993                           
  6994                           ; 1 bytes @ 0x46
  6995  0066                     	ds	1
  6996  0067                     main@c:
  6997                           
  6998                           ; 1 bytes @ 0x47
  6999  0067                     	ds	1
  7000  0068                     main@l:
  7001                           
  7002                           ; 1 bytes @ 0x48
  7003  0068                     	ds	1
  7004  0069                     main@ctl:
  7005                           
  7006                           ; 1 bytes @ 0x49
  7007  0069                     	ds	1
  7008  006A                     _main$2758:
  7009                           
  7010                           ; 1 bytes @ 0x4A
  7011  006A                     	ds	1
  7012  006B                     main@state:
  7013                           
  7014                           ; 1 bytes @ 0x4B
  7015  006B                     	ds	1
  7016                           
  7017                           	psect	maintext
  7018  0319                     __pmaintext:	
  7019 ;;
  7020 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
  7021 ;;
  7022 ;; *************** function _main *****************
  7023 ;; Defined at:
  7024 ;;		line 181 in file "main.c"
  7025 ;; Parameters:    Size  Location     Type
  7026 ;;		None
  7027 ;; Auto vars:     Size  Location     Type
  7028 ;;  buf            17    0        unsigned char [17]
  7029 ;;  state           1   75[BANK0 ] unsigned char 
  7030 ;;  ctl             1   73[BANK0 ] unsigned char 
  7031 ;;  l               1   72[BANK0 ] unsigned char 
  7032 ;;  c               1   71[BANK0 ] unsigned char 
  7033 ;;  c2              1    0        unsigned char 
  7034 ;;  c1              1    0        unsigned char 
  7035 ;;  lc              1    0        unsigned char 
  7036 ;;  hc              1    0        unsigned char 
  7037 ;; Return value:  Size  Location     Type
  7038 ;;                  1    wreg      void 
  7039 ;; Registers used:
  7040 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7041 ;; Tracked objects:
  7042 ;;		On entry : B1F/0
  7043 ;;		On exit  : 0/0
  7044 ;;		Unchanged: 0/0
  7045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7047 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7048 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  7049 ;;      Totals:         0       5      12       0       0       0       0       0       0       0       0       0       
      +0       0
  7050 ;;Total ram usage:       17 bytes
  7051 ;; Hardware stack levels required when called:   10
  7052 ;; This function calls:
  7053 ;;		_LCDinit
  7054 ;;		_SYSTEM_Initialize
  7055 ;;		_TMR0_SetInterruptHandler
  7056 ;;		___lwmod
  7057 ;;		_checkButtonS1
  7058 ;;		_checkButtonS2
  7059 ;;		_conf_alarm_flag
  7060 ;;		_conf_alarm_hh
  7061 ;;		_conf_alarm_mm
  7062 ;;		_conf_alarm_ss
  7063 ;;		_conf_clock_hh
  7064 ;;		_conf_clock_mm
  7065 ;;		_conf_clock_ss
  7066 ;;		_conf_lumin
  7067 ;;		_conf_temp
  7068 ;;		_i2c1_driver_open
  7069 ;;		_lcd
  7070 ;;		_lumin
  7071 ;;		_tsttc
  7072 ;; This function is called by:
  7073 ;;		Startup code after reset
  7074 ;; This function uses a non-reentrant model
  7075 ;;
  7076                           
  7077                           
  7078                           ;psect for function _main
  7079  0319                     _main:
  7080  0319                     l4283:	
  7081                           ;incstack = 0
  7082                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7083                           
  7084                           
  7085                           ;main.c: 183: unsigned char c;;main.c: 184: unsigned char l;;main.c: 185: unsigned char 
      +                          hc;;main.c: 186: unsigned char lc;;main.c: 187: unsigned char c1;;main.c: 188: unsigned 
      +                          char c2;;main.c: 189: unsigned char buf[17];;main.c: 191: uint8_t state = 0;
  7086  0319  0020               	movlb	0	; select bank0
  7087  031A  01EB               	clrf	main@state
  7088  031B                     l4285:
  7089                           
  7090                           ;main.c: 206: SYSTEM_Initialize();
  7091  031B  318B  2302  3183   	fcall	_SYSTEM_Initialize
  7092  031E                     l4287:
  7093                           
  7094                           ;main.c: 209: TMR0_SetInterruptHandler(TMR0_callback);
  7095  031E  3058               	movlw	low _TMR0_callback
  7096  031F  0020               	movlb	0	; select bank0
  7097  0320  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  7098  0321  300E               	movlw	high _TMR0_callback
  7099  0322  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  7100  0323  318A  228D  3183   	fcall	_TMR0_SetInterruptHandler
  7101  0326                     l4289:
  7102                           
  7103                           ;main.c: 215: (INTCONbits.GIE = 1);
  7104  0326  178B               	bsf	11,7	;volatile
  7105  0327                     l4291:
  7106                           
  7107                           ;main.c: 218: (INTCONbits.PEIE = 1);
  7108  0327  170B               	bsf	11,6	;volatile
  7109  0328                     l4293:
  7110                           
  7111                           ;main.c: 226: i2c1_driver_open();
  7112  0328  318A  22B3  3183   	fcall	_i2c1_driver_open
  7113  032B                     l4295:
  7114                           
  7115                           ;main.c: 227: TRISCbits.TRISC3 = 1;
  7116  032B  0020               	movlb	0	; select bank0
  7117  032C  1593               	bsf	19,3	;volatile
  7118  032D                     l4297:
  7119                           
  7120                           ;main.c: 228: TRISCbits.TRISC4 = 1;
  7121  032D  1613               	bsf	19,4	;volatile
  7122  032E                     l4299:
  7123                           
  7124                           ;main.c: 229: WPUC3 = 1;
  7125  032E  003E               	movlb	30	; select bank30
  7126  032F  15CF               	bsf	79,3	;volatile
  7127  0330                     l4301:
  7128                           
  7129                           ;main.c: 230: WPUC4 = 1;
  7130  0330  164F               	bsf	79,4	;volatile
  7131  0331                     l4303:
  7132                           
  7133                           ;main.c: 233: unsigned char ctl=1;
  7134  0331  0020               	movlb	0	; select bank0
  7135  0332  01E9               	clrf	main@ctl
  7136  0333  0AE9               	incf	main@ctl,f
  7137  0334                     l4305:
  7138                           
  7139                           ;main.c: 234: LCDinit();
  7140  0334  318E  26B6  3183   	fcall	_LCDinit
  7141  0337                     l4307:
  7142  0337  3003               	movlw	3
  7143  0338  0020               	movlb	0	; select bank0
  7144  0339  00A8               	movwf	___lwmod@divisor
  7145  033A  3000               	movlw	0
  7146  033B  00A9               	movwf	___lwmod@divisor+1
  7147  033C  087C               	movf	_timer_flag+1,w	;volatile
  7148  033D  00AB               	movwf	___lwmod@dividend+1
  7149  033E  087B               	movf	_timer_flag,w	;volatile
  7150  033F  00AA               	movwf	___lwmod@dividend
  7151  0340  318C  24AB  3183   	fcall	___lwmod
  7152  0343  0020               	movlb	0	; select bank0
  7153  0344  0828               	movf	?___lwmod,w
  7154  0345  0429               	iorwf	?___lwmod+1,w
  7155  0346  1D03               	btfss	3,2
  7156  0347  2B49               	goto	u4021
  7157  0348  2B4A               	goto	u4020
  7158  0349                     u4021:
  7159  0349  2B5A               	goto	l545
  7160  034A                     u4020:
  7161  034A                     l4309:
  7162                           
  7163                           ;main.c: 240: c = tsttc();
  7164  034A  3186  2681  3183   	fcall	_tsttc
  7165  034D  0021               	movlb	1	; select bank1
  7166  034E  00A0               	movwf	??_main^(0+128)
  7167  034F  0820               	movf	??_main^(0+128),w
  7168  0350  0020               	movlb	0	; select bank0
  7169  0351  00E7               	movwf	main@c
  7170                           
  7171                           ;main.c: 241: l = lumin();
  7172  0352  3187  27D1  3183   	fcall	_lumin
  7173  0355  0021               	movlb	1	; select bank1
  7174  0356  00A0               	movwf	??_main^(0+128)
  7175  0357  0820               	movf	??_main^(0+128),w
  7176  0358  0020               	movlb	0	; select bank0
  7177  0359  00E8               	movwf	main@l
  7178  035A                     l545:
  7179                           
  7180                           ;main.c: 243: };main.c: 244: checkButtonS1();
  7181  035A  318B  23BD  3183   	fcall	_checkButtonS1
  7182                           
  7183                           ;main.c: 245: checkButtonS2();
  7184  035D  318B  23DA  3183   	fcall	_checkButtonS2
  7185                           
  7186                           ;main.c: 247: switch(state){
  7187  0360  2C57               	goto	l4413
  7188  0361                     l4311:
  7189                           
  7190                           ;main.c: 250: if(btn1State == 1){
  7191  0361  036D               	decf	_btn1State,w
  7192  0362  1D03               	btfss	3,2
  7193  0363  2B65               	goto	u4031
  7194  0364  2B66               	goto	u4030
  7195  0365                     u4031:
  7196  0365  2C81               	goto	l4415
  7197  0366                     u4030:
  7198  0366                     l4313:
  7199                           
  7200                           ;main.c: 252: state = 1;
  7201  0366  01EB               	clrf	main@state
  7202  0367  0AEB               	incf	main@state,f
  7203  0368  2C81               	goto	l4415
  7204  0369                     l4315:
  7205                           
  7206                           ;main.c: 257: if(btn2State == 1){
  7207  0369  036C               	decf	_btn2State,w
  7208  036A  1D03               	btfss	3,2
  7209  036B  2B6D               	goto	u4041
  7210  036C  2B6E               	goto	u4040
  7211  036D                     u4041:
  7212  036D  2B72               	goto	l4319
  7213  036E                     u4040:
  7214  036E                     l4317:
  7215                           
  7216                           ;main.c: 259: conf_clock_hh();
  7217  036E  318A  22E6  3183   	fcall	_conf_clock_hh
  7218                           
  7219                           ;main.c: 260: }else if(btn1State == 1){
  7220  0371  2C81               	goto	l4415
  7221  0372                     l4319:
  7222  0372  036D               	decf	_btn1State,w
  7223  0373  1D03               	btfss	3,2
  7224  0374  2B76               	goto	u4051
  7225  0375  2B77               	goto	u4050
  7226  0376                     u4051:
  7227  0376  2C81               	goto	l4415
  7228  0377                     u4050:
  7229  0377                     l4321:
  7230                           
  7231                           ;main.c: 262: state = 2;
  7232  0377  3002               	movlw	2
  7233  0378  0021               	movlb	1	; select bank1
  7234  0379  00A0               	movwf	??_main^(0+128)
  7235  037A  0820               	movf	??_main^(0+128),w
  7236  037B  0020               	movlb	0	; select bank0
  7237  037C  00EB               	movwf	main@state
  7238  037D  2C81               	goto	l4415
  7239  037E                     l4323:
  7240                           
  7241                           ;main.c: 266: if(btn2State == 1){
  7242  037E  036C               	decf	_btn2State,w
  7243  037F  1D03               	btfss	3,2
  7244  0380  2B82               	goto	u4061
  7245  0381  2B83               	goto	u4060
  7246  0382                     u4061:
  7247  0382  2B87               	goto	l4327
  7248  0383                     u4060:
  7249  0383                     l4325:
  7250                           
  7251                           ;main.c: 268: conf_clock_mm();
  7252  0383  318A  22F4  3183   	fcall	_conf_clock_mm
  7253                           
  7254                           ;main.c: 269: }else if(btn1State == 1){
  7255  0386  2C81               	goto	l4415
  7256  0387                     l4327:
  7257  0387  036D               	decf	_btn1State,w
  7258  0388  1D03               	btfss	3,2
  7259  0389  2B8B               	goto	u4071
  7260  038A  2B8C               	goto	u4070
  7261  038B                     u4071:
  7262  038B  2C81               	goto	l4415
  7263  038C                     u4070:
  7264  038C                     l4329:
  7265                           
  7266                           ;main.c: 271: state = 3;
  7267  038C  3003               	movlw	3
  7268  038D  0021               	movlb	1	; select bank1
  7269  038E  00A0               	movwf	??_main^(0+128)
  7270  038F  0820               	movf	??_main^(0+128),w
  7271  0390  0020               	movlb	0	; select bank0
  7272  0391  00EB               	movwf	main@state
  7273  0392  2C81               	goto	l4415
  7274  0393                     l4331:
  7275                           
  7276                           ;main.c: 275: if(btn2State == 1){
  7277  0393  036C               	decf	_btn2State,w
  7278  0394  1D03               	btfss	3,2
  7279  0395  2B97               	goto	u4081
  7280  0396  2B98               	goto	u4080
  7281  0397                     u4081:
  7282  0397  2B9C               	goto	l4335
  7283  0398                     u4080:
  7284  0398                     l4333:
  7285                           
  7286                           ;main.c: 277: conf_clock_ss();
  7287  0398  318A  2267  3183   	fcall	_conf_clock_ss
  7288                           
  7289                           ;main.c: 278: }else if(btn1State == 1){
  7290  039B  2C81               	goto	l4415
  7291  039C                     l4335:
  7292  039C  036D               	decf	_btn1State,w
  7293  039D  1D03               	btfss	3,2
  7294  039E  2BA0               	goto	u4091
  7295  039F  2BA1               	goto	u4090
  7296  03A0                     u4091:
  7297  03A0  2C81               	goto	l4415
  7298  03A1                     u4090:
  7299  03A1                     l4337:
  7300                           
  7301                           ;main.c: 280: state = 4;
  7302  03A1  3004               	movlw	4
  7303  03A2  0021               	movlb	1	; select bank1
  7304  03A3  00A0               	movwf	??_main^(0+128)
  7305  03A4  0820               	movf	??_main^(0+128),w
  7306  03A5  0020               	movlb	0	; select bank0
  7307  03A6  00EB               	movwf	main@state
  7308  03A7  2C81               	goto	l4415
  7309  03A8                     l4339:
  7310                           
  7311                           ;main.c: 284: if(btn2State == 1){
  7312  03A8  036C               	decf	_btn2State,w
  7313  03A9  1D03               	btfss	3,2
  7314  03AA  2BAC               	goto	u4101
  7315  03AB  2BAD               	goto	u4100
  7316  03AC                     u4101:
  7317  03AC  2BB4               	goto	l4343
  7318  03AD                     u4100:
  7319  03AD                     l4341:
  7320                           
  7321                           ;main.c: 286: state = 5;
  7322  03AD  3005               	movlw	5
  7323  03AE  0021               	movlb	1	; select bank1
  7324  03AF  00A0               	movwf	??_main^(0+128)
  7325  03B0  0820               	movf	??_main^(0+128),w
  7326  03B1  0020               	movlb	0	; select bank0
  7327  03B2  00EB               	movwf	main@state
  7328                           
  7329                           ;main.c: 287: }else if(btn1State == 1){
  7330  03B3  2C81               	goto	l4415
  7331  03B4                     l4343:
  7332  03B4  036D               	decf	_btn1State,w
  7333  03B5  1D03               	btfss	3,2
  7334  03B6  2BB8               	goto	u4111
  7335  03B7  2BB9               	goto	u4110
  7336  03B8                     u4111:
  7337  03B8  2C81               	goto	l4415
  7338  03B9                     u4110:
  7339  03B9                     l4345:
  7340                           
  7341                           ;main.c: 289: state = 8;
  7342  03B9  3008               	movlw	8
  7343  03BA  0021               	movlb	1	; select bank1
  7344  03BB  00A0               	movwf	??_main^(0+128)
  7345  03BC  0820               	movf	??_main^(0+128),w
  7346  03BD  0020               	movlb	0	; select bank0
  7347  03BE  00EB               	movwf	main@state
  7348  03BF  2C81               	goto	l4415
  7349  03C0                     l4347:
  7350                           
  7351                           ;main.c: 293: if(btn2State == 1){
  7352  03C0  036C               	decf	_btn2State,w
  7353  03C1  1D03               	btfss	3,2
  7354  03C2  2BC4               	goto	u4121
  7355  03C3  2BC5               	goto	u4120
  7356  03C4                     u4121:
  7357  03C4  2BC9               	goto	l4351
  7358  03C5                     u4120:
  7359  03C5                     l4349:
  7360                           
  7361                           ;main.c: 295: conf_alarm_hh();
  7362  03C5  318A  22D8  3183   	fcall	_conf_alarm_hh
  7363                           
  7364                           ;main.c: 296: }else if(btn1State == 1){
  7365  03C8  2C81               	goto	l4415
  7366  03C9                     l4351:
  7367  03C9  036D               	decf	_btn1State,w
  7368  03CA  1D03               	btfss	3,2
  7369  03CB  2BCD               	goto	u4131
  7370  03CC  2BCE               	goto	u4130
  7371  03CD                     u4131:
  7372  03CD  2C81               	goto	l4415
  7373  03CE                     u4130:
  7374  03CE                     l4353:
  7375                           
  7376                           ;main.c: 298: state = 6;
  7377  03CE  3006               	movlw	6
  7378  03CF  0021               	movlb	1	; select bank1
  7379  03D0  00A0               	movwf	??_main^(0+128)
  7380  03D1  0820               	movf	??_main^(0+128),w
  7381  03D2  0020               	movlb	0	; select bank0
  7382  03D3  00EB               	movwf	main@state
  7383  03D4  2C81               	goto	l4415
  7384  03D5                     l4355:
  7385                           
  7386                           ;main.c: 302: if(btn2State == 1){
  7387  03D5  036C               	decf	_btn2State,w
  7388  03D6  1D03               	btfss	3,2
  7389  03D7  2BD9               	goto	u4141
  7390  03D8  2BDA               	goto	u4140
  7391  03D9                     u4141:
  7392  03D9  2BDE               	goto	l4359
  7393  03DA                     u4140:
  7394  03DA                     l4357:
  7395                           
  7396                           ;main.c: 304: conf_alarm_mm();
  7397  03DA  318B  2312  3183   	fcall	_conf_alarm_mm
  7398                           
  7399                           ;main.c: 305: }else if(btn1State == 1){
  7400  03DD  2C81               	goto	l4415
  7401  03DE                     l4359:
  7402  03DE  036D               	decf	_btn1State,w
  7403  03DF  1D03               	btfss	3,2
  7404  03E0  2BE2               	goto	u4151
  7405  03E1  2BE3               	goto	u4150
  7406  03E2                     u4151:
  7407  03E2  2C81               	goto	l4415
  7408  03E3                     u4150:
  7409  03E3                     l4361:
  7410                           
  7411                           ;main.c: 307: state = 7;
  7412  03E3  3007               	movlw	7
  7413  03E4  0021               	movlb	1	; select bank1
  7414  03E5  00A0               	movwf	??_main^(0+128)
  7415  03E6  0820               	movf	??_main^(0+128),w
  7416  03E7  0020               	movlb	0	; select bank0
  7417  03E8  00EB               	movwf	main@state
  7418  03E9  2C81               	goto	l4415
  7419  03EA                     l4363:
  7420                           
  7421                           ;main.c: 311: if(btn2State == 1){
  7422  03EA  036C               	decf	_btn2State,w
  7423  03EB  1D03               	btfss	3,2
  7424  03EC  2BEE               	goto	u4161
  7425  03ED  2BEF               	goto	u4160
  7426  03EE                     u4161:
  7427  03EE  2BF3               	goto	l4367
  7428  03EF                     u4160:
  7429  03EF                     l4365:
  7430                           
  7431                           ;main.c: 313: conf_alarm_ss();
  7432  03EF  318B  2322  3183   	fcall	_conf_alarm_ss
  7433                           
  7434                           ;main.c: 314: }else if(btn1State == 1){
  7435  03F2  2C81               	goto	l4415
  7436  03F3                     l4367:
  7437  03F3  036D               	decf	_btn1State,w
  7438  03F4  1D03               	btfss	3,2
  7439  03F5  2BF7               	goto	u4171
  7440  03F6  2BF8               	goto	u4170
  7441  03F7                     u4171:
  7442  03F7  2C81               	goto	l4415
  7443  03F8                     u4170:
  7444  03F8  2BB9               	goto	l4345
  7445  03F9                     l4371:
  7446                           
  7447                           ;main.c: 320: if(btn2State == 1){
  7448  03F9  036C               	decf	_btn2State,w
  7449  03FA  1D03               	btfss	3,2
  7450  03FB  2BFD               	goto	u4181
  7451  03FC  2BFE               	goto	u4180
  7452  03FD                     u4181:
  7453  03FD  2C05               	goto	l4375
  7454  03FE                     u4180:
  7455  03FE                     l4373:
  7456                           
  7457                           ;main.c: 322: state = 9;
  7458  03FE  3009               	movlw	9
  7459  03FF  0021               	movlb	1	; select bank1
  7460  0400  00A0               	movwf	??_main^(0+128)
  7461  0401  0820               	movf	??_main^(0+128),w
  7462  0402  0020               	movlb	0	; select bank0
  7463  0403  00EB               	movwf	main@state
  7464                           
  7465                           ;main.c: 323: }else if(btn1State == 1){
  7466  0404  2C81               	goto	l4415
  7467  0405                     l4375:
  7468  0405  036D               	decf	_btn1State,w
  7469  0406  1D03               	btfss	3,2
  7470  0407  2C09               	goto	u4191
  7471  0408  2C0A               	goto	u4190
  7472  0409                     u4191:
  7473  0409  2C81               	goto	l4415
  7474  040A                     u4190:
  7475  040A                     l4377:
  7476                           
  7477                           ;main.c: 325: state = 10;
  7478  040A  300A               	movlw	10
  7479  040B  0021               	movlb	1	; select bank1
  7480  040C  00A0               	movwf	??_main^(0+128)
  7481  040D  0820               	movf	??_main^(0+128),w
  7482  040E  0020               	movlb	0	; select bank0
  7483  040F  00EB               	movwf	main@state
  7484  0410  2C81               	goto	l4415
  7485  0411                     l4379:
  7486                           
  7487                           ;main.c: 329: if(btn2State == 1){
  7488  0411  036C               	decf	_btn2State,w
  7489  0412  1D03               	btfss	3,2
  7490  0413  2C15               	goto	u4201
  7491  0414  2C16               	goto	u4200
  7492  0415                     u4201:
  7493  0415  2C1A               	goto	l4383
  7494  0416                     u4200:
  7495  0416                     l4381:
  7496                           
  7497                           ;main.c: 331: conf_temp();
  7498  0416  318B  2342  3183   	fcall	_conf_temp
  7499                           
  7500                           ;main.c: 332: }else if(btn1State == 1){
  7501  0419  2C81               	goto	l4415
  7502  041A                     l4383:
  7503  041A  036D               	decf	_btn1State,w
  7504  041B  1D03               	btfss	3,2
  7505  041C  2C1E               	goto	u4211
  7506  041D  2C1F               	goto	u4210
  7507  041E                     u4211:
  7508  041E  2C81               	goto	l4415
  7509  041F                     u4210:
  7510  041F  2C0A               	goto	l4377
  7511  0420                     l4387:
  7512                           
  7513                           ;main.c: 338: if(btn2State == 1){
  7514  0420  036C               	decf	_btn2State,w
  7515  0421  1D03               	btfss	3,2
  7516  0422  2C24               	goto	u4221
  7517  0423  2C25               	goto	u4220
  7518  0424                     u4221:
  7519  0424  2C2C               	goto	l4391
  7520  0425                     u4220:
  7521  0425                     l4389:
  7522                           
  7523                           ;main.c: 340: state = 11;
  7524  0425  300B               	movlw	11
  7525  0426  0021               	movlb	1	; select bank1
  7526  0427  00A0               	movwf	??_main^(0+128)
  7527  0428  0820               	movf	??_main^(0+128),w
  7528  0429  0020               	movlb	0	; select bank0
  7529  042A  00EB               	movwf	main@state
  7530                           
  7531                           ;main.c: 341: }else if(btn1State == 1){
  7532  042B  2C81               	goto	l4415
  7533  042C                     l4391:
  7534  042C  036D               	decf	_btn1State,w
  7535  042D  1D03               	btfss	3,2
  7536  042E  2C30               	goto	u4231
  7537  042F  2C31               	goto	u4230
  7538  0430                     u4231:
  7539  0430  2C81               	goto	l4415
  7540  0431                     u4230:
  7541  0431                     l4393:
  7542                           
  7543                           ;main.c: 343: state = 12;
  7544  0431  300C               	movlw	12
  7545  0432  0021               	movlb	1	; select bank1
  7546  0433  00A0               	movwf	??_main^(0+128)
  7547  0434  0820               	movf	??_main^(0+128),w
  7548  0435  0020               	movlb	0	; select bank0
  7549  0436  00EB               	movwf	main@state
  7550  0437  2C81               	goto	l4415
  7551  0438                     l4395:
  7552                           
  7553                           ;main.c: 347: if(btn2State == 1){
  7554  0438  036C               	decf	_btn2State,w
  7555  0439  1D03               	btfss	3,2
  7556  043A  2C3C               	goto	u4241
  7557  043B  2C3D               	goto	u4240
  7558  043C                     u4241:
  7559  043C  2C41               	goto	l4399
  7560  043D                     u4240:
  7561  043D                     l4397:
  7562                           
  7563                           ;main.c: 349: conf_lumin();
  7564  043D  318B  2332  3183   	fcall	_conf_lumin
  7565                           
  7566                           ;main.c: 350: }else if(btn1State == 1){
  7567  0440  2C81               	goto	l4415
  7568  0441                     l4399:
  7569  0441  036D               	decf	_btn1State,w
  7570  0442  1D03               	btfss	3,2
  7571  0443  2C45               	goto	u4251
  7572  0444  2C46               	goto	u4250
  7573  0445                     u4251:
  7574  0445  2C81               	goto	l4415
  7575  0446                     u4250:
  7576  0446  2C31               	goto	l4393
  7577  0447                     l4403:
  7578                           
  7579                           ;main.c: 356: if(btn2State == 1){
  7580  0447  036C               	decf	_btn2State,w
  7581  0448  1D03               	btfss	3,2
  7582  0449  2C4B               	goto	u4261
  7583  044A  2C4C               	goto	u4260
  7584  044B                     u4261:
  7585  044B  2C50               	goto	l4407
  7586  044C                     u4260:
  7587  044C                     l4405:
  7588                           
  7589                           ;main.c: 358: conf_alarm_flag();
  7590  044C  318A  22A8  3183   	fcall	_conf_alarm_flag
  7591                           
  7592                           ;main.c: 359: }else if(btn1State == 1){
  7593  044F  2C81               	goto	l4415
  7594  0450                     l4407:
  7595  0450  036D               	decf	_btn1State,w
  7596  0451  1D03               	btfss	3,2
  7597  0452  2C54               	goto	u4271
  7598  0453  2C55               	goto	u4270
  7599  0454                     u4271:
  7600  0454  2C81               	goto	l4415
  7601  0455                     u4270:
  7602  0455                     l4409:
  7603                           
  7604                           ;main.c: 361: state = 0;
  7605  0455  01EB               	clrf	main@state
  7606  0456  2C81               	goto	l4415
  7607  0457                     l4413:
  7608  0457  0020               	movlb	0	; select bank0
  7609  0458  086B               	movf	main@state,w
  7610                           
  7611                           ; Switch size 1, requested type "simple"
  7612                           ; Number of cases is 13, Range of values is 0 to 12
  7613                           ; switch strategies available:
  7614                           ; Name         Instructions Cycles
  7615                           ; direct_byte           32     6 (fixed)
  7616                           ; simple_byte           40    21 (average)
  7617                           ; jumptable            260     6 (fixed)
  7618                           ;	Chosen strategy is simple_byte
  7619  0459  3A00               	xorlw	0	; case 0
  7620  045A  1903               	skipnz
  7621  045B  2B61               	goto	l4311
  7622  045C  3A01               	xorlw	1	; case 1
  7623  045D  1903               	skipnz
  7624  045E  2B69               	goto	l4315
  7625  045F  3A03               	xorlw	3	; case 2
  7626  0460  1903               	skipnz
  7627  0461  2B7E               	goto	l4323
  7628  0462  3A01               	xorlw	1	; case 3
  7629  0463  1903               	skipnz
  7630  0464  2B93               	goto	l4331
  7631  0465  3A07               	xorlw	7	; case 4
  7632  0466  1903               	skipnz
  7633  0467  2BA8               	goto	l4339
  7634  0468  3A01               	xorlw	1	; case 5
  7635  0469  1903               	skipnz
  7636  046A  2BC0               	goto	l4347
  7637  046B  3A03               	xorlw	3	; case 6
  7638  046C  1903               	skipnz
  7639  046D  2BD5               	goto	l4355
  7640  046E  3A01               	xorlw	1	; case 7
  7641  046F  1903               	skipnz
  7642  0470  2BEA               	goto	l4363
  7643  0471  3A0F               	xorlw	15	; case 8
  7644  0472  1903               	skipnz
  7645  0473  2BF9               	goto	l4371
  7646  0474  3A01               	xorlw	1	; case 9
  7647  0475  1903               	skipnz
  7648  0476  2C11               	goto	l4379
  7649  0477  3A03               	xorlw	3	; case 10
  7650  0478  1903               	skipnz
  7651  0479  2C20               	goto	l4387
  7652  047A  3A01               	xorlw	1	; case 11
  7653  047B  1903               	skipnz
  7654  047C  2C38               	goto	l4395
  7655  047D  3A07               	xorlw	7	; case 12
  7656  047E  1903               	skipnz
  7657  047F  2C47               	goto	l4403
  7658  0480  2C81               	goto	l4415
  7659  0481                     l4415:
  7660                           
  7661                           ;main.c: 368: lcd(c, l, ALAF, ctl, CLKH, CLKM, (timer_flag%60), state, ALAT, ALAL, ALAH,
      +                           ALAM, ALAS);
  7662  0481  303C               	movlw	60
  7663  0482  0020               	movlb	0	; select bank0
  7664  0483  00A8               	movwf	___lwmod@divisor
  7665  0484  3000               	movlw	0
  7666  0485  00A9               	movwf	___lwmod@divisor+1
  7667  0486  087C               	movf	_timer_flag+1,w	;volatile
  7668  0487  00AB               	movwf	___lwmod@dividend+1
  7669  0488  087B               	movf	_timer_flag,w	;volatile
  7670  0489  00AA               	movwf	___lwmod@dividend
  7671  048A  318C  24AB  3183   	fcall	___lwmod
  7672  048D  0020               	movlb	0	; select bank0
  7673  048E  0828               	movf	?___lwmod,w
  7674  048F  0021               	movlb	1	; select bank1
  7675  0490  00A0               	movwf	??_main^(0+128)
  7676  0491  0820               	movf	??_main^(0+128),w
  7677  0492  0020               	movlb	0	; select bank0
  7678  0493  00EA               	movwf	_main$2758
  7679  0494                     l4417:
  7680                           
  7681                           ;main.c: 368: lcd(c, l, ALAF, ctl, CLKH, CLKM, (timer_flag%60), state, ALAT, ALAL, ALAH,
      +                           ALAM, ALAS);
  7682  0494  0868               	movf	main@l,w
  7683  0495  0021               	movlb	1	; select bank1
  7684  0496  00A0               	movwf	??_main^(0+128)
  7685  0497  0820               	movf	??_main^(0+128),w
  7686  0498  0020               	movlb	0	; select bank0
  7687  0499  00C3               	movwf	lcd@luminosity
  7688  049A  0021               	movlb	1	; select bank1
  7689  049B  0833               	movf	_ALAF^(0+128),w
  7690  049C  00A1               	movwf	(??_main+1)^(0+128)
  7691  049D  0821               	movf	(??_main+1)^(0+128),w
  7692  049E  0020               	movlb	0	; select bank0
  7693  049F  00C4               	movwf	lcd@alarm
  7694  04A0  0869               	movf	main@ctl,w
  7695  04A1  0021               	movlb	1	; select bank1
  7696  04A2  00A2               	movwf	(??_main+2)^(0+128)
  7697  04A3  0822               	movf	(??_main+2)^(0+128),w
  7698  04A4  0020               	movlb	0	; select bank0
  7699  04A5  00C5               	movwf	lcd@ctl
  7700  04A6  086F               	movf	_CLKH,w
  7701  04A7  0021               	movlb	1	; select bank1
  7702  04A8  00A3               	movwf	(??_main+3)^(0+128)
  7703  04A9  0823               	movf	(??_main+3)^(0+128),w
  7704  04AA  0020               	movlb	0	; select bank0
  7705  04AB  00C6               	movwf	lcd@h
  7706  04AC  086E               	movf	_CLKM,w
  7707  04AD  0021               	movlb	1	; select bank1
  7708  04AE  00A4               	movwf	(??_main+4)^(0+128)
  7709  04AF  0824               	movf	(??_main+4)^(0+128),w
  7710  04B0  0020               	movlb	0	; select bank0
  7711  04B1  00C7               	movwf	lcd@m
  7712  04B2  086A               	movf	_main$2758,w
  7713  04B3  0021               	movlb	1	; select bank1
  7714  04B4  00A5               	movwf	(??_main+5)^(0+128)
  7715  04B5  0825               	movf	(??_main+5)^(0+128),w
  7716  04B6  0020               	movlb	0	; select bank0
  7717  04B7  00C8               	movwf	lcd@s
  7718  04B8  086B               	movf	main@state,w
  7719  04B9  0021               	movlb	1	; select bank1
  7720  04BA  00A6               	movwf	(??_main+6)^(0+128)
  7721  04BB  0826               	movf	(??_main+6)^(0+128),w
  7722  04BC  0020               	movlb	0	; select bank0
  7723  04BD  00C9               	movwf	lcd@state
  7724  04BE  0021               	movlb	1	; select bank1
  7725  04BF  0837               	movf	_ALAT^(0+128),w
  7726  04C0  00A7               	movwf	(??_main+7)^(0+128)
  7727  04C1  0827               	movf	(??_main+7)^(0+128),w
  7728  04C2  0020               	movlb	0	; select bank0
  7729  04C3  00CA               	movwf	lcd@temperature_alarm
  7730  04C4  0021               	movlb	1	; select bank1
  7731  04C5  0836               	movf	_ALAL^(0+128),w
  7732  04C6  00A8               	movwf	(??_main+8)^(0+128)
  7733  04C7  0828               	movf	(??_main+8)^(0+128),w
  7734  04C8  0020               	movlb	0	; select bank0
  7735  04C9  00CB               	movwf	lcd@luminosity_alarm
  7736  04CA  087D               	movf	_ALAH,w
  7737  04CB  0021               	movlb	1	; select bank1
  7738  04CC  00A9               	movwf	(??_main+9)^(0+128)
  7739  04CD  0829               	movf	(??_main+9)^(0+128),w
  7740  04CE  0020               	movlb	0	; select bank0
  7741  04CF  00CC               	movwf	lcd@alah
  7742  04D0  0021               	movlb	1	; select bank1
  7743  04D1  0835               	movf	_ALAM^(0+128),w
  7744  04D2  00AA               	movwf	(??_main+10)^(0+128)
  7745  04D3  082A               	movf	(??_main+10)^(0+128),w
  7746  04D4  0020               	movlb	0	; select bank0
  7747  04D5  00CD               	movwf	lcd@alam
  7748  04D6  0021               	movlb	1	; select bank1
  7749  04D7  0834               	movf	_ALAS^(0+128),w
  7750  04D8  00AB               	movwf	(??_main+11)^(0+128)
  7751  04D9  082B               	movf	(??_main+11)^(0+128),w
  7752  04DA  0020               	movlb	0	; select bank0
  7753  04DB  00CE               	movwf	lcd@alas
  7754  04DC  0867               	movf	main@c,w
  7755  04DD  3180  2062  3183   	fcall	_lcd
  7756  04E0  2B37               	goto	l4307
  7757  04E1  3180  2828         	ljmp	start
  7758  04E3                     __end_of_main:
  7759                           
  7760                           	psect	text1
  7761  0681                     __ptext1:	
  7762 ;; *************** function _tsttc *****************
  7763 ;; Defined at:
  7764 ;;		line 435 in file "main.c"
  7765 ;; Parameters:    Size  Location     Type
  7766 ;;		None
  7767 ;; Auto vars:     Size  Location     Type
  7768 ;;  value           1    3[BANK0 ] unsigned char 
  7769 ;; Return value:  Size  Location     Type
  7770 ;;                  1    wreg      unsigned char 
  7771 ;; Registers used:
  7772 ;;		wreg, status,2, status,0, pclath, cstack
  7773 ;; Tracked objects:
  7774 ;;		On entry : 0/0
  7775 ;;		On exit  : 0/0
  7776 ;;		Unchanged: 0/0
  7777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7779 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7780 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7781 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7782 ;;Total ram usage:        2 bytes
  7783 ;; Hardware stack levels used:    1
  7784 ;; Hardware stack levels required when called:    6
  7785 ;; This function calls:
  7786 ;;		_ReadI2C
  7787 ;;		_WriteI2C
  7788 ;; This function is called by:
  7789 ;;		_main
  7790 ;; This function uses a non-reentrant model
  7791 ;;
  7792                           
  7793                           
  7794                           ;psect for function _tsttc
  7795  0681                     _tsttc:
  7796  0681                     l627:	
  7797                           ;incstack = 0
  7798                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
  7799                           ;main.c: 436: unsigned char value;;main.c: 437: do{
  7800                           
  7801  0681                     l3865:	
  7802                           ;main.c: 438: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7803                           
  7804  0681  0023               	movlb	3	; select bank3
  7805  0682  0C0F               	rrf	15,w	;volatile
  7806  0683  0C89               	rrf	9,f
  7807  0684  3901               	andlw	1
  7808  0685  0020               	movlb	0	; select bank0
  7809  0686  00A2               	movwf	??_tsttc
  7810  0687  0023               	movlb	3	; select bank3
  7811  0688  0811               	movf	17,w	;volatile
  7812  0689  391F               	andlw	31
  7813  068A  0020               	movlb	0	; select bank0
  7814  068B  0422               	iorwf	??_tsttc,w
  7815  068C  1D03               	btfss	3,2
  7816  068D  2E8F               	goto	u3121
  7817  068E  2E90               	goto	u3120
  7818  068F                     u3121:
  7819  068F  2E81               	goto	l3865
  7820  0690                     u3120:
  7821  0690                     l630:
  7822                           
  7823                           ;main.c: 439: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
  7824  0690  0023               	movlb	3	; select bank3
  7825  0691  1411               	bsf	17,0	;volatile
  7826  0692                     l631:
  7827  0692  1811               	btfsc	17,0	;volatile
  7828  0693  2E95               	goto	u3131
  7829  0694  2E96               	goto	u3130
  7830  0695                     u3131:
  7831  0695  2E92               	goto	l631
  7832  0696                     u3130:
  7833  0696                     l3867:
  7834  0696  0023               	movlb	3	; select bank3
  7835  0697  0C0F               	rrf	15,w	;volatile
  7836  0698  0C89               	rrf	9,f
  7837  0699  3901               	andlw	1
  7838  069A  0020               	movlb	0	; select bank0
  7839  069B  00A2               	movwf	??_tsttc
  7840  069C  0023               	movlb	3	; select bank3
  7841  069D  0811               	movf	17,w	;volatile
  7842  069E  391F               	andlw	31
  7843  069F  0020               	movlb	0	; select bank0
  7844  06A0  0422               	iorwf	??_tsttc,w
  7845  06A1  1D03               	btfss	3,2
  7846  06A2  2EA4               	goto	u3141
  7847  06A3  2EA5               	goto	u3140
  7848  06A4                     u3141:
  7849  06A4  2E96               	goto	l3867
  7850  06A5                     u3140:
  7851  06A5                     l3869:
  7852                           
  7853                           ;main.c: 441: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7854  06A5  309A               	movlw	154
  7855  06A6  318D  25FE  3186   	fcall	_WriteI2C
  7856  06A9                     l3871:
  7857  06A9  0023               	movlb	3	; select bank3
  7858  06AA  0C0F               	rrf	15,w	;volatile
  7859  06AB  0C89               	rrf	9,f
  7860  06AC  3901               	andlw	1
  7861  06AD  0020               	movlb	0	; select bank0
  7862  06AE  00A2               	movwf	??_tsttc
  7863  06AF  0023               	movlb	3	; select bank3
  7864  06B0  0811               	movf	17,w	;volatile
  7865  06B1  391F               	andlw	31
  7866  06B2  0020               	movlb	0	; select bank0
  7867  06B3  0422               	iorwf	??_tsttc,w
  7868  06B4  1D03               	btfss	3,2
  7869  06B5  2EB7               	goto	u3151
  7870  06B6  2EB8               	goto	u3150
  7871  06B7                     u3151:
  7872  06B7  2EA9               	goto	l3871
  7873  06B8                     u3150:
  7874  06B8                     l3873:
  7875                           
  7876                           ;main.c: 442: WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7877  06B8  3001               	movlw	1
  7878  06B9  318D  25FE  3186   	fcall	_WriteI2C
  7879  06BC                     l3875:
  7880  06BC  0023               	movlb	3	; select bank3
  7881  06BD  0C0F               	rrf	15,w	;volatile
  7882  06BE  0C89               	rrf	9,f
  7883  06BF  3901               	andlw	1
  7884  06C0  0020               	movlb	0	; select bank0
  7885  06C1  00A2               	movwf	??_tsttc
  7886  06C2  0023               	movlb	3	; select bank3
  7887  06C3  0811               	movf	17,w	;volatile
  7888  06C4  391F               	andlw	31
  7889  06C5  0020               	movlb	0	; select bank0
  7890  06C6  0422               	iorwf	??_tsttc,w
  7891  06C7  1D03               	btfss	3,2
  7892  06C8  2ECA               	goto	u3161
  7893  06C9  2ECB               	goto	u3160
  7894  06CA                     u3161:
  7895  06CA  2EBC               	goto	l3875
  7896  06CB                     u3160:
  7897  06CB                     l642:
  7898                           
  7899                           ;main.c: 443: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
  7900  06CB  0023               	movlb	3	; select bank3
  7901  06CC  1491               	bsf	17,1	;volatile
  7902  06CD                     l643:
  7903  06CD  1891               	btfsc	17,1	;volatile
  7904  06CE  2ED0               	goto	u3171
  7905  06CF  2ED1               	goto	u3170
  7906  06D0                     u3171:
  7907  06D0  2ECD               	goto	l643
  7908  06D1                     u3170:
  7909  06D1                     l3877:
  7910  06D1  0023               	movlb	3	; select bank3
  7911  06D2  0C0F               	rrf	15,w	;volatile
  7912  06D3  0C89               	rrf	9,f
  7913  06D4  3901               	andlw	1
  7914  06D5  0020               	movlb	0	; select bank0
  7915  06D6  00A2               	movwf	??_tsttc
  7916  06D7  0023               	movlb	3	; select bank3
  7917  06D8  0811               	movf	17,w	;volatile
  7918  06D9  391F               	andlw	31
  7919  06DA  0020               	movlb	0	; select bank0
  7920  06DB  0422               	iorwf	??_tsttc,w
  7921  06DC  1D03               	btfss	3,2
  7922  06DD  2EDF               	goto	u3181
  7923  06DE  2EE0               	goto	u3180
  7924  06DF                     u3181:
  7925  06DF  2ED1               	goto	l3877
  7926  06E0                     u3180:
  7927  06E0                     l3879:
  7928                           
  7929                           ;main.c: 444: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7930  06E0  309B               	movlw	155
  7931  06E1  318D  25FE  3186   	fcall	_WriteI2C
  7932  06E4                     l3881:
  7933  06E4  0023               	movlb	3	; select bank3
  7934  06E5  0C0F               	rrf	15,w	;volatile
  7935  06E6  0C89               	rrf	9,f
  7936  06E7  3901               	andlw	1
  7937  06E8  0020               	movlb	0	; select bank0
  7938  06E9  00A2               	movwf	??_tsttc
  7939  06EA  0023               	movlb	3	; select bank3
  7940  06EB  0811               	movf	17,w	;volatile
  7941  06EC  391F               	andlw	31
  7942  06ED  0020               	movlb	0	; select bank0
  7943  06EE  0422               	iorwf	??_tsttc,w
  7944  06EF  1D03               	btfss	3,2
  7945  06F0  2EF2               	goto	u3191
  7946  06F1  2EF3               	goto	u3190
  7947  06F2                     u3191:
  7948  06F2  2EE4               	goto	l3881
  7949  06F3                     u3190:
  7950  06F3                     l3883:
  7951                           
  7952                           ;main.c: 445: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7953  06F3  318C  2415  3186   	fcall	_ReadI2C
  7954  06F6  0020               	movlb	0	; select bank0
  7955  06F7  00A2               	movwf	??_tsttc
  7956  06F8  0822               	movf	??_tsttc,w
  7957  06F9  00A3               	movwf	tsttc@value
  7958  06FA                     l3885:
  7959  06FA  0023               	movlb	3	; select bank3
  7960  06FB  0C0F               	rrf	15,w	;volatile
  7961  06FC  0C89               	rrf	9,f
  7962  06FD  3901               	andlw	1
  7963  06FE  0020               	movlb	0	; select bank0
  7964  06FF  00A2               	movwf	??_tsttc
  7965  0700  0023               	movlb	3	; select bank3
  7966  0701  0811               	movf	17,w	;volatile
  7967  0702  391F               	andlw	31
  7968  0703  0020               	movlb	0	; select bank0
  7969  0704  0422               	iorwf	??_tsttc,w
  7970  0705  1D03               	btfss	3,2
  7971  0706  2F08               	goto	u3201
  7972  0707  2F09               	goto	u3200
  7973  0708                     u3201:
  7974  0708  2EFA               	goto	l3885
  7975  0709                     u3200:
  7976  0709                     l654:
  7977                           
  7978                           ;main.c: 446: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while
      +                           ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7979  0709  0023               	movlb	3	; select bank3
  7980  070A  1691               	bsf	17,5	;volatile
  7981  070B  1611               	bsf	17,4	;volatile
  7982  070C                     l655:
  7983  070C  1A11               	btfsc	17,4	;volatile
  7984  070D  2F0F               	goto	u3211
  7985  070E  2F10               	goto	u3210
  7986  070F                     u3211:
  7987  070F  2F0C               	goto	l655
  7988  0710                     u3210:
  7989  0710                     l3887:
  7990  0710  0023               	movlb	3	; select bank3
  7991  0711  0C0F               	rrf	15,w	;volatile
  7992  0712  0C89               	rrf	9,f
  7993  0713  3901               	andlw	1
  7994  0714  0020               	movlb	0	; select bank0
  7995  0715  00A2               	movwf	??_tsttc
  7996  0716  0023               	movlb	3	; select bank3
  7997  0717  0811               	movf	17,w	;volatile
  7998  0718  391F               	andlw	31
  7999  0719  0020               	movlb	0	; select bank0
  8000  071A  0422               	iorwf	??_tsttc,w
  8001  071B  1D03               	btfss	3,2
  8002  071C  2F1E               	goto	u3221
  8003  071D  2F1F               	goto	u3220
  8004  071E                     u3221:
  8005  071E  2F10               	goto	l3887
  8006  071F                     u3220:
  8007  071F                     l660:
  8008                           
  8009                           ;main.c: 447: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  8010  071F  0023               	movlb	3	; select bank3
  8011  0720  1511               	bsf	17,2	;volatile
  8012  0721                     l661:
  8013  0721  1911               	btfsc	17,2	;volatile
  8014  0722  2F24               	goto	u3231
  8015  0723  2F25               	goto	u3230
  8016  0724                     u3231:
  8017  0724  2F21               	goto	l661
  8018  0725                     u3230:
  8019  0725                     l663:
  8020                           
  8021                           ;main.c: 448: } while (!(value & 0x40));
  8022  0725  0020               	movlb	0	; select bank0
  8023  0726  1F23               	btfss	tsttc@value,6
  8024  0727  2F29               	goto	u3241
  8025  0728  2F2A               	goto	u3240
  8026  0729                     u3241:
  8027  0729  2E81               	goto	l627
  8028  072A                     u3240:
  8029  072A                     l3889:
  8030  072A  0023               	movlb	3	; select bank3
  8031  072B  0C0F               	rrf	15,w	;volatile
  8032  072C  0C89               	rrf	9,f
  8033  072D  3901               	andlw	1
  8034  072E  0020               	movlb	0	; select bank0
  8035  072F  00A2               	movwf	??_tsttc
  8036  0730  0023               	movlb	3	; select bank3
  8037  0731  0811               	movf	17,w	;volatile
  8038  0732  391F               	andlw	31
  8039  0733  0020               	movlb	0	; select bank0
  8040  0734  0422               	iorwf	??_tsttc,w
  8041  0735  1D03               	btfss	3,2
  8042  0736  2F38               	goto	u3251
  8043  0737  2F39               	goto	u3250
  8044  0738                     u3251:
  8045  0738  2F2A               	goto	l3889
  8046  0739                     u3250:
  8047  0739                     l667:
  8048                           
  8049                           ;main.c: 451: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
  8050  0739  0023               	movlb	3	; select bank3
  8051  073A  1411               	bsf	17,0	;volatile
  8052  073B                     l668:
  8053  073B  1811               	btfsc	17,0	;volatile
  8054  073C  2F3E               	goto	u3261
  8055  073D  2F3F               	goto	u3260
  8056  073E                     u3261:
  8057  073E  2F3B               	goto	l668
  8058  073F                     u3260:
  8059  073F                     l3891:
  8060  073F  0023               	movlb	3	; select bank3
  8061  0740  0C0F               	rrf	15,w	;volatile
  8062  0741  0C89               	rrf	9,f
  8063  0742  3901               	andlw	1
  8064  0743  0020               	movlb	0	; select bank0
  8065  0744  00A2               	movwf	??_tsttc
  8066  0745  0023               	movlb	3	; select bank3
  8067  0746  0811               	movf	17,w	;volatile
  8068  0747  391F               	andlw	31
  8069  0748  0020               	movlb	0	; select bank0
  8070  0749  0422               	iorwf	??_tsttc,w
  8071  074A  1D03               	btfss	3,2
  8072  074B  2F4D               	goto	u3271
  8073  074C  2F4E               	goto	u3270
  8074  074D                     u3271:
  8075  074D  2F3F               	goto	l3891
  8076  074E                     u3270:
  8077  074E                     l3893:
  8078                           
  8079                           ;main.c: 452: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8080  074E  309A               	movlw	154
  8081  074F  318D  25FE  3186   	fcall	_WriteI2C
  8082  0752                     l3895:
  8083  0752  0023               	movlb	3	; select bank3
  8084  0753  0C0F               	rrf	15,w	;volatile
  8085  0754  0C89               	rrf	9,f
  8086  0755  3901               	andlw	1
  8087  0756  0020               	movlb	0	; select bank0
  8088  0757  00A2               	movwf	??_tsttc
  8089  0758  0023               	movlb	3	; select bank3
  8090  0759  0811               	movf	17,w	;volatile
  8091  075A  391F               	andlw	31
  8092  075B  0020               	movlb	0	; select bank0
  8093  075C  0422               	iorwf	??_tsttc,w
  8094  075D  1D03               	btfss	3,2
  8095  075E  2F60               	goto	u3281
  8096  075F  2F61               	goto	u3280
  8097  0760                     u3281:
  8098  0760  2F52               	goto	l3895
  8099  0761                     u3280:
  8100  0761                     l3897:
  8101                           
  8102                           ;main.c: 453: WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8103  0761  3000               	movlw	0
  8104  0762  318D  25FE  3186   	fcall	_WriteI2C
  8105  0765                     l3899:
  8106  0765  0023               	movlb	3	; select bank3
  8107  0766  0C0F               	rrf	15,w	;volatile
  8108  0767  0C89               	rrf	9,f
  8109  0768  3901               	andlw	1
  8110  0769  0020               	movlb	0	; select bank0
  8111  076A  00A2               	movwf	??_tsttc
  8112  076B  0023               	movlb	3	; select bank3
  8113  076C  0811               	movf	17,w	;volatile
  8114  076D  391F               	andlw	31
  8115  076E  0020               	movlb	0	; select bank0
  8116  076F  0422               	iorwf	??_tsttc,w
  8117  0770  1D03               	btfss	3,2
  8118  0771  2F73               	goto	u3291
  8119  0772  2F74               	goto	u3290
  8120  0773                     u3291:
  8121  0773  2F65               	goto	l3899
  8122  0774                     u3290:
  8123  0774                     l679:
  8124                           
  8125                           ;main.c: 454: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
  8126  0774  0023               	movlb	3	; select bank3
  8127  0775  1491               	bsf	17,1	;volatile
  8128  0776                     l680:
  8129  0776  1891               	btfsc	17,1	;volatile
  8130  0777  2F79               	goto	u3301
  8131  0778  2F7A               	goto	u3300
  8132  0779                     u3301:
  8133  0779  2F76               	goto	l680
  8134  077A                     u3300:
  8135  077A                     l3901:
  8136  077A  0023               	movlb	3	; select bank3
  8137  077B  0C0F               	rrf	15,w	;volatile
  8138  077C  0C89               	rrf	9,f
  8139  077D  3901               	andlw	1
  8140  077E  0020               	movlb	0	; select bank0
  8141  077F  00A2               	movwf	??_tsttc
  8142  0780  0023               	movlb	3	; select bank3
  8143  0781  0811               	movf	17,w	;volatile
  8144  0782  391F               	andlw	31
  8145  0783  0020               	movlb	0	; select bank0
  8146  0784  0422               	iorwf	??_tsttc,w
  8147  0785  1D03               	btfss	3,2
  8148  0786  2F88               	goto	u3311
  8149  0787  2F89               	goto	u3310
  8150  0788                     u3311:
  8151  0788  2F7A               	goto	l3901
  8152  0789                     u3310:
  8153  0789                     l3903:
  8154                           
  8155                           ;main.c: 455: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8156  0789  309B               	movlw	155
  8157  078A  318D  25FE  3186   	fcall	_WriteI2C
  8158  078D                     l3905:
  8159  078D  0023               	movlb	3	; select bank3
  8160  078E  0C0F               	rrf	15,w	;volatile
  8161  078F  0C89               	rrf	9,f
  8162  0790  3901               	andlw	1
  8163  0791  0020               	movlb	0	; select bank0
  8164  0792  00A2               	movwf	??_tsttc
  8165  0793  0023               	movlb	3	; select bank3
  8166  0794  0811               	movf	17,w	;volatile
  8167  0795  391F               	andlw	31
  8168  0796  0020               	movlb	0	; select bank0
  8169  0797  0422               	iorwf	??_tsttc,w
  8170  0798  1D03               	btfss	3,2
  8171  0799  2F9B               	goto	u3321
  8172  079A  2F9C               	goto	u3320
  8173  079B                     u3321:
  8174  079B  2F8D               	goto	l3905
  8175  079C                     u3320:
  8176  079C                     l3907:
  8177                           
  8178                           ;main.c: 456: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8179  079C  318C  2415  3186   	fcall	_ReadI2C
  8180  079F  0020               	movlb	0	; select bank0
  8181  07A0  00A2               	movwf	??_tsttc
  8182  07A1  0822               	movf	??_tsttc,w
  8183  07A2  00A3               	movwf	tsttc@value
  8184  07A3                     l3909:
  8185  07A3  0023               	movlb	3	; select bank3
  8186  07A4  0C0F               	rrf	15,w	;volatile
  8187  07A5  0C89               	rrf	9,f
  8188  07A6  3901               	andlw	1
  8189  07A7  0020               	movlb	0	; select bank0
  8190  07A8  00A2               	movwf	??_tsttc
  8191  07A9  0023               	movlb	3	; select bank3
  8192  07AA  0811               	movf	17,w	;volatile
  8193  07AB  391F               	andlw	31
  8194  07AC  0020               	movlb	0	; select bank0
  8195  07AD  0422               	iorwf	??_tsttc,w
  8196  07AE  1D03               	btfss	3,2
  8197  07AF  2FB1               	goto	u3331
  8198  07B0  2FB2               	goto	u3330
  8199  07B1                     u3331:
  8200  07B1  2FA3               	goto	l3909
  8201  07B2                     u3330:
  8202  07B2                     l691:
  8203                           
  8204                           ;main.c: 457: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while
      +                           ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8205  07B2  0023               	movlb	3	; select bank3
  8206  07B3  1691               	bsf	17,5	;volatile
  8207  07B4  1611               	bsf	17,4	;volatile
  8208  07B5                     l692:
  8209  07B5  1A11               	btfsc	17,4	;volatile
  8210  07B6  2FB8               	goto	u3341
  8211  07B7  2FB9               	goto	u3340
  8212  07B8                     u3341:
  8213  07B8  2FB5               	goto	l692
  8214  07B9                     u3340:
  8215  07B9                     l3911:
  8216  07B9  0023               	movlb	3	; select bank3
  8217  07BA  0C0F               	rrf	15,w	;volatile
  8218  07BB  0C89               	rrf	9,f
  8219  07BC  3901               	andlw	1
  8220  07BD  0020               	movlb	0	; select bank0
  8221  07BE  00A2               	movwf	??_tsttc
  8222  07BF  0023               	movlb	3	; select bank3
  8223  07C0  0811               	movf	17,w	;volatile
  8224  07C1  391F               	andlw	31
  8225  07C2  0020               	movlb	0	; select bank0
  8226  07C3  0422               	iorwf	??_tsttc,w
  8227  07C4  1D03               	btfss	3,2
  8228  07C5  2FC7               	goto	u3351
  8229  07C6  2FC8               	goto	u3350
  8230  07C7                     u3351:
  8231  07C7  2FB9               	goto	l3911
  8232  07C8                     u3350:
  8233  07C8                     l697:
  8234                           
  8235                           ;main.c: 458: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  8236  07C8  0023               	movlb	3	; select bank3
  8237  07C9  1511               	bsf	17,2	;volatile
  8238  07CA                     l698:
  8239  07CA  1911               	btfsc	17,2	;volatile
  8240  07CB  2FCD               	goto	u3361
  8241  07CC  2FCE               	goto	u3360
  8242  07CD                     u3361:
  8243  07CD  2FCA               	goto	l698
  8244  07CE                     u3360:
  8245  07CE                     l3913:
  8246                           
  8247                           ;main.c: 460: return value;
  8248  07CE  0020               	movlb	0	; select bank0
  8249  07CF  0823               	movf	tsttc@value,w
  8250  07D0                     l701:
  8251  07D0  0008               	return
  8252  07D1                     __end_of_tsttc:
  8253                           
  8254                           	psect	text2
  8255  0C15                     __ptext2:	
  8256 ;; *************** function _ReadI2C *****************
  8257 ;; Defined at:
  8258 ;;		line 32 in file "I2C/i2c.c"
  8259 ;; Parameters:    Size  Location     Type
  8260 ;;		None
  8261 ;; Auto vars:     Size  Location     Type
  8262 ;;		None
  8263 ;; Return value:  Size  Location     Type
  8264 ;;                  1    wreg      unsigned char 
  8265 ;; Registers used:
  8266 ;;		wreg, status,2, status,0
  8267 ;; Tracked objects:
  8268 ;;		On entry : 0/0
  8269 ;;		On exit  : 0/0
  8270 ;;		Unchanged: 0/0
  8271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8274 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8275 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8276 ;;Total ram usage:        1 bytes
  8277 ;; Hardware stack levels used:    1
  8278 ;; Hardware stack levels required when called:    5
  8279 ;; This function calls:
  8280 ;;		Nothing
  8281 ;; This function is called by:
  8282 ;;		_tsttc
  8283 ;;		_LCDrecv
  8284 ;; This function uses a non-reentrant model
  8285 ;;
  8286                           
  8287                           
  8288                           ;psect for function _ReadI2C
  8289  0C15                     _ReadI2C:
  8290  0C15                     l3579:	
  8291                           ;incstack = 0
  8292                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
  8293                           
  8294                           
  8295                           ;i2c.c: 34: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
  8296  0C15  300F               	movlw	15
  8297  0C16  0023               	movlb	3	; select bank3
  8298  0C17  0510               	andwf	16,w	;volatile
  8299  0C18  0020               	movlb	0	; select bank0
  8300  0C19  00A0               	movwf	??_ReadI2C
  8301  0C1A  3008               	movlw	8
  8302  0C1B  0620               	xorwf	??_ReadI2C,w
  8303  0C1C  1903               	btfsc	3,2
  8304  0C1D  2C1F               	goto	u2811
  8305  0C1E  2C20               	goto	u2810
  8306  0C1F                     u2811:
  8307  0C1F  2C2B               	goto	l22
  8308  0C20                     u2810:
  8309  0C20                     l3581:
  8310  0C20  300F               	movlw	15
  8311  0C21  0023               	movlb	3	; select bank3
  8312  0C22  0510               	andwf	16,w	;volatile
  8313  0C23  0020               	movlb	0	; select bank0
  8314  0C24  00A0               	movwf	??_ReadI2C
  8315  0C25  300B               	movlw	11
  8316  0C26  0620               	xorwf	??_ReadI2C,w
  8317  0C27  1D03               	btfss	3,2
  8318  0C28  2C2A               	goto	u2821
  8319  0C29  2C2B               	goto	u2820
  8320  0C2A                     u2821:
  8321  0C2A  2C2D               	goto	l23
  8322  0C2B                     u2820:
  8323  0C2B                     l22:
  8324                           
  8325                           ;i2c.c: 35: SSP1CON2bits.RCEN = 1;
  8326  0C2B  0023               	movlb	3	; select bank3
  8327  0C2C  1591               	bsf	17,3	;volatile
  8328  0C2D                     l23:
  8329  0C2D  0023               	movlb	3	; select bank3
  8330  0C2E  1C0F               	btfss	15,0	;volatile
  8331  0C2F  2C31               	goto	u2831
  8332  0C30  2C32               	goto	u2830
  8333  0C31                     u2831:
  8334  0C31  2C2D               	goto	l23
  8335  0C32                     u2830:
  8336  0C32                     l3583:
  8337                           
  8338                           ;i2c.c: 37: return ( SSP1BUF );
  8339  0C32  080C               	movf	12,w	;volatile
  8340  0C33                     l26:
  8341  0C33  0008               	return
  8342  0C34                     __end_of_ReadI2C:
  8343                           
  8344                           	psect	text3
  8345  07D1                     __ptext3:	
  8346 ;; *************** function _lumin *****************
  8347 ;; Defined at:
  8348 ;;		line 296 in file "LCD.c"
  8349 ;; Parameters:    Size  Location     Type
  8350 ;;		None
  8351 ;; Auto vars:     Size  Location     Type
  8352 ;;  luminosity      2    4[BANK0 ] unsigned short 
  8353 ;; Return value:  Size  Location     Type
  8354 ;;                  1    wreg      unsigned char 
  8355 ;; Registers used:
  8356 ;;		wreg, status,2, status,0, pclath, cstack
  8357 ;; Tracked objects:
  8358 ;;		On entry : 0/0
  8359 ;;		On exit  : 0/0
  8360 ;;		Unchanged: 0/0
  8361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8363 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8364 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8365 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8366 ;;Total ram usage:        4 bytes
  8367 ;; Hardware stack levels used:    1
  8368 ;; Hardware stack levels required when called:    6
  8369 ;; This function calls:
  8370 ;;		_ADCC_GetConversionResult
  8371 ;;		_ADCC_Initialize
  8372 ;;		_ADCC_StartConversion
  8373 ;; This function is called by:
  8374 ;;		_main
  8375 ;; This function uses a non-reentrant model
  8376 ;;
  8377                           
  8378                           
  8379                           ;psect for function _lumin
  8380  07D1                     _lumin:
  8381  07D1                     l3917:	
  8382                           ;incstack = 0
  8383                           ; Regs used in _lumin: [wreg+status,2+status,0+pclath+cstack]
  8384                           
  8385                           
  8386                           ;LCD.c: 298: unsigned short luminosity;;LCD.c: 299: ADCC_Initialize();
  8387  07D1  318B  237A  3187   	fcall	_ADCC_Initialize
  8388                           
  8389                           ;LCD.c: 300: ADCC_StartConversion(CH_0);
  8390  07D4  3000               	movlw	0
  8391  07D5  318A  227C  3187   	fcall	_ADCC_StartConversion
  8392  07D8                     l3919:
  8393  07D8                     l3921:
  8394                           
  8395                           ;LCD.c: 302: luminosity = ADCC_GetConversionResult();
  8396  07D8  318A  229F  3187   	fcall	_ADCC_GetConversionResult
  8397  07DB  0020               	movlb	0	; select bank0
  8398  07DC  0821               	movf	?_ADCC_GetConversionResult+1,w
  8399  07DD  00A5               	movwf	lumin@luminosity+1
  8400  07DE  0820               	movf	?_ADCC_GetConversionResult,w
  8401  07DF  00A4               	movwf	lumin@luminosity
  8402  07E0                     l3923:
  8403                           
  8404                           ;LCD.c: 303: luminosity = luminosity << 6;
  8405  07E0  0825               	movf	lumin@luminosity+1,w
  8406  07E1  00A3               	movwf	??_lumin+1
  8407  07E2  0824               	movf	lumin@luminosity,w
  8408  07E3  00A2               	movwf	??_lumin
  8409  07E4  3006               	movlw	6
  8410  07E5                     u3375:
  8411  07E5  35A2               	lslf	??_lumin,f
  8412  07E6  0DA3               	rlf	??_lumin+1,f
  8413  07E7  0B89               	decfsz	9,f
  8414  07E8  2FE5               	goto	u3375
  8415  07E9  0822               	movf	??_lumin,w
  8416  07EA  00A4               	movwf	lumin@luminosity
  8417  07EB  0823               	movf	??_lumin+1,w
  8418  07EC  00A5               	movwf	lumin@luminosity+1
  8419  07ED                     l3925:
  8420                           
  8421                           ;LCD.c: 304: luminosity = luminosity >>13;
  8422  07ED  0825               	movf	lumin@luminosity+1,w
  8423  07EE  00A3               	movwf	??_lumin+1
  8424  07EF  0824               	movf	lumin@luminosity,w
  8425  07F0  00A2               	movwf	??_lumin
  8426  07F1  300D               	movlw	13
  8427  07F2                     u3385:
  8428  07F2  36A3               	lsrf	??_lumin+1,f
  8429  07F3  0CA2               	rrf	??_lumin,f
  8430  07F4  0B89               	decfsz	9,f
  8431  07F5  2FF2               	goto	u3385
  8432  07F6  0822               	movf	??_lumin,w
  8433  07F7  00A4               	movwf	lumin@luminosity
  8434  07F8  0823               	movf	??_lumin+1,w
  8435  07F9  00A5               	movwf	lumin@luminosity+1
  8436  07FA                     l3927:
  8437                           
  8438                           ;LCD.c: 305: return(luminosity);
  8439  07FA  0824               	movf	lumin@luminosity,w
  8440  07FB                     l951:
  8441  07FB  0008               	return
  8442  07FC                     __end_of_lumin:
  8443                           
  8444                           	psect	text4
  8445  0A7C                     __ptext4:	
  8446 ;; *************** function _ADCC_StartConversion *****************
  8447 ;; Defined at:
  8448 ;;		line 106 in file "mcc_generated_files/adcc.c"
  8449 ;; Parameters:    Size  Location     Type
  8450 ;;  channel         1    wreg     enum E12086
  8451 ;; Auto vars:     Size  Location     Type
  8452 ;;  channel         1    0[BANK0 ] enum E12086
  8453 ;; Return value:  Size  Location     Type
  8454 ;;                  1    wreg      void 
  8455 ;; Registers used:
  8456 ;;		wreg
  8457 ;; Tracked objects:
  8458 ;;		On entry : 0/0
  8459 ;;		On exit  : 0/0
  8460 ;;		Unchanged: 0/0
  8461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8463 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8465 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8466 ;;Total ram usage:        1 bytes
  8467 ;; Hardware stack levels used:    1
  8468 ;; Hardware stack levels required when called:    5
  8469 ;; This function calls:
  8470 ;;		Nothing
  8471 ;; This function is called by:
  8472 ;;		_lumin
  8473 ;; This function uses a non-reentrant model
  8474 ;;
  8475                           
  8476                           
  8477                           ;psect for function _ADCC_StartConversion
  8478  0A7C                     _ADCC_StartConversion:
  8479                           
  8480                           ;incstack = 0
  8481                           ; Regs used in _ADCC_StartConversion: [wreg]
  8482                           ;ADCC_StartConversion@channel stored from wreg
  8483  0A7C  0020               	movlb	0	; select bank0
  8484  0A7D  00A0               	movwf	ADCC_StartConversion@channel
  8485  0A7E                     l3791:
  8486                           
  8487                           ;adcc.c: 109: ADPCH = channel;
  8488  0A7E  0820               	movf	ADCC_StartConversion@channel,w
  8489  0A7F  0021               	movlb	1	; select bank1
  8490  0A80  009E               	movwf	30	;volatile
  8491  0A81                     l3793:
  8492                           
  8493                           ;adcc.c: 112: ADCON0bits.ADON = 1;
  8494  0A81  1793               	bsf	19,7	;volatile
  8495  0A82                     l3795:
  8496                           
  8497                           ;adcc.c: 115: ADCON0bits.ADGO = 1;
  8498  0A82  1413               	bsf	19,0	;volatile
  8499  0A83                     l1033:
  8500  0A83  0008               	return
  8501  0A84                     __end_of_ADCC_StartConversion:
  8502                           
  8503                           	psect	text5
  8504  0A9F                     __ptext5:	
  8505 ;; *************** function _ADCC_GetConversionResult *****************
  8506 ;; Defined at:
  8507 ;;		line 124 in file "mcc_generated_files/adcc.c"
  8508 ;; Parameters:    Size  Location     Type
  8509 ;;		None
  8510 ;; Auto vars:     Size  Location     Type
  8511 ;;		None
  8512 ;; Return value:  Size  Location     Type
  8513 ;;                  2    0[BANK0 ] unsigned int 
  8514 ;; Registers used:
  8515 ;;		wreg
  8516 ;; Tracked objects:
  8517 ;;		On entry : 0/0
  8518 ;;		On exit  : 0/0
  8519 ;;		Unchanged: 0/0
  8520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8521 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8524 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8525 ;;Total ram usage:        2 bytes
  8526 ;; Hardware stack levels used:    1
  8527 ;; Hardware stack levels required when called:    5
  8528 ;; This function calls:
  8529 ;;		Nothing
  8530 ;; This function is called by:
  8531 ;;		_lumin
  8532 ;; This function uses a non-reentrant model
  8533 ;;
  8534                           
  8535                           
  8536                           ;psect for function _ADCC_GetConversionResult
  8537  0A9F                     _ADCC_GetConversionResult:
  8538  0A9F                     l3797:	
  8539                           ;incstack = 0
  8540                           ; Regs used in _ADCC_GetConversionResult: [wreg]
  8541                           
  8542                           
  8543                           ;adcc.c: 127: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8544  0A9F  0021               	movlb	1	; select bank1
  8545  0AA0  080D               	movf	13,w	;volatile
  8546  0AA1  0020               	movlb	0	; select bank0
  8547  0AA2  00A1               	movwf	?_ADCC_GetConversionResult+1
  8548  0AA3  0021               	movlb	1	; select bank1
  8549  0AA4  080C               	movf	12,w	;volatile
  8550  0AA5  0020               	movlb	0	; select bank0
  8551  0AA6  00A0               	movwf	?_ADCC_GetConversionResult
  8552  0AA7                     l1039:
  8553  0AA7  0008               	return
  8554  0AA8                     __end_of_ADCC_GetConversionResult:
  8555                           
  8556                           	psect	text6
  8557  0062                     __ptext6:	
  8558 ;; *************** function _lcd *****************
  8559 ;; Defined at:
  8560 ;;		line 127 in file "LCD.c"
  8561 ;; Parameters:    Size  Location     Type
  8562 ;;  temperature     1    wreg     unsigned char 
  8563 ;;  luminosity      1   35[BANK0 ] unsigned char 
  8564 ;;  alarm           1   36[BANK0 ] unsigned char 
  8565 ;;  ctl             1   37[BANK0 ] unsigned char 
  8566 ;;  h               1   38[BANK0 ] unsigned char 
  8567 ;;  m               1   39[BANK0 ] unsigned char 
  8568 ;;  s               1   40[BANK0 ] unsigned char 
  8569 ;;  state           1   41[BANK0 ] unsigned char 
  8570 ;;  temperature_    1   42[BANK0 ] unsigned char 
  8571 ;;  luminosity_a    1   43[BANK0 ] unsigned char 
  8572 ;;  alah            1   44[BANK0 ] unsigned char 
  8573 ;;  alam            1   45[BANK0 ] unsigned char 
  8574 ;;  alas            1   46[BANK0 ] unsigned char 
  8575 ;; Auto vars:     Size  Location     Type
  8576 ;;  temperature     1   70[BANK0 ] unsigned char 
  8577 ;;  buf            17   53[BANK0 ] unsigned char [17]
  8578 ;; Return value:  Size  Location     Type
  8579 ;;                  1    wreg      unsigned char 
  8580 ;; Registers used:
  8581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8582 ;; Tracked objects:
  8583 ;;		On entry : 0/0
  8584 ;;		On exit  : 0/0
  8585 ;;		Unchanged: 0/0
  8586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8587 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8588 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8589 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8590 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8591 ;;Total ram usage:       36 bytes
  8592 ;; Hardware stack levels used:    1
  8593 ;; Hardware stack levels required when called:    9
  8594 ;; This function calls:
  8595 ;;		_LCDcmd
  8596 ;;		_LCDstr
  8597 ;;		_sprintf
  8598 ;; This function is called by:
  8599 ;;		_main
  8600 ;; This function uses a non-reentrant model
  8601 ;;
  8602                           
  8603                           
  8604                           ;psect for function _lcd
  8605  0062                     _lcd:
  8606                           
  8607                           ;incstack = 0
  8608                           ; Regs used in _lcd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8609                           ;lcd@temperature stored from wreg
  8610  0062  0020               	movlb	0	; select bank0
  8611  0063  00E6               	movwf	lcd@temperature
  8612  0064                     l4019:
  8613                           
  8614                           ;LCD.c: 129: unsigned char buf[17];;LCD.c: 131: if (alarm)
  8615  0064  0844               	movf	lcd@alarm,w
  8616  0065  1903               	btfsc	3,2
  8617  0066  2868               	goto	u3531
  8618  0067  2869               	goto	u3530
  8619  0068                     u3531:
  8620  0068  287B               	goto	l4027
  8621  0069                     u3530:
  8622  0069                     l4021:
  8623                           
  8624                           ;LCD.c: 132: {;LCD.c: 133: LCDcmd(0x8F);
  8625  0069  308F               	movlw	143
  8626  006A  318A  2274  3180   	fcall	_LCDcmd
  8627  006D                     l4023:
  8628                           
  8629                           ;LCD.c: 134: sprintf(buf, "A");
  8630  006D  302A               	movlw	low (STR_1| (0+32768))
  8631  006E  0020               	movlb	0	; select bank0
  8632  006F  00AE               	movwf	sprintf@f
  8633  0070  3090               	movlw	high (STR_1| (0+32768))
  8634  0071  00AF               	movwf	sprintf@f+1
  8635  0072  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8636  0073  3184  24E3  3180   	fcall	_sprintf
  8637  0076                     l4025:
  8638                           
  8639                           ;LCD.c: 135: LCDstr(buf);
  8640  0076  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8641  0077  318B  2390  3180   	fcall	_LCDstr
  8642                           
  8643                           ;LCD.c: 136: }
  8644  007A  288C               	goto	l4033
  8645  007B                     l4027:
  8646                           
  8647                           ;LCD.c: 137: else;LCD.c: 138: {;LCD.c: 139: LCDcmd(0x8F);
  8648  007B  308F               	movlw	143
  8649  007C  318A  2274  3180   	fcall	_LCDcmd
  8650  007F                     l4029:
  8651                           
  8652                           ;LCD.c: 140: sprintf(buf, "a");
  8653  007F  302E               	movlw	low (STR_2| (0+32768))
  8654  0080  0020               	movlb	0	; select bank0
  8655  0081  00AE               	movwf	sprintf@f
  8656  0082  3090               	movlw	high (STR_2| (0+32768))
  8657  0083  00AF               	movwf	sprintf@f+1
  8658  0084  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8659  0085  3184  24E3  3180   	fcall	_sprintf
  8660  0088                     l4031:
  8661                           
  8662                           ;LCD.c: 141: LCDstr(buf);
  8663  0088  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8664  0089  318B  2390  3180   	fcall	_LCDstr
  8665  008C                     l4033:
  8666                           
  8667                           ;LCD.c: 142: };LCD.c: 146: if(state==0)
  8668  008C  0020               	movlb	0	; select bank0
  8669  008D  0849               	movf	lcd@state,w
  8670  008E  1D03               	btfss	3,2
  8671  008F  2891               	goto	u3541
  8672  0090  2892               	goto	u3540
  8673  0091                     u3541:
  8674  0091  2936               	goto	l4079
  8675  0092                     u3540:
  8676  0092                     l4035:
  8677                           
  8678                           ;LCD.c: 147: {;LCD.c: 148: LCDcmd(0x80);
  8679  0092  3080               	movlw	128
  8680  0093  318A  2274  3180   	fcall	_LCDcmd
  8681  0096                     l4037:
  8682                           
  8683                           ;LCD.c: 149: sprintf(buf, "%02d:%02d:%02d", h,m,s);
  8684  0096  3000               	movlw	low (STR_3| (0+32768))
  8685  0097  0020               	movlb	0	; select bank0
  8686  0098  00AE               	movwf	sprintf@f
  8687  0099  3090               	movlw	high (STR_3| (0+32768))
  8688  009A  00AF               	movwf	sprintf@f+1
  8689  009B  0846               	movf	lcd@h,w
  8690  009C  00CF               	movwf	??_lcd
  8691  009D  01D0               	clrf	??_lcd+1
  8692  009E  084F               	movf	??_lcd,w
  8693  009F  00B0               	movwf	?_sprintf+2
  8694  00A0  0850               	movf	??_lcd+1,w
  8695  00A1  00B1               	movwf	?_sprintf+3
  8696  00A2  0847               	movf	lcd@m,w
  8697  00A3  00D1               	movwf	??_lcd+2
  8698  00A4  01D2               	clrf	??_lcd+3
  8699  00A5  0851               	movf	??_lcd+2,w
  8700  00A6  00B2               	movwf	?_sprintf+4
  8701  00A7  0852               	movf	??_lcd+3,w
  8702  00A8  00B3               	movwf	?_sprintf+5
  8703  00A9  0848               	movf	lcd@s,w
  8704  00AA  00D3               	movwf	??_lcd+4
  8705  00AB  01D4               	clrf	??_lcd+5
  8706  00AC  0853               	movf	??_lcd+4,w
  8707  00AD  00B4               	movwf	?_sprintf+6
  8708  00AE  0854               	movf	??_lcd+5,w
  8709  00AF  00B5               	movwf	?_sprintf+7
  8710  00B0  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8711  00B1  3184  24E3  3180   	fcall	_sprintf
  8712  00B4                     l4039:
  8713                           
  8714                           ;LCD.c: 150: LCDstr(buf);
  8715  00B4  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8716  00B5  318B  2390  3180   	fcall	_LCDstr
  8717  00B8                     l4041:
  8718                           
  8719                           ;LCD.c: 152: LCDcmd(0xc0);
  8720  00B8  30C0               	movlw	192
  8721  00B9  318A  2274  3180   	fcall	_LCDcmd
  8722  00BC                     l4043:
  8723                           
  8724                           ;LCD.c: 153: sprintf(buf, "%02d C", temperature);
  8725  00BC  3019               	movlw	low (STR_4| (0+32768))
  8726  00BD  0020               	movlb	0	; select bank0
  8727  00BE  00AE               	movwf	sprintf@f
  8728  00BF  3090               	movlw	high (STR_4| (0+32768))
  8729  00C0  00AF               	movwf	sprintf@f+1
  8730  00C1  0866               	movf	lcd@temperature,w
  8731  00C2  00CF               	movwf	??_lcd
  8732  00C3  01D0               	clrf	??_lcd+1
  8733  00C4  084F               	movf	??_lcd,w
  8734  00C5  00B0               	movwf	?_sprintf+2
  8735  00C6  0850               	movf	??_lcd+1,w
  8736  00C7  00B1               	movwf	?_sprintf+3
  8737  00C8  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8738  00C9  3184  24E3  3180   	fcall	_sprintf
  8739                           
  8740                           ;LCD.c: 154: LCDstr(buf);
  8741  00CC  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8742  00CD  318B  2390  3180   	fcall	_LCDstr
  8743  00D0                     l4045:
  8744                           
  8745                           ;LCD.c: 156: LCDcmd(0xce);
  8746  00D0  30CE               	movlw	206
  8747  00D1  318A  2274  3180   	fcall	_LCDcmd
  8748  00D4                     l4047:
  8749                           
  8750                           ;LCD.c: 157: sprintf(buf, "L%01d", luminosity);
  8751  00D4  3020               	movlw	low (STR_5| (0+32768))
  8752  00D5  0020               	movlb	0	; select bank0
  8753  00D6  00AE               	movwf	sprintf@f
  8754  00D7  3090               	movlw	high (STR_5| (0+32768))
  8755  00D8  00AF               	movwf	sprintf@f+1
  8756  00D9  0843               	movf	lcd@luminosity,w
  8757  00DA  00CF               	movwf	??_lcd
  8758  00DB  01D0               	clrf	??_lcd+1
  8759  00DC  084F               	movf	??_lcd,w
  8760  00DD  00B0               	movwf	?_sprintf+2
  8761  00DE  0850               	movf	??_lcd+1,w
  8762  00DF  00B1               	movwf	?_sprintf+3
  8763  00E0  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8764  00E1  3184  24E3  3180   	fcall	_sprintf
  8765  00E4                     l4049:
  8766                           
  8767                           ;LCD.c: 158: LCDstr(buf);
  8768  00E4  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8769  00E5  318B  2390  3180   	fcall	_LCDstr
  8770  00E8                     l4051:
  8771                           
  8772                           ;LCD.c: 160: if (ctl==1)
  8773  00E8  0020               	movlb	0	; select bank0
  8774  00E9  0345               	decf	lcd@ctl,w
  8775  00EA  1D03               	btfss	3,2
  8776  00EB  28ED               	goto	u3551
  8777  00EC  28EE               	goto	u3550
  8778  00ED                     u3551:
  8779  00ED  2904               	goto	l4061
  8780  00EE                     u3550:
  8781  00EE                     l4053:
  8782                           
  8783                           ;LCD.c: 161: {;LCD.c: 162: LCDcmd(0x8A);
  8784  00EE  308A               	movlw	138
  8785  00EF  318A  2274  3180   	fcall	_LCDcmd
  8786  00F2                     l4055:
  8787                           
  8788                           ;LCD.c: 163: sprintf(buf, "C");
  8789  00F2  301E               	movlw	low ((STR_4+5)| (0+32768))
  8790  00F3  0020               	movlb	0	; select bank0
  8791  00F4  00AE               	movwf	sprintf@f
  8792  00F5  3090               	movlw	high ((STR_4+5)| (0+32768))
  8793  00F6  00AF               	movwf	sprintf@f+1
  8794  00F7  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8795  00F8  3184  24E3  3180   	fcall	_sprintf
  8796  00FB                     l4057:
  8797                           
  8798                           ;LCD.c: 164: LCDstr(buf);
  8799  00FB  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8800  00FC  318B  2390  3180   	fcall	_LCDstr
  8801  00FF                     l4059:
  8802                           
  8803                           ;LCD.c: 165: LCDcmd(0x9A);
  8804  00FF  309A               	movlw	154
  8805  0100  318A  2274  3180   	fcall	_LCDcmd
  8806                           
  8807                           ;LCD.c: 166: }
  8808  0103  2B18               	goto	l948
  8809  0104                     l4061:
  8810                           
  8811                           ;LCD.c: 167: else if (ctl==2)
  8812  0104  3002               	movlw	2
  8813  0105  0645               	xorwf	lcd@ctl,w
  8814  0106  1D03               	btfss	3,2
  8815  0107  2909               	goto	u3561
  8816  0108  290A               	goto	u3560
  8817  0109                     u3561:
  8818  0109  2920               	goto	l4071
  8819  010A                     u3560:
  8820  010A                     l4063:
  8821                           
  8822                           ;LCD.c: 168: {;LCD.c: 169: LCDcmd(0x8A);
  8823  010A  308A               	movlw	138
  8824  010B  318A  2274  3180   	fcall	_LCDcmd
  8825  010E                     l4065:
  8826                           
  8827                           ;LCD.c: 170: sprintf(buf, "T");
  8828  010E  302C               	movlw	low (STR_7| (0+32768))
  8829  010F  0020               	movlb	0	; select bank0
  8830  0110  00AE               	movwf	sprintf@f
  8831  0111  3090               	movlw	high (STR_7| (0+32768))
  8832  0112  00AF               	movwf	sprintf@f+1
  8833  0113  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8834  0114  3184  24E3  3180   	fcall	_sprintf
  8835  0117                     l4067:
  8836                           
  8837                           ;LCD.c: 171: LCDstr(buf);
  8838  0117  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8839  0118  318B  2390  3180   	fcall	_LCDstr
  8840  011B                     l4069:
  8841                           
  8842                           ;LCD.c: 172: LCDcmd(0x9A);
  8843  011B  309A               	movlw	154
  8844  011C  318A  2274  3180   	fcall	_LCDcmd
  8845                           
  8846                           ;LCD.c: 173: }
  8847  011F  2B18               	goto	l948
  8848  0120                     l4071:
  8849                           
  8850                           ;LCD.c: 174: else;LCD.c: 175: {;LCD.c: 176: LCDcmd(0x8A);
  8851  0120  308A               	movlw	138
  8852  0121  318A  2274  3180   	fcall	_LCDcmd
  8853  0124                     l4073:
  8854                           
  8855                           ;LCD.c: 177: sprintf(buf, "L");
  8856  0124  3028               	movlw	low ((STR_10+2)| (0+32768))
  8857  0125  0020               	movlb	0	; select bank0
  8858  0126  00AE               	movwf	sprintf@f
  8859  0127  3090               	movlw	high ((STR_10+2)| (0+32768))
  8860  0128  00AF               	movwf	sprintf@f+1
  8861  0129  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8862  012A  3184  24E3  3180   	fcall	_sprintf
  8863  012D                     l4075:
  8864                           
  8865                           ;LCD.c: 178: LCDstr(buf);
  8866  012D  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8867  012E  318B  2390  3180   	fcall	_LCDstr
  8868  0131                     l4077:
  8869                           
  8870                           ;LCD.c: 179: LCDcmd(0x9A);
  8871  0131  309A               	movlw	154
  8872  0132  318A  2274  3180   	fcall	_LCDcmd
  8873  0135  2B18               	goto	l948
  8874  0136                     l4079:
  8875                           
  8876                           ;LCD.c: 183: else;LCD.c: 184: {;LCD.c: 185: LCDcmd(0x80);
  8877  0136  3080               	movlw	128
  8878  0137  318A  2274  3180   	fcall	_LCDcmd
  8879  013A                     l4081:
  8880                           
  8881                           ;LCD.c: 186: sprintf(buf, "%02d:%02d:%02d", h,m,s);
  8882  013A  3000               	movlw	low (STR_3| (0+32768))
  8883  013B  0020               	movlb	0	; select bank0
  8884  013C  00AE               	movwf	sprintf@f
  8885  013D  3090               	movlw	high (STR_3| (0+32768))
  8886  013E  00AF               	movwf	sprintf@f+1
  8887  013F  0846               	movf	lcd@h,w
  8888  0140  00CF               	movwf	??_lcd
  8889  0141  01D0               	clrf	??_lcd+1
  8890  0142  084F               	movf	??_lcd,w
  8891  0143  00B0               	movwf	?_sprintf+2
  8892  0144  0850               	movf	??_lcd+1,w
  8893  0145  00B1               	movwf	?_sprintf+3
  8894  0146  0847               	movf	lcd@m,w
  8895  0147  00D1               	movwf	??_lcd+2
  8896  0148  01D2               	clrf	??_lcd+3
  8897  0149  0851               	movf	??_lcd+2,w
  8898  014A  00B2               	movwf	?_sprintf+4
  8899  014B  0852               	movf	??_lcd+3,w
  8900  014C  00B3               	movwf	?_sprintf+5
  8901  014D  0848               	movf	lcd@s,w
  8902  014E  00D3               	movwf	??_lcd+4
  8903  014F  01D4               	clrf	??_lcd+5
  8904  0150  0853               	movf	??_lcd+4,w
  8905  0151  00B4               	movwf	?_sprintf+6
  8906  0152  0854               	movf	??_lcd+5,w
  8907  0153  00B5               	movwf	?_sprintf+7
  8908  0154  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8909  0155  3184  24E3  3180   	fcall	_sprintf
  8910  0158                     l4083:
  8911                           
  8912                           ;LCD.c: 187: LCDstr(buf);
  8913  0158  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8914  0159  318B  2390  3180   	fcall	_LCDstr
  8915  015C                     l4085:
  8916                           
  8917                           ;LCD.c: 189: LCDcmd(0x8A);
  8918  015C  308A               	movlw	138
  8919  015D  318A  2274  3180   	fcall	_LCDcmd
  8920  0160                     l4087:
  8921                           
  8922                           ;LCD.c: 190: sprintf(buf, "CTL");
  8923  0160  3026               	movlw	low (STR_10| (0+32768))
  8924  0161  0020               	movlb	0	; select bank0
  8925  0162  00AE               	movwf	sprintf@f
  8926  0163  3090               	movlw	high (STR_10| (0+32768))
  8927  0164  00AF               	movwf	sprintf@f+1
  8928  0165  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8929  0166  3184  24E3  3180   	fcall	_sprintf
  8930                           
  8931                           ;LCD.c: 191: LCDstr(buf);
  8932  0169  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8933  016A  318B  2390  3180   	fcall	_LCDstr
  8934  016D                     l4089:
  8935                           
  8936                           ;LCD.c: 193: LCDcmd(0xc0);
  8937  016D  30C0               	movlw	192
  8938  016E  318A  2274  3180   	fcall	_LCDcmd
  8939  0171                     l4091:
  8940                           
  8941                           ;LCD.c: 194: sprintf(buf, "%02d C", temperature);
  8942  0171  3019               	movlw	low (STR_4| (0+32768))
  8943  0172  0020               	movlb	0	; select bank0
  8944  0173  00AE               	movwf	sprintf@f
  8945  0174  3090               	movlw	high (STR_4| (0+32768))
  8946  0175  00AF               	movwf	sprintf@f+1
  8947  0176  0866               	movf	lcd@temperature,w
  8948  0177  00CF               	movwf	??_lcd
  8949  0178  01D0               	clrf	??_lcd+1
  8950  0179  084F               	movf	??_lcd,w
  8951  017A  00B0               	movwf	?_sprintf+2
  8952  017B  0850               	movf	??_lcd+1,w
  8953  017C  00B1               	movwf	?_sprintf+3
  8954  017D  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8955  017E  3184  24E3  3180   	fcall	_sprintf
  8956  0181                     l4093:
  8957                           
  8958                           ;LCD.c: 195: LCDstr(buf);
  8959  0181  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8960  0182  318B  2390  3180   	fcall	_LCDstr
  8961  0185                     l4095:
  8962                           
  8963                           ;LCD.c: 197: LCDcmd(0xce);
  8964  0185  30CE               	movlw	206
  8965  0186  318A  2274  3180   	fcall	_LCDcmd
  8966                           
  8967                           ;LCD.c: 198: sprintf(buf, "L%01d", luminosity_alarm);
  8968  0189  3020               	movlw	low (STR_5| (0+32768))
  8969  018A  0020               	movlb	0	; select bank0
  8970  018B  00AE               	movwf	sprintf@f
  8971  018C  3090               	movlw	high (STR_5| (0+32768))
  8972  018D  00AF               	movwf	sprintf@f+1
  8973  018E  084B               	movf	lcd@luminosity_alarm,w
  8974  018F  00CF               	movwf	??_lcd
  8975  0190  01D0               	clrf	??_lcd+1
  8976  0191  084F               	movf	??_lcd,w
  8977  0192  00B0               	movwf	?_sprintf+2
  8978  0193  0850               	movf	??_lcd+1,w
  8979  0194  00B1               	movwf	?_sprintf+3
  8980  0195  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8981  0196  3184  24E3  3180   	fcall	_sprintf
  8982  0199                     l4097:
  8983                           
  8984                           ;LCD.c: 199: LCDstr(buf);
  8985  0199  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8986  019A  318B  2390  3180   	fcall	_LCDstr
  8987  019D                     l4099:
  8988                           
  8989                           ;LCD.c: 201: if (state ==1)
  8990  019D  0020               	movlb	0	; select bank0
  8991  019E  0349               	decf	lcd@state,w
  8992  019F  1D03               	btfss	3,2
  8993  01A0  29A2               	goto	u3571
  8994  01A1  29A3               	goto	u3570
  8995  01A2                     u3571:
  8996  01A2  29A7               	goto	l4103
  8997  01A3                     u3570:
  8998  01A3                     l4101:
  8999                           
  9000                           ;LCD.c: 202: {;LCD.c: 203: LCDcmd(0x81);
  9001  01A3  3081               	movlw	129
  9002  01A4  318A  2274  3180   	fcall	_LCDcmd
  9003  01A7                     l4103:
  9004                           
  9005                           ;LCD.c: 204: };LCD.c: 205: if (state ==2)
  9006  01A7  3002               	movlw	2
  9007  01A8  0020               	movlb	0	; select bank0
  9008  01A9  0649               	xorwf	lcd@state,w
  9009  01AA  1D03               	btfss	3,2
  9010  01AB  29AD               	goto	u3581
  9011  01AC  29AE               	goto	u3580
  9012  01AD                     u3581:
  9013  01AD  29B2               	goto	l4107
  9014  01AE                     u3580:
  9015  01AE                     l4105:
  9016                           
  9017                           ;LCD.c: 206: {;LCD.c: 207: LCDcmd(0x84);
  9018  01AE  3084               	movlw	132
  9019  01AF  318A  2274  3180   	fcall	_LCDcmd
  9020  01B2                     l4107:
  9021                           
  9022                           ;LCD.c: 208: };LCD.c: 209: if (state ==3)
  9023  01B2  3003               	movlw	3
  9024  01B3  0020               	movlb	0	; select bank0
  9025  01B4  0649               	xorwf	lcd@state,w
  9026  01B5  1D03               	btfss	3,2
  9027  01B6  29B8               	goto	u3591
  9028  01B7  29B9               	goto	u3590
  9029  01B8                     u3591:
  9030  01B8  29BD               	goto	l4111
  9031  01B9                     u3590:
  9032  01B9                     l4109:
  9033                           
  9034                           ;LCD.c: 210: {;LCD.c: 211: LCDcmd(0x87);
  9035  01B9  3087               	movlw	135
  9036  01BA  318A  2274  3180   	fcall	_LCDcmd
  9037  01BD                     l4111:
  9038                           
  9039                           ;LCD.c: 212: };LCD.c: 215: if (state ==4)
  9040  01BD  3004               	movlw	4
  9041  01BE  0020               	movlb	0	; select bank0
  9042  01BF  0649               	xorwf	lcd@state,w
  9043  01C0  1D03               	btfss	3,2
  9044  01C1  29C3               	goto	u3601
  9045  01C2  29C4               	goto	u3600
  9046  01C3                     u3601:
  9047  01C3  29EE               	goto	l4121
  9048  01C4                     u3600:
  9049  01C4                     l4113:
  9050                           
  9051                           ;LCD.c: 216: {;LCD.c: 217: LCDcmd(0x80);
  9052  01C4  3080               	movlw	128
  9053  01C5  318A  2274  3180   	fcall	_LCDcmd
  9054  01C8                     l4115:
  9055                           
  9056                           ;LCD.c: 218: sprintf(buf, "%02d:%02d:%02d", alah, alam, alas);
  9057  01C8  3000               	movlw	low (STR_3| (0+32768))
  9058  01C9  0020               	movlb	0	; select bank0
  9059  01CA  00AE               	movwf	sprintf@f
  9060  01CB  3090               	movlw	high (STR_3| (0+32768))
  9061  01CC  00AF               	movwf	sprintf@f+1
  9062  01CD  084C               	movf	lcd@alah,w
  9063  01CE  00CF               	movwf	??_lcd
  9064  01CF  01D0               	clrf	??_lcd+1
  9065  01D0  084F               	movf	??_lcd,w
  9066  01D1  00B0               	movwf	?_sprintf+2
  9067  01D2  0850               	movf	??_lcd+1,w
  9068  01D3  00B1               	movwf	?_sprintf+3
  9069  01D4  084D               	movf	lcd@alam,w
  9070  01D5  00D1               	movwf	??_lcd+2
  9071  01D6  01D2               	clrf	??_lcd+3
  9072  01D7  0851               	movf	??_lcd+2,w
  9073  01D8  00B2               	movwf	?_sprintf+4
  9074  01D9  0852               	movf	??_lcd+3,w
  9075  01DA  00B3               	movwf	?_sprintf+5
  9076  01DB  084E               	movf	lcd@alas,w
  9077  01DC  00D3               	movwf	??_lcd+4
  9078  01DD  01D4               	clrf	??_lcd+5
  9079  01DE  0853               	movf	??_lcd+4,w
  9080  01DF  00B4               	movwf	?_sprintf+6
  9081  01E0  0854               	movf	??_lcd+5,w
  9082  01E1  00B5               	movwf	?_sprintf+7
  9083  01E2  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9084  01E3  3184  24E3  3180   	fcall	_sprintf
  9085  01E6                     l4117:
  9086                           
  9087                           ;LCD.c: 219: LCDstr(buf);
  9088  01E6  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9089  01E7  318B  2390  3180   	fcall	_LCDstr
  9090  01EA                     l4119:
  9091                           
  9092                           ;LCD.c: 220: LCDcmd(0x8a);
  9093  01EA  308A               	movlw	138
  9094  01EB  318A  2274  3180   	fcall	_LCDcmd
  9095  01EE                     l4121:
  9096                           
  9097                           ;LCD.c: 221: };LCD.c: 223: if (state ==5)
  9098  01EE  3005               	movlw	5
  9099  01EF  0020               	movlb	0	; select bank0
  9100  01F0  0649               	xorwf	lcd@state,w
  9101  01F1  1D03               	btfss	3,2
  9102  01F2  29F4               	goto	u3611
  9103  01F3  29F5               	goto	u3610
  9104  01F4                     u3611:
  9105  01F4  2A1F               	goto	l4131
  9106  01F5                     u3610:
  9107  01F5                     l4123:
  9108                           
  9109                           ;LCD.c: 224: {;LCD.c: 225: LCDcmd(0x80);
  9110  01F5  3080               	movlw	128
  9111  01F6  318A  2274  3180   	fcall	_LCDcmd
  9112  01F9                     l4125:
  9113                           
  9114                           ;LCD.c: 226: sprintf(buf, "%02d:%02d:%02d", alah, alam, alas);
  9115  01F9  3000               	movlw	low (STR_3| (0+32768))
  9116  01FA  0020               	movlb	0	; select bank0
  9117  01FB  00AE               	movwf	sprintf@f
  9118  01FC  3090               	movlw	high (STR_3| (0+32768))
  9119  01FD  00AF               	movwf	sprintf@f+1
  9120  01FE  084C               	movf	lcd@alah,w
  9121  01FF  00CF               	movwf	??_lcd
  9122  0200  01D0               	clrf	??_lcd+1
  9123  0201  084F               	movf	??_lcd,w
  9124  0202  00B0               	movwf	?_sprintf+2
  9125  0203  0850               	movf	??_lcd+1,w
  9126  0204  00B1               	movwf	?_sprintf+3
  9127  0205  084D               	movf	lcd@alam,w
  9128  0206  00D1               	movwf	??_lcd+2
  9129  0207  01D2               	clrf	??_lcd+3
  9130  0208  0851               	movf	??_lcd+2,w
  9131  0209  00B2               	movwf	?_sprintf+4
  9132  020A  0852               	movf	??_lcd+3,w
  9133  020B  00B3               	movwf	?_sprintf+5
  9134  020C  084E               	movf	lcd@alas,w
  9135  020D  00D3               	movwf	??_lcd+4
  9136  020E  01D4               	clrf	??_lcd+5
  9137  020F  0853               	movf	??_lcd+4,w
  9138  0210  00B4               	movwf	?_sprintf+6
  9139  0211  0854               	movf	??_lcd+5,w
  9140  0212  00B5               	movwf	?_sprintf+7
  9141  0213  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9142  0214  3184  24E3  3180   	fcall	_sprintf
  9143  0217                     l4127:
  9144                           
  9145                           ;LCD.c: 227: LCDstr(buf);
  9146  0217  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9147  0218  318B  2390  3180   	fcall	_LCDstr
  9148  021B                     l4129:
  9149                           
  9150                           ;LCD.c: 228: LCDcmd(0x81);
  9151  021B  3081               	movlw	129
  9152  021C  318A  2274  3180   	fcall	_LCDcmd
  9153  021F                     l4131:
  9154                           
  9155                           ;LCD.c: 230: };LCD.c: 232: if (state ==6)
  9156  021F  3006               	movlw	6
  9157  0220  0020               	movlb	0	; select bank0
  9158  0221  0649               	xorwf	lcd@state,w
  9159  0222  1D03               	btfss	3,2
  9160  0223  2A25               	goto	u3621
  9161  0224  2A26               	goto	u3620
  9162  0225                     u3621:
  9163  0225  2A50               	goto	l4141
  9164  0226                     u3620:
  9165  0226                     l4133:
  9166                           
  9167                           ;LCD.c: 233: {;LCD.c: 234: LCDcmd(0x80);
  9168  0226  3080               	movlw	128
  9169  0227  318A  2274  3180   	fcall	_LCDcmd
  9170  022A                     l4135:
  9171                           
  9172                           ;LCD.c: 235: sprintf(buf, "%02d:%02d:%02d", alah, alam, alas);
  9173  022A  3000               	movlw	low (STR_3| (0+32768))
  9174  022B  0020               	movlb	0	; select bank0
  9175  022C  00AE               	movwf	sprintf@f
  9176  022D  3090               	movlw	high (STR_3| (0+32768))
  9177  022E  00AF               	movwf	sprintf@f+1
  9178  022F  084C               	movf	lcd@alah,w
  9179  0230  00CF               	movwf	??_lcd
  9180  0231  01D0               	clrf	??_lcd+1
  9181  0232  084F               	movf	??_lcd,w
  9182  0233  00B0               	movwf	?_sprintf+2
  9183  0234  0850               	movf	??_lcd+1,w
  9184  0235  00B1               	movwf	?_sprintf+3
  9185  0236  084D               	movf	lcd@alam,w
  9186  0237  00D1               	movwf	??_lcd+2
  9187  0238  01D2               	clrf	??_lcd+3
  9188  0239  0851               	movf	??_lcd+2,w
  9189  023A  00B2               	movwf	?_sprintf+4
  9190  023B  0852               	movf	??_lcd+3,w
  9191  023C  00B3               	movwf	?_sprintf+5
  9192  023D  084E               	movf	lcd@alas,w
  9193  023E  00D3               	movwf	??_lcd+4
  9194  023F  01D4               	clrf	??_lcd+5
  9195  0240  0853               	movf	??_lcd+4,w
  9196  0241  00B4               	movwf	?_sprintf+6
  9197  0242  0854               	movf	??_lcd+5,w
  9198  0243  00B5               	movwf	?_sprintf+7
  9199  0244  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9200  0245  3184  24E3  3180   	fcall	_sprintf
  9201  0248                     l4137:
  9202                           
  9203                           ;LCD.c: 236: LCDstr(buf);
  9204  0248  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9205  0249  318B  2390  3180   	fcall	_LCDstr
  9206  024C                     l4139:
  9207                           
  9208                           ;LCD.c: 237: LCDcmd(0x84);
  9209  024C  3084               	movlw	132
  9210  024D  318A  2274  3180   	fcall	_LCDcmd
  9211  0250                     l4141:
  9212                           
  9213                           ;LCD.c: 239: };LCD.c: 241: if (state ==7)
  9214  0250  3007               	movlw	7
  9215  0251  0020               	movlb	0	; select bank0
  9216  0252  0649               	xorwf	lcd@state,w
  9217  0253  1D03               	btfss	3,2
  9218  0254  2A56               	goto	u3631
  9219  0255  2A57               	goto	u3630
  9220  0256                     u3631:
  9221  0256  2A81               	goto	l4151
  9222  0257                     u3630:
  9223  0257                     l4143:
  9224                           
  9225                           ;LCD.c: 242: {;LCD.c: 243: LCDcmd(0x80);
  9226  0257  3080               	movlw	128
  9227  0258  318A  2274  3180   	fcall	_LCDcmd
  9228  025B                     l4145:
  9229                           
  9230                           ;LCD.c: 244: sprintf(buf, "%02d:%02d:%02d", alah, alam, alas);
  9231  025B  3000               	movlw	low (STR_3| (0+32768))
  9232  025C  0020               	movlb	0	; select bank0
  9233  025D  00AE               	movwf	sprintf@f
  9234  025E  3090               	movlw	high (STR_3| (0+32768))
  9235  025F  00AF               	movwf	sprintf@f+1
  9236  0260  084C               	movf	lcd@alah,w
  9237  0261  00CF               	movwf	??_lcd
  9238  0262  01D0               	clrf	??_lcd+1
  9239  0263  084F               	movf	??_lcd,w
  9240  0264  00B0               	movwf	?_sprintf+2
  9241  0265  0850               	movf	??_lcd+1,w
  9242  0266  00B1               	movwf	?_sprintf+3
  9243  0267  084D               	movf	lcd@alam,w
  9244  0268  00D1               	movwf	??_lcd+2
  9245  0269  01D2               	clrf	??_lcd+3
  9246  026A  0851               	movf	??_lcd+2,w
  9247  026B  00B2               	movwf	?_sprintf+4
  9248  026C  0852               	movf	??_lcd+3,w
  9249  026D  00B3               	movwf	?_sprintf+5
  9250  026E  084E               	movf	lcd@alas,w
  9251  026F  00D3               	movwf	??_lcd+4
  9252  0270  01D4               	clrf	??_lcd+5
  9253  0271  0853               	movf	??_lcd+4,w
  9254  0272  00B4               	movwf	?_sprintf+6
  9255  0273  0854               	movf	??_lcd+5,w
  9256  0274  00B5               	movwf	?_sprintf+7
  9257  0275  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9258  0276  3184  24E3  3180   	fcall	_sprintf
  9259  0279                     l4147:
  9260                           
  9261                           ;LCD.c: 245: LCDstr(buf);
  9262  0279  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9263  027A  318B  2390  3180   	fcall	_LCDstr
  9264  027D                     l4149:
  9265                           
  9266                           ;LCD.c: 246: LCDcmd(0x87);
  9267  027D  3087               	movlw	135
  9268  027E  318A  2274  3180   	fcall	_LCDcmd
  9269  0281                     l4151:
  9270                           
  9271                           ;LCD.c: 248: };LCD.c: 251: if (state ==8)
  9272  0281  3008               	movlw	8
  9273  0282  0020               	movlb	0	; select bank0
  9274  0283  0649               	xorwf	lcd@state,w
  9275  0284  1D03               	btfss	3,2
  9276  0285  2A87               	goto	u3641
  9277  0286  2A88               	goto	u3640
  9278  0287                     u3641:
  9279  0287  2AA4               	goto	l4161
  9280  0288                     u3640:
  9281  0288                     l4153:
  9282                           
  9283                           ;LCD.c: 252: {;LCD.c: 253: LCDcmd(0xc0);
  9284  0288  30C0               	movlw	192
  9285  0289  318A  2274  3180   	fcall	_LCDcmd
  9286  028C                     l4155:
  9287                           
  9288                           ;LCD.c: 254: sprintf(buf, "%02d C", temperature_alarm);
  9289  028C  3019               	movlw	low (STR_4| (0+32768))
  9290  028D  0020               	movlb	0	; select bank0
  9291  028E  00AE               	movwf	sprintf@f
  9292  028F  3090               	movlw	high (STR_4| (0+32768))
  9293  0290  00AF               	movwf	sprintf@f+1
  9294  0291  084A               	movf	lcd@temperature_alarm,w
  9295  0292  00CF               	movwf	??_lcd
  9296  0293  01D0               	clrf	??_lcd+1
  9297  0294  084F               	movf	??_lcd,w
  9298  0295  00B0               	movwf	?_sprintf+2
  9299  0296  0850               	movf	??_lcd+1,w
  9300  0297  00B1               	movwf	?_sprintf+3
  9301  0298  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9302  0299  3184  24E3  3180   	fcall	_sprintf
  9303  029C                     l4157:
  9304                           
  9305                           ;LCD.c: 255: LCDstr(buf);
  9306  029C  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9307  029D  318B  2390  3180   	fcall	_LCDstr
  9308  02A0                     l4159:
  9309                           
  9310                           ;LCD.c: 256: LCDcmd(0x8b);
  9311  02A0  308B               	movlw	139
  9312  02A1  318A  2274  3180   	fcall	_LCDcmd
  9313  02A4                     l4161:
  9314                           
  9315                           ;LCD.c: 257: };LCD.c: 261: if (state ==9)
  9316  02A4  3009               	movlw	9
  9317  02A5  0020               	movlb	0	; select bank0
  9318  02A6  0649               	xorwf	lcd@state,w
  9319  02A7  1D03               	btfss	3,2
  9320  02A8  2AAA               	goto	u3651
  9321  02A9  2AAB               	goto	u3650
  9322  02AA                     u3651:
  9323  02AA  2AC7               	goto	l4171
  9324  02AB                     u3650:
  9325  02AB                     l4163:
  9326                           
  9327                           ;LCD.c: 262: {;LCD.c: 263: LCDcmd(0xc0);
  9328  02AB  30C0               	movlw	192
  9329  02AC  318A  2274  3180   	fcall	_LCDcmd
  9330  02AF                     l4165:
  9331                           
  9332                           ;LCD.c: 264: sprintf(buf, "%02d C", temperature_alarm);
  9333  02AF  3019               	movlw	low (STR_4| (0+32768))
  9334  02B0  0020               	movlb	0	; select bank0
  9335  02B1  00AE               	movwf	sprintf@f
  9336  02B2  3090               	movlw	high (STR_4| (0+32768))
  9337  02B3  00AF               	movwf	sprintf@f+1
  9338  02B4  084A               	movf	lcd@temperature_alarm,w
  9339  02B5  00CF               	movwf	??_lcd
  9340  02B6  01D0               	clrf	??_lcd+1
  9341  02B7  084F               	movf	??_lcd,w
  9342  02B8  00B0               	movwf	?_sprintf+2
  9343  02B9  0850               	movf	??_lcd+1,w
  9344  02BA  00B1               	movwf	?_sprintf+3
  9345  02BB  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9346  02BC  3184  24E3  3180   	fcall	_sprintf
  9347  02BF                     l4167:
  9348                           
  9349                           ;LCD.c: 265: LCDstr(buf);
  9350  02BF  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9351  02C0  318B  2390  3180   	fcall	_LCDstr
  9352  02C3                     l4169:
  9353                           
  9354                           ;LCD.c: 266: LCDcmd(0xc1);
  9355  02C3  30C1               	movlw	193
  9356  02C4  318A  2274  3180   	fcall	_LCDcmd
  9357  02C7                     l4171:
  9358                           
  9359                           ;LCD.c: 267: };LCD.c: 271: if (state ==10)
  9360  02C7  300A               	movlw	10
  9361  02C8  0020               	movlb	0	; select bank0
  9362  02C9  0649               	xorwf	lcd@state,w
  9363  02CA  1D03               	btfss	3,2
  9364  02CB  2ACD               	goto	u3661
  9365  02CC  2ACE               	goto	u3660
  9366  02CD                     u3661:
  9367  02CD  2AEA               	goto	l4181
  9368  02CE                     u3660:
  9369  02CE                     l4173:
  9370                           
  9371                           ;LCD.c: 272: {;LCD.c: 273: LCDcmd(0xce);
  9372  02CE  30CE               	movlw	206
  9373  02CF  318A  2274  3180   	fcall	_LCDcmd
  9374  02D2                     l4175:
  9375                           
  9376                           ;LCD.c: 274: sprintf(buf, "L%01d", luminosity_alarm);
  9377  02D2  3020               	movlw	low (STR_5| (0+32768))
  9378  02D3  0020               	movlb	0	; select bank0
  9379  02D4  00AE               	movwf	sprintf@f
  9380  02D5  3090               	movlw	high (STR_5| (0+32768))
  9381  02D6  00AF               	movwf	sprintf@f+1
  9382  02D7  084B               	movf	lcd@luminosity_alarm,w
  9383  02D8  00CF               	movwf	??_lcd
  9384  02D9  01D0               	clrf	??_lcd+1
  9385  02DA  084F               	movf	??_lcd,w
  9386  02DB  00B0               	movwf	?_sprintf+2
  9387  02DC  0850               	movf	??_lcd+1,w
  9388  02DD  00B1               	movwf	?_sprintf+3
  9389  02DE  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9390  02DF  3184  24E3  3180   	fcall	_sprintf
  9391  02E2                     l4177:
  9392                           
  9393                           ;LCD.c: 275: LCDstr(buf);
  9394  02E2  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9395  02E3  318B  2390  3180   	fcall	_LCDstr
  9396  02E6                     l4179:
  9397                           
  9398                           ;LCD.c: 276: LCDcmd(0x8c);
  9399  02E6  308C               	movlw	140
  9400  02E7  318A  2274  3180   	fcall	_LCDcmd
  9401  02EA                     l4181:
  9402                           
  9403                           ;LCD.c: 277: };LCD.c: 280: if (state ==11)
  9404  02EA  300B               	movlw	11
  9405  02EB  0020               	movlb	0	; select bank0
  9406  02EC  0649               	xorwf	lcd@state,w
  9407  02ED  1D03               	btfss	3,2
  9408  02EE  2AF0               	goto	u3671
  9409  02EF  2AF1               	goto	u3670
  9410  02F0                     u3671:
  9411  02F0  2B0D               	goto	l4191
  9412  02F1                     u3670:
  9413  02F1                     l4183:
  9414                           
  9415                           ;LCD.c: 281: {;LCD.c: 282: LCDcmd(0xce);
  9416  02F1  30CE               	movlw	206
  9417  02F2  318A  2274  3180   	fcall	_LCDcmd
  9418  02F5                     l4185:
  9419                           
  9420                           ;LCD.c: 283: sprintf(buf, "L%01d", luminosity_alarm);
  9421  02F5  3020               	movlw	low (STR_5| (0+32768))
  9422  02F6  0020               	movlb	0	; select bank0
  9423  02F7  00AE               	movwf	sprintf@f
  9424  02F8  3090               	movlw	high (STR_5| (0+32768))
  9425  02F9  00AF               	movwf	sprintf@f+1
  9426  02FA  084B               	movf	lcd@luminosity_alarm,w
  9427  02FB  00CF               	movwf	??_lcd
  9428  02FC  01D0               	clrf	??_lcd+1
  9429  02FD  084F               	movf	??_lcd,w
  9430  02FE  00B0               	movwf	?_sprintf+2
  9431  02FF  0850               	movf	??_lcd+1,w
  9432  0300  00B1               	movwf	?_sprintf+3
  9433  0301  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9434  0302  3184  24E3  3180   	fcall	_sprintf
  9435  0305                     l4187:
  9436                           
  9437                           ;LCD.c: 284: LCDstr(buf);
  9438  0305  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9439  0306  318B  2390  3180   	fcall	_LCDstr
  9440  0309                     l4189:
  9441                           
  9442                           ;LCD.c: 285: LCDcmd(0xcf);
  9443  0309  30CF               	movlw	207
  9444  030A  318A  2274  3180   	fcall	_LCDcmd
  9445  030D                     l4191:
  9446                           
  9447                           ;LCD.c: 286: };LCD.c: 288: if (state ==12)
  9448  030D  300C               	movlw	12
  9449  030E  0020               	movlb	0	; select bank0
  9450  030F  0649               	xorwf	lcd@state,w
  9451  0310  1D03               	btfss	3,2
  9452  0311  2B13               	goto	u3681
  9453  0312  2B14               	goto	u3680
  9454  0313                     u3681:
  9455  0313  2B18               	goto	l948
  9456  0314                     u3680:
  9457  0314                     l4193:
  9458                           
  9459                           ;LCD.c: 289: {;LCD.c: 290: LCDcmd(0x0f);
  9460  0314  300F               	movlw	15
  9461  0315  318A  2274  3180   	fcall	_LCDcmd
  9462  0318                     l948:
  9463  0318  0008               	return
  9464  0319                     __end_of_lcd:
  9465                           
  9466                           	psect	text7
  9467  04E3                     __ptext7:	
  9468 ;; *************** function _sprintf *****************
  9469 ;; Defined at:
  9470 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  9471 ;; Parameters:    Size  Location     Type
  9472 ;;  sp              1    wreg     PTR unsigned char 
  9473 ;;		 -> lcd@buf(17), 
  9474 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  9475 ;;		 -> STR_20(6), STR_19(6), STR_18(7), STR_17(7), 
  9476 ;;		 -> STR_16(15), STR_15(15), STR_14(15), STR_13(15), 
  9477 ;;		 -> STR_12(6), STR_11(7), STR_10(4), STR_9(15), 
  9478 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(6), 
  9479 ;;		 -> STR_4(7), STR_3(15), STR_2(2), STR_1(2), 
  9480 ;; Auto vars:     Size  Location     Type
  9481 ;;  sp              1   34[BANK0 ] PTR unsigned char 
  9482 ;;		 -> lcd@buf(17), 
  9483 ;;  tmpval          4    0        struct .
  9484 ;;  width           2   31[BANK0 ] int 
  9485 ;;  val             2   28[BANK0 ] unsigned int 
  9486 ;;  cp              2    0        PTR const unsigned char 
  9487 ;;  len             2    0        unsigned int 
  9488 ;;  c               1   33[BANK0 ] unsigned char 
  9489 ;;  flag            1   30[BANK0 ] unsigned char 
  9490 ;;  prec            1   27[BANK0 ] char 
  9491 ;;  ap              1   26[BANK0 ] PTR void [1]
  9492 ;;		 -> ?_sprintf(2), 
  9493 ;; Return value:  Size  Location     Type
  9494 ;;                  2   14[BANK0 ] int 
  9495 ;; Registers used:
  9496 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9497 ;; Tracked objects:
  9498 ;;		On entry : 0/0
  9499 ;;		On exit  : 0/0
  9500 ;;		Unchanged: 0/0
  9501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9502 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9503 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9504 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9505 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9506 ;;Total ram usage:       21 bytes
  9507 ;; Hardware stack levels used:    1
  9508 ;; Hardware stack levels required when called:    6
  9509 ;; This function calls:
  9510 ;;		___lwdiv
  9511 ;;		___lwmod
  9512 ;;		___wmul
  9513 ;;		_isdigit
  9514 ;; This function is called by:
  9515 ;;		_lcd
  9516 ;; This function uses a non-reentrant model
  9517 ;;
  9518                           
  9519                           
  9520                           ;psect for function _sprintf
  9521  04E3                     _sprintf:
  9522                           
  9523                           ;incstack = 0
  9524                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9525                           ;sprintf@sp stored from wreg
  9526  04E3  0020               	movlb	0	; select bank0
  9527  04E4  00C2               	movwf	sprintf@sp
  9528  04E5                     l3681:
  9529                           
  9530                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
  9531  04E5  3030               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  9532  04E6  00B6               	movwf	??_sprintf
  9533  04E7  0836               	movf	??_sprintf,w
  9534  04E8  00BA               	movwf	sprintf@ap
  9535                           
  9536                           ;doprnt.c: 553: while((c = *f++)) {
  9537  04E9  2E68               	goto	l3785
  9538  04EA                     l3683:
  9539                           
  9540                           ;doprnt.c: 555: if(c != '%')
  9541  04EA  3025               	movlw	37
  9542  04EB  0641               	xorwf	sprintf@c,w
  9543  04EC  1903               	btfsc	3,2
  9544  04ED  2CEF               	goto	u2921
  9545  04EE  2CF0               	goto	u2920
  9546  04EF                     u2921:
  9547  04EF  2CFC               	goto	l3689
  9548  04F0                     u2920:
  9549  04F0                     l3685:
  9550                           
  9551                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  9552  04F0  0841               	movf	sprintf@c,w
  9553  04F1  00B6               	movwf	??_sprintf
  9554  04F2  0842               	movf	sprintf@sp,w
  9555  04F3  0086               	movwf	6
  9556  04F4  0187               	clrf	7
  9557  04F5  0836               	movf	??_sprintf,w
  9558  04F6  0081               	movwf	1
  9559  04F7                     l3687:
  9560  04F7  3001               	movlw	1
  9561  04F8  00B6               	movwf	??_sprintf
  9562  04F9  0836               	movf	??_sprintf,w
  9563  04FA  07C2               	addwf	sprintf@sp,f
  9564                           
  9565                           ;doprnt.c: 559: continue;
  9566  04FB  2E68               	goto	l3785
  9567  04FC                     l3689:
  9568                           
  9569                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  9570  04FC  01BF               	clrf	sprintf@width
  9571  04FD  01C0               	clrf	sprintf@width+1
  9572                           
  9573                           ;doprnt.c: 565: flag = 0;
  9574  04FE  01BE               	clrf	sprintf@flag
  9575  04FF  2D05               	goto	l3695
  9576  0500                     l1275:	
  9577                           ;doprnt.c: 596: case '0':
  9578                           
  9579                           
  9580                           ;doprnt.c: 597: flag |= 0x04;
  9581  0500  153E               	bsf	sprintf@flag,2
  9582  0501                     l3691:
  9583                           
  9584                           ;doprnt.c: 598: f++;
  9585  0501  3001               	movlw	1
  9586  0502  07AE               	addwf	sprintf@f,f
  9587  0503  3000               	movlw	0
  9588  0504  3DAF               	addwfc	sprintf@f+1,f
  9589  0505                     l3695:	
  9590                           ;doprnt.c: 599: continue;
  9591                           
  9592  0505  082E               	movf	sprintf@f,w
  9593  0506  0084               	movwf	4
  9594  0507  082F               	movf	sprintf@f+1,w
  9595  0508  0085               	movwf	5
  9596  0509  0800               	movf	0,w	;code access
  9597                           
  9598                           ; Switch size 1, requested type "simple"
  9599                           ; Number of cases is 1, Range of values is 48 to 48
  9600                           ; switch strategies available:
  9601                           ; Name         Instructions Cycles
  9602                           ; simple_byte            4     3 (average)
  9603                           ; direct_byte           11     9 (fixed)
  9604                           ; jumptable            263     9 (fixed)
  9605                           ;	Chosen strategy is simple_byte
  9606  050A  3A30               	xorlw	48	; case 48
  9607  050B  1903               	skipnz
  9608  050C  2D00               	goto	l1275
  9609  050D  2D0E               	goto	l3697
  9610  050E                     l3697:
  9611                           
  9612                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  9613  050E  082E               	movf	sprintf@f,w
  9614  050F  0084               	movwf	4
  9615  0510  082F               	movf	sprintf@f+1,w
  9616  0511  0085               	movwf	5
  9617  0512  0800               	movf	0,w	;code access
  9618  0513  318B  2352  3184   	fcall	_isdigit
  9619  0516  1C03               	btfss	3,0
  9620  0517  2D19               	goto	u2931
  9621  0518  2D1A               	goto	u2930
  9622  0519                     u2931:
  9623  0519  2D4D               	goto	l3711
  9624  051A                     u2930:
  9625  051A                     l3699:
  9626                           
  9627                           ;doprnt.c: 615: width = 0;
  9628  051A  0020               	movlb	0	; select bank0
  9629  051B  01BF               	clrf	sprintf@width
  9630  051C  01C0               	clrf	sprintf@width+1
  9631  051D                     l3701:
  9632                           
  9633                           ;doprnt.c: 617: width *= 10;
  9634  051D  300A               	movlw	10
  9635  051E  0020               	movlb	0	; select bank0
  9636  051F  00A0               	movwf	___wmul@multiplier
  9637  0520  3000               	movlw	0
  9638  0521  00A1               	movwf	___wmul@multiplier+1
  9639  0522  0840               	movf	sprintf@width+1,w
  9640  0523  00A3               	movwf	___wmul@multiplicand+1
  9641  0524  083F               	movf	sprintf@width,w
  9642  0525  00A2               	movwf	___wmul@multiplicand
  9643  0526  318C  2434  3184   	fcall	___wmul
  9644  0529  0020               	movlb	0	; select bank0
  9645  052A  0821               	movf	?___wmul+1,w
  9646  052B  00C0               	movwf	sprintf@width+1
  9647  052C  0820               	movf	?___wmul,w
  9648  052D  00BF               	movwf	sprintf@width
  9649  052E                     l3703:
  9650                           
  9651                           ;doprnt.c: 618: width += *f++ - '0';
  9652  052E  082E               	movf	sprintf@f,w
  9653  052F  0084               	movwf	4
  9654  0530  082F               	movf	sprintf@f+1,w
  9655  0531  0085               	movwf	5
  9656  0532  0800               	movf	0,w	;code access
  9657  0533  3ED0               	addlw	208
  9658  0534  00B6               	movwf	??_sprintf
  9659  0535  30FF               	movlw	255
  9660  0536  1803               	skipnc
  9661  0537  3000               	movlw	0
  9662  0538  00B7               	movwf	??_sprintf+1
  9663  0539  0836               	movf	??_sprintf,w
  9664  053A  07BF               	addwf	sprintf@width,f
  9665  053B  0837               	movf	??_sprintf+1,w
  9666  053C  3DC0               	addwfc	sprintf@width+1,f
  9667  053D                     l3705:
  9668  053D  3001               	movlw	1
  9669  053E  07AE               	addwf	sprintf@f,f
  9670  053F  3000               	movlw	0
  9671  0540  3DAF               	addwfc	sprintf@f+1,f
  9672  0541                     l3707:
  9673                           
  9674                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  9675  0541  082E               	movf	sprintf@f,w
  9676  0542  0084               	movwf	4
  9677  0543  082F               	movf	sprintf@f+1,w
  9678  0544  0085               	movwf	5
  9679  0545  0800               	movf	0,w	;code access
  9680  0546  318B  2352  3184   	fcall	_isdigit
  9681  0549  1803               	btfsc	3,0
  9682  054A  2D4C               	goto	u2941
  9683  054B  2D4D               	goto	u2940
  9684  054C                     u2941:
  9685  054C  2D1D               	goto	l3701
  9686  054D                     u2940:
  9687  054D                     l3711:
  9688  054D  0020               	movlb	0	; select bank0
  9689  054E  082F               	movf	sprintf@f+1,w
  9690  054F  00B7               	movwf	??_sprintf+1
  9691  0550  082E               	movf	sprintf@f,w
  9692  0551  00B6               	movwf	??_sprintf
  9693  0552  0AAE               	incf	sprintf@f,f
  9694  0553  1903               	skipnz
  9695  0554  0AAF               	incf	sprintf@f+1,f
  9696  0555  0836               	movf	??_sprintf,w
  9697  0556  0084               	movwf	4
  9698  0557  0837               	movf	??_sprintf+1,w
  9699  0558  0085               	movwf	5
  9700  0559  0800               	movf	0,w	;code access
  9701  055A  00C1               	movwf	sprintf@c
  9702                           
  9703                           ; Switch size 1, requested type "simple"
  9704                           ; Number of cases is 3, Range of values is 0 to 105
  9705                           ; switch strategies available:
  9706                           ; Name         Instructions Cycles
  9707                           ; simple_byte           10     6 (average)
  9708                           ; direct_byte          218     6 (fixed)
  9709                           ; jumptable            260     6 (fixed)
  9710                           ;	Chosen strategy is simple_byte
  9711  055B  3A00               	xorlw	0	; case 0
  9712  055C  1903               	skipnz
  9713  055D  2E7C               	goto	l3787
  9714  055E  3A64               	xorlw	100	; case 100
  9715  055F  1903               	skipnz
  9716  0560  2D65               	goto	l3713
  9717  0561  3A0D               	xorlw	13	; case 105
  9718  0562  1903               	skipnz
  9719  0563  2D65               	goto	l3713
  9720  0564  2E68               	goto	l3785
  9721  0565                     l3713:
  9722                           
  9723                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  9724  0565  083A               	movf	sprintf@ap,w
  9725  0566  0086               	movwf	6
  9726  0567  0187               	clrf	7
  9727  0568  3F40               	moviw [0]fsr1
  9728  0569  00BC               	movwf	sprintf@val
  9729  056A  3F41               	moviw [1]fsr1
  9730  056B  00BD               	movwf	sprintf@val+1
  9731  056C                     l3715:
  9732  056C  3002               	movlw	2
  9733  056D  00B6               	movwf	??_sprintf
  9734  056E  0836               	movf	??_sprintf,w
  9735  056F  07BA               	addwf	sprintf@ap,f
  9736  0570                     l3717:
  9737                           
  9738                           ;doprnt.c: 1287: if((int)val < 0) {
  9739  0570  1FBD               	btfss	sprintf@val+1,7
  9740  0571  2D73               	goto	u2951
  9741  0572  2D74               	goto	u2950
  9742  0573                     u2951:
  9743  0573  2D7D               	goto	l3723
  9744  0574                     u2950:
  9745  0574                     l3719:
  9746                           
  9747                           ;doprnt.c: 1288: flag |= 0x03;
  9748  0574  3003               	movlw	3
  9749  0575  00B6               	movwf	??_sprintf
  9750  0576  0836               	movf	??_sprintf,w
  9751  0577  04BE               	iorwf	sprintf@flag,f
  9752  0578                     l3721:
  9753                           
  9754                           ;doprnt.c: 1289: val = -val;
  9755  0578  09BC               	comf	sprintf@val,f
  9756  0579  09BD               	comf	sprintf@val+1,f
  9757  057A  0ABC               	incf	sprintf@val,f
  9758  057B  1903               	skipnz
  9759  057C  0ABD               	incf	sprintf@val+1,f
  9760  057D                     l3723:
  9761                           
  9762                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
  9763  057D  01C1               	clrf	sprintf@c
  9764  057E  0AC1               	incf	sprintf@c,f
  9765  057F                     l3729:
  9766                           
  9767                           ;doprnt.c: 1332: if(val < dpowers[c])
  9768  057F  0841               	movf	sprintf@c,w
  9769  0580  00B6               	movwf	??_sprintf
  9770  0581  01B7               	clrf	??_sprintf+1
  9771  0582  35B6               	lslf	??_sprintf,f
  9772  0583  0DB7               	rlf	??_sprintf+1,f
  9773  0584  300F               	movlw	low (_dpowers| (0+32768))
  9774  0585  0736               	addwf	??_sprintf,w
  9775  0586  0084               	movwf	4
  9776  0587  3090               	movlw	high (_dpowers| (0+32768))
  9777  0588  3D37               	addwfc	??_sprintf+1,w
  9778  0589  0085               	movwf	5
  9779  058A  3F00               	moviw [0]fsr0
  9780  058B  00B8               	movwf	??_sprintf+2
  9781  058C  3F01               	moviw [1]fsr0
  9782  058D  00B9               	movwf	??_sprintf+3
  9783  058E  0839               	movf	??_sprintf+3,w
  9784  058F  023D               	subwf	sprintf@val+1,w
  9785  0590  1D03               	skipz
  9786  0591  2D94               	goto	u2965
  9787  0592  0838               	movf	??_sprintf+2,w
  9788  0593  023C               	subwf	sprintf@val,w
  9789  0594                     u2965:
  9790  0594  1803               	skipnc
  9791  0595  2D97               	goto	u2961
  9792  0596  2D98               	goto	u2960
  9793  0597                     u2961:
  9794  0597  2D99               	goto	l3733
  9795  0598                     u2960:
  9796  0598  2DA3               	goto	l3735
  9797  0599                     l3733:
  9798  0599  3001               	movlw	1
  9799  059A  00B6               	movwf	??_sprintf
  9800  059B  0836               	movf	??_sprintf,w
  9801  059C  07C1               	addwf	sprintf@c,f
  9802  059D  3005               	movlw	5
  9803  059E  0641               	xorwf	sprintf@c,w
  9804  059F  1D03               	btfss	3,2
  9805  05A0  2DA2               	goto	u2971
  9806  05A1  2DA3               	goto	u2970
  9807  05A2                     u2971:
  9808  05A2  2D7F               	goto	l3729
  9809  05A3                     u2970:
  9810  05A3                     l3735:
  9811                           
  9812                           ;doprnt.c: 1371: if(width && flag & 0x03)
  9813  05A3  083F               	movf	sprintf@width,w
  9814  05A4  0440               	iorwf	sprintf@width+1,w
  9815  05A5  1903               	btfsc	3,2
  9816  05A6  2DA8               	goto	u2981
  9817  05A7  2DA9               	goto	u2980
  9818  05A8                     u2981:
  9819  05A8  2DB3               	goto	l1293
  9820  05A9                     u2980:
  9821  05A9                     l3737:
  9822  05A9  083E               	movf	sprintf@flag,w
  9823  05AA  3903               	andlw	3
  9824  05AB  1903               	btfsc	3,2
  9825  05AC  2DAE               	goto	u2991
  9826  05AD  2DAF               	goto	u2990
  9827  05AE                     u2991:
  9828  05AE  2DB3               	goto	l1293
  9829  05AF                     u2990:
  9830  05AF                     l3739:
  9831                           
  9832                           ;doprnt.c: 1372: width--;
  9833  05AF  30FF               	movlw	255
  9834  05B0  07BF               	addwf	sprintf@width,f
  9835  05B1  30FF               	movlw	255
  9836  05B2  3DC0               	addwfc	sprintf@width+1,f
  9837  05B3                     l1293:
  9838                           
  9839                           ;doprnt.c: 1407: if(width > c)
  9840  05B3  0840               	movf	sprintf@width+1,w
  9841  05B4  3A80               	xorlw	128
  9842  05B5  3C80               	sublw	128
  9843  05B6  1D03               	skipz
  9844  05B7  2DBA               	goto	u3005
  9845  05B8  083F               	movf	sprintf@width,w
  9846  05B9  0241               	subwf	sprintf@c,w
  9847  05BA                     u3005:
  9848  05BA  1803               	skipnc
  9849  05BB  2DBD               	goto	u3001
  9850  05BC  2DBE               	goto	u3000
  9851  05BD                     u3001:
  9852  05BD  2DC7               	goto	l3743
  9853  05BE                     u3000:
  9854  05BE                     l3741:
  9855                           
  9856                           ;doprnt.c: 1408: width -= c;
  9857  05BE  0020               	movlb	0	; select bank0
  9858  05BF  0841               	movf	sprintf@c,w
  9859  05C0  00B6               	movwf	??_sprintf
  9860  05C1  01B7               	clrf	??_sprintf+1
  9861  05C2  0836               	movf	??_sprintf,w
  9862  05C3  02BF               	subwf	sprintf@width,f
  9863  05C4  0837               	movf	??_sprintf+1,w
  9864  05C5  3BC0               	subwfb	sprintf@width+1,f
  9865  05C6  2DCA               	goto	l3745
  9866  05C7                     l3743:
  9867                           
  9868                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  9869  05C7  0020               	movlb	0	; select bank0
  9870  05C8  01BF               	clrf	sprintf@width
  9871  05C9  01C0               	clrf	sprintf@width+1
  9872  05CA                     l3745:
  9873                           
  9874                           ;doprnt.c: 1413: if(flag & 0x04) {
  9875  05CA  1D3E               	btfss	sprintf@flag,2
  9876  05CB  2DCD               	goto	u3011
  9877  05CC  2DCE               	goto	u3010
  9878  05CD                     u3011:
  9879  05CD  2DFB               	goto	l3761
  9880  05CE                     u3010:
  9881  05CE                     l3747:
  9882                           
  9883                           ;doprnt.c: 1418: if(flag & 0x03)
  9884  05CE  083E               	movf	sprintf@flag,w
  9885  05CF  3903               	andlw	3
  9886  05D0  1903               	btfsc	3,2
  9887  05D1  2DD3               	goto	u3021
  9888  05D2  2DD4               	goto	u3020
  9889  05D3                     u3021:
  9890  05D3  2DDF               	goto	l3753
  9891  05D4                     u3020:
  9892  05D4                     l3749:
  9893                           
  9894                           ;doprnt.c: 1419: ((*sp++ = ('-')));
  9895  05D4  302D               	movlw	45
  9896  05D5  00B6               	movwf	??_sprintf
  9897  05D6  0842               	movf	sprintf@sp,w
  9898  05D7  0086               	movwf	6
  9899  05D8  0187               	clrf	7
  9900  05D9  0836               	movf	??_sprintf,w
  9901  05DA  0081               	movwf	1
  9902  05DB                     l3751:
  9903  05DB  3001               	movlw	1
  9904  05DC  00B6               	movwf	??_sprintf
  9905  05DD  0836               	movf	??_sprintf,w
  9906  05DE  07C2               	addwf	sprintf@sp,f
  9907  05DF                     l3753:
  9908                           
  9909                           ;doprnt.c: 1441: if(width)
  9910  05DF  083F               	movf	sprintf@width,w
  9911  05E0  0440               	iorwf	sprintf@width+1,w
  9912  05E1  1903               	btfsc	3,2
  9913  05E2  2DE4               	goto	u3031
  9914  05E3  2DE5               	goto	u3030
  9915  05E4                     u3031:
  9916  05E4  2E27               	goto	l3775
  9917  05E5                     u3030:
  9918  05E5                     l3755:
  9919                           
  9920                           ;doprnt.c: 1443: ((*sp++ = ('0')));
  9921  05E5  3030               	movlw	48
  9922  05E6  00B6               	movwf	??_sprintf
  9923  05E7  0842               	movf	sprintf@sp,w
  9924  05E8  0086               	movwf	6
  9925  05E9  0187               	clrf	7
  9926  05EA  0836               	movf	??_sprintf,w
  9927  05EB  0081               	movwf	1
  9928  05EC                     l3757:
  9929  05EC  3001               	movlw	1
  9930  05ED  00B6               	movwf	??_sprintf
  9931  05EE  0836               	movf	??_sprintf,w
  9932  05EF  07C2               	addwf	sprintf@sp,f
  9933  05F0                     l3759:
  9934                           
  9935                           ;doprnt.c: 1444: while(--width);
  9936  05F0  30FF               	movlw	255
  9937  05F1  07BF               	addwf	sprintf@width,f
  9938  05F2  30FF               	movlw	255
  9939  05F3  3DC0               	addwfc	sprintf@width+1,f
  9940  05F4  083F               	movf	sprintf@width,w
  9941  05F5  0440               	iorwf	sprintf@width+1,w
  9942  05F6  1D03               	btfss	3,2
  9943  05F7  2DF9               	goto	u3041
  9944  05F8  2DFA               	goto	u3040
  9945  05F9                     u3041:
  9946  05F9  2DE5               	goto	l3755
  9947  05FA                     u3040:
  9948  05FA  2E27               	goto	l3775
  9949  05FB                     l3761:
  9950                           
  9951                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  9952  05FB  083F               	movf	sprintf@width,w
  9953  05FC  0440               	iorwf	sprintf@width+1,w
  9954  05FD  1903               	btfsc	3,2
  9955  05FE  2E00               	goto	u3051
  9956  05FF  2E01               	goto	u3050
  9957  0600                     u3051:
  9958  0600  2E16               	goto	l3769
  9959  0601                     u3050:
  9960  0601                     l3763:
  9961                           
  9962                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  9963  0601  3020               	movlw	32
  9964  0602  00B6               	movwf	??_sprintf
  9965  0603  0842               	movf	sprintf@sp,w
  9966  0604  0086               	movwf	6
  9967  0605  0187               	clrf	7
  9968  0606  0836               	movf	??_sprintf,w
  9969  0607  0081               	movwf	1
  9970  0608                     l3765:
  9971  0608  3001               	movlw	1
  9972  0609  00B6               	movwf	??_sprintf
  9973  060A  0836               	movf	??_sprintf,w
  9974  060B  07C2               	addwf	sprintf@sp,f
  9975  060C                     l3767:
  9976                           
  9977                           ;doprnt.c: 1457: while(--width);
  9978  060C  30FF               	movlw	255
  9979  060D  07BF               	addwf	sprintf@width,f
  9980  060E  30FF               	movlw	255
  9981  060F  3DC0               	addwfc	sprintf@width+1,f
  9982  0610  083F               	movf	sprintf@width,w
  9983  0611  0440               	iorwf	sprintf@width+1,w
  9984  0612  1D03               	btfss	3,2
  9985  0613  2E15               	goto	u3061
  9986  0614  2E16               	goto	u3060
  9987  0615                     u3061:
  9988  0615  2E01               	goto	l3763
  9989  0616                     u3060:
  9990  0616                     l3769:
  9991                           
  9992                           ;doprnt.c: 1464: if(flag & 0x03)
  9993  0616  083E               	movf	sprintf@flag,w
  9994  0617  3903               	andlw	3
  9995  0618  1903               	btfsc	3,2
  9996  0619  2E1B               	goto	u3071
  9997  061A  2E1C               	goto	u3070
  9998  061B                     u3071:
  9999  061B  2E27               	goto	l3775
 10000  061C                     u3070:
 10001  061C                     l3771:
 10002                           
 10003                           ;doprnt.c: 1465: ((*sp++ = ('-')));
 10004  061C  302D               	movlw	45
 10005  061D  00B6               	movwf	??_sprintf
 10006  061E  0842               	movf	sprintf@sp,w
 10007  061F  0086               	movwf	6
 10008  0620  0187               	clrf	7
 10009  0621  0836               	movf	??_sprintf,w
 10010  0622  0081               	movwf	1
 10011  0623                     l3773:
 10012  0623  3001               	movlw	1
 10013  0624  00B6               	movwf	??_sprintf
 10014  0625  0836               	movf	??_sprintf,w
 10015  0626  07C2               	addwf	sprintf@sp,f
 10016  0627                     l3775:
 10017                           
 10018                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
 10019  0627  0841               	movf	sprintf@c,w
 10020  0628  00B6               	movwf	??_sprintf
 10021  0629  0836               	movf	??_sprintf,w
 10022  062A  00BB               	movwf	sprintf@prec
 10023                           
 10024                           ;doprnt.c: 1500: while(prec--) {
 10025  062B  2E5F               	goto	l3783
 10026  062C                     l3777:
 10027                           
 10028                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
 10029  062C  300A               	movlw	10
 10030  062D  00A8               	movwf	___lwmod@divisor
 10031  062E  3000               	movlw	0
 10032  062F  00A9               	movwf	___lwmod@divisor+1
 10033  0630  083B               	movf	sprintf@prec,w
 10034  0631  00B6               	movwf	??_sprintf
 10035  0632  01B7               	clrf	??_sprintf+1
 10036  0633  35B6               	lslf	??_sprintf,f
 10037  0634  0DB7               	rlf	??_sprintf+1,f
 10038  0635  300F               	movlw	low (_dpowers| (0+32768))
 10039  0636  0736               	addwf	??_sprintf,w
 10040  0637  0084               	movwf	4
 10041  0638  3090               	movlw	high (_dpowers| (0+32768))
 10042  0639  3D37               	addwfc	??_sprintf+1,w
 10043  063A  0085               	movwf	5
 10044  063B  3F00               	moviw [0]fsr0
 10045  063C  00A0               	movwf	___lwdiv@divisor
 10046  063D  3F01               	moviw [1]fsr0
 10047  063E  00A1               	movwf	___lwdiv@divisor+1
 10048  063F  083D               	movf	sprintf@val+1,w
 10049  0640  00A3               	movwf	___lwdiv@dividend+1
 10050  0641  083C               	movf	sprintf@val,w
 10051  0642  00A2               	movwf	___lwdiv@dividend
 10052  0643  318D  251B  3184   	fcall	___lwdiv
 10053  0646  0020               	movlb	0	; select bank0
 10054  0647  0821               	movf	?___lwdiv+1,w
 10055  0648  00AB               	movwf	___lwmod@dividend+1
 10056  0649  0820               	movf	?___lwdiv,w
 10057  064A  00AA               	movwf	___lwmod@dividend
 10058  064B  318C  24AB  3184   	fcall	___lwmod
 10059  064E  0020               	movlb	0	; select bank0
 10060  064F  0828               	movf	?___lwmod,w
 10061  0650  3E30               	addlw	48
 10062  0651  00B8               	movwf	??_sprintf+2
 10063  0652  0838               	movf	??_sprintf+2,w
 10064  0653  00C1               	movwf	sprintf@c
 10065  0654                     l3779:
 10066                           
 10067                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
 10068  0654  0841               	movf	sprintf@c,w
 10069  0655  00B6               	movwf	??_sprintf
 10070  0656  0842               	movf	sprintf@sp,w
 10071  0657  0086               	movwf	6
 10072  0658  0187               	clrf	7
 10073  0659  0836               	movf	??_sprintf,w
 10074  065A  0081               	movwf	1
 10075  065B                     l3781:
 10076  065B  3001               	movlw	1
 10077  065C  00B6               	movwf	??_sprintf
 10078  065D  0836               	movf	??_sprintf,w
 10079  065E  07C2               	addwf	sprintf@sp,f
 10080  065F                     l3783:
 10081  065F  30FF               	movlw	255
 10082  0660  00B6               	movwf	??_sprintf
 10083  0661  0836               	movf	??_sprintf,w
 10084  0662  07BB               	addwf	sprintf@prec,f
 10085  0663  0A3B               	incf	sprintf@prec,w
 10086  0664  1D03               	btfss	3,2
 10087  0665  2E67               	goto	u3081
 10088  0666  2E68               	goto	u3080
 10089  0667                     u3081:
 10090  0667  2E2C               	goto	l3777
 10091  0668                     u3080:
 10092  0668                     l3785:
 10093  0668  082F               	movf	sprintf@f+1,w
 10094  0669  00B7               	movwf	??_sprintf+1
 10095  066A  082E               	movf	sprintf@f,w
 10096  066B  00B6               	movwf	??_sprintf
 10097  066C  0AAE               	incf	sprintf@f,f
 10098  066D  1903               	skipnz
 10099  066E  0AAF               	incf	sprintf@f+1,f
 10100  066F  0836               	movf	??_sprintf,w
 10101  0670  0084               	movwf	4
 10102  0671  0837               	movf	??_sprintf+1,w
 10103  0672  0085               	movwf	5
 10104  0673  0800               	movf	0,w	;code access
 10105  0674  00B8               	movwf	??_sprintf+2
 10106  0675  0838               	movf	??_sprintf+2,w
 10107  0676  00C1               	movwf	sprintf@c
 10108  0677  0841               	movf	sprintf@c,w
 10109  0678  1D03               	btfss	3,2
 10110  0679  2E7B               	goto	u3091
 10111  067A  2E7C               	goto	u3090
 10112  067B                     u3091:
 10113  067B  2CEA               	goto	l3683
 10114  067C                     u3090:
 10115  067C                     l3787:
 10116                           
 10117                           ;doprnt.c: 1564: *sp = 0;
 10118  067C  0842               	movf	sprintf@sp,w
 10119  067D  0086               	movwf	6
 10120  067E  0187               	clrf	7
 10121  067F  0181               	clrf	1
 10122  0680                     l1310:
 10123  0680  0008               	return
 10124  0681                     __end_of_sprintf:
 10125                           
 10126                           	psect	text8
 10127  0B52                     __ptext8:	
 10128 ;; *************** function _isdigit *****************
 10129 ;; Defined at:
 10130 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
 10131 ;; Parameters:    Size  Location     Type
 10132 ;;  c               1    wreg     unsigned char 
 10133 ;; Auto vars:     Size  Location     Type
 10134 ;;  c               1    1[BANK0 ] unsigned char 
 10135 ;; Return value:  Size  Location     Type
 10136 ;;		None               void
 10137 ;; Registers used:
 10138 ;;		wreg, status,2, status,0
 10139 ;; Tracked objects:
 10140 ;;		On entry : 0/0
 10141 ;;		On exit  : 0/0
 10142 ;;		Unchanged: 0/0
 10143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10145 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10147 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10148 ;;Total ram usage:        2 bytes
 10149 ;; Hardware stack levels used:    1
 10150 ;; Hardware stack levels required when called:    5
 10151 ;; This function calls:
 10152 ;;		Nothing
 10153 ;; This function is called by:
 10154 ;;		_sprintf
 10155 ;; This function uses a non-reentrant model
 10156 ;;
 10157                           
 10158                           
 10159                           ;psect for function _isdigit
 10160  0B52                     _isdigit:
 10161                           
 10162                           ;incstack = 0
 10163                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10164                           ;isdigit@c stored from wreg
 10165  0B52  0020               	movlb	0	; select bank0
 10166  0B53  00A1               	movwf	isdigit@c
 10167  0B54                     l3505:
 10168  0B54  01A0               	clrf	_isdigit$2362
 10169  0B55                     l3507:
 10170  0B55  303A               	movlw	58
 10171  0B56  0221               	subwf	isdigit@c,w
 10172  0B57  1803               	skipnc
 10173  0B58  2B5A               	goto	u2621
 10174  0B59  2B5B               	goto	u2620
 10175  0B5A                     u2621:
 10176  0B5A  2B63               	goto	l3513
 10177  0B5B                     u2620:
 10178  0B5B                     l3509:
 10179  0B5B  3030               	movlw	48
 10180  0B5C  0221               	subwf	isdigit@c,w
 10181  0B5D  1C03               	skipc
 10182  0B5E  2B60               	goto	u2631
 10183  0B5F  2B61               	goto	u2630
 10184  0B60                     u2631:
 10185  0B60  2B63               	goto	l3513
 10186  0B61                     u2630:
 10187  0B61                     l3511:
 10188  0B61  01A0               	clrf	_isdigit$2362
 10189  0B62  0AA0               	incf	_isdigit$2362,f
 10190  0B63                     l3513:
 10191  0B63  0C20               	rrf	_isdigit$2362,w
 10192  0B64                     l1767:
 10193  0B64  0008               	return
 10194  0B65                     __end_of_isdigit:
 10195                           
 10196                           	psect	text9
 10197  0C34                     __ptext9:	
 10198 ;; *************** function ___wmul *****************
 10199 ;; Defined at:
 10200 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 10201 ;; Parameters:    Size  Location     Type
 10202 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10203 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10204 ;; Auto vars:     Size  Location     Type
 10205 ;;  product         2    4[BANK0 ] unsigned int 
 10206 ;; Return value:  Size  Location     Type
 10207 ;;                  2    0[BANK0 ] unsigned int 
 10208 ;; Registers used:
 10209 ;;		wreg, status,2, status,0
 10210 ;; Tracked objects:
 10211 ;;		On entry : 0/0
 10212 ;;		On exit  : 0/0
 10213 ;;		Unchanged: 0/0
 10214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10215 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10216 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10218 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10219 ;;Total ram usage:        6 bytes
 10220 ;; Hardware stack levels used:    1
 10221 ;; Hardware stack levels required when called:    5
 10222 ;; This function calls:
 10223 ;;		Nothing
 10224 ;; This function is called by:
 10225 ;;		_sprintf
 10226 ;;		_save_register
 10227 ;; This function uses a non-reentrant model
 10228 ;;
 10229                           
 10230                           
 10231                           ;psect for function ___wmul
 10232  0C34                     ___wmul:
 10233  0C34                     l3517:	
 10234                           ;incstack = 0
 10235                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10236                           
 10237  0C34  0020               	movlb	0	; select bank0
 10238  0C35  01A4               	clrf	___wmul@product
 10239  0C36  01A5               	clrf	___wmul@product+1
 10240  0C37                     l3519:
 10241  0C37  1C20               	btfss	___wmul@multiplier,0
 10242  0C38  2C3A               	goto	u2641
 10243  0C39  2C3B               	goto	u2640
 10244  0C3A                     u2641:
 10245  0C3A  2C3F               	goto	l1314
 10246  0C3B                     u2640:
 10247  0C3B                     l3521:
 10248  0C3B  0822               	movf	___wmul@multiplicand,w
 10249  0C3C  07A4               	addwf	___wmul@product,f
 10250  0C3D  0823               	movf	___wmul@multiplicand+1,w
 10251  0C3E  3DA5               	addwfc	___wmul@product+1,f
 10252  0C3F                     l1314:
 10253  0C3F  3001               	movlw	1
 10254  0C40                     u2655:
 10255  0C40  35A2               	lslf	___wmul@multiplicand,f
 10256  0C41  0DA3               	rlf	___wmul@multiplicand+1,f
 10257  0C42  0B89               	decfsz	9,f
 10258  0C43  2C40               	goto	u2655
 10259  0C44                     l3523:
 10260  0C44  3001               	movlw	1
 10261  0C45                     u2665:
 10262  0C45  36A1               	lsrf	___wmul@multiplier+1,f
 10263  0C46  0CA0               	rrf	___wmul@multiplier,f
 10264  0C47  0B89               	decfsz	9,f
 10265  0C48  2C45               	goto	u2665
 10266  0C49                     l3525:
 10267  0C49  0820               	movf	___wmul@multiplier,w
 10268  0C4A  0421               	iorwf	___wmul@multiplier+1,w
 10269  0C4B  1D03               	btfss	3,2
 10270  0C4C  2C4E               	goto	u2671
 10271  0C4D  2C4F               	goto	u2670
 10272  0C4E                     u2671:
 10273  0C4E  2C37               	goto	l3519
 10274  0C4F                     u2670:
 10275  0C4F                     l3527:
 10276  0C4F  0825               	movf	___wmul@product+1,w
 10277  0C50  00A1               	movwf	?___wmul+1
 10278  0C51  0824               	movf	___wmul@product,w
 10279  0C52  00A0               	movwf	?___wmul
 10280  0C53                     l1316:
 10281  0C53  0008               	return
 10282  0C54                     __end_of___wmul:
 10283                           
 10284                           	psect	text10
 10285  0CAB                     __ptext10:	
 10286 ;; *************** function ___lwmod *****************
 10287 ;; Defined at:
 10288 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
 10289 ;; Parameters:    Size  Location     Type
 10290 ;;  divisor         2    8[BANK0 ] unsigned int 
 10291 ;;  dividend        2   10[BANK0 ] unsigned int 
 10292 ;; Auto vars:     Size  Location     Type
 10293 ;;  counter         1   13[BANK0 ] unsigned char 
 10294 ;; Return value:  Size  Location     Type
 10295 ;;                  2    8[BANK0 ] unsigned int 
 10296 ;; Registers used:
 10297 ;;		wreg, status,2, status,0
 10298 ;; Tracked objects:
 10299 ;;		On entry : 0/0
 10300 ;;		On exit  : 0/0
 10301 ;;		Unchanged: 0/0
 10302 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10303 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10304 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10305 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10306 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10307 ;;Total ram usage:        6 bytes
 10308 ;; Hardware stack levels used:    1
 10309 ;; Hardware stack levels required when called:    5
 10310 ;; This function calls:
 10311 ;;		Nothing
 10312 ;; This function is called by:
 10313 ;;		_main
 10314 ;;		_sprintf
 10315 ;;		_save_register
 10316 ;; This function uses a non-reentrant model
 10317 ;;
 10318                           
 10319                           
 10320                           ;psect for function ___lwmod
 10321  0CAB                     ___lwmod:
 10322  0CAB                     l3557:	
 10323                           ;incstack = 0
 10324                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 10325                           
 10326  0CAB  0020               	movlb	0	; select bank0
 10327  0CAC  0828               	movf	___lwmod@divisor,w
 10328  0CAD  0429               	iorwf	___lwmod@divisor+1,w
 10329  0CAE  1903               	btfsc	3,2
 10330  0CAF  2CB1               	goto	u2751
 10331  0CB0  2CB2               	goto	u2750
 10332  0CB1                     u2751:
 10333  0CB1  2CDB               	goto	l3575
 10334  0CB2                     u2750:
 10335  0CB2                     l3559:
 10336  0CB2  01AD               	clrf	___lwmod@counter
 10337  0CB3  0AAD               	incf	___lwmod@counter,f
 10338  0CB4  2CBE               	goto	l3565
 10339  0CB5                     l3561:
 10340  0CB5  3001               	movlw	1
 10341  0CB6                     u2765:
 10342  0CB6  35A8               	lslf	___lwmod@divisor,f
 10343  0CB7  0DA9               	rlf	___lwmod@divisor+1,f
 10344  0CB8  0B89               	decfsz	9,f
 10345  0CB9  2CB6               	goto	u2765
 10346  0CBA                     l3563:
 10347  0CBA  3001               	movlw	1
 10348  0CBB  00AC               	movwf	??___lwmod
 10349  0CBC  082C               	movf	??___lwmod,w
 10350  0CBD  07AD               	addwf	___lwmod@counter,f
 10351  0CBE                     l3565:
 10352  0CBE  1FA9               	btfss	___lwmod@divisor+1,7
 10353  0CBF  2CC1               	goto	u2771
 10354  0CC0  2CC2               	goto	u2770
 10355  0CC1                     u2771:
 10356  0CC1  2CB5               	goto	l3561
 10357  0CC2                     u2770:
 10358  0CC2                     l3567:
 10359  0CC2  0829               	movf	___lwmod@divisor+1,w
 10360  0CC3  022B               	subwf	___lwmod@dividend+1,w
 10361  0CC4  1D03               	skipz
 10362  0CC5  2CC8               	goto	u2785
 10363  0CC6  0828               	movf	___lwmod@divisor,w
 10364  0CC7  022A               	subwf	___lwmod@dividend,w
 10365  0CC8                     u2785:
 10366  0CC8  1C03               	skipc
 10367  0CC9  2CCB               	goto	u2781
 10368  0CCA  2CCC               	goto	u2780
 10369  0CCB                     u2781:
 10370  0CCB  2CD0               	goto	l3571
 10371  0CCC                     u2780:
 10372  0CCC                     l3569:
 10373  0CCC  0828               	movf	___lwmod@divisor,w
 10374  0CCD  02AA               	subwf	___lwmod@dividend,f
 10375  0CCE  0829               	movf	___lwmod@divisor+1,w
 10376  0CCF  3BAB               	subwfb	___lwmod@dividend+1,f
 10377  0CD0                     l3571:
 10378  0CD0  3001               	movlw	1
 10379  0CD1                     u2795:
 10380  0CD1  36A9               	lsrf	___lwmod@divisor+1,f
 10381  0CD2  0CA8               	rrf	___lwmod@divisor,f
 10382  0CD3  0B89               	decfsz	9,f
 10383  0CD4  2CD1               	goto	u2795
 10384  0CD5                     l3573:
 10385  0CD5  3001               	movlw	1
 10386  0CD6  02AD               	subwf	___lwmod@counter,f
 10387  0CD7  1D03               	btfss	3,2
 10388  0CD8  2CDA               	goto	u2801
 10389  0CD9  2CDB               	goto	u2800
 10390  0CDA                     u2801:
 10391  0CDA  2CC2               	goto	l3567
 10392  0CDB                     u2800:
 10393  0CDB                     l3575:
 10394  0CDB  082B               	movf	___lwmod@dividend+1,w
 10395  0CDC  00A9               	movwf	?___lwmod+1
 10396  0CDD  082A               	movf	___lwmod@dividend,w
 10397  0CDE  00A8               	movwf	?___lwmod
 10398  0CDF                     l1596:
 10399  0CDF  0008               	return
 10400  0CE0                     __end_of___lwmod:
 10401                           
 10402                           	psect	text11
 10403  0D1B                     __ptext11:	
 10404 ;; *************** function ___lwdiv *****************
 10405 ;; Defined at:
 10406 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
 10407 ;; Parameters:    Size  Location     Type
 10408 ;;  divisor         2    0[BANK0 ] unsigned int 
 10409 ;;  dividend        2    2[BANK0 ] unsigned int 
 10410 ;; Auto vars:     Size  Location     Type
 10411 ;;  quotient        2    5[BANK0 ] unsigned int 
 10412 ;;  counter         1    7[BANK0 ] unsigned char 
 10413 ;; Return value:  Size  Location     Type
 10414 ;;                  2    0[BANK0 ] unsigned int 
 10415 ;; Registers used:
 10416 ;;		wreg, status,2, status,0
 10417 ;; Tracked objects:
 10418 ;;		On entry : 0/0
 10419 ;;		On exit  : 0/0
 10420 ;;		Unchanged: 0/0
 10421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10422 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10423 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10424 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10425 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10426 ;;Total ram usage:        8 bytes
 10427 ;; Hardware stack levels used:    1
 10428 ;; Hardware stack levels required when called:    5
 10429 ;; This function calls:
 10430 ;;		Nothing
 10431 ;; This function is called by:
 10432 ;;		_sprintf
 10433 ;; This function uses a non-reentrant model
 10434 ;;
 10435                           
 10436                           
 10437                           ;psect for function ___lwdiv
 10438  0D1B                     ___lwdiv:
 10439  0D1B                     l3531:	
 10440                           ;incstack = 0
 10441                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10442                           
 10443  0D1B  0020               	movlb	0	; select bank0
 10444  0D1C  01A5               	clrf	___lwdiv@quotient
 10445  0D1D  01A6               	clrf	___lwdiv@quotient+1
 10446  0D1E                     l3533:
 10447  0D1E  0820               	movf	___lwdiv@divisor,w
 10448  0D1F  0421               	iorwf	___lwdiv@divisor+1,w
 10449  0D20  1903               	btfsc	3,2
 10450  0D21  2D23               	goto	u2681
 10451  0D22  2D24               	goto	u2680
 10452  0D23                     u2681:
 10453  0D23  2D53               	goto	l3553
 10454  0D24                     u2680:
 10455  0D24                     l3535:
 10456  0D24  01A7               	clrf	___lwdiv@counter
 10457  0D25  0AA7               	incf	___lwdiv@counter,f
 10458  0D26  2D30               	goto	l3541
 10459  0D27                     l3537:
 10460  0D27  3001               	movlw	1
 10461  0D28                     u2695:
 10462  0D28  35A0               	lslf	___lwdiv@divisor,f
 10463  0D29  0DA1               	rlf	___lwdiv@divisor+1,f
 10464  0D2A  0B89               	decfsz	9,f
 10465  0D2B  2D28               	goto	u2695
 10466  0D2C                     l3539:
 10467  0D2C  3001               	movlw	1
 10468  0D2D  00A4               	movwf	??___lwdiv
 10469  0D2E  0824               	movf	??___lwdiv,w
 10470  0D2F  07A7               	addwf	___lwdiv@counter,f
 10471  0D30                     l3541:
 10472  0D30  1FA1               	btfss	___lwdiv@divisor+1,7
 10473  0D31  2D33               	goto	u2701
 10474  0D32  2D34               	goto	u2700
 10475  0D33                     u2701:
 10476  0D33  2D27               	goto	l3537
 10477  0D34                     u2700:
 10478  0D34                     l3543:
 10479  0D34  3001               	movlw	1
 10480  0D35                     u2715:
 10481  0D35  35A5               	lslf	___lwdiv@quotient,f
 10482  0D36  0DA6               	rlf	___lwdiv@quotient+1,f
 10483  0D37  0B89               	decfsz	9,f
 10484  0D38  2D35               	goto	u2715
 10485  0D39  0821               	movf	___lwdiv@divisor+1,w
 10486  0D3A  0223               	subwf	___lwdiv@dividend+1,w
 10487  0D3B  1D03               	skipz
 10488  0D3C  2D3F               	goto	u2725
 10489  0D3D  0820               	movf	___lwdiv@divisor,w
 10490  0D3E  0222               	subwf	___lwdiv@dividend,w
 10491  0D3F                     u2725:
 10492  0D3F  1C03               	skipc
 10493  0D40  2D42               	goto	u2721
 10494  0D41  2D43               	goto	u2720
 10495  0D42                     u2721:
 10496  0D42  2D48               	goto	l3549
 10497  0D43                     u2720:
 10498  0D43                     l3545:
 10499  0D43  0820               	movf	___lwdiv@divisor,w
 10500  0D44  02A2               	subwf	___lwdiv@dividend,f
 10501  0D45  0821               	movf	___lwdiv@divisor+1,w
 10502  0D46  3BA3               	subwfb	___lwdiv@dividend+1,f
 10503  0D47                     l3547:
 10504  0D47  1425               	bsf	___lwdiv@quotient,0
 10505  0D48                     l3549:
 10506  0D48  3001               	movlw	1
 10507  0D49                     u2735:
 10508  0D49  36A1               	lsrf	___lwdiv@divisor+1,f
 10509  0D4A  0CA0               	rrf	___lwdiv@divisor,f
 10510  0D4B  0B89               	decfsz	9,f
 10511  0D4C  2D49               	goto	u2735
 10512  0D4D                     l3551:
 10513  0D4D  3001               	movlw	1
 10514  0D4E  02A7               	subwf	___lwdiv@counter,f
 10515  0D4F  1D03               	btfss	3,2
 10516  0D50  2D52               	goto	u2741
 10517  0D51  2D53               	goto	u2740
 10518  0D52                     u2741:
 10519  0D52  2D34               	goto	l3543
 10520  0D53                     u2740:
 10521  0D53                     l3553:
 10522  0D53  0826               	movf	___lwdiv@quotient+1,w
 10523  0D54  00A1               	movwf	?___lwdiv+1
 10524  0D55  0825               	movf	___lwdiv@quotient,w
 10525  0D56  00A0               	movwf	?___lwdiv
 10526  0D57                     l1586:
 10527  0D57  0008               	return
 10528  0D58                     __end_of___lwdiv:
 10529                           
 10530                           	psect	text12
 10531  0B90                     __ptext12:	
 10532 ;; *************** function _LCDstr *****************
 10533 ;; Defined at:
 10534 ;;		line 113 in file "LCD.c"
 10535 ;; Parameters:    Size  Location     Type
 10536 ;;  p               1    wreg     PTR unsigned char 
 10537 ;;		 -> lcd@buf(17), 
 10538 ;; Auto vars:     Size  Location     Type
 10539 ;;  p               1   11[BANK0 ] PTR unsigned char 
 10540 ;;		 -> lcd@buf(17), 
 10541 ;;  c               1   10[BANK0 ] unsigned char 
 10542 ;; Return value:  Size  Location     Type
 10543 ;;                  1    wreg      void 
 10544 ;; Registers used:
 10545 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10546 ;; Tracked objects:
 10547 ;;		On entry : 0/0
 10548 ;;		On exit  : 0/0
 10549 ;;		Unchanged: 0/0
 10550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10552 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10553 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10554 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10555 ;;Total ram usage:        3 bytes
 10556 ;; Hardware stack levels used:    1
 10557 ;; Hardware stack levels required when called:    8
 10558 ;; This function calls:
 10559 ;;		_LCDchar
 10560 ;; This function is called by:
 10561 ;;		_lcd
 10562 ;; This function uses a non-reentrant model
 10563 ;;
 10564                           
 10565                           
 10566                           ;psect for function _LCDstr
 10567  0B90                     _LCDstr:
 10568                           
 10569                           ;incstack = 0
 10570                           ; Regs used in _LCDstr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 10571                           ;LCDstr@p stored from wreg
 10572  0B90  0020               	movlb	0	; select bank0
 10573  0B91  00AB               	movwf	LCDstr@p
 10574  0B92                     l3675:
 10575                           
 10576                           ;LCD.c: 115: unsigned char c;;LCD.c: 117: while((c = *p++)) LCDchar(c);
 10577  0B92  2B97               	goto	l3679
 10578  0B93                     l3677:
 10579  0B93  082A               	movf	LCDstr@c,w
 10580  0B94  318A  2296  318B   	fcall	_LCDchar
 10581  0B97                     l3679:
 10582  0B97  0020               	movlb	0	; select bank0
 10583  0B98  082B               	movf	LCDstr@p,w
 10584  0B99  0086               	movwf	6
 10585  0B9A  0187               	clrf	7
 10586  0B9B  0AAB               	incf	LCDstr@p,f
 10587  0B9C  0801               	movf	1,w
 10588  0B9D  00A9               	movwf	??_LCDstr
 10589  0B9E  0829               	movf	??_LCDstr,w
 10590  0B9F  00AA               	movwf	LCDstr@c
 10591  0BA0  082A               	movf	LCDstr@c,w
 10592  0BA1  1D03               	btfss	3,2
 10593  0BA2  2BA4               	goto	u2911
 10594  0BA3  2BA5               	goto	u2910
 10595  0BA4                     u2911:
 10596  0BA4  2B93               	goto	l3677
 10597  0BA5                     u2910:
 10598  0BA5                     l921:
 10599  0BA5  0008               	return
 10600  0BA6                     __end_of_LCDstr:
 10601                           
 10602                           	psect	text13
 10603  0A96                     __ptext13:	
 10604 ;; *************** function _LCDchar *****************
 10605 ;; Defined at:
 10606 ;;		line 108 in file "LCD.c"
 10607 ;; Parameters:    Size  Location     Type
 10608 ;;  c               1    wreg     unsigned char 
 10609 ;; Auto vars:     Size  Location     Type
 10610 ;;  c               1    8[BANK0 ] unsigned char 
 10611 ;; Return value:  Size  Location     Type
 10612 ;;                  1    wreg      void 
 10613 ;; Registers used:
 10614 ;;		wreg, status,2, status,0, pclath, cstack
 10615 ;; Tracked objects:
 10616 ;;		On entry : 0/0
 10617 ;;		On exit  : 0/0
 10618 ;;		Unchanged: 0/0
 10619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10621 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10623 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10624 ;;Total ram usage:        1 bytes
 10625 ;; Hardware stack levels used:    1
 10626 ;; Hardware stack levels required when called:    7
 10627 ;; This function calls:
 10628 ;;		_LCDsend2x4
 10629 ;; This function is called by:
 10630 ;;		_LCDstr
 10631 ;; This function uses a non-reentrant model
 10632 ;;
 10633                           
 10634                           
 10635                           ;psect for function _LCDchar
 10636  0A96                     _LCDchar:
 10637                           
 10638                           ;incstack = 0
 10639                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 10640                           ;LCDchar@c stored from wreg
 10641  0A96  0020               	movlb	0	; select bank0
 10642  0A97  00A8               	movwf	LCDchar@c
 10643  0A98                     l3503:
 10644                           
 10645                           ;LCD.c: 110: LCDsend2x4(c, 0x01);
 10646  0A98  01A2               	clrf	LCDsend2x4@mode
 10647  0A99  0AA2               	incf	LCDsend2x4@mode,f
 10648  0A9A  0828               	movf	LCDchar@c,w
 10649  0A9B  318F  272C  318A   	fcall	_LCDsend2x4
 10650  0A9E                     l915:
 10651  0A9E  0008               	return
 10652  0A9F                     __end_of_LCDchar:
 10653                           
 10654                           	psect	text14
 10655  0A74                     __ptext14:	
 10656 ;; *************** function _LCDcmd *****************
 10657 ;; Defined at:
 10658 ;;		line 103 in file "LCD.c"
 10659 ;; Parameters:    Size  Location     Type
 10660 ;;  c               1    wreg     unsigned char 
 10661 ;; Auto vars:     Size  Location     Type
 10662 ;;  c               1    8[BANK0 ] unsigned char 
 10663 ;; Return value:  Size  Location     Type
 10664 ;;                  1    wreg      void 
 10665 ;; Registers used:
 10666 ;;		wreg, status,2, status,0, pclath, cstack
 10667 ;; Tracked objects:
 10668 ;;		On entry : 0/0
 10669 ;;		On exit  : 0/0
 10670 ;;		Unchanged: 0/0
 10671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10673 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10675 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10676 ;;Total ram usage:        1 bytes
 10677 ;; Hardware stack levels used:    1
 10678 ;; Hardware stack levels required when called:    7
 10679 ;; This function calls:
 10680 ;;		_LCDsend2x4
 10681 ;; This function is called by:
 10682 ;;		_lcd
 10683 ;; This function uses a non-reentrant model
 10684 ;;
 10685                           
 10686                           
 10687                           ;psect for function _LCDcmd
 10688  0A74                     _LCDcmd:
 10689                           
 10690                           ;incstack = 0
 10691                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 10692                           ;LCDcmd@c stored from wreg
 10693  0A74  0020               	movlb	0	; select bank0
 10694  0A75  00A8               	movwf	LCDcmd@c
 10695  0A76                     l3673:
 10696                           
 10697                           ;LCD.c: 105: LCDsend2x4(c, 0);
 10698  0A76  01A2               	clrf	LCDsend2x4@mode
 10699  0A77  0828               	movf	LCDcmd@c,w
 10700  0A78  318F  272C  318A   	fcall	_LCDsend2x4
 10701  0A7B                     l912:
 10702  0A7B  0008               	return
 10703  0A7C                     __end_of_LCDcmd:
 10704                           
 10705                           	psect	text15
 10706  0AB3                     __ptext15:	
 10707 ;; *************** function _i2c1_driver_open *****************
 10708 ;; Defined at:
 10709 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
 10710 ;; Parameters:    Size  Location     Type
 10711 ;;		None
 10712 ;; Auto vars:     Size  Location     Type
 10713 ;;		None
 10714 ;; Return value:  Size  Location     Type
 10715 ;;		None               void
 10716 ;; Registers used:
 10717 ;;		wreg, status,2
 10718 ;; Tracked objects:
 10719 ;;		On entry : 0/0
 10720 ;;		On exit  : 0/0
 10721 ;;		Unchanged: 0/0
 10722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10723 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10726 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10727 ;;Total ram usage:        0 bytes
 10728 ;; Hardware stack levels used:    1
 10729 ;; Hardware stack levels required when called:    5
 10730 ;; This function calls:
 10731 ;;		Nothing
 10732 ;; This function is called by:
 10733 ;;		_main
 10734 ;; This function uses a non-reentrant model
 10735 ;;
 10736                           
 10737                           
 10738                           ;psect for function _i2c1_driver_open
 10739  0AB3                     _i2c1_driver_open:
 10740  0AB3                     l3811:	
 10741                           ;incstack = 0
 10742                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 10743                           
 10744                           
 10745                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
 10746  0AB3  0023               	movlb	3	; select bank3
 10747  0AB4  1A90               	btfsc	16,5	;volatile
 10748  0AB5  2AB7               	goto	u3101
 10749  0AB6  2AB8               	goto	u3100
 10750  0AB7                     u3101:
 10751  0AB7  2ABE               	goto	l229
 10752  0AB8                     u3100:
 10753  0AB8                     l3813:
 10754                           
 10755                           ;i2c1_driver.c: 86: {;i2c1_driver.c: 87: SSP1STAT = 0x00;
 10756  0AB8  018F               	clrf	15	;volatile
 10757  0AB9                     l3815:
 10758                           
 10759                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
 10760  0AB9  3028               	movlw	40
 10761  0ABA  0090               	movwf	16	;volatile
 10762  0ABB                     l3817:
 10763                           
 10764                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
 10765  0ABB  0191               	clrf	17	;volatile
 10766                           
 10767                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
 10768  0ABC  3003               	movlw	3
 10769  0ABD  008D               	movwf	13	;volatile
 10770  0ABE                     l229:
 10771  0ABE  0008               	return
 10772  0ABF                     __end_of_i2c1_driver_open:
 10773                           
 10774                           	psect	text16
 10775  0B42                     __ptext16:	
 10776 ;; *************** function _conf_temp *****************
 10777 ;; Defined at:
 10778 ;;		line 521 in file "main.c"
 10779 ;; Parameters:    Size  Location     Type
 10780 ;;		None
 10781 ;; Auto vars:     Size  Location     Type
 10782 ;;		None
 10783 ;; Return value:  Size  Location     Type
 10784 ;;                  1    wreg      void 
 10785 ;; Registers used:
 10786 ;;		wreg, status,2, status,0
 10787 ;; Tracked objects:
 10788 ;;		On entry : 0/0
 10789 ;;		On exit  : 0/0
 10790 ;;		Unchanged: 0/0
 10791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10794 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10795 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10796 ;;Total ram usage:        1 bytes
 10797 ;; Hardware stack levels used:    1
 10798 ;; Hardware stack levels required when called:    5
 10799 ;; This function calls:
 10800 ;;		Nothing
 10801 ;; This function is called by:
 10802 ;;		_main
 10803 ;; This function uses a non-reentrant model
 10804 ;;
 10805                           
 10806                           
 10807                           ;psect for function _conf_temp
 10808  0B42                     _conf_temp:
 10809  0B42                     l3995:	
 10810                           ;incstack = 0
 10811                           ; Regs used in _conf_temp: [wreg+status,2+status,0]
 10812                           
 10813                           
 10814                           ;main.c: 523: if(ALAT == 50){
 10815  0B42  3032               	movlw	50
 10816  0B43  0021               	movlb	1	; select bank1
 10817  0B44  0637               	xorwf	_ALAT^(0+128),w
 10818  0B45  1D03               	btfss	3,2
 10819  0B46  2B48               	goto	u3501
 10820  0B47  2B49               	goto	u3500
 10821  0B48                     u3501:
 10822  0B48  2B4B               	goto	l3999
 10823  0B49                     u3500:
 10824  0B49                     l3997:
 10825                           
 10826                           ;main.c: 524: ALAT = 0;
 10827  0B49  01B7               	clrf	_ALAT^(0+128)
 10828                           
 10829                           ;main.c: 525: }else{
 10830  0B4A  2B51               	goto	l734
 10831  0B4B                     l3999:
 10832                           
 10833                           ;main.c: 526: ALAT++;
 10834  0B4B  3001               	movlw	1
 10835  0B4C  0020               	movlb	0	; select bank0
 10836  0B4D  00A0               	movwf	??_conf_temp
 10837  0B4E  0820               	movf	??_conf_temp,w
 10838  0B4F  0021               	movlb	1	; select bank1
 10839  0B50  07B7               	addwf	_ALAT^(0+128),f
 10840  0B51                     l734:
 10841  0B51  0008               	return
 10842  0B52                     __end_of_conf_temp:
 10843                           
 10844                           	psect	text17
 10845  0B32                     __ptext17:	
 10846 ;; *************** function _conf_lumin *****************
 10847 ;; Defined at:
 10848 ;;		line 532 in file "main.c"
 10849 ;; Parameters:    Size  Location     Type
 10850 ;;		None
 10851 ;; Auto vars:     Size  Location     Type
 10852 ;;		None
 10853 ;; Return value:  Size  Location     Type
 10854 ;;                  1    wreg      void 
 10855 ;; Registers used:
 10856 ;;		wreg, status,2, status,0
 10857 ;; Tracked objects:
 10858 ;;		On entry : 0/0
 10859 ;;		On exit  : 0/0
 10860 ;;		Unchanged: 0/0
 10861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10862 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10864 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10865 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10866 ;;Total ram usage:        1 bytes
 10867 ;; Hardware stack levels used:    1
 10868 ;; Hardware stack levels required when called:    5
 10869 ;; This function calls:
 10870 ;;		Nothing
 10871 ;; This function is called by:
 10872 ;;		_main
 10873 ;; This function uses a non-reentrant model
 10874 ;;
 10875                           
 10876                           
 10877                           ;psect for function _conf_lumin
 10878  0B32                     _conf_lumin:
 10879  0B32                     l4003:	
 10880                           ;incstack = 0
 10881                           ; Regs used in _conf_lumin: [wreg+status,2+status,0]
 10882                           
 10883                           
 10884                           ;main.c: 534: if(ALAL == 7){
 10885  0B32  3007               	movlw	7
 10886  0B33  0021               	movlb	1	; select bank1
 10887  0B34  0636               	xorwf	_ALAL^(0+128),w
 10888  0B35  1D03               	btfss	3,2
 10889  0B36  2B38               	goto	u3511
 10890  0B37  2B39               	goto	u3510
 10891  0B38                     u3511:
 10892  0B38  2B3B               	goto	l4007
 10893  0B39                     u3510:
 10894  0B39                     l4005:
 10895                           
 10896                           ;main.c: 535: ALAL = 0;
 10897  0B39  01B6               	clrf	_ALAL^(0+128)
 10898                           
 10899                           ;main.c: 536: }else{
 10900  0B3A  2B41               	goto	l739
 10901  0B3B                     l4007:
 10902                           
 10903                           ;main.c: 537: ALAL++;
 10904  0B3B  3001               	movlw	1
 10905  0B3C  0020               	movlb	0	; select bank0
 10906  0B3D  00A0               	movwf	??_conf_lumin
 10907  0B3E  0820               	movf	??_conf_lumin,w
 10908  0B3F  0021               	movlb	1	; select bank1
 10909  0B40  07B6               	addwf	_ALAL^(0+128),f
 10910  0B41                     l739:
 10911  0B41  0008               	return
 10912  0B42                     __end_of_conf_lumin:
 10913                           
 10914                           	psect	text18
 10915  0A67                     __ptext18:	
 10916 ;; *************** function _conf_clock_ss *****************
 10917 ;; Defined at:
 10918 ;;		line 486 in file "main.c"
 10919 ;; Parameters:    Size  Location     Type
 10920 ;;		None
 10921 ;; Auto vars:     Size  Location     Type
 10922 ;;		None
 10923 ;; Return value:  Size  Location     Type
 10924 ;;                  1    wreg      void 
 10925 ;; Registers used:
 10926 ;;		wreg
 10927 ;; Tracked objects:
 10928 ;;		On entry : 0/0
 10929 ;;		On exit  : 0/0
 10930 ;;		Unchanged: 0/0
 10931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10936 ;;Total ram usage:        0 bytes
 10937 ;; Hardware stack levels used:    1
 10938 ;; Hardware stack levels required when called:    5
 10939 ;; This function calls:
 10940 ;;		Nothing
 10941 ;; This function is called by:
 10942 ;;		_main
 10943 ;; This function uses a non-reentrant model
 10944 ;;
 10945                           
 10946                           
 10947                           ;psect for function _conf_clock_ss
 10948  0A67                     _conf_clock_ss:
 10949  0A67                     l3967:	
 10950                           ;incstack = 0
 10951                           ; Regs used in _conf_clock_ss: [wreg]
 10952                           
 10953                           
 10954                           ;main.c: 487: timer_flag++;
 10955  0A67  3001               	movlw	1
 10956  0A68  07FB               	addwf	_timer_flag,f	;volatile
 10957  0A69  3000               	movlw	0
 10958  0A6A  3DFC               	addwfc	_timer_flag+1,f	;volatile
 10959  0A6B                     l714:
 10960  0A6B  0008               	return
 10961  0A6C                     __end_of_conf_clock_ss:
 10962                           
 10963                           	psect	text19
 10964  0AF4                     __ptext19:	
 10965 ;; *************** function _conf_clock_mm *****************
 10966 ;; Defined at:
 10967 ;;		line 476 in file "main.c"
 10968 ;; Parameters:    Size  Location     Type
 10969 ;;		None
 10970 ;; Auto vars:     Size  Location     Type
 10971 ;;		None
 10972 ;; Return value:  Size  Location     Type
 10973 ;;                  1    wreg      void 
 10974 ;; Registers used:
 10975 ;;		wreg, status,2, status,0
 10976 ;; Tracked objects:
 10977 ;;		On entry : 0/0
 10978 ;;		On exit  : 0/0
 10979 ;;		Unchanged: 0/0
 10980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10983 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10984 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10985 ;;Total ram usage:        1 bytes
 10986 ;; Hardware stack levels used:    1
 10987 ;; Hardware stack levels required when called:    5
 10988 ;; This function calls:
 10989 ;;		Nothing
 10990 ;; This function is called by:
 10991 ;;		_main
 10992 ;; This function uses a non-reentrant model
 10993 ;;
 10994                           
 10995                           
 10996                           ;psect for function _conf_clock_mm
 10997  0AF4                     _conf_clock_mm:
 10998  0AF4                     l3959:	
 10999                           ;incstack = 0
 11000                           ; Regs used in _conf_clock_mm: [wreg+status,2+status,0]
 11001                           
 11002                           
 11003                           ;main.c: 477: if (CLKM == 59){
 11004  0AF4  303B               	movlw	59
 11005  0AF5  0020               	movlb	0	; select bank0
 11006  0AF6  066E               	xorwf	_CLKM,w
 11007  0AF7  1D03               	btfss	3,2
 11008  0AF8  2AFA               	goto	u3461
 11009  0AF9  2AFB               	goto	u3460
 11010  0AFA                     u3461:
 11011  0AFA  2AFD               	goto	l3963
 11012  0AFB                     u3460:
 11013  0AFB                     l3961:
 11014                           
 11015                           ;main.c: 478: CLKM = 0;
 11016  0AFB  01EE               	clrf	_CLKM
 11017                           
 11018                           ;main.c: 479: }else{
 11019  0AFC  2B01               	goto	l711
 11020  0AFD                     l3963:
 11021                           
 11022                           ;main.c: 480: CLKM++;
 11023  0AFD  3001               	movlw	1
 11024  0AFE  00A0               	movwf	??_conf_clock_mm
 11025  0AFF  0820               	movf	??_conf_clock_mm,w
 11026  0B00  07EE               	addwf	_CLKM,f
 11027  0B01                     l711:
 11028  0B01  0008               	return
 11029  0B02                     __end_of_conf_clock_mm:
 11030                           
 11031                           	psect	text20
 11032  0AE6                     __ptext20:	
 11033 ;; *************** function _conf_clock_hh *****************
 11034 ;; Defined at:
 11035 ;;		line 466 in file "main.c"
 11036 ;; Parameters:    Size  Location     Type
 11037 ;;		None
 11038 ;; Auto vars:     Size  Location     Type
 11039 ;;		None
 11040 ;; Return value:  Size  Location     Type
 11041 ;;                  1    wreg      void 
 11042 ;; Registers used:
 11043 ;;		wreg, status,2, status,0
 11044 ;; Tracked objects:
 11045 ;;		On entry : 0/0
 11046 ;;		On exit  : 0/0
 11047 ;;		Unchanged: 0/0
 11048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11051 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11052 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11053 ;;Total ram usage:        1 bytes
 11054 ;; Hardware stack levels used:    1
 11055 ;; Hardware stack levels required when called:    5
 11056 ;; This function calls:
 11057 ;;		Nothing
 11058 ;; This function is called by:
 11059 ;;		_main
 11060 ;; This function uses a non-reentrant model
 11061 ;;
 11062                           
 11063                           
 11064                           ;psect for function _conf_clock_hh
 11065  0AE6                     _conf_clock_hh:
 11066  0AE6                     l3951:	
 11067                           ;incstack = 0
 11068                           ; Regs used in _conf_clock_hh: [wreg+status,2+status,0]
 11069                           
 11070                           
 11071                           ;main.c: 467: if (CLKH == 23){
 11072  0AE6  3017               	movlw	23
 11073  0AE7  0020               	movlb	0	; select bank0
 11074  0AE8  066F               	xorwf	_CLKH,w
 11075  0AE9  1D03               	btfss	3,2
 11076  0AEA  2AEC               	goto	u3451
 11077  0AEB  2AED               	goto	u3450
 11078  0AEC                     u3451:
 11079  0AEC  2AEF               	goto	l3955
 11080  0AED                     u3450:
 11081  0AED                     l3953:
 11082                           
 11083                           ;main.c: 468: CLKH = 0;
 11084  0AED  01EF               	clrf	_CLKH
 11085                           
 11086                           ;main.c: 469: }else{
 11087  0AEE  2AF3               	goto	l706
 11088  0AEF                     l3955:
 11089                           
 11090                           ;main.c: 470: CLKH++;
 11091  0AEF  3001               	movlw	1
 11092  0AF0  00A0               	movwf	??_conf_clock_hh
 11093  0AF1  0820               	movf	??_conf_clock_hh,w
 11094  0AF2  07EF               	addwf	_CLKH,f
 11095  0AF3                     l706:
 11096  0AF3  0008               	return
 11097  0AF4                     __end_of_conf_clock_hh:
 11098                           
 11099                           	psect	text21
 11100  0B22                     __ptext21:	
 11101 ;; *************** function _conf_alarm_ss *****************
 11102 ;; Defined at:
 11103 ;;		line 511 in file "main.c"
 11104 ;; Parameters:    Size  Location     Type
 11105 ;;		None
 11106 ;; Auto vars:     Size  Location     Type
 11107 ;;		None
 11108 ;; Return value:  Size  Location     Type
 11109 ;;                  1    wreg      void 
 11110 ;; Registers used:
 11111 ;;		wreg, status,2, status,0
 11112 ;; Tracked objects:
 11113 ;;		On entry : 0/0
 11114 ;;		On exit  : 0/0
 11115 ;;		Unchanged: 0/0
 11116 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11119 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11120 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11121 ;;Total ram usage:        1 bytes
 11122 ;; Hardware stack levels used:    1
 11123 ;; Hardware stack levels required when called:    5
 11124 ;; This function calls:
 11125 ;;		Nothing
 11126 ;; This function is called by:
 11127 ;;		_main
 11128 ;; This function uses a non-reentrant model
 11129 ;;
 11130                           
 11131                           
 11132                           ;psect for function _conf_alarm_ss
 11133  0B22                     _conf_alarm_ss:
 11134  0B22                     l3987:	
 11135                           ;incstack = 0
 11136                           ; Regs used in _conf_alarm_ss: [wreg+status,2+status,0]
 11137                           
 11138                           
 11139                           ;main.c: 512: if (ALAS == 59){
 11140  0B22  303B               	movlw	59
 11141  0B23  0021               	movlb	1	; select bank1
 11142  0B24  0634               	xorwf	_ALAS^(0+128),w
 11143  0B25  1D03               	btfss	3,2
 11144  0B26  2B28               	goto	u3491
 11145  0B27  2B29               	goto	u3490
 11146  0B28                     u3491:
 11147  0B28  2B2B               	goto	l3991
 11148  0B29                     u3490:
 11149  0B29                     l3989:
 11150                           
 11151                           ;main.c: 513: ALAS = 0;
 11152  0B29  01B4               	clrf	_ALAS^(0+128)
 11153                           
 11154                           ;main.c: 514: }else{
 11155  0B2A  2B31               	goto	l729
 11156  0B2B                     l3991:
 11157                           
 11158                           ;main.c: 515: ALAS++;
 11159  0B2B  3001               	movlw	1
 11160  0B2C  0020               	movlb	0	; select bank0
 11161  0B2D  00A0               	movwf	??_conf_alarm_ss
 11162  0B2E  0820               	movf	??_conf_alarm_ss,w
 11163  0B2F  0021               	movlb	1	; select bank1
 11164  0B30  07B4               	addwf	_ALAS^(0+128),f
 11165  0B31                     l729:
 11166  0B31  0008               	return
 11167  0B32                     __end_of_conf_alarm_ss:
 11168                           
 11169                           	psect	text22
 11170  0B12                     __ptext22:	
 11171 ;; *************** function _conf_alarm_mm *****************
 11172 ;; Defined at:
 11173 ;;		line 501 in file "main.c"
 11174 ;; Parameters:    Size  Location     Type
 11175 ;;		None
 11176 ;; Auto vars:     Size  Location     Type
 11177 ;;		None
 11178 ;; Return value:  Size  Location     Type
 11179 ;;                  1    wreg      void 
 11180 ;; Registers used:
 11181 ;;		wreg, status,2, status,0
 11182 ;; Tracked objects:
 11183 ;;		On entry : 0/0
 11184 ;;		On exit  : 0/0
 11185 ;;		Unchanged: 0/0
 11186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11189 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11190 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11191 ;;Total ram usage:        1 bytes
 11192 ;; Hardware stack levels used:    1
 11193 ;; Hardware stack levels required when called:    5
 11194 ;; This function calls:
 11195 ;;		Nothing
 11196 ;; This function is called by:
 11197 ;;		_main
 11198 ;; This function uses a non-reentrant model
 11199 ;;
 11200                           
 11201                           
 11202                           ;psect for function _conf_alarm_mm
 11203  0B12                     _conf_alarm_mm:
 11204  0B12                     l3979:	
 11205                           ;incstack = 0
 11206                           ; Regs used in _conf_alarm_mm: [wreg+status,2+status,0]
 11207                           
 11208                           
 11209                           ;main.c: 502: if (ALAM == 59){
 11210  0B12  303B               	movlw	59
 11211  0B13  0021               	movlb	1	; select bank1
 11212  0B14  0635               	xorwf	_ALAM^(0+128),w
 11213  0B15  1D03               	btfss	3,2
 11214  0B16  2B18               	goto	u3481
 11215  0B17  2B19               	goto	u3480
 11216  0B18                     u3481:
 11217  0B18  2B1B               	goto	l3983
 11218  0B19                     u3480:
 11219  0B19                     l3981:
 11220                           
 11221                           ;main.c: 503: ALAM = 0;
 11222  0B19  01B5               	clrf	_ALAM^(0+128)
 11223                           
 11224                           ;main.c: 504: }else{
 11225  0B1A  2B21               	goto	l724
 11226  0B1B                     l3983:
 11227                           
 11228                           ;main.c: 505: ALAM++;
 11229  0B1B  3001               	movlw	1
 11230  0B1C  0020               	movlb	0	; select bank0
 11231  0B1D  00A0               	movwf	??_conf_alarm_mm
 11232  0B1E  0820               	movf	??_conf_alarm_mm,w
 11233  0B1F  0021               	movlb	1	; select bank1
 11234  0B20  07B5               	addwf	_ALAM^(0+128),f
 11235  0B21                     l724:
 11236  0B21  0008               	return
 11237  0B22                     __end_of_conf_alarm_mm:
 11238                           
 11239                           	psect	text23
 11240  0AD8                     __ptext23:	
 11241 ;; *************** function _conf_alarm_hh *****************
 11242 ;; Defined at:
 11243 ;;		line 491 in file "main.c"
 11244 ;; Parameters:    Size  Location     Type
 11245 ;;		None
 11246 ;; Auto vars:     Size  Location     Type
 11247 ;;		None
 11248 ;; Return value:  Size  Location     Type
 11249 ;;                  1    wreg      void 
 11250 ;; Registers used:
 11251 ;;		wreg, status,2, status,0
 11252 ;; Tracked objects:
 11253 ;;		On entry : 0/0
 11254 ;;		On exit  : 0/0
 11255 ;;		Unchanged: 0/0
 11256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11259 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11260 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11261 ;;Total ram usage:        1 bytes
 11262 ;; Hardware stack levels used:    1
 11263 ;; Hardware stack levels required when called:    5
 11264 ;; This function calls:
 11265 ;;		Nothing
 11266 ;; This function is called by:
 11267 ;;		_main
 11268 ;; This function uses a non-reentrant model
 11269 ;;
 11270                           
 11271                           
 11272                           ;psect for function _conf_alarm_hh
 11273  0AD8                     _conf_alarm_hh:
 11274  0AD8                     l3971:	
 11275                           ;incstack = 0
 11276                           ; Regs used in _conf_alarm_hh: [wreg+status,2+status,0]
 11277                           
 11278                           
 11279                           ;main.c: 492: if (ALAH == 23){
 11280  0AD8  3017               	movlw	23
 11281  0AD9  067D               	xorwf	_ALAH,w
 11282  0ADA  1D03               	btfss	3,2
 11283  0ADB  2ADD               	goto	u3471
 11284  0ADC  2ADE               	goto	u3470
 11285  0ADD                     u3471:
 11286  0ADD  2AE0               	goto	l3975
 11287  0ADE                     u3470:
 11288  0ADE                     l3973:
 11289                           
 11290                           ;main.c: 493: ALAH = 0;
 11291  0ADE  01FD               	clrf	_ALAH
 11292                           
 11293                           ;main.c: 494: }else{
 11294  0ADF  2AE5               	goto	l719
 11295  0AE0                     l3975:
 11296                           
 11297                           ;main.c: 495: ALAH++;
 11298  0AE0  3001               	movlw	1
 11299  0AE1  0020               	movlb	0	; select bank0
 11300  0AE2  00A0               	movwf	??_conf_alarm_hh
 11301  0AE3  0820               	movf	??_conf_alarm_hh,w
 11302  0AE4  07FD               	addwf	_ALAH,f
 11303  0AE5                     l719:
 11304  0AE5  0008               	return
 11305  0AE6                     __end_of_conf_alarm_hh:
 11306                           
 11307                           	psect	text24
 11308  0AA8                     __ptext24:	
 11309 ;; *************** function _conf_alarm_flag *****************
 11310 ;; Defined at:
 11311 ;;		line 543 in file "main.c"
 11312 ;; Parameters:    Size  Location     Type
 11313 ;;		None
 11314 ;; Auto vars:     Size  Location     Type
 11315 ;;		None
 11316 ;; Return value:  Size  Location     Type
 11317 ;;                  1    wreg      void 
 11318 ;; Registers used:
 11319 ;;		wreg, status,2, status,0
 11320 ;; Tracked objects:
 11321 ;;		On entry : 0/0
 11322 ;;		On exit  : 0/0
 11323 ;;		Unchanged: 0/0
 11324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11329 ;;Total ram usage:        0 bytes
 11330 ;; Hardware stack levels used:    1
 11331 ;; Hardware stack levels required when called:    5
 11332 ;; This function calls:
 11333 ;;		Nothing
 11334 ;; This function is called by:
 11335 ;;		_main
 11336 ;; This function uses a non-reentrant model
 11337 ;;
 11338                           
 11339                           
 11340                           ;psect for function _conf_alarm_flag
 11341  0AA8                     _conf_alarm_flag:
 11342  0AA8                     l4011:	
 11343                           ;incstack = 0
 11344                           ; Regs used in _conf_alarm_flag: [wreg+status,2+status,0]
 11345                           
 11346                           
 11347                           ;main.c: 545: if(ALAF == 0){
 11348  0AA8  0021               	movlb	1	; select bank1
 11349  0AA9  0833               	movf	_ALAF^(0+128),w
 11350  0AAA  1D03               	btfss	3,2
 11351  0AAB  2AAD               	goto	u3521
 11352  0AAC  2AAE               	goto	u3520
 11353  0AAD                     u3521:
 11354  0AAD  2AB1               	goto	l4015
 11355  0AAE                     u3520:
 11356  0AAE                     l4013:
 11357                           
 11358                           ;main.c: 546: ALAF = 1;
 11359  0AAE  01B3               	clrf	_ALAF^(0+128)
 11360  0AAF  0AB3               	incf	_ALAF^(0+128),f
 11361                           
 11362                           ;main.c: 547: }else{
 11363  0AB0  2AB2               	goto	l744
 11364  0AB1                     l4015:
 11365                           
 11366                           ;main.c: 548: ALAF = 0;
 11367  0AB1  01B3               	clrf	_ALAF^(0+128)
 11368  0AB2                     l744:
 11369  0AB2  0008               	return
 11370  0AB3                     __end_of_conf_alarm_flag:
 11371                           
 11372                           	psect	text25
 11373  0BDA                     __ptext25:	
 11374 ;; *************** function _checkButtonS2 *****************
 11375 ;; Defined at:
 11376 ;;		line 418 in file "main.c"
 11377 ;; Parameters:    Size  Location     Type
 11378 ;;		None
 11379 ;; Auto vars:     Size  Location     Type
 11380 ;;		None
 11381 ;; Return value:  Size  Location     Type
 11382 ;;                  1    wreg      void 
 11383 ;; Registers used:
 11384 ;;		wreg, status,2, status,0
 11385 ;; Tracked objects:
 11386 ;;		On entry : 0/0
 11387 ;;		On exit  : 0/0
 11388 ;;		Unchanged: 0/0
 11389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11392 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11393 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11394 ;;Total ram usage:        1 bytes
 11395 ;; Hardware stack levels used:    1
 11396 ;; Hardware stack levels required when called:    5
 11397 ;; This function calls:
 11398 ;;		Nothing
 11399 ;; This function is called by:
 11400 ;;		_main
 11401 ;; This function uses a non-reentrant model
 11402 ;;
 11403                           
 11404                           
 11405                           ;psect for function _checkButtonS2
 11406  0BDA                     _checkButtonS2:
 11407  0BDA                     l3941:	
 11408                           ;incstack = 0
 11409                           ; Regs used in _checkButtonS2: [wreg+status,2+status,0]
 11410                           
 11411                           
 11412                           ;main.c: 419: if (btn2State == 0) {
 11413  0BDA  0020               	movlb	0	; select bank0
 11414  0BDB  086C               	movf	_btn2State,w
 11415  0BDC  1D03               	btfss	3,2
 11416  0BDD  2BDF               	goto	u3421
 11417  0BDE  2BE0               	goto	u3420
 11418  0BDF                     u3421:
 11419  0BDF  2BF1               	goto	l620
 11420  0BE0                     u3420:
 11421  0BE0                     l3943:
 11422                           
 11423                           ;main.c: 420: if (PORTCbits.RC5 == 0) {
 11424  0BE0  1A8E               	btfsc	14,5	;volatile
 11425  0BE1  2BE3               	goto	u3431
 11426  0BE2  2BE4               	goto	u3430
 11427  0BE3                     u3431:
 11428  0BE3  2BF6               	goto	l624
 11429  0BE4                     u3430:
 11430  0BE4                     l3945:
 11431                           
 11432                           ;main.c: 421: _delay((unsigned long)((200)*(1000000/4000.0)));
 11433  0BE4  3041               	movlw	65
 11434  0BE5  0020               	movlb	0	; select bank0
 11435  0BE6  00A0               	movwf	??_checkButtonS2
 11436  0BE7  30EE               	movlw	238
 11437  0BE8                     u4297:
 11438  0BE8  0B89               	decfsz	9,f
 11439  0BE9  2BE8               	goto	u4297
 11440  0BEA  0BA0               	decfsz	??_checkButtonS2,f
 11441  0BEB  2BE8               	goto	u4297
 11442  0BEC  0000               	nop
 11443  0BED                     l3947:
 11444                           
 11445                           ;main.c: 422: btn2State = 1;
 11446  0BED  0020               	movlb	0	; select bank0
 11447  0BEE  01EC               	clrf	_btn2State
 11448  0BEF  0AEC               	incf	_btn2State,f
 11449  0BF0  2BF6               	goto	l624
 11450  0BF1                     l620:
 11451  0BF1  1E8E               	btfss	14,5	;volatile
 11452  0BF2  2BF4               	goto	u3441
 11453  0BF3  2BF5               	goto	u3440
 11454  0BF4                     u3441:
 11455  0BF4  2BF6               	goto	l624
 11456  0BF5                     u3440:
 11457  0BF5                     l3949:
 11458                           
 11459                           ;main.c: 426: btn2State = 0;
 11460  0BF5  01EC               	clrf	_btn2State
 11461  0BF6                     l624:
 11462  0BF6  0008               	return
 11463  0BF7                     __end_of_checkButtonS2:
 11464                           
 11465                           	psect	text26
 11466  0BBD                     __ptext26:	
 11467 ;; *************** function _checkButtonS1 *****************
 11468 ;; Defined at:
 11469 ;;		line 407 in file "main.c"
 11470 ;; Parameters:    Size  Location     Type
 11471 ;;		None
 11472 ;; Auto vars:     Size  Location     Type
 11473 ;;		None
 11474 ;; Return value:  Size  Location     Type
 11475 ;;                  1    wreg      void 
 11476 ;; Registers used:
 11477 ;;		wreg, status,2, status,0
 11478 ;; Tracked objects:
 11479 ;;		On entry : 0/0
 11480 ;;		On exit  : 0/0
 11481 ;;		Unchanged: 0/0
 11482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11485 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11486 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11487 ;;Total ram usage:        1 bytes
 11488 ;; Hardware stack levels used:    1
 11489 ;; Hardware stack levels required when called:    5
 11490 ;; This function calls:
 11491 ;;		Nothing
 11492 ;; This function is called by:
 11493 ;;		_main
 11494 ;; This function uses a non-reentrant model
 11495 ;;
 11496                           
 11497                           
 11498                           ;psect for function _checkButtonS1
 11499  0BBD                     _checkButtonS1:
 11500  0BBD                     l3931:	
 11501                           ;incstack = 0
 11502                           ; Regs used in _checkButtonS1: [wreg+status,2+status,0]
 11503                           
 11504                           
 11505                           ;main.c: 408: if (btn1State == 0) {
 11506  0BBD  0020               	movlb	0	; select bank0
 11507  0BBE  086D               	movf	_btn1State,w
 11508  0BBF  1D03               	btfss	3,2
 11509  0BC0  2BC2               	goto	u3391
 11510  0BC1  2BC3               	goto	u3390
 11511  0BC2                     u3391:
 11512  0BC2  2BD4               	goto	l613
 11513  0BC3                     u3390:
 11514  0BC3                     l3933:
 11515                           
 11516                           ;main.c: 409: if (PORTBbits.RB4 == 0) {
 11517  0BC3  1A0D               	btfsc	13,4	;volatile
 11518  0BC4  2BC6               	goto	u3401
 11519  0BC5  2BC7               	goto	u3400
 11520  0BC6                     u3401:
 11521  0BC6  2BD9               	goto	l617
 11522  0BC7                     u3400:
 11523  0BC7                     l3935:
 11524                           
 11525                           ;main.c: 410: _delay((unsigned long)((200)*(1000000/4000.0)));
 11526  0BC7  3041               	movlw	65
 11527  0BC8  0020               	movlb	0	; select bank0
 11528  0BC9  00A0               	movwf	??_checkButtonS1
 11529  0BCA  30EE               	movlw	238
 11530  0BCB                     u4307:
 11531  0BCB  0B89               	decfsz	9,f
 11532  0BCC  2BCB               	goto	u4307
 11533  0BCD  0BA0               	decfsz	??_checkButtonS1,f
 11534  0BCE  2BCB               	goto	u4307
 11535  0BCF  0000               	nop
 11536  0BD0                     l3937:
 11537                           
 11538                           ;main.c: 411: btn1State = 1;
 11539  0BD0  0020               	movlb	0	; select bank0
 11540  0BD1  01ED               	clrf	_btn1State
 11541  0BD2  0AED               	incf	_btn1State,f
 11542  0BD3  2BD9               	goto	l617
 11543  0BD4                     l613:
 11544  0BD4  1E0D               	btfss	13,4	;volatile
 11545  0BD5  2BD7               	goto	u3411
 11546  0BD6  2BD8               	goto	u3410
 11547  0BD7                     u3411:
 11548  0BD7  2BD9               	goto	l617
 11549  0BD8                     u3410:
 11550  0BD8                     l3939:
 11551                           
 11552                           ;main.c: 414: btn1State = 0;
 11553  0BD8  01ED               	clrf	_btn1State
 11554  0BD9                     l617:
 11555  0BD9  0008               	return
 11556  0BDA                     __end_of_checkButtonS1:
 11557                           
 11558                           	psect	text27
 11559  0B02                     __ptext27:	
 11560 ;; *************** function _SYSTEM_Initialize *****************
 11561 ;; Defined at:
 11562 ;;		line 50 in file "mcc_generated_files/mcc.c"
 11563 ;; Parameters:    Size  Location     Type
 11564 ;;		None
 11565 ;; Auto vars:     Size  Location     Type
 11566 ;;		None
 11567 ;; Return value:  Size  Location     Type
 11568 ;;                  1    wreg      void 
 11569 ;; Registers used:
 11570 ;;		wreg, status,2, status,0, pclath, cstack
 11571 ;; Tracked objects:
 11572 ;;		On entry : 0/0
 11573 ;;		On exit  : 0/0
 11574 ;;		Unchanged: 0/0
 11575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11580 ;;Total ram usage:        0 bytes
 11581 ;; Hardware stack levels used:    1
 11582 ;; Hardware stack levels required when called:    7
 11583 ;; This function calls:
 11584 ;;		_ADCC_Initialize
 11585 ;;		_OSCILLATOR_Initialize
 11586 ;;		_PIN_MANAGER_Initialize
 11587 ;;		_PMD_Initialize
 11588 ;;		_TMR0_Initialize
 11589 ;; This function is called by:
 11590 ;;		_main
 11591 ;; This function uses a non-reentrant model
 11592 ;;
 11593                           
 11594                           
 11595                           ;psect for function _SYSTEM_Initialize
 11596  0B02                     _SYSTEM_Initialize:
 11597  0B02                     l3801:	
 11598                           ;incstack = 0
 11599                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11600                           
 11601                           
 11602                           ;mcc.c: 52: PMD_Initialize();
 11603  0B02  318A  226C  318B   	fcall	_PMD_Initialize
 11604  0B05                     l3803:
 11605                           
 11606                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 11607  0B05  318C  24E0  318B   	fcall	_PIN_MANAGER_Initialize
 11608  0B08                     l3805:
 11609                           
 11610                           ;mcc.c: 54: OSCILLATOR_Initialize();
 11611  0B08  318A  2284  318B   	fcall	_OSCILLATOR_Initialize
 11612  0B0B                     l3807:
 11613                           
 11614                           ;mcc.c: 55: ADCC_Initialize();
 11615  0B0B  318B  237A  318B   	fcall	_ADCC_Initialize
 11616  0B0E                     l3809:
 11617                           
 11618                           ;mcc.c: 56: TMR0_Initialize();
 11619  0B0E  318B  2365  318B   	fcall	_TMR0_Initialize
 11620  0B11                     l162:
 11621  0B11  0008               	return
 11622  0B12                     __end_of_SYSTEM_Initialize:
 11623                           
 11624                           	psect	text28
 11625  0B65                     __ptext28:	
 11626 ;; *************** function _TMR0_Initialize *****************
 11627 ;; Defined at:
 11628 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 11629 ;; Parameters:    Size  Location     Type
 11630 ;;		None
 11631 ;; Auto vars:     Size  Location     Type
 11632 ;;		None
 11633 ;; Return value:  Size  Location     Type
 11634 ;;                  1    wreg      void 
 11635 ;; Registers used:
 11636 ;;		wreg, status,2, status,0, pclath, cstack
 11637 ;; Tracked objects:
 11638 ;;		On entry : 0/0
 11639 ;;		On exit  : 0/0
 11640 ;;		Unchanged: 0/0
 11641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11646 ;;Total ram usage:        0 bytes
 11647 ;; Hardware stack levels used:    1
 11648 ;; Hardware stack levels required when called:    6
 11649 ;; This function calls:
 11650 ;;		_TMR0_SetInterruptHandler
 11651 ;; This function is called by:
 11652 ;;		_SYSTEM_Initialize
 11653 ;; This function uses a non-reentrant model
 11654 ;;
 11655                           
 11656                           
 11657                           ;psect for function _TMR0_Initialize
 11658  0B65                     _TMR0_Initialize:
 11659  0B65                     l3643:	
 11660                           ;incstack = 0
 11661                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11662                           
 11663                           
 11664                           ;tmr0.c: 66: T0CON1 = 0x46;
 11665  0B65  3046               	movlw	70
 11666  0B66  0020               	movlb	0	; select bank0
 11667  0B67  009F               	movwf	31	;volatile
 11668                           
 11669                           ;tmr0.c: 69: TMR0H = 0x0F;
 11670  0B68  300F               	movlw	15
 11671  0B69  009D               	movwf	29	;volatile
 11672  0B6A                     l3645:
 11673                           
 11674                           ;tmr0.c: 72: TMR0L = 0x00;
 11675  0B6A  019C               	clrf	28	;volatile
 11676  0B6B                     l3647:
 11677                           
 11678                           ;tmr0.c: 75: PIR0bits.TMR0IF = 0;
 11679  0B6B  002E               	movlb	14	; select bank14
 11680  0B6C  128C               	bcf	12,5	;volatile
 11681  0B6D                     l3649:
 11682                           
 11683                           ;tmr0.c: 78: PIE0bits.TMR0IE = 1;
 11684  0B6D  1696               	bsf	22,5	;volatile
 11685  0B6E                     l3651:
 11686                           
 11687                           ;tmr0.c: 81: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 11688  0B6E  3002               	movlw	low _TMR0_DefaultInterruptHandler
 11689  0B6F  0020               	movlb	0	; select bank0
 11690  0B70  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 11691  0B71  3000               	movlw	high _TMR0_DefaultInterruptHandler
 11692  0B72  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 11693  0B73  318A  228D  318B   	fcall	_TMR0_SetInterruptHandler
 11694  0B76                     l3653:
 11695                           
 11696                           ;tmr0.c: 84: T0CON0 = 0x80;
 11697  0B76  3080               	movlw	128
 11698  0B77  0020               	movlb	0	; select bank0
 11699  0B78  009E               	movwf	30	;volatile
 11700  0B79                     l363:
 11701  0B79  0008               	return
 11702  0B7A                     __end_of_TMR0_Initialize:
 11703                           
 11704                           	psect	text29
 11705  0A8D                     __ptext29:	
 11706 ;; *************** function _TMR0_SetInterruptHandler *****************
 11707 ;; Defined at:
 11708 ;;		line 150 in file "mcc_generated_files/tmr0.c"
 11709 ;; Parameters:    Size  Location     Type
 11710 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 11711 ;;		 -> TMR0_callback(1), TMR0_DefaultInterruptHandler(1), 
 11712 ;; Auto vars:     Size  Location     Type
 11713 ;;		None
 11714 ;; Return value:  Size  Location     Type
 11715 ;;                  1    wreg      void 
 11716 ;; Registers used:
 11717 ;;		wreg
 11718 ;; Tracked objects:
 11719 ;;		On entry : 0/0
 11720 ;;		On exit  : 0/0
 11721 ;;		Unchanged: 0/0
 11722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11723 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11724 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11726 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11727 ;;Total ram usage:        2 bytes
 11728 ;; Hardware stack levels used:    1
 11729 ;; Hardware stack levels required when called:    5
 11730 ;; This function calls:
 11731 ;;		Nothing
 11732 ;; This function is called by:
 11733 ;;		_TMR0_Initialize
 11734 ;;		_main
 11735 ;; This function uses a non-reentrant model
 11736 ;;
 11737                           
 11738                           
 11739                           ;psect for function _TMR0_SetInterruptHandler
 11740  0A8D                     _TMR0_SetInterruptHandler:
 11741  0A8D                     l3481:	
 11742                           ;incstack = 0
 11743                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 11744                           
 11745                           
 11746                           ;tmr0.c: 151: TMR0_InterruptHandler = InterruptHandler;
 11747  0A8D  0020               	movlb	0	; select bank0
 11748  0A8E  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 11749  0A8F  0021               	movlb	1	; select bank1
 11750  0A90  00BB               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 11751  0A91  0020               	movlb	0	; select bank0
 11752  0A92  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 11753  0A93  0021               	movlb	1	; select bank1
 11754  0A94  00BA               	movwf	_TMR0_InterruptHandler^(0+128)
 11755  0A95                     l391:
 11756  0A95  0008               	return
 11757  0A96                     __end_of_TMR0_SetInterruptHandler:
 11758                           
 11759                           	psect	text30
 11760  0A6C                     __ptext30:	
 11761 ;; *************** function _PMD_Initialize *****************
 11762 ;; Defined at:
 11763 ;;		line 73 in file "mcc_generated_files/mcc.c"
 11764 ;; Parameters:    Size  Location     Type
 11765 ;;		None
 11766 ;; Auto vars:     Size  Location     Type
 11767 ;;		None
 11768 ;; Return value:  Size  Location     Type
 11769 ;;                  1    wreg      void 
 11770 ;; Registers used:
 11771 ;;		status,2
 11772 ;; Tracked objects:
 11773 ;;		On entry : 0/0
 11774 ;;		On exit  : 0/0
 11775 ;;		Unchanged: 0/0
 11776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11781 ;;Total ram usage:        0 bytes
 11782 ;; Hardware stack levels used:    1
 11783 ;; Hardware stack levels required when called:    5
 11784 ;; This function calls:
 11785 ;;		Nothing
 11786 ;; This function is called by:
 11787 ;;		_SYSTEM_Initialize
 11788 ;; This function uses a non-reentrant model
 11789 ;;
 11790                           
 11791                           
 11792                           ;psect for function _PMD_Initialize
 11793  0A6C                     _PMD_Initialize:
 11794  0A6C                     l3627:	
 11795                           ;incstack = 0
 11796                           ; Regs used in _PMD_Initialize: [status,2]
 11797                           
 11798                           
 11799                           ;mcc.c: 76: PMD0 = 0x00;
 11800  0A6C  002F               	movlb	15	; select bank15
 11801  0A6D  0196               	clrf	22	;volatile
 11802                           
 11803                           ;mcc.c: 78: PMD1 = 0x00;
 11804  0A6E  0197               	clrf	23	;volatile
 11805                           
 11806                           ;mcc.c: 80: PMD2 = 0x00;
 11807  0A6F  0198               	clrf	24	;volatile
 11808                           
 11809                           ;mcc.c: 82: PMD3 = 0x00;
 11810  0A70  0199               	clrf	25	;volatile
 11811                           
 11812                           ;mcc.c: 84: PMD4 = 0x00;
 11813  0A71  019A               	clrf	26	;volatile
 11814                           
 11815                           ;mcc.c: 86: PMD5 = 0x00;
 11816  0A72  019B               	clrf	27	;volatile
 11817  0A73                     l168:
 11818  0A73  0008               	return
 11819  0A74                     __end_of_PMD_Initialize:
 11820                           
 11821                           	psect	text31
 11822  0CE0                     __ptext31:	
 11823 ;; *************** function _PIN_MANAGER_Initialize *****************
 11824 ;; Defined at:
 11825 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 11826 ;; Parameters:    Size  Location     Type
 11827 ;;		None
 11828 ;; Auto vars:     Size  Location     Type
 11829 ;;		None
 11830 ;; Return value:  Size  Location     Type
 11831 ;;                  1    wreg      void 
 11832 ;; Registers used:
 11833 ;;		wreg, status,2
 11834 ;; Tracked objects:
 11835 ;;		On entry : 0/0
 11836 ;;		On exit  : 0/0
 11837 ;;		Unchanged: 0/0
 11838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11843 ;;Total ram usage:        0 bytes
 11844 ;; Hardware stack levels used:    1
 11845 ;; Hardware stack levels required when called:    5
 11846 ;; This function calls:
 11847 ;;		Nothing
 11848 ;; This function is called by:
 11849 ;;		_SYSTEM_Initialize
 11850 ;; This function uses a non-reentrant model
 11851 ;;
 11852                           
 11853                           
 11854                           ;psect for function _PIN_MANAGER_Initialize
 11855  0CE0                     _PIN_MANAGER_Initialize:
 11856  0CE0                     l3587:	
 11857                           ;incstack = 0
 11858                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11859                           
 11860                           
 11861                           ;pin_manager.c: 62: LATE = 0x00;
 11862  0CE0  0020               	movlb	0	; select bank0
 11863  0CE1  019A               	clrf	26	;volatile
 11864                           
 11865                           ;pin_manager.c: 63: LATD = 0x00;
 11866  0CE2  0199               	clrf	25	;volatile
 11867                           
 11868                           ;pin_manager.c: 64: LATA = 0x00;
 11869  0CE3  0196               	clrf	22	;volatile
 11870                           
 11871                           ;pin_manager.c: 65: LATB = 0x00;
 11872  0CE4  0197               	clrf	23	;volatile
 11873                           
 11874                           ;pin_manager.c: 66: LATC = 0x00;
 11875  0CE5  0198               	clrf	24	;volatile
 11876  0CE6                     l3589:
 11877                           
 11878                           ;pin_manager.c: 71: TRISE = 0x07;
 11879  0CE6  3007               	movlw	7
 11880  0CE7  0095               	movwf	21	;volatile
 11881  0CE8                     l3591:
 11882                           
 11883                           ;pin_manager.c: 72: TRISA = 0xEF;
 11884  0CE8  30EF               	movlw	239
 11885  0CE9  0091               	movwf	17	;volatile
 11886  0CEA                     l3593:
 11887                           
 11888                           ;pin_manager.c: 73: TRISB = 0xFF;
 11889  0CEA  30FF               	movlw	255
 11890  0CEB  0092               	movwf	18	;volatile
 11891  0CEC                     l3595:
 11892                           
 11893                           ;pin_manager.c: 74: TRISC = 0xFF;
 11894  0CEC  30FF               	movlw	255
 11895  0CED  0093               	movwf	19	;volatile
 11896  0CEE                     l3597:
 11897                           
 11898                           ;pin_manager.c: 75: TRISD = 0xFF;
 11899  0CEE  30FF               	movlw	255
 11900  0CEF  0094               	movwf	20	;volatile
 11901  0CF0                     l3599:
 11902                           
 11903                           ;pin_manager.c: 80: ANSELD = 0xFF;
 11904  0CF0  30FF               	movlw	255
 11905  0CF1  003E               	movlb	30	; select bank30
 11906  0CF2  00D9               	movwf	89	;volatile
 11907  0CF3                     l3601:
 11908                           
 11909                           ;pin_manager.c: 81: ANSELC = 0xC7;
 11910  0CF3  30C7               	movlw	199
 11911  0CF4  00CE               	movwf	78	;volatile
 11912  0CF5                     l3603:
 11913                           
 11914                           ;pin_manager.c: 82: ANSELB = 0xEF;
 11915  0CF5  30EF               	movlw	239
 11916  0CF6  00C3               	movwf	67	;volatile
 11917  0CF7                     l3605:
 11918                           
 11919                           ;pin_manager.c: 83: ANSELE = 0x07;
 11920  0CF7  3007               	movlw	7
 11921  0CF8  00E4               	movwf	100	;volatile
 11922  0CF9                     l3607:
 11923                           
 11924                           ;pin_manager.c: 84: ANSELA = 0xEF;
 11925  0CF9  30EF               	movlw	239
 11926  0CFA  00B8               	movwf	56	;volatile
 11927                           
 11928                           ;pin_manager.c: 89: WPUD = 0x00;
 11929  0CFB  01DA               	clrf	90	;volatile
 11930                           
 11931                           ;pin_manager.c: 90: WPUE = 0x00;
 11932  0CFC  01E5               	clrf	101	;volatile
 11933                           
 11934                           ;pin_manager.c: 91: WPUB = 0x00;
 11935  0CFD  01C4               	clrf	68	;volatile
 11936                           
 11937                           ;pin_manager.c: 92: WPUA = 0x00;
 11938  0CFE  01B9               	clrf	57	;volatile
 11939                           
 11940                           ;pin_manager.c: 93: WPUC = 0x00;
 11941  0CFF  01CF               	clrf	79	;volatile
 11942                           
 11943                           ;pin_manager.c: 98: ODCONE = 0x00;
 11944  0D00  01E6               	clrf	102	;volatile
 11945                           
 11946                           ;pin_manager.c: 99: ODCONA = 0x00;
 11947  0D01  01BA               	clrf	58	;volatile
 11948                           
 11949                           ;pin_manager.c: 100: ODCONB = 0x00;
 11950  0D02  01C5               	clrf	69	;volatile
 11951                           
 11952                           ;pin_manager.c: 101: ODCONC = 0x00;
 11953  0D03  01D0               	clrf	80	;volatile
 11954                           
 11955                           ;pin_manager.c: 102: ODCOND = 0x00;
 11956  0D04  01DB               	clrf	91	;volatile
 11957  0D05                     l3609:
 11958                           
 11959                           ;pin_manager.c: 107: SLRCONA = 0xFF;
 11960  0D05  30FF               	movlw	255
 11961  0D06  00BB               	movwf	59	;volatile
 11962  0D07                     l3611:
 11963                           
 11964                           ;pin_manager.c: 108: SLRCONB = 0xFF;
 11965  0D07  30FF               	movlw	255
 11966  0D08  00C6               	movwf	70	;volatile
 11967  0D09                     l3613:
 11968                           
 11969                           ;pin_manager.c: 109: SLRCONC = 0xFF;
 11970  0D09  30FF               	movlw	255
 11971  0D0A  00D1               	movwf	81	;volatile
 11972  0D0B                     l3615:
 11973                           
 11974                           ;pin_manager.c: 110: SLRCOND = 0xFF;
 11975  0D0B  30FF               	movlw	255
 11976  0D0C  00DC               	movwf	92	;volatile
 11977  0D0D                     l3617:
 11978                           
 11979                           ;pin_manager.c: 111: SLRCONE = 0x07;
 11980  0D0D  3007               	movlw	7
 11981  0D0E  00E7               	movwf	103	;volatile
 11982  0D0F                     l3619:
 11983                           
 11984                           ;pin_manager.c: 120: SSP1CLKPPS = 0x13;
 11985  0D0F  3013               	movlw	19
 11986  0D10  003D               	movlb	29	; select bank29
 11987  0D11  00C5               	movwf	69	;volatile
 11988  0D12                     l3621:
 11989                           
 11990                           ;pin_manager.c: 121: RC3PPS = 0x14;
 11991  0D12  3014               	movlw	20
 11992  0D13  003E               	movlb	30	; select bank30
 11993  0D14  00A3               	movwf	35	;volatile
 11994  0D15                     l3623:
 11995                           
 11996                           ;pin_manager.c: 122: RC4PPS = 0x15;
 11997  0D15  3015               	movlw	21
 11998  0D16  00A4               	movwf	36	;volatile
 11999  0D17                     l3625:
 12000                           
 12001                           ;pin_manager.c: 123: SSP1DATPPS = 0x14;
 12002  0D17  3014               	movlw	20
 12003  0D18  003D               	movlb	29	; select bank29
 12004  0D19  00C6               	movwf	70	;volatile
 12005  0D1A                     l120:
 12006  0D1A  0008               	return
 12007  0D1B                     __end_of_PIN_MANAGER_Initialize:
 12008                           
 12009                           	psect	text32
 12010  0A84                     __ptext32:	
 12011 ;; *************** function _OSCILLATOR_Initialize *****************
 12012 ;; Defined at:
 12013 ;;		line 59 in file "mcc_generated_files/mcc.c"
 12014 ;; Parameters:    Size  Location     Type
 12015 ;;		None
 12016 ;; Auto vars:     Size  Location     Type
 12017 ;;		None
 12018 ;; Return value:  Size  Location     Type
 12019 ;;                  1    wreg      void 
 12020 ;; Registers used:
 12021 ;;		wreg, status,2
 12022 ;; Tracked objects:
 12023 ;;		On entry : 0/0
 12024 ;;		On exit  : 0/0
 12025 ;;		Unchanged: 0/0
 12026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12031 ;;Total ram usage:        0 bytes
 12032 ;; Hardware stack levels used:    1
 12033 ;; Hardware stack levels required when called:    5
 12034 ;; This function calls:
 12035 ;;		Nothing
 12036 ;; This function is called by:
 12037 ;;		_SYSTEM_Initialize
 12038 ;; This function uses a non-reentrant model
 12039 ;;
 12040                           
 12041                           
 12042                           ;psect for function _OSCILLATOR_Initialize
 12043  0A84                     _OSCILLATOR_Initialize:
 12044  0A84                     l3629:	
 12045                           ;incstack = 0
 12046                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12047                           
 12048                           
 12049                           ;mcc.c: 62: OSCCON1 = 0x62;
 12050  0A84  3062               	movlw	98
 12051  0A85  0031               	movlb	17	; select bank17
 12052  0A86  008D               	movwf	13	;volatile
 12053  0A87                     l3631:
 12054                           
 12055                           ;mcc.c: 64: OSCCON3 = 0x00;
 12056  0A87  018F               	clrf	15	;volatile
 12057  0A88                     l3633:
 12058                           
 12059                           ;mcc.c: 66: OSCEN = 0x00;
 12060  0A88  0191               	clrf	17	;volatile
 12061                           
 12062                           ;mcc.c: 68: OSCFRQ = 0x02;
 12063  0A89  3002               	movlw	2
 12064  0A8A  0093               	movwf	19	;volatile
 12065  0A8B                     l3635:
 12066                           
 12067                           ;mcc.c: 70: OSCTUNE = 0x00;
 12068  0A8B  0192               	clrf	18	;volatile
 12069  0A8C                     l165:
 12070  0A8C  0008               	return
 12071  0A8D                     __end_of_OSCILLATOR_Initialize:
 12072                           
 12073                           	psect	text33
 12074  0B7A                     __ptext33:	
 12075 ;; *************** function _ADCC_Initialize *****************
 12076 ;; Defined at:
 12077 ;;		line 63 in file "mcc_generated_files/adcc.c"
 12078 ;; Parameters:    Size  Location     Type
 12079 ;;		None
 12080 ;; Auto vars:     Size  Location     Type
 12081 ;;		None
 12082 ;; Return value:  Size  Location     Type
 12083 ;;                  1    wreg      void 
 12084 ;; Registers used:
 12085 ;;		wreg, status,2
 12086 ;; Tracked objects:
 12087 ;;		On entry : 0/0
 12088 ;;		On exit  : 0/0
 12089 ;;		Unchanged: 0/0
 12090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12095 ;;Total ram usage:        0 bytes
 12096 ;; Hardware stack levels used:    1
 12097 ;; Hardware stack levels required when called:    5
 12098 ;; This function calls:
 12099 ;;		Nothing
 12100 ;; This function is called by:
 12101 ;;		_SYSTEM_Initialize
 12102 ;;		_lumin
 12103 ;; This function uses a non-reentrant model
 12104 ;;
 12105                           
 12106                           
 12107                           ;psect for function _ADCC_Initialize
 12108  0B7A                     _ADCC_Initialize:
 12109  0B7A                     l3637:	
 12110                           ;incstack = 0
 12111                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 12112                           
 12113                           
 12114                           ;adcc.c: 67: ADLTHL = 0x00;
 12115  0B7A  0022               	movlb	2	; select bank2
 12116  0B7B  018E               	clrf	14	;volatile
 12117                           
 12118                           ;adcc.c: 69: ADLTHH = 0x00;
 12119  0B7C  018F               	clrf	15	;volatile
 12120                           
 12121                           ;adcc.c: 71: ADUTHL = 0x00;
 12122  0B7D  0190               	clrf	16	;volatile
 12123                           
 12124                           ;adcc.c: 73: ADUTHH = 0x00;
 12125  0B7E  0191               	clrf	17	;volatile
 12126                           
 12127                           ;adcc.c: 75: ADSTPTL = 0x00;
 12128  0B7F  0192               	clrf	18	;volatile
 12129                           
 12130                           ;adcc.c: 77: ADSTPTH = 0x00;
 12131  0B80  0193               	clrf	19	;volatile
 12132                           
 12133                           ;adcc.c: 79: ADRPT = 0x00;
 12134  0B81  018D               	clrf	13	;volatile
 12135                           
 12136                           ;adcc.c: 81: ADPCH = 0x00;
 12137  0B82  0021               	movlb	1	; select bank1
 12138  0B83  019E               	clrf	30	;volatile
 12139                           
 12140                           ;adcc.c: 83: ADCAP = 0x00;
 12141  0B84  019B               	clrf	27	;volatile
 12142                           
 12143                           ;adcc.c: 85: ADCON1 = 0x00;
 12144  0B85  0194               	clrf	20	;volatile
 12145                           
 12146                           ;adcc.c: 87: ADCON2 = 0x00;
 12147  0B86  0195               	clrf	21	;volatile
 12148                           
 12149                           ;adcc.c: 89: ADCON3 = 0x00;
 12150  0B87  0196               	clrf	22	;volatile
 12151                           
 12152                           ;adcc.c: 91: ADSTAT = 0x00;
 12153  0B88  0197               	clrf	23	;volatile
 12154                           
 12155                           ;adcc.c: 93: ADREF = 0x00;
 12156  0B89  019A               	clrf	26	;volatile
 12157                           
 12158                           ;adcc.c: 95: ADACT = 0x00;
 12159  0B8A  0199               	clrf	25	;volatile
 12160                           
 12161                           ;adcc.c: 97: ADCLK = 0x00;
 12162  0B8B  0198               	clrf	24	;volatile
 12163  0B8C                     l3639:
 12164                           
 12165                           ;adcc.c: 99: ADCON0 = 0x84;
 12166  0B8C  3084               	movlw	132
 12167  0B8D  0093               	movwf	19	;volatile
 12168  0B8E                     l3641:
 12169                           
 12170                           ;adcc.c: 101: ADACQ = 0x00;
 12171  0B8E  019D               	clrf	29	;volatile
 12172  0B8F                     l1030:
 12173  0B8F  0008               	return
 12174  0B90                     __end_of_ADCC_Initialize:
 12175                           
 12176                           	psect	text34
 12177  0EB6                     __ptext34:	
 12178 ;; *************** function _LCDinit *****************
 12179 ;; Defined at:
 12180 ;;		line 80 in file "LCD.c"
 12181 ;; Parameters:    Size  Location     Type
 12182 ;;		None
 12183 ;; Auto vars:     Size  Location     Type
 12184 ;;		None
 12185 ;; Return value:  Size  Location     Type
 12186 ;;                  1    wreg      void 
 12187 ;; Registers used:
 12188 ;;		wreg, status,2, status,0, pclath, cstack
 12189 ;; Tracked objects:
 12190 ;;		On entry : 0/0
 12191 ;;		On exit  : 0/0
 12192 ;;		Unchanged: 0/0
 12193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12196 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12197 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12198 ;;Total ram usage:        1 bytes
 12199 ;; Hardware stack levels used:    1
 12200 ;; Hardware stack levels required when called:    7
 12201 ;; This function calls:
 12202 ;;		_LCDsend
 12203 ;;		_LCDsend2x4
 12204 ;; This function is called by:
 12205 ;;		_main
 12206 ;; This function uses a non-reentrant model
 12207 ;;
 12208                           
 12209                           
 12210                           ;psect for function _LCDinit
 12211  0EB6                     _LCDinit:
 12212  0EB6                     l3831:	
 12213                           ;incstack = 0
 12214                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
 12215                           
 12216                           
 12217                           ;LCD.c: 82: _delay((unsigned long)((50)*(1000000/4000.0)));
 12218  0EB6  3011               	movlw	17
 12219  0EB7  0020               	movlb	0	; select bank0
 12220  0EB8  00A8               	movwf	??_LCDinit
 12221  0EB9  303A               	movlw	58
 12222  0EBA                     u4317:
 12223  0EBA  0B89               	decfsz	9,f
 12224  0EBB  2EBA               	goto	u4317
 12225  0EBC  0BA8               	decfsz	??_LCDinit,f
 12226  0EBD  2EBA               	goto	u4317
 12227  0EBE  0000               	nop
 12228  0EBF                     l3833:
 12229                           
 12230                           ;LCD.c: 83: LCDsend(0x30);
 12231  0EBF  3030               	movlw	48
 12232  0EC0  318D  25AB  318E   	fcall	_LCDsend
 12233  0EC3                     l3835:
 12234                           
 12235                           ;LCD.c: 84: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend(0
      +                          x30);
 12236  0EC3  3034               	movlw	52
 12237  0EC4  318D  25AB  318E   	fcall	_LCDsend
 12238  0EC7  3029               	movlw	41
 12239  0EC8                     u4327:
 12240  0EC8  0B89               	decfsz	9,f
 12241  0EC9  2EC8               	goto	u4327
 12242  0ECA  3200               	nop2
 12243  0ECB                     l3837:
 12244  0ECB  3030               	movlw	48
 12245  0ECC  318D  25AB  318E   	fcall	_LCDsend
 12246  0ECF                     l3839:
 12247                           
 12248                           ;LCD.c: 85: _delay((unsigned long)((5)*(1000000/4000.0)));
 12249  0ECF  30FA               	movlw	250
 12250  0ED0                     u4337:
 12251  0ED0  3200               	nop2
 12252  0ED1  0B89               	decfsz	9,f
 12253  0ED2  2ED0               	goto	u4337
 12254                           
 12255                           ;LCD.c: 86: LCDsend(0x30);
 12256  0ED3  3030               	movlw	48
 12257  0ED4  318D  25AB  318E   	fcall	_LCDsend
 12258                           
 12259                           ;LCD.c: 87: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend(0
      +                          x30);
 12260  0ED7  3034               	movlw	52
 12261  0ED8  318D  25AB  318E   	fcall	_LCDsend
 12262  0EDB                     l3841:
 12263  0EDB  3029               	movlw	41
 12264  0EDC                     u4347:
 12265  0EDC  0B89               	decfsz	9,f
 12266  0EDD  2EDC               	goto	u4347
 12267  0EDE  3200               	nop2
 12268  0EDF                     l3843:
 12269  0EDF  3030               	movlw	48
 12270  0EE0  318D  25AB  318E   	fcall	_LCDsend
 12271                           
 12272                           ;LCD.c: 88: _delay((unsigned long)((100)*(1000000/4000000.0)));
 12273  0EE3  3008               	movlw	8
 12274  0EE4                     u4357:
 12275  0EE4  0B89               	decfsz	9,f
 12276  0EE5  2EE4               	goto	u4357
 12277  0EE6  0000               	nop
 12278  0EE7                     l3845:
 12279                           
 12280                           ;LCD.c: 89: LCDsend(0x30);
 12281  0EE7  3030               	movlw	48
 12282  0EE8  318D  25AB  318E   	fcall	_LCDsend
 12283  0EEB                     l3847:
 12284                           
 12285                           ;LCD.c: 90: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend(0
      +                          x30);
 12286  0EEB  3034               	movlw	52
 12287  0EEC  318D  25AB  318E   	fcall	_LCDsend
 12288  0EEF  3029               	movlw	41
 12289  0EF0                     u4367:
 12290  0EF0  0B89               	decfsz	9,f
 12291  0EF1  2EF0               	goto	u4367
 12292  0EF2  3200               	nop2
 12293  0EF3                     l3849:
 12294  0EF3  3030               	movlw	48
 12295  0EF4  318D  25AB  318E   	fcall	_LCDsend
 12296  0EF7                     l3851:
 12297                           
 12298                           ;LCD.c: 91: _delay((unsigned long)((100)*(1000000/4000000.0)));
 12299  0EF7  3008               	movlw	8
 12300  0EF8                     u4377:
 12301  0EF8  0B89               	decfsz	9,f
 12302  0EF9  2EF8               	goto	u4377
 12303  0EFA  0000               	nop
 12304                           
 12305                           ;LCD.c: 92: LCDsend(0x20);
 12306  0EFB  3020               	movlw	32
 12307  0EFC  318D  25AB  318E   	fcall	_LCDsend
 12308                           
 12309                           ;LCD.c: 93: LCDsend(0x24); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend(0
      +                          x20);
 12310  0EFF  3024               	movlw	36
 12311  0F00  318D  25AB  318E   	fcall	_LCDsend
 12312  0F03                     l3853:
 12313  0F03  3029               	movlw	41
 12314  0F04                     u4387:
 12315  0F04  0B89               	decfsz	9,f
 12316  0F05  2F04               	goto	u4387
 12317  0F06  3200               	nop2
 12318  0F07                     l3855:
 12319  0F07  3020               	movlw	32
 12320  0F08  318D  25AB  318E   	fcall	_LCDsend
 12321                           
 12322                           ;LCD.c: 94: _delay((unsigned long)((5)*(1000000/4000.0)));
 12323  0F0B  30FA               	movlw	250
 12324  0F0C                     u4397:
 12325  0F0C  3200               	nop2
 12326  0F0D  0B89               	decfsz	9,f
 12327  0F0E  2F0C               	goto	u4397
 12328  0F0F                     l3857:
 12329                           
 12330                           ;LCD.c: 96: LCDsend2x4(0x28, 0);
 12331  0F0F  0020               	movlb	0	; select bank0
 12332  0F10  01A2               	clrf	LCDsend2x4@mode
 12333  0F11  3028               	movlw	40
 12334  0F12  318F  272C  318E   	fcall	_LCDsend2x4
 12335  0F15                     l3859:
 12336                           
 12337                           ;LCD.c: 97: LCDsend2x4(0x06, 0);
 12338  0F15  0020               	movlb	0	; select bank0
 12339  0F16  01A2               	clrf	LCDsend2x4@mode
 12340  0F17  3006               	movlw	6
 12341  0F18  318F  272C  318E   	fcall	_LCDsend2x4
 12342  0F1B                     l3861:
 12343                           
 12344                           ;LCD.c: 98: LCDsend2x4(0x0f, 0);
 12345  0F1B  0020               	movlb	0	; select bank0
 12346  0F1C  01A2               	clrf	LCDsend2x4@mode
 12347  0F1D  300F               	movlw	15
 12348  0F1E  318F  272C  318E   	fcall	_LCDsend2x4
 12349  0F21                     l3863:
 12350                           
 12351                           ;LCD.c: 99: LCDsend2x4(0x01, 0);
 12352  0F21  0020               	movlb	0	; select bank0
 12353  0F22  01A2               	clrf	LCDsend2x4@mode
 12354  0F23  3001               	movlw	1
 12355  0F24  318F  272C  318E   	fcall	_LCDsend2x4
 12356                           
 12357                           ;LCD.c: 100: _delay((unsigned long)((2)*(1000000/4000.0)));
 12358  0F27  30A6               	movlw	166
 12359  0F28                     u4407:
 12360  0F28  0B89               	decfsz	9,f
 12361  0F29  2F28               	goto	u4407
 12362  0F2A  3200               	nop2
 12363  0F2B                     l909:
 12364  0F2B  0008               	return
 12365  0F2C                     __end_of_LCDinit:
 12366                           
 12367                           	psect	text35
 12368  0F2C                     __ptext35:	
 12369 ;; *************** function _LCDsend2x4 *****************
 12370 ;; Defined at:
 12371 ;;		line 57 in file "LCD.c"
 12372 ;; Parameters:    Size  Location     Type
 12373 ;;  c               1    wreg     unsigned char 
 12374 ;;  mode            1    2[BANK0 ] unsigned char 
 12375 ;; Auto vars:     Size  Location     Type
 12376 ;;  c               1    5[BANK0 ] unsigned char 
 12377 ;;  lc              1    7[BANK0 ] unsigned char 
 12378 ;;  hc              1    6[BANK0 ] unsigned char 
 12379 ;; Return value:  Size  Location     Type
 12380 ;;                  1    wreg      void 
 12381 ;; Registers used:
 12382 ;;		wreg, status,2, status,0, pclath, cstack
 12383 ;; Tracked objects:
 12384 ;;		On entry : 0/0
 12385 ;;		On exit  : 0/0
 12386 ;;		Unchanged: 0/0
 12387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12388 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12389 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12390 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12391 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12392 ;;Total ram usage:        6 bytes
 12393 ;; Hardware stack levels used:    1
 12394 ;; Hardware stack levels required when called:    6
 12395 ;; This function calls:
 12396 ;;		_WriteI2C
 12397 ;; This function is called by:
 12398 ;;		_LCDinit
 12399 ;;		_LCDcmd
 12400 ;;		_LCDchar
 12401 ;; This function uses a non-reentrant model
 12402 ;;
 12403                           
 12404                           
 12405                           ;psect for function _LCDsend2x4
 12406  0F2C                     _LCDsend2x4:
 12407                           
 12408                           ;incstack = 0
 12409                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 12410                           ;LCDsend2x4@c stored from wreg
 12411  0F2C  0020               	movlb	0	; select bank0
 12412  0F2D  00A5               	movwf	LCDsend2x4@c
 12413  0F2E                     l3367:
 12414                           
 12415                           ;LCD.c: 59: unsigned char hc;;LCD.c: 60: unsigned char lc;;LCD.c: 62: hc = c & 0xf0;
 12416  0F2E  0825               	movf	LCDsend2x4@c,w
 12417  0F2F  39F0               	andlw	240
 12418  0F30  00A3               	movwf	??_LCDsend2x4
 12419  0F31  0823               	movf	??_LCDsend2x4,w
 12420  0F32  00A6               	movwf	LCDsend2x4@hc
 12421  0F33                     l3369:
 12422                           
 12423                           ;LCD.c: 63: lc = (c << 4) & 0xf0;
 12424  0F33  0825               	movf	LCDsend2x4@c,w
 12425  0F34  00A3               	movwf	??_LCDsend2x4
 12426  0F35  3003               	movlw	3
 12427  0F36                     u2295:
 12428  0F36  35A3               	lslf	??_LCDsend2x4,f
 12429  0F37  3EFF               	addlw	-1
 12430  0F38  1D03               	skipz
 12431  0F39  2F36               	goto	u2295
 12432  0F3A  3523               	lslf	??_LCDsend2x4,w
 12433  0F3B  39F0               	andlw	240
 12434  0F3C  00A4               	movwf	??_LCDsend2x4+1
 12435  0F3D  0824               	movf	??_LCDsend2x4+1,w
 12436  0F3E  00A7               	movwf	LCDsend2x4@lc
 12437  0F3F                     l3371:	
 12438                           ;LCD.c: 65: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12439                           
 12440  0F3F  0023               	movlb	3	; select bank3
 12441  0F40  0C0F               	rrf	15,w	;volatile
 12442  0F41  0C89               	rrf	9,f
 12443  0F42  3901               	andlw	1
 12444  0F43  0020               	movlb	0	; select bank0
 12445  0F44  00A3               	movwf	??_LCDsend2x4
 12446  0F45  0023               	movlb	3	; select bank3
 12447  0F46  0811               	movf	17,w	;volatile
 12448  0F47  391F               	andlw	31
 12449  0F48  0020               	movlb	0	; select bank0
 12450  0F49  0423               	iorwf	??_LCDsend2x4,w
 12451  0F4A  1D03               	btfss	3,2
 12452  0F4B  2F4D               	goto	u2301
 12453  0F4C  2F4E               	goto	u2300
 12454  0F4D                     u2301:
 12455  0F4D  2F3F               	goto	l3371
 12456  0F4E                     u2300:
 12457  0F4E                     l875:
 12458                           
 12459                           ;LCD.c: 66: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP1
      +                          STATbits.R_W));
 12460  0F4E  0023               	movlb	3	; select bank3
 12461  0F4F  1411               	bsf	17,0	;volatile
 12462  0F50                     l876:
 12463  0F50  1811               	btfsc	17,0	;volatile
 12464  0F51  2F53               	goto	u2311
 12465  0F52  2F54               	goto	u2310
 12466  0F53                     u2311:
 12467  0F53  2F50               	goto	l876
 12468  0F54                     u2310:
 12469  0F54                     l3373:
 12470  0F54  0023               	movlb	3	; select bank3
 12471  0F55  0C0F               	rrf	15,w	;volatile
 12472  0F56  0C89               	rrf	9,f
 12473  0F57  3901               	andlw	1
 12474  0F58  0020               	movlb	0	; select bank0
 12475  0F59  00A3               	movwf	??_LCDsend2x4
 12476  0F5A  0023               	movlb	3	; select bank3
 12477  0F5B  0811               	movf	17,w	;volatile
 12478  0F5C  391F               	andlw	31
 12479  0F5D  0020               	movlb	0	; select bank0
 12480  0F5E  0423               	iorwf	??_LCDsend2x4,w
 12481  0F5F  1D03               	btfss	3,2
 12482  0F60  2F62               	goto	u2321
 12483  0F61  2F63               	goto	u2320
 12484  0F62                     u2321:
 12485  0F62  2F54               	goto	l3373
 12486  0F63                     u2320:
 12487  0F63                     l3375:
 12488                           
 12489                           ;LCD.c: 67: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12490  0F63  304E               	movlw	78
 12491  0F64  318D  25FE  318F   	fcall	_WriteI2C
 12492  0F67                     l3377:
 12493  0F67  0023               	movlb	3	; select bank3
 12494  0F68  0C0F               	rrf	15,w	;volatile
 12495  0F69  0C89               	rrf	9,f
 12496  0F6A  3901               	andlw	1
 12497  0F6B  0020               	movlb	0	; select bank0
 12498  0F6C  00A3               	movwf	??_LCDsend2x4
 12499  0F6D  0023               	movlb	3	; select bank3
 12500  0F6E  0811               	movf	17,w	;volatile
 12501  0F6F  391F               	andlw	31
 12502  0F70  0020               	movlb	0	; select bank0
 12503  0F71  0423               	iorwf	??_LCDsend2x4,w
 12504  0F72  1D03               	btfss	3,2
 12505  0F73  2F75               	goto	u2331
 12506  0F74  2F76               	goto	u2330
 12507  0F75                     u2331:
 12508  0F75  2F67               	goto	l3377
 12509  0F76                     u2330:
 12510  0F76                     l3379:
 12511                           
 12512                           ;LCD.c: 68: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12513  0F76  0826               	movf	LCDsend2x4@hc,w
 12514  0F77  0422               	iorwf	LCDsend2x4@mode,w
 12515  0F78  3808               	iorlw	8
 12516  0F79  318D  25FE  318F   	fcall	_WriteI2C
 12517  0F7C                     l3381:
 12518  0F7C  0023               	movlb	3	; select bank3
 12519  0F7D  0C0F               	rrf	15,w	;volatile
 12520  0F7E  0C89               	rrf	9,f
 12521  0F7F  3901               	andlw	1
 12522  0F80  0020               	movlb	0	; select bank0
 12523  0F81  00A3               	movwf	??_LCDsend2x4
 12524  0F82  0023               	movlb	3	; select bank3
 12525  0F83  0811               	movf	17,w	;volatile
 12526  0F84  391F               	andlw	31
 12527  0F85  0020               	movlb	0	; select bank0
 12528  0F86  0423               	iorwf	??_LCDsend2x4,w
 12529  0F87  1D03               	btfss	3,2
 12530  0F88  2F8A               	goto	u2341
 12531  0F89  2F8B               	goto	u2340
 12532  0F8A                     u2341:
 12533  0F8A  2F7C               	goto	l3381
 12534  0F8B                     u2340:
 12535  0F8B                     l3383:
 12536                           
 12537                           ;LCD.c: 69: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.
      +                          R_W));
 12538  0F8B  0826               	movf	LCDsend2x4@hc,w
 12539  0F8C  0422               	iorwf	LCDsend2x4@mode,w
 12540  0F8D  380C               	iorlw	12
 12541  0F8E  318D  25FE  318F   	fcall	_WriteI2C
 12542  0F91                     l3385:
 12543  0F91  0023               	movlb	3	; select bank3
 12544  0F92  0C0F               	rrf	15,w	;volatile
 12545  0F93  0C89               	rrf	9,f
 12546  0F94  3901               	andlw	1
 12547  0F95  0020               	movlb	0	; select bank0
 12548  0F96  00A3               	movwf	??_LCDsend2x4
 12549  0F97  0023               	movlb	3	; select bank3
 12550  0F98  0811               	movf	17,w	;volatile
 12551  0F99  391F               	andlw	31
 12552  0F9A  0020               	movlb	0	; select bank0
 12553  0F9B  0423               	iorwf	??_LCDsend2x4,w
 12554  0F9C  1D03               	btfss	3,2
 12555  0F9D  2F9F               	goto	u2351
 12556  0F9E  2FA0               	goto	u2350
 12557  0F9F                     u2351:
 12558  0F9F  2F91               	goto	l3385
 12559  0FA0                     u2350:
 12560  0FA0                     l890:
 12561  0FA0                     l3387:	
 12562                           ;LCD.c: 70: _delay((unsigned long)((1)*(1000000/4000000.0)));
 12563                           
 12564                           
 12565                           ;LCD.c: 71: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12566  0FA0  0020               	movlb	0	; select bank0
 12567  0FA1  0826               	movf	LCDsend2x4@hc,w
 12568  0FA2  0422               	iorwf	LCDsend2x4@mode,w
 12569  0FA3  3808               	iorlw	8
 12570  0FA4  318D  25FE  318F   	fcall	_WriteI2C
 12571  0FA7                     l3389:
 12572  0FA7  0023               	movlb	3	; select bank3
 12573  0FA8  0C0F               	rrf	15,w	;volatile
 12574  0FA9  0C89               	rrf	9,f
 12575  0FAA  3901               	andlw	1
 12576  0FAB  0020               	movlb	0	; select bank0
 12577  0FAC  00A3               	movwf	??_LCDsend2x4
 12578  0FAD  0023               	movlb	3	; select bank3
 12579  0FAE  0811               	movf	17,w	;volatile
 12580  0FAF  391F               	andlw	31
 12581  0FB0  0020               	movlb	0	; select bank0
 12582  0FB1  0423               	iorwf	??_LCDsend2x4,w
 12583  0FB2  1D03               	btfss	3,2
 12584  0FB3  2FB5               	goto	u2361
 12585  0FB4  2FB6               	goto	u2360
 12586  0FB5                     u2361:
 12587  0FB5  2FA7               	goto	l3389
 12588  0FB6                     u2360:
 12589  0FB6                     l3391:
 12590                           
 12591                           ;LCD.c: 72: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12592  0FB6  0827               	movf	LCDsend2x4@lc,w
 12593  0FB7  0422               	iorwf	LCDsend2x4@mode,w
 12594  0FB8  3808               	iorlw	8
 12595  0FB9  318D  25FE  318F   	fcall	_WriteI2C
 12596  0FBC                     l3393:
 12597  0FBC  0023               	movlb	3	; select bank3
 12598  0FBD  0C0F               	rrf	15,w	;volatile
 12599  0FBE  0C89               	rrf	9,f
 12600  0FBF  3901               	andlw	1
 12601  0FC0  0020               	movlb	0	; select bank0
 12602  0FC1  00A3               	movwf	??_LCDsend2x4
 12603  0FC2  0023               	movlb	3	; select bank3
 12604  0FC3  0811               	movf	17,w	;volatile
 12605  0FC4  391F               	andlw	31
 12606  0FC5  0020               	movlb	0	; select bank0
 12607  0FC6  0423               	iorwf	??_LCDsend2x4,w
 12608  0FC7  1D03               	btfss	3,2
 12609  0FC8  2FCA               	goto	u2371
 12610  0FC9  2FCB               	goto	u2370
 12611  0FCA                     u2371:
 12612  0FCA  2FBC               	goto	l3393
 12613  0FCB                     u2370:
 12614  0FCB                     l3395:
 12615                           
 12616                           ;LCD.c: 73: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.
      +                          R_W));
 12617  0FCB  0827               	movf	LCDsend2x4@lc,w
 12618  0FCC  0422               	iorwf	LCDsend2x4@mode,w
 12619  0FCD  380C               	iorlw	12
 12620  0FCE  318D  25FE  318F   	fcall	_WriteI2C
 12621  0FD1                     l3397:
 12622  0FD1  0023               	movlb	3	; select bank3
 12623  0FD2  0C0F               	rrf	15,w	;volatile
 12624  0FD3  0C89               	rrf	9,f
 12625  0FD4  3901               	andlw	1
 12626  0FD5  0020               	movlb	0	; select bank0
 12627  0FD6  00A3               	movwf	??_LCDsend2x4
 12628  0FD7  0023               	movlb	3	; select bank3
 12629  0FD8  0811               	movf	17,w	;volatile
 12630  0FD9  391F               	andlw	31
 12631  0FDA  0020               	movlb	0	; select bank0
 12632  0FDB  0423               	iorwf	??_LCDsend2x4,w
 12633  0FDC  1D03               	btfss	3,2
 12634  0FDD  2FDF               	goto	u2381
 12635  0FDE  2FE0               	goto	u2380
 12636  0FDF                     u2381:
 12637  0FDF  2FD1               	goto	l3397
 12638  0FE0                     u2380:
 12639  0FE0                     l899:
 12640  0FE0                     l3399:	
 12641                           ;LCD.c: 74: _delay((unsigned long)((1)*(1000000/4000000.0)));
 12642                           
 12643                           
 12644                           ;LCD.c: 75: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12645  0FE0  0020               	movlb	0	; select bank0
 12646  0FE1  0827               	movf	LCDsend2x4@lc,w
 12647  0FE2  0422               	iorwf	LCDsend2x4@mode,w
 12648  0FE3  3808               	iorlw	8
 12649  0FE4  318D  25FE  318F   	fcall	_WriteI2C
 12650  0FE7                     l3401:
 12651  0FE7  0023               	movlb	3	; select bank3
 12652  0FE8  0C0F               	rrf	15,w	;volatile
 12653  0FE9  0C89               	rrf	9,f
 12654  0FEA  3901               	andlw	1
 12655  0FEB  0020               	movlb	0	; select bank0
 12656  0FEC  00A3               	movwf	??_LCDsend2x4
 12657  0FED  0023               	movlb	3	; select bank3
 12658  0FEE  0811               	movf	17,w	;volatile
 12659  0FEF  391F               	andlw	31
 12660  0FF0  0020               	movlb	0	; select bank0
 12661  0FF1  0423               	iorwf	??_LCDsend2x4,w
 12662  0FF2  1D03               	btfss	3,2
 12663  0FF3  2FF5               	goto	u2391
 12664  0FF4  2FF6               	goto	u2390
 12665  0FF5                     u2391:
 12666  0FF5  2FE7               	goto	l3401
 12667  0FF6                     u2390:
 12668  0FF6                     l902:
 12669                           
 12670                           ;LCD.c: 76: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 12671  0FF6  0023               	movlb	3	; select bank3
 12672  0FF7  1511               	bsf	17,2	;volatile
 12673  0FF8                     l903:
 12674  0FF8  1911               	btfsc	17,2	;volatile
 12675  0FF9  2FFB               	goto	u2401
 12676  0FFA  2FFC               	goto	u2400
 12677  0FFB                     u2401:
 12678  0FFB  2FF8               	goto	l903
 12679  0FFC                     u2400:
 12680  0FFC                     l3403:
 12681                           
 12682                           ;LCD.c: 77: _delay((unsigned long)((50)*(1000000/4000000.0)));
 12683  0FFC  3004               	movlw	4
 12684  0FFD                     u4417:
 12685  0FFD  0B89               	decfsz	9,f
 12686  0FFE  2FFD               	goto	u4417
 12687  0FFF                     l906:
 12688  0FFF  0008               	return
 12689  1000                     __end_of_LCDsend2x4:
 12690                           
 12691                           	psect	text36
 12692  0DAB                     __ptext36:	
 12693 ;; *************** function _LCDsend *****************
 12694 ;; Defined at:
 12695 ;;		line 18 in file "LCD.c"
 12696 ;; Parameters:    Size  Location     Type
 12697 ;;  c               1    wreg     unsigned char 
 12698 ;; Auto vars:     Size  Location     Type
 12699 ;;  c               1    3[BANK0 ] unsigned char 
 12700 ;; Return value:  Size  Location     Type
 12701 ;;                  1    wreg      void 
 12702 ;; Registers used:
 12703 ;;		wreg, status,2, status,0, pclath, cstack
 12704 ;; Tracked objects:
 12705 ;;		On entry : 0/0
 12706 ;;		On exit  : 0/0
 12707 ;;		Unchanged: 0/0
 12708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12710 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12711 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12712 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12713 ;;Total ram usage:        2 bytes
 12714 ;; Hardware stack levels used:    1
 12715 ;; Hardware stack levels required when called:    6
 12716 ;; This function calls:
 12717 ;;		_WriteI2C
 12718 ;; This function is called by:
 12719 ;;		_LCDinit
 12720 ;; This function uses a non-reentrant model
 12721 ;;
 12722                           
 12723                           
 12724                           ;psect for function _LCDsend
 12725  0DAB                     _LCDsend:
 12726                           
 12727                           ;incstack = 0
 12728                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 12729                           ;LCDsend@c stored from wreg
 12730  0DAB  0020               	movlb	0	; select bank0
 12731  0DAC  00A3               	movwf	LCDsend@c
 12732  0DAD                     l3659:
 12733  0DAD                     l3661:	
 12734                           ;LCD.c: 20: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12735                           
 12736  0DAD  0023               	movlb	3	; select bank3
 12737  0DAE  0C0F               	rrf	15,w	;volatile
 12738  0DAF  0C89               	rrf	9,f
 12739  0DB0  3901               	andlw	1
 12740  0DB1  0020               	movlb	0	; select bank0
 12741  0DB2  00A2               	movwf	??_LCDsend
 12742  0DB3  0023               	movlb	3	; select bank3
 12743  0DB4  0811               	movf	17,w	;volatile
 12744  0DB5  391F               	andlw	31
 12745  0DB6  0020               	movlb	0	; select bank0
 12746  0DB7  0422               	iorwf	??_LCDsend,w
 12747  0DB8  1D03               	btfss	3,2
 12748  0DB9  2DBB               	goto	u2851
 12749  0DBA  2DBC               	goto	u2850
 12750  0DBB                     u2851:
 12751  0DBB  2DAD               	goto	l3661
 12752  0DBC                     u2850:
 12753  0DBC                     l773:
 12754                           
 12755                           ;LCD.c: 21: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP1
      +                          STATbits.R_W));
 12756  0DBC  0023               	movlb	3	; select bank3
 12757  0DBD  1411               	bsf	17,0	;volatile
 12758  0DBE                     l774:
 12759  0DBE  1811               	btfsc	17,0	;volatile
 12760  0DBF  2DC1               	goto	u2861
 12761  0DC0  2DC2               	goto	u2860
 12762  0DC1                     u2861:
 12763  0DC1  2DBE               	goto	l774
 12764  0DC2                     u2860:
 12765  0DC2                     l3663:
 12766  0DC2  0023               	movlb	3	; select bank3
 12767  0DC3  0C0F               	rrf	15,w	;volatile
 12768  0DC4  0C89               	rrf	9,f
 12769  0DC5  3901               	andlw	1
 12770  0DC6  0020               	movlb	0	; select bank0
 12771  0DC7  00A2               	movwf	??_LCDsend
 12772  0DC8  0023               	movlb	3	; select bank3
 12773  0DC9  0811               	movf	17,w	;volatile
 12774  0DCA  391F               	andlw	31
 12775  0DCB  0020               	movlb	0	; select bank0
 12776  0DCC  0422               	iorwf	??_LCDsend,w
 12777  0DCD  1D03               	btfss	3,2
 12778  0DCE  2DD0               	goto	u2871
 12779  0DCF  2DD1               	goto	u2870
 12780  0DD0                     u2871:
 12781  0DD0  2DC2               	goto	l3663
 12782  0DD1                     u2870:
 12783  0DD1                     l3665:
 12784                           
 12785                           ;LCD.c: 22: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12786  0DD1  304E               	movlw	78
 12787  0DD2  318D  25FE  318D   	fcall	_WriteI2C
 12788  0DD5                     l3667:
 12789  0DD5  0023               	movlb	3	; select bank3
 12790  0DD6  0C0F               	rrf	15,w	;volatile
 12791  0DD7  0C89               	rrf	9,f
 12792  0DD8  3901               	andlw	1
 12793  0DD9  0020               	movlb	0	; select bank0
 12794  0DDA  00A2               	movwf	??_LCDsend
 12795  0DDB  0023               	movlb	3	; select bank3
 12796  0DDC  0811               	movf	17,w	;volatile
 12797  0DDD  391F               	andlw	31
 12798  0DDE  0020               	movlb	0	; select bank0
 12799  0DDF  0422               	iorwf	??_LCDsend,w
 12800  0DE0  1D03               	btfss	3,2
 12801  0DE1  2DE3               	goto	u2881
 12802  0DE2  2DE4               	goto	u2880
 12803  0DE3                     u2881:
 12804  0DE3  2DD5               	goto	l3667
 12805  0DE4                     u2880:
 12806  0DE4                     l3669:
 12807                           
 12808                           ;LCD.c: 23: WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12809  0DE4  0823               	movf	LCDsend@c,w
 12810  0DE5  318D  25FE  318D   	fcall	_WriteI2C
 12811  0DE8                     l3671:
 12812  0DE8  0023               	movlb	3	; select bank3
 12813  0DE9  0C0F               	rrf	15,w	;volatile
 12814  0DEA  0C89               	rrf	9,f
 12815  0DEB  3901               	andlw	1
 12816  0DEC  0020               	movlb	0	; select bank0
 12817  0DED  00A2               	movwf	??_LCDsend
 12818  0DEE  0023               	movlb	3	; select bank3
 12819  0DEF  0811               	movf	17,w	;volatile
 12820  0DF0  391F               	andlw	31
 12821  0DF1  0020               	movlb	0	; select bank0
 12822  0DF2  0422               	iorwf	??_LCDsend,w
 12823  0DF3  1D03               	btfss	3,2
 12824  0DF4  2DF6               	goto	u2891
 12825  0DF5  2DF7               	goto	u2890
 12826  0DF6                     u2891:
 12827  0DF6  2DE8               	goto	l3671
 12828  0DF7                     u2890:
 12829  0DF7                     l785:
 12830                           
 12831                           ;LCD.c: 24: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 12832  0DF7  0023               	movlb	3	; select bank3
 12833  0DF8  1511               	bsf	17,2	;volatile
 12834  0DF9                     l786:
 12835  0DF9  1911               	btfsc	17,2	;volatile
 12836  0DFA  2DFC               	goto	u2901
 12837  0DFB  2DFD               	goto	u2900
 12838  0DFC                     u2901:
 12839  0DFC  2DF9               	goto	l786
 12840  0DFD                     u2900:
 12841  0DFD                     l789:
 12842  0DFD  0008               	return
 12843  0DFE                     __end_of_LCDsend:
 12844                           
 12845                           	psect	text37
 12846  0DFE                     __ptext37:	
 12847 ;; *************** function _WriteI2C *****************
 12848 ;; Defined at:
 12849 ;;		line 47 in file "I2C/i2c.c"
 12850 ;; Parameters:    Size  Location     Type
 12851 ;;  data_out        1    wreg     unsigned char 
 12852 ;; Auto vars:     Size  Location     Type
 12853 ;;  data_out        1    1[BANK0 ] unsigned char 
 12854 ;; Return value:  Size  Location     Type
 12855 ;;                  1    wreg      char 
 12856 ;; Registers used:
 12857 ;;		wreg, status,2, status,0
 12858 ;; Tracked objects:
 12859 ;;		On entry : 0/0
 12860 ;;		On exit  : 0/0
 12861 ;;		Unchanged: 0/0
 12862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12864 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12865 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12866 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12867 ;;Total ram usage:        2 bytes
 12868 ;; Hardware stack levels used:    1
 12869 ;; Hardware stack levels required when called:    5
 12870 ;; This function calls:
 12871 ;;		Nothing
 12872 ;; This function is called by:
 12873 ;;		_tsttc
 12874 ;;		_LCDsend
 12875 ;;		_LCDsend2x4
 12876 ;;		_LCDrecv
 12877 ;; This function uses a non-reentrant model
 12878 ;;
 12879                           
 12880                           
 12881                           ;psect for function _WriteI2C
 12882  0DFE                     _WriteI2C:
 12883                           
 12884                           ;incstack = 0
 12885                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 12886                           ;WriteI2C@data_out stored from wreg
 12887  0DFE  0020               	movlb	0	; select bank0
 12888  0DFF  00A1               	movwf	WriteI2C@data_out
 12889  0E00                     l3317:
 12890                           
 12891                           ;i2c.c: 49: SSP1BUF = data_out;
 12892  0E00  0821               	movf	WriteI2C@data_out,w
 12893  0E01  0023               	movlb	3	; select bank3
 12894  0E02  008C               	movwf	12	;volatile
 12895  0E03                     l3319:
 12896                           
 12897                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 12898  0E03  1F90               	btfss	16,7	;volatile
 12899  0E04  2E06               	goto	u2191
 12900  0E05  2E07               	goto	u2190
 12901  0E06                     u2191:
 12902  0E06  2E08               	goto	l3325
 12903  0E07                     u2190:
 12904  0E07  2E57               	goto	l30
 12905  0E08                     l3325:
 12906                           
 12907                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 12908  0E08  300F               	movlw	15
 12909  0E09  0510               	andwf	16,w	;volatile
 12910  0E0A  0020               	movlb	0	; select bank0
 12911  0E0B  00A0               	movwf	??_WriteI2C
 12912  0E0C  3008               	movlw	8
 12913  0E0D  0620               	xorwf	??_WriteI2C,w
 12914  0E0E  1903               	btfsc	3,2
 12915  0E0F  2E11               	goto	u2201
 12916  0E10  2E12               	goto	u2200
 12917  0E11                     u2201:
 12918  0E11  2E2B               	goto	l3337
 12919  0E12                     u2200:
 12920  0E12                     l3327:
 12921  0E12  300F               	movlw	15
 12922  0E13  0023               	movlb	3	; select bank3
 12923  0E14  0510               	andwf	16,w	;volatile
 12924  0E15  0020               	movlb	0	; select bank0
 12925  0E16  00A0               	movwf	??_WriteI2C
 12926  0E17  300B               	movlw	11
 12927  0E18  0620               	xorwf	??_WriteI2C,w
 12928  0E19  1903               	btfsc	3,2
 12929  0E1A  2E1C               	goto	u2211
 12930  0E1B  2E1D               	goto	u2210
 12931  0E1C                     u2211:
 12932  0E1C  2E2B               	goto	l3337
 12933  0E1D                     u2210:
 12934  0E1D                     l3329:
 12935                           
 12936                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 12937  0E1D  0023               	movlb	3	; select bank3
 12938  0E1E  1610               	bsf	16,4	;volatile
 12939  0E1F                     l33:	
 12940                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 12941                           
 12942  0E1F  002E               	movlb	14	; select bank14
 12943  0E20  1C0F               	btfss	15,0	;volatile
 12944  0E21  2E23               	goto	u2221
 12945  0E22  2E24               	goto	u2220
 12946  0E23                     u2221:
 12947  0E23  2E1F               	goto	l33
 12948  0E24                     u2220:
 12949  0E24                     l35:
 12950                           
 12951                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 12952  0E24  0023               	movlb	3	; select bank3
 12953  0E25  190F               	btfsc	15,2	;volatile
 12954  0E26  2E28               	goto	u2231
 12955  0E27  2E29               	goto	u2230
 12956  0E28                     u2231:
 12957  0E28  2E57               	goto	l30
 12958  0E29                     u2230:
 12959  0E29                     l3331:
 12960  0E29  080F               	movf	15,w	;volatile
 12961  0E2A  2E57               	goto	l30
 12962  0E2B                     l3337:
 12963                           
 12964                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 12965  0E2B  300F               	movlw	15
 12966  0E2C  0023               	movlb	3	; select bank3
 12967  0E2D  0510               	andwf	16,w	;volatile
 12968  0E2E  0020               	movlb	0	; select bank0
 12969  0E2F  00A0               	movwf	??_WriteI2C
 12970  0E30  3008               	movlw	8
 12971  0E31  0620               	xorwf	??_WriteI2C,w
 12972  0E32  1903               	btfsc	3,2
 12973  0E33  2E35               	goto	u2241
 12974  0E34  2E36               	goto	u2240
 12975  0E35                     u2241:
 12976  0E35  2E41               	goto	l42
 12977  0E36                     u2240:
 12978  0E36                     l3339:
 12979  0E36  300F               	movlw	15
 12980  0E37  0023               	movlb	3	; select bank3
 12981  0E38  0510               	andwf	16,w	;volatile
 12982  0E39  0020               	movlb	0	; select bank0
 12983  0E3A  00A0               	movwf	??_WriteI2C
 12984  0E3B  300B               	movlw	11
 12985  0E3C  0620               	xorwf	??_WriteI2C,w
 12986  0E3D  1D03               	btfss	3,2
 12987  0E3E  2E40               	goto	u2251
 12988  0E3F  2E41               	goto	u2250
 12989  0E40                     u2251:
 12990  0E40  2E57               	goto	l30
 12991  0E41                     u2250:
 12992  0E41                     l42:
 12993  0E41  0023               	movlb	3	; select bank3
 12994  0E42  180F               	btfsc	15,0	;volatile
 12995  0E43  2E45               	goto	u2261
 12996  0E44  2E46               	goto	u2260
 12997  0E45                     u2261:
 12998  0E45  2E41               	goto	l42
 12999  0E46                     u2260:
 13000  0E46                     l3341:
 13001  0E46  0023               	movlb	3	; select bank3
 13002  0E47  0C0F               	rrf	15,w	;volatile
 13003  0E48  0C89               	rrf	9,f
 13004  0E49  3901               	andlw	1
 13005  0E4A  0020               	movlb	0	; select bank0
 13006  0E4B  00A0               	movwf	??_WriteI2C
 13007  0E4C  0023               	movlb	3	; select bank3
 13008  0E4D  0811               	movf	17,w	;volatile
 13009  0E4E  391F               	andlw	31
 13010  0E4F  0020               	movlb	0	; select bank0
 13011  0E50  0420               	iorwf	??_WriteI2C,w
 13012  0E51  1D03               	btfss	3,2
 13013  0E52  2E54               	goto	u2271
 13014  0E53  2E55               	goto	u2270
 13015  0E54                     u2271:
 13016  0E54  2E46               	goto	l3341
 13017  0E55                     u2270:
 13018  0E55                     l47:
 13019                           
 13020                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 13021  0E55  0023               	movlb	3	; select bank3
 13022  0E56  0811               	movf	17,w	;volatile
 13023  0E57                     l30:
 13024  0E57  0008               	return
 13025  0E58                     __end_of_WriteI2C:
 13026                           
 13027                           	psect	intentry
 13028  0004                     __pintentry:	
 13029 ;; *************** function _INTERRUPT_InterruptManager *****************
 13030 ;; Defined at:
 13031 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13032 ;; Parameters:    Size  Location     Type
 13033 ;;		None
 13034 ;; Auto vars:     Size  Location     Type
 13035 ;;		None
 13036 ;; Return value:  Size  Location     Type
 13037 ;;                  1    wreg      void 
 13038 ;; Registers used:
 13039 ;;		wreg, status,2, status,0, pclath, cstack
 13040 ;; Tracked objects:
 13041 ;;		On entry : 0/0
 13042 ;;		On exit  : 0/0
 13043 ;;		Unchanged: 0/0
 13044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13049 ;;Total ram usage:        0 bytes
 13050 ;; Hardware stack levels used:    1
 13051 ;; Hardware stack levels required when called:    4
 13052 ;; This function calls:
 13053 ;;		_TMR0_ISR
 13054 ;; This function is called by:
 13055 ;;		Interrupt level 1
 13056 ;; This function uses a non-reentrant model
 13057 ;;
 13058                           
 13059  0004                     _INTERRUPT_InterruptManager:
 13060                           
 13061                           ;incstack = 0
 13062  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 13063                           
 13064                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 13065  0005  3180               	pagesel	$
 13066  0006                     i1l4267:
 13067                           
 13068                           ;interrupt_manager.c: 55: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 13069  0006  002E               	movlb	14	; select bank14
 13070  0007  1E96               	btfss	22,5	;volatile
 13071  0008  280A               	goto	u396_21
 13072  0009  280B               	goto	u396_20
 13073  000A                     u396_21:
 13074  000A  2813               	goto	i1l330
 13075  000B                     u396_20:
 13076  000B                     i1l4269:
 13077  000B  1E8C               	btfss	12,5	;volatile
 13078  000C  280E               	goto	u397_21
 13079  000D  280F               	goto	u397_20
 13080  000E                     u397_21:
 13081  000E  2813               	goto	i1l330
 13082  000F                     u397_20:
 13083  000F                     i1l4271:
 13084                           
 13085                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: TMR0_ISR();
 13086  000F  318B  23A6  3180   	fcall	_TMR0_ISR
 13087                           
 13088                           ;interrupt_manager.c: 58: }
 13089  0012  2826               	goto	i1l338
 13090  0013                     i1l330:
 13091                           
 13092                           ;interrupt_manager.c: 59: else if(INTCONbits.PEIE == 1)
 13093  0013  1F0B               	btfss	11,6	;volatile
 13094  0014  2816               	goto	u398_21
 13095  0015  2817               	goto	u398_20
 13096  0016                     u398_21:
 13097  0016  2826               	goto	i1l338
 13098  0017                     u398_20:
 13099  0017                     i1l4273:
 13100                           
 13101                           ;interrupt_manager.c: 60: {;interrupt_manager.c: 61: if(PIE3bits.BCL1IE == 1 && PIR3bits
      +                          .BCL1IF == 1)
 13102  0017  1C99               	btfss	25,1	;volatile
 13103  0018  281A               	goto	u399_21
 13104  0019  281B               	goto	u399_20
 13105  001A                     u399_21:
 13106  001A  2820               	goto	i1l333
 13107  001B                     u399_20:
 13108  001B                     i1l4275:
 13109                           
 13110                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: i2c1_driver_busCollisionISR();
 13111  001B  1C8F               	btfss	15,1	;volatile
 13112  001C  281E               	goto	u400_21
 13113  001D  281F               	goto	u400_20
 13114  001E                     u400_21:
 13115  001E  2820               	goto	i1l333
 13116  001F                     u400_20:
 13117  001F  2826               	goto	i1l338
 13118  0020                     i1l333:
 13119                           
 13120                           ;interrupt_manager.c: 65: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 13121  0020  1C19               	btfss	25,0	;volatile
 13122  0021  2823               	goto	u401_21
 13123  0022  2824               	goto	u401_20
 13124  0023                     u401_21:
 13125  0023  2826               	goto	i1l337
 13126  0024                     u401_20:
 13127  0024                     i1l4279:
 13128                           
 13129                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: i2c1_driver_i2cISR();
 13130  0024  080F               	movf	15,w	;volatile
 13131  0025  2826               	goto	i1l338
 13132  0026                     i1l337:	
 13133                           ;interrupt_manager.c: 74: else;interrupt_manager.c: 75: {
 13134                           
 13135  0026                     i1l338:
 13136  0026  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 13137  0027  0009               	retfie
 13138  0028                     __end_of_INTERRUPT_InterruptManager:
 13139                           
 13140                           	psect	text39
 13141  0BA6                     __ptext39:	
 13142 ;; *************** function _TMR0_ISR *****************
 13143 ;; Defined at:
 13144 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 13145 ;; Parameters:    Size  Location     Type
 13146 ;;		None
 13147 ;; Auto vars:     Size  Location     Type
 13148 ;;		None
 13149 ;; Return value:  Size  Location     Type
 13150 ;;                  1    wreg      void 
 13151 ;; Registers used:
 13152 ;;		wreg, status,2, status,0, pclath, cstack
 13153 ;; Tracked objects:
 13154 ;;		On entry : 0/0
 13155 ;;		On exit  : 0/0
 13156 ;;		Unchanged: 0/0
 13157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13162 ;;Total ram usage:        0 bytes
 13163 ;; Hardware stack levels used:    1
 13164 ;; Hardware stack levels required when called:    3
 13165 ;; This function calls:
 13166 ;;		_TMR0_CallBack
 13167 ;; This function is called by:
 13168 ;;		_INTERRUPT_InterruptManager
 13169 ;; This function uses a non-reentrant model
 13170 ;;
 13171                           
 13172                           
 13173                           ;psect for function _TMR0_ISR
 13174  0BA6                     _TMR0_ISR:
 13175  0BA6                     i1l3823:	
 13176                           ;incstack = 0
 13177                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 13178                           
 13179                           
 13180                           ;tmr0.c: 123: static volatile uint16_t CountCallBack = 0;;tmr0.c: 126: PIR0bits.TMR0IF =
      +                           0;
 13181  0BA6  002E               	movlb	14	; select bank14
 13182  0BA7  128C               	bcf	12,5	;volatile
 13183  0BA8                     i1l3825:
 13184                           
 13185                           ;tmr0.c: 128: if (++CountCallBack >= 244)
 13186  0BA8  3001               	movlw	1
 13187  0BA9  0021               	movlb	1	; select bank1
 13188  0BAA  07AC               	addwf	TMR0_ISR@CountCallBack^(0+128),f	;volatile
 13189  0BAB  3000               	movlw	0
 13190  0BAC  3DAD               	addwfc	(TMR0_ISR@CountCallBack+1)^(0+128),f	;volatile
 13191  0BAD  3000               	movlw	0
 13192  0BAE  022D               	subwf	(TMR0_ISR@CountCallBack+1)^(0+128),w	;volatile
 13193  0BAF  30F4               	movlw	244
 13194  0BB0  1903               	skipnz
 13195  0BB1  022C               	subwf	TMR0_ISR@CountCallBack^(0+128),w	;volatile
 13196  0BB2  1C03               	skipc
 13197  0BB3  2BB5               	goto	u311_21
 13198  0BB4  2BB6               	goto	u311_20
 13199  0BB5                     u311_21:
 13200  0BB5  2BBC               	goto	i1l384
 13201  0BB6                     u311_20:
 13202  0BB6                     i1l3827:
 13203                           
 13204                           ;tmr0.c: 129: {;tmr0.c: 131: TMR0_CallBack();
 13205  0BB6  318A  22CB  318B   	fcall	_TMR0_CallBack
 13206  0BB9                     i1l3829:
 13207                           
 13208                           ;tmr0.c: 134: CountCallBack = 0;
 13209  0BB9  0021               	movlb	1	; select bank1
 13210  0BBA  01AC               	clrf	TMR0_ISR@CountCallBack^(0+128)	;volatile
 13211  0BBB  01AD               	clrf	(TMR0_ISR@CountCallBack+1)^(0+128)	;volatile
 13212  0BBC                     i1l384:
 13213  0BBC  0008               	return
 13214  0BBD                     __end_of_TMR0_ISR:
 13215                           
 13216                           	psect	text40
 13217  0ACB                     __ptext40:	
 13218 ;; *************** function _TMR0_CallBack *****************
 13219 ;; Defined at:
 13220 ;;		line 140 in file "mcc_generated_files/tmr0.c"
 13221 ;; Parameters:    Size  Location     Type
 13222 ;;		None
 13223 ;; Auto vars:     Size  Location     Type
 13224 ;;		None
 13225 ;; Return value:  Size  Location     Type
 13226 ;;                  1    wreg      void 
 13227 ;; Registers used:
 13228 ;;		wreg, status,2, status,0, pclath, cstack
 13229 ;; Tracked objects:
 13230 ;;		On entry : 0/0
 13231 ;;		On exit  : 0/0
 13232 ;;		Unchanged: 0/0
 13233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13238 ;;Total ram usage:        0 bytes
 13239 ;; Hardware stack levels used:    1
 13240 ;; Hardware stack levels required when called:    2
 13241 ;; This function calls:
 13242 ;;		Absolute function
 13243 ;;		_TMR0_DefaultInterruptHandler
 13244 ;;		_TMR0_callback
 13245 ;; This function is called by:
 13246 ;;		_TMR0_ISR
 13247 ;; This function uses a non-reentrant model
 13248 ;;
 13249                           
 13250                           
 13251                           ;psect for function _TMR0_CallBack
 13252  0ACB                     _TMR0_CallBack:
 13253  0ACB                     i1l3655:	
 13254                           ;incstack = 0
 13255                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
 13256                           
 13257                           
 13258                           ;tmr0.c: 144: if(TMR0_InterruptHandler)
 13259  0ACB  0021               	movlb	1	; select bank1
 13260  0ACC  083A               	movf	_TMR0_InterruptHandler^(0+128),w
 13261  0ACD  043B               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 13262  0ACE  1903               	btfsc	3,2
 13263  0ACF  2AD1               	goto	u284_21
 13264  0AD0  2AD2               	goto	u284_20
 13265  0AD1                     u284_21:
 13266  0AD1  2AD7               	goto	i1l388
 13267  0AD2                     u284_20:
 13268  0AD2                     i1l3657:
 13269                           
 13270                           ;tmr0.c: 145: {;tmr0.c: 146: TMR0_InterruptHandler();
 13271  0AD2  083B               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 13272  0AD3  008A               	movwf	10
 13273  0AD4  083A               	movf	_TMR0_InterruptHandler^(0+128),w
 13274  0AD5  000A               	callw
 13275  0AD6  318A               	pagesel	$
 13276  0AD7                     i1l388:
 13277  0AD7  0008               	return
 13278  0AD8                     __end_of_TMR0_CallBack:
 13279                           
 13280                           	psect	text41
 13281  0002                     __ptext41:	
 13282 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 13283 ;; Defined at:
 13284 ;;		line 154 in file "mcc_generated_files/tmr0.c"
 13285 ;; Parameters:    Size  Location     Type
 13286 ;;		None
 13287 ;; Auto vars:     Size  Location     Type
 13288 ;;		None
 13289 ;; Return value:  Size  Location     Type
 13290 ;;                  1    wreg      void 
 13291 ;; Registers used:
 13292 ;;		None
 13293 ;; Tracked objects:
 13294 ;;		On entry : 0/0
 13295 ;;		On exit  : 0/0
 13296 ;;		Unchanged: 0/0
 13297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13302 ;;Total ram usage:        0 bytes
 13303 ;; Hardware stack levels used:    1
 13304 ;; This function calls:
 13305 ;;		Nothing
 13306 ;; This function is called by:
 13307 ;;		_TMR0_Initialize
 13308 ;;		_TMR0_CallBack
 13309 ;; This function uses a non-reentrant model
 13310 ;;
 13311                           
 13312                           
 13313                           ;psect for function _TMR0_DefaultInterruptHandler
 13314  0002                     _TMR0_DefaultInterruptHandler:
 13315  0002                     i1l394:	
 13316                           ;incstack = 0
 13317                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 13318                           
 13319  0002  0008               	return
 13320  0003                     __end_of_TMR0_DefaultInterruptHandler:
 13321                           
 13322                           	psect	text42
 13323  0E58                     __ptext42:	
 13324 ;; *************** function _TMR0_callback *****************
 13325 ;; Defined at:
 13326 ;;		line 372 in file "main.c"
 13327 ;; Parameters:    Size  Location     Type
 13328 ;;		None
 13329 ;; Auto vars:     Size  Location     Type
 13330 ;;		None
 13331 ;; Return value:  Size  Location     Type
 13332 ;;                  1    wreg      void 
 13333 ;; Registers used:
 13334 ;;		wreg, status,2, status,0, pclath, cstack
 13335 ;; Tracked objects:
 13336 ;;		On entry : 0/0
 13337 ;;		On exit  : 0/0
 13338 ;;		Unchanged: 0/0
 13339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13342 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13343 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13344 ;;Total ram usage:        2 bytes
 13345 ;; Hardware stack levels used:    1
 13346 ;; Hardware stack levels required when called:    1
 13347 ;; This function calls:
 13348 ;;		_DATAEE_WriteByte
 13349 ;;		___awmod
 13350 ;;		___lbmod
 13351 ;;		i1___lwmod
 13352 ;; This function is called by:
 13353 ;;		_main
 13354 ;;		_TMR0_CallBack
 13355 ;; This function uses a non-reentrant model
 13356 ;;
 13357                           
 13358                           
 13359                           ;psect for function _TMR0_callback
 13360  0E58                     _TMR0_callback:
 13361  0E58                     i1l3483:	
 13362                           ;incstack = 0
 13363                           ; Regs used in _TMR0_callback: [wreg+status,2+status,0+pclath+cstack]
 13364                           
 13365                           
 13366                           ;main.c: 373: timer_flag++;
 13367  0E58  3001               	movlw	1
 13368  0E59  07FB               	addwf	_timer_flag,f	;volatile
 13369  0E5A  3000               	movlw	0
 13370  0E5B  3DFC               	addwfc	_timer_flag+1,f	;volatile
 13371  0E5C                     i1l3485:
 13372                           
 13373                           ;main.c: 374: if(timer_flag % 60 == 0){
 13374  0E5C  303C               	movlw	60
 13375  0E5D  00F0               	movwf	i1___lwmod@divisor
 13376  0E5E  3000               	movlw	0
 13377  0E5F  00F1               	movwf	i1___lwmod@divisor+1
 13378  0E60  087C               	movf	_timer_flag+1,w	;volatile
 13379  0E61  00F3               	movwf	i1___lwmod@dividend+1
 13380  0E62  087B               	movf	_timer_flag,w	;volatile
 13381  0E63  00F2               	movwf	i1___lwmod@dividend
 13382  0E64  318C  2477  318E   	fcall	i1___lwmod
 13383  0E67  0870               	movf	?i1___lwmod,w
 13384  0E68  0471               	iorwf	?i1___lwmod+1,w
 13385  0E69  1D03               	btfss	3,2
 13386  0E6A  2E6C               	goto	u259_21
 13387  0E6B  2E6D               	goto	u259_20
 13388  0E6C                     u259_21:
 13389  0E6C  2E72               	goto	i1l3489
 13390  0E6D                     u259_20:
 13391  0E6D                     i1l3487:
 13392                           
 13393                           ;main.c: 375: CLKM++;
 13394  0E6D  3001               	movlw	1
 13395  0E6E  00F7               	movwf	??_TMR0_callback
 13396  0E6F  0877               	movf	??_TMR0_callback,w
 13397  0E70  0020               	movlb	0	; select bank0
 13398  0E71  07EE               	addwf	_CLKM,f
 13399  0E72                     i1l3489:
 13400                           
 13401                           ;main.c: 377: };main.c: 378: if(CLKM % 60 == 0 && CLKM != 0){
 13402  0E72  303C               	movlw	60
 13403  0E73  00F0               	movwf	___awmod@divisor
 13404  0E74  3000               	movlw	0
 13405  0E75  00F1               	movwf	___awmod@divisor+1
 13406  0E76  0020               	movlb	0	; select bank0
 13407  0E77  086E               	movf	_CLKM,w
 13408  0E78  00F7               	movwf	??_TMR0_callback
 13409  0E79  01F8               	clrf	??_TMR0_callback+1
 13410  0E7A  0877               	movf	??_TMR0_callback,w
 13411  0E7B  00F2               	movwf	___awmod@dividend
 13412  0E7C  0878               	movf	??_TMR0_callback+1,w
 13413  0E7D  00F3               	movwf	___awmod@dividend+1
 13414  0E7E  318D  2558  318E   	fcall	___awmod
 13415  0E81  0870               	movf	?___awmod,w
 13416  0E82  0471               	iorwf	?___awmod+1,w
 13417  0E83  1D03               	btfss	3,2
 13418  0E84  2E86               	goto	u260_21
 13419  0E85  2E87               	goto	u260_20
 13420  0E86                     u260_21:
 13421  0E86  2EB5               	goto	i1l605
 13422  0E87                     u260_20:
 13423  0E87                     i1l3491:
 13424  0E87  0020               	movlb	0	; select bank0
 13425  0E88  086E               	movf	_CLKM,w
 13426  0E89  1903               	btfsc	3,2
 13427  0E8A  2E8C               	goto	u261_21
 13428  0E8B  2E8D               	goto	u261_20
 13429  0E8C                     u261_21:
 13430  0E8C  2EB5               	goto	i1l605
 13431  0E8D                     u261_20:
 13432  0E8D                     i1l3493:
 13433                           
 13434                           ;main.c: 379: CLKH++;
 13435  0E8D  3001               	movlw	1
 13436  0E8E  00F7               	movwf	??_TMR0_callback
 13437  0E8F  0877               	movf	??_TMR0_callback,w
 13438  0E90  07EF               	addwf	_CLKH,f
 13439  0E91                     i1l3495:
 13440                           
 13441                           ;main.c: 380: CLKH %= 24;
 13442  0E91  3018               	movlw	24
 13443  0E92  00F7               	movwf	??_TMR0_callback
 13444  0E93  0877               	movf	??_TMR0_callback,w
 13445  0E94  00F0               	movwf	___lbmod@divisor
 13446  0E95  086F               	movf	_CLKH,w
 13447  0E96  318C  2454  318E   	fcall	___lbmod
 13448  0E99  00F8               	movwf	??_TMR0_callback+1
 13449  0E9A  0878               	movf	??_TMR0_callback+1,w
 13450  0E9B  0020               	movlb	0	; select bank0
 13451  0E9C  00EF               	movwf	_CLKH
 13452  0E9D                     i1l3497:
 13453                           
 13454                           ;main.c: 381: CLKM = 0;
 13455  0E9D  01EE               	clrf	_CLKM
 13456  0E9E                     i1l3499:
 13457                           
 13458                           ;main.c: 383: DATAEE_WriteByte(159,CLKH);
 13459  0E9E  309F               	movlw	159
 13460  0E9F  00F0               	movwf	DATAEE_WriteByte@bAdd
 13461  0EA0  3000               	movlw	0
 13462  0EA1  00F1               	movwf	DATAEE_WriteByte@bAdd+1
 13463  0EA2  086F               	movf	_CLKH,w
 13464  0EA3  00F7               	movwf	??_TMR0_callback
 13465  0EA4  0877               	movf	??_TMR0_callback,w
 13466  0EA5  00F2               	movwf	DATAEE_WriteByte@bData
 13467  0EA6  318B  23F7  318E   	fcall	_DATAEE_WriteByte
 13468  0EA9                     i1l3501:
 13469                           
 13470                           ;main.c: 384: DATAEE_WriteByte(160,CLKM);
 13471  0EA9  30A0               	movlw	160
 13472  0EAA  00F0               	movwf	DATAEE_WriteByte@bAdd
 13473  0EAB  3000               	movlw	0
 13474  0EAC  00F1               	movwf	DATAEE_WriteByte@bAdd+1
 13475  0EAD  0020               	movlb	0	; select bank0
 13476  0EAE  086E               	movf	_CLKM,w
 13477  0EAF  00F7               	movwf	??_TMR0_callback
 13478  0EB0  0877               	movf	??_TMR0_callback,w
 13479  0EB1  00F2               	movwf	DATAEE_WriteByte@bData
 13480  0EB2  318B  23F7  318E   	fcall	_DATAEE_WriteByte
 13481  0EB5                     i1l605:
 13482  0EB5  0008               	return
 13483  0EB6                     __end_of_TMR0_callback:
 13484                           
 13485                           	psect	text43
 13486  0C77                     __ptext43:	
 13487 ;; *************** function i1___lwmod *****************
 13488 ;; Defined at:
 13489 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
 13490 ;; Parameters:    Size  Location     Type
 13491 ;;  divisor         2    0[COMMON] unsigned int 
 13492 ;;  dividend        2    2[COMMON] unsigned int 
 13493 ;; Auto vars:     Size  Location     Type
 13494 ;;  counter         1    5[COMMON] unsigned char 
 13495 ;; Return value:  Size  Location     Type
 13496 ;;                  2    0[COMMON] unsigned int 
 13497 ;; Registers used:
 13498 ;;		wreg, status,2, status,0
 13499 ;; Tracked objects:
 13500 ;;		On entry : 0/0
 13501 ;;		On exit  : 0/0
 13502 ;;		Unchanged: 0/0
 13503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13504 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13505 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13506 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13507 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13508 ;;Total ram usage:        6 bytes
 13509 ;; Hardware stack levels used:    1
 13510 ;; This function calls:
 13511 ;;		Nothing
 13512 ;; This function is called by:
 13513 ;;		_TMR0_callback
 13514 ;; This function uses a non-reentrant model
 13515 ;;
 13516                           
 13517                           
 13518                           ;psect for function i1___lwmod
 13519  0C77                     i1___lwmod:
 13520  0C77                     i1l3459:	
 13521                           ;incstack = 0
 13522                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
 13523                           
 13524  0C77  0870               	movf	i1___lwmod@divisor,w
 13525  0C78  0471               	iorwf	i1___lwmod@divisor+1,w
 13526  0C79  1903               	btfsc	3,2
 13527  0C7A  2C7C               	goto	u253_21
 13528  0C7B  2C7D               	goto	u253_20
 13529  0C7C                     u253_21:
 13530  0C7C  2CA6               	goto	i1l3477
 13531  0C7D                     u253_20:
 13532  0C7D                     i1l3461:
 13533  0C7D  01F5               	clrf	i1___lwmod@counter
 13534  0C7E  0AF5               	incf	i1___lwmod@counter,f
 13535  0C7F  2C89               	goto	i1l3467
 13536  0C80                     i1l3463:
 13537  0C80  3001               	movlw	1
 13538  0C81                     u254_25:
 13539  0C81  35F0               	lslf	i1___lwmod@divisor,f
 13540  0C82  0DF1               	rlf	i1___lwmod@divisor+1,f
 13541  0C83  0B89               	decfsz	9,f
 13542  0C84  2C81               	goto	u254_25
 13543  0C85                     i1l3465:
 13544  0C85  3001               	movlw	1
 13545  0C86  00F4               	movwf	??i1___lwmod
 13546  0C87  0874               	movf	??i1___lwmod,w
 13547  0C88  07F5               	addwf	i1___lwmod@counter,f
 13548  0C89                     i1l3467:
 13549  0C89  1FF1               	btfss	i1___lwmod@divisor+1,7
 13550  0C8A  2C8C               	goto	u255_21
 13551  0C8B  2C8D               	goto	u255_20
 13552  0C8C                     u255_21:
 13553  0C8C  2C80               	goto	i1l3463
 13554  0C8D                     u255_20:
 13555  0C8D                     i1l3469:
 13556  0C8D  0871               	movf	i1___lwmod@divisor+1,w
 13557  0C8E  0273               	subwf	i1___lwmod@dividend+1,w
 13558  0C8F  1D03               	skipz
 13559  0C90  2C93               	goto	u256_25
 13560  0C91  0870               	movf	i1___lwmod@divisor,w
 13561  0C92  0272               	subwf	i1___lwmod@dividend,w
 13562  0C93                     u256_25:
 13563  0C93  1C03               	skipc
 13564  0C94  2C96               	goto	u256_21
 13565  0C95  2C97               	goto	u256_20
 13566  0C96                     u256_21:
 13567  0C96  2C9B               	goto	i1l3473
 13568  0C97                     u256_20:
 13569  0C97                     i1l3471:
 13570  0C97  0870               	movf	i1___lwmod@divisor,w
 13571  0C98  02F2               	subwf	i1___lwmod@dividend,f
 13572  0C99  0871               	movf	i1___lwmod@divisor+1,w
 13573  0C9A  3BF3               	subwfb	i1___lwmod@dividend+1,f
 13574  0C9B                     i1l3473:
 13575  0C9B  3001               	movlw	1
 13576  0C9C                     u257_25:
 13577  0C9C  36F1               	lsrf	i1___lwmod@divisor+1,f
 13578  0C9D  0CF0               	rrf	i1___lwmod@divisor,f
 13579  0C9E  0B89               	decfsz	9,f
 13580  0C9F  2C9C               	goto	u257_25
 13581  0CA0                     i1l3475:
 13582  0CA0  3001               	movlw	1
 13583  0CA1  02F5               	subwf	i1___lwmod@counter,f
 13584  0CA2  1D03               	btfss	3,2
 13585  0CA3  2CA5               	goto	u258_21
 13586  0CA4  2CA6               	goto	u258_20
 13587  0CA5                     u258_21:
 13588  0CA5  2C8D               	goto	i1l3469
 13589  0CA6                     u258_20:
 13590  0CA6                     i1l3477:
 13591  0CA6  0873               	movf	i1___lwmod@dividend+1,w
 13592  0CA7  00F1               	movwf	?i1___lwmod+1
 13593  0CA8  0872               	movf	i1___lwmod@dividend,w
 13594  0CA9  00F0               	movwf	?i1___lwmod
 13595  0CAA                     i1l1596:
 13596  0CAA  0008               	return
 13597  0CAB                     __end_ofi1___lwmod:
 13598                           
 13599                           	psect	text44
 13600  0C54                     __ptext44:	
 13601 ;; *************** function ___lbmod *****************
 13602 ;; Defined at:
 13603 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lbmod.c"
 13604 ;; Parameters:    Size  Location     Type
 13605 ;;  dividend        1    wreg     unsigned char 
 13606 ;;  divisor         1    0[COMMON] unsigned char 
 13607 ;; Auto vars:     Size  Location     Type
 13608 ;;  dividend        1    3[COMMON] unsigned char 
 13609 ;;  rem             1    5[COMMON] unsigned char 
 13610 ;;  counter         1    4[COMMON] unsigned char 
 13611 ;; Return value:  Size  Location     Type
 13612 ;;                  1    wreg      unsigned char 
 13613 ;; Registers used:
 13614 ;;		wreg, status,2, status,0
 13615 ;; Tracked objects:
 13616 ;;		On entry : 0/0
 13617 ;;		On exit  : 0/0
 13618 ;;		Unchanged: 0/0
 13619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13620 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13621 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13622 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13623 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13624 ;;Total ram usage:        6 bytes
 13625 ;; Hardware stack levels used:    1
 13626 ;; This function calls:
 13627 ;;		Nothing
 13628 ;; This function is called by:
 13629 ;;		_TMR0_callback
 13630 ;; This function uses a non-reentrant model
 13631 ;;
 13632                           
 13633                           
 13634                           ;psect for function ___lbmod
 13635  0C54                     ___lbmod:
 13636                           
 13637                           ;incstack = 0
 13638                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
 13639                           ;___lbmod@dividend stored from wreg
 13640  0C54  00F3               	movwf	___lbmod@dividend
 13641  0C55                     i1l3443:
 13642  0C55  3008               	movlw	8
 13643  0C56  00F1               	movwf	??___lbmod
 13644  0C57  0871               	movf	??___lbmod,w
 13645  0C58  00F4               	movwf	___lbmod@counter
 13646  0C59                     i1l3445:
 13647  0C59  01F5               	clrf	___lbmod@rem
 13648  0C5A                     i1l3447:
 13649  0C5A  0873               	movf	___lbmod@dividend,w
 13650  0C5B  00F1               	movwf	??___lbmod
 13651  0C5C  3007               	movlw	7
 13652  0C5D                     u250_25:
 13653  0C5D  36F1               	lsrf	??___lbmod,f
 13654  0C5E  0B89               	decfsz	9,f
 13655  0C5F  2C5D               	goto	u250_25
 13656  0C60  3575               	lslf	___lbmod@rem,w
 13657  0C61  0471               	iorwf	??___lbmod,w
 13658  0C62  00F2               	movwf	??___lbmod+1
 13659  0C63  0872               	movf	??___lbmod+1,w
 13660  0C64  00F5               	movwf	___lbmod@rem
 13661  0C65                     i1l3449:
 13662  0C65  1003               	clrc
 13663  0C66  0DF3               	rlf	___lbmod@dividend,f
 13664  0C67                     i1l3451:
 13665  0C67  0870               	movf	___lbmod@divisor,w
 13666  0C68  0275               	subwf	___lbmod@rem,w
 13667  0C69  1C03               	skipc
 13668  0C6A  2C6C               	goto	u251_21
 13669  0C6B  2C6D               	goto	u251_20
 13670  0C6C                     u251_21:
 13671  0C6C  2C6F               	goto	i1l1524
 13672  0C6D                     u251_20:
 13673  0C6D                     i1l3453:
 13674  0C6D  0870               	movf	___lbmod@divisor,w
 13675  0C6E  02F5               	subwf	___lbmod@rem,f
 13676  0C6F                     i1l1524:
 13677  0C6F  3001               	movlw	1
 13678  0C70  02F4               	subwf	___lbmod@counter,f
 13679  0C71  1D03               	btfss	3,2
 13680  0C72  2C74               	goto	u252_21
 13681  0C73  2C75               	goto	u252_20
 13682  0C74                     u252_21:
 13683  0C74  2C5A               	goto	i1l3447
 13684  0C75                     u252_20:
 13685  0C75                     i1l3455:
 13686  0C75  0875               	movf	___lbmod@rem,w
 13687  0C76                     i1l1526:
 13688  0C76  0008               	return
 13689  0C77                     __end_of___lbmod:
 13690                           
 13691                           	psect	text45
 13692  0D58                     __ptext45:	
 13693 ;; *************** function ___awmod *****************
 13694 ;; Defined at:
 13695 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awmod.c"
 13696 ;; Parameters:    Size  Location     Type
 13697 ;;  divisor         2    0[COMMON] int 
 13698 ;;  dividend        2    2[COMMON] int 
 13699 ;; Auto vars:     Size  Location     Type
 13700 ;;  sign            1    6[COMMON] unsigned char 
 13701 ;;  counter         1    5[COMMON] unsigned char 
 13702 ;; Return value:  Size  Location     Type
 13703 ;;                  2    0[COMMON] int 
 13704 ;; Registers used:
 13705 ;;		wreg, status,2, status,0
 13706 ;; Tracked objects:
 13707 ;;		On entry : 0/0
 13708 ;;		On exit  : 0/0
 13709 ;;		Unchanged: 0/0
 13710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13711 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13712 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13713 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13714 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13715 ;;Total ram usage:        7 bytes
 13716 ;; Hardware stack levels used:    1
 13717 ;; This function calls:
 13718 ;;		Nothing
 13719 ;; This function is called by:
 13720 ;;		_TMR0_callback
 13721 ;; This function uses a non-reentrant model
 13722 ;;
 13723                           
 13724                           
 13725                           ;psect for function ___awmod
 13726  0D58                     ___awmod:
 13727  0D58                     i1l3405:	
 13728                           ;incstack = 0
 13729                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 13730                           
 13731  0D58  01F6               	clrf	___awmod@sign
 13732  0D59                     i1l3407:
 13733  0D59  1FF3               	btfss	___awmod@dividend+1,7
 13734  0D5A  2D5C               	goto	u241_21
 13735  0D5B  2D5D               	goto	u241_20
 13736  0D5C                     u241_21:
 13737  0D5C  2D64               	goto	i1l3413
 13738  0D5D                     u241_20:
 13739  0D5D                     i1l3409:
 13740  0D5D  09F2               	comf	___awmod@dividend,f
 13741  0D5E  09F3               	comf	___awmod@dividend+1,f
 13742  0D5F  0AF2               	incf	___awmod@dividend,f
 13743  0D60  1903               	skipnz
 13744  0D61  0AF3               	incf	___awmod@dividend+1,f
 13745  0D62                     i1l3411:
 13746  0D62  01F6               	clrf	___awmod@sign
 13747  0D63  0AF6               	incf	___awmod@sign,f
 13748  0D64                     i1l3413:
 13749  0D64  1FF1               	btfss	___awmod@divisor+1,7
 13750  0D65  2D67               	goto	u242_21
 13751  0D66  2D68               	goto	u242_20
 13752  0D67                     u242_21:
 13753  0D67  2D6D               	goto	i1l3417
 13754  0D68                     u242_20:
 13755  0D68                     i1l3415:
 13756  0D68  09F0               	comf	___awmod@divisor,f
 13757  0D69  09F1               	comf	___awmod@divisor+1,f
 13758  0D6A  0AF0               	incf	___awmod@divisor,f
 13759  0D6B  1903               	skipnz
 13760  0D6C  0AF1               	incf	___awmod@divisor+1,f
 13761  0D6D                     i1l3417:
 13762  0D6D  0870               	movf	___awmod@divisor,w
 13763  0D6E  0471               	iorwf	___awmod@divisor+1,w
 13764  0D6F  1903               	btfsc	3,2
 13765  0D70  2D72               	goto	u243_21
 13766  0D71  2D73               	goto	u243_20
 13767  0D72                     u243_21:
 13768  0D72  2D9C               	goto	i1l3435
 13769  0D73                     u243_20:
 13770  0D73                     i1l3419:
 13771  0D73  01F5               	clrf	___awmod@counter
 13772  0D74  0AF5               	incf	___awmod@counter,f
 13773  0D75  2D7F               	goto	i1l3425
 13774  0D76                     i1l3421:
 13775  0D76  3001               	movlw	1
 13776  0D77                     u244_25:
 13777  0D77  35F0               	lslf	___awmod@divisor,f
 13778  0D78  0DF1               	rlf	___awmod@divisor+1,f
 13779  0D79  0B89               	decfsz	9,f
 13780  0D7A  2D77               	goto	u244_25
 13781  0D7B                     i1l3423:
 13782  0D7B  3001               	movlw	1
 13783  0D7C  00F4               	movwf	??___awmod
 13784  0D7D  0874               	movf	??___awmod,w
 13785  0D7E  07F5               	addwf	___awmod@counter,f
 13786  0D7F                     i1l3425:
 13787  0D7F  1FF1               	btfss	___awmod@divisor+1,7
 13788  0D80  2D82               	goto	u245_21
 13789  0D81  2D83               	goto	u245_20
 13790  0D82                     u245_21:
 13791  0D82  2D76               	goto	i1l3421
 13792  0D83                     u245_20:
 13793  0D83                     i1l3427:
 13794  0D83  0871               	movf	___awmod@divisor+1,w
 13795  0D84  0273               	subwf	___awmod@dividend+1,w
 13796  0D85  1D03               	skipz
 13797  0D86  2D89               	goto	u246_25
 13798  0D87  0870               	movf	___awmod@divisor,w
 13799  0D88  0272               	subwf	___awmod@dividend,w
 13800  0D89                     u246_25:
 13801  0D89  1C03               	skipc
 13802  0D8A  2D8C               	goto	u246_21
 13803  0D8B  2D8D               	goto	u246_20
 13804  0D8C                     u246_21:
 13805  0D8C  2D91               	goto	i1l3431
 13806  0D8D                     u246_20:
 13807  0D8D                     i1l3429:
 13808  0D8D  0870               	movf	___awmod@divisor,w
 13809  0D8E  02F2               	subwf	___awmod@dividend,f
 13810  0D8F  0871               	movf	___awmod@divisor+1,w
 13811  0D90  3BF3               	subwfb	___awmod@dividend+1,f
 13812  0D91                     i1l3431:
 13813  0D91  3001               	movlw	1
 13814  0D92                     u247_25:
 13815  0D92  36F1               	lsrf	___awmod@divisor+1,f
 13816  0D93  0CF0               	rrf	___awmod@divisor,f
 13817  0D94  0B89               	decfsz	9,f
 13818  0D95  2D92               	goto	u247_25
 13819  0D96                     i1l3433:
 13820  0D96  3001               	movlw	1
 13821  0D97  02F5               	subwf	___awmod@counter,f
 13822  0D98  1D03               	btfss	3,2
 13823  0D99  2D9B               	goto	u248_21
 13824  0D9A  2D9C               	goto	u248_20
 13825  0D9B                     u248_21:
 13826  0D9B  2D83               	goto	i1l3427
 13827  0D9C                     u248_20:
 13828  0D9C                     i1l3435:
 13829  0D9C  0876               	movf	___awmod@sign,w
 13830  0D9D  1903               	btfsc	3,2
 13831  0D9E  2DA0               	goto	u249_21
 13832  0D9F  2DA1               	goto	u249_20
 13833  0DA0                     u249_21:
 13834  0DA0  2DA6               	goto	i1l3439
 13835  0DA1                     u249_20:
 13836  0DA1                     i1l3437:
 13837  0DA1  09F2               	comf	___awmod@dividend,f
 13838  0DA2  09F3               	comf	___awmod@dividend+1,f
 13839  0DA3  0AF2               	incf	___awmod@dividend,f
 13840  0DA4  1903               	skipnz
 13841  0DA5  0AF3               	incf	___awmod@dividend+1,f
 13842  0DA6                     i1l3439:
 13843  0DA6  0873               	movf	___awmod@dividend+1,w
 13844  0DA7  00F1               	movwf	?___awmod+1
 13845  0DA8  0872               	movf	___awmod@dividend,w
 13846  0DA9  00F0               	movwf	?___awmod
 13847  0DAA                     i1l1480:
 13848  0DAA  0008               	return
 13849  0DAB                     __end_of___awmod:
 13850                           
 13851                           	psect	text46
 13852  0BF7                     __ptext46:	
 13853 ;; *************** function _DATAEE_WriteByte *****************
 13854 ;; Defined at:
 13855 ;;		line 180 in file "mcc_generated_files/memory.c"
 13856 ;; Parameters:    Size  Location     Type
 13857 ;;  bAdd            2    0[COMMON] unsigned int 
 13858 ;;  bData           1    2[COMMON] unsigned char 
 13859 ;; Auto vars:     Size  Location     Type
 13860 ;;  GIEBitValue     1    3[COMMON] unsigned char 
 13861 ;; Return value:  Size  Location     Type
 13862 ;;                  1    wreg      void 
 13863 ;; Registers used:
 13864 ;;		wreg, status,2, status,0
 13865 ;; Tracked objects:
 13866 ;;		On entry : 0/0
 13867 ;;		On exit  : 0/0
 13868 ;;		Unchanged: 0/0
 13869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13870 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13871 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13873 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13874 ;;Total ram usage:        4 bytes
 13875 ;; Hardware stack levels used:    1
 13876 ;; This function calls:
 13877 ;;		Nothing
 13878 ;; This function is called by:
 13879 ;;		_TMR0_callback
 13880 ;;		_save_register
 13881 ;; This function uses a non-reentrant model
 13882 ;;
 13883                           
 13884                           
 13885                           ;psect for function _DATAEE_WriteByte
 13886  0BF7                     _DATAEE_WriteByte:
 13887  0BF7                     i1l3347:	
 13888                           ;incstack = 0
 13889                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 13890                           
 13891                           
 13892                           ;memory.c: 182: uint8_t GIEBitValue = INTCONbits.GIE;
 13893  0BF7  3000               	movlw	0
 13894  0BF8  1B8B               	btfsc	11,7	;volatile
 13895  0BF9  3001               	movlw	1
 13896  0BFA  00F3               	movwf	DATAEE_WriteByte@GIEBitValue
 13897                           
 13898                           ;memory.c: 184: NVMADRH = ((bAdd >> 8) & 0xFF);
 13899  0BFB  0871               	movf	DATAEE_WriteByte@bAdd+1,w
 13900  0BFC  0030               	movlb	16	; select bank16
 13901  0BFD  009B               	movwf	27	;volatile
 13902  0BFE                     i1l3349:
 13903                           
 13904                           ;memory.c: 185: NVMADRL = (bAdd & 0xFF);
 13905  0BFE  0870               	movf	DATAEE_WriteByte@bAdd,w
 13906  0BFF  009A               	movwf	26	;volatile
 13907  0C00                     i1l3351:
 13908                           
 13909                           ;memory.c: 186: NVMDATL = bData;
 13910  0C00  0872               	movf	DATAEE_WriteByte@bData,w
 13911  0C01  009C               	movwf	28	;volatile
 13912  0C02                     i1l3353:
 13913                           
 13914                           ;memory.c: 187: NVMCON1bits.NVMREGS = 1;
 13915  0C02  171E               	bsf	30,6	;volsfr
 13916  0C03                     i1l3355:
 13917                           
 13918                           ;memory.c: 188: NVMCON1bits.WREN = 1;
 13919  0C03  151E               	bsf	30,2	;volsfr
 13920  0C04                     i1l3357:
 13921                           
 13922                           ;memory.c: 189: INTCONbits.GIE = 0;
 13923  0C04  138B               	bcf	11,7	;volatile
 13924  0C05                     i1l3359:
 13925                           
 13926                           ;memory.c: 190: NVMCON2 = 0x55;
 13927  0C05  3055               	movlw	85
 13928  0C06  009F               	movwf	31	;volsfr
 13929  0C07                     i1l3361:
 13930                           
 13931                           ;memory.c: 191: NVMCON2 = 0xAA;
 13932  0C07  30AA               	movlw	170
 13933  0C08  009F               	movwf	31	;volsfr
 13934  0C09                     i1l3363:
 13935                           
 13936                           ;memory.c: 192: NVMCON1bits.WR = 1;
 13937  0C09  149E               	bsf	30,1	;volsfr
 13938  0C0A                     i1l435:	
 13939                           ;memory.c: 195: {
 13940                           
 13941  0C0A  189E               	btfsc	30,1	;volsfr
 13942  0C0B  2C0D               	goto	u228_21
 13943  0C0C  2C0E               	goto	u228_20
 13944  0C0D                     u228_21:
 13945  0C0D  2C0A               	goto	i1l435
 13946  0C0E                     u228_20:
 13947  0C0E                     i1l437:
 13948                           
 13949                           ;memory.c: 196: };memory.c: 198: NVMCON1bits.WREN = 0;
 13950  0C0E  111E               	bcf	30,2	;volsfr
 13951  0C0F                     i1l3365:
 13952                           
 13953                           ;memory.c: 199: INTCONbits.GIE = GIEBitValue;
 13954  0C0F  0C73               	rrf	DATAEE_WriteByte@GIEBitValue,w
 13955  0C10  1C03               	skipc
 13956  0C11  138B               	bcf	11,7	;volatile
 13957  0C12  1803               	skipnc
 13958  0C13  178B               	bsf	11,7	;volatile
 13959  0C14                     i1l438:
 13960  0C14  0008               	return
 13961  0C15                     __end_of_DATAEE_WriteByte:
 13962  007E                     btemp	set	126	;btemp
 13963  007E                     int$flags	set	126
 13964  007E                     wtemp0	set	126
 13965  2373                     
 13966                           	psect	config
 13967                           
 13968                           ;Config register CONFIG1 @ 0x8007
 13969                           ;	External Oscillator mode selection bits
 13970                           ;	FEXTOSC = OFF, Oscillator not enabled
 13971                           ;	Power-up default value for COSC bits
 13972                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 13973                           ;	Clock Out Enable bit
 13974                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 13975                           ;	Clock Switch Enable bit
 13976                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 13977                           ;	Fail-Safe Clock Monitor Enable bit
 13978                           ;	FCMEN = ON, FSCM timer enabled
 13979  8007                     	org	32775
 13980  8007  3FEC               	dw	16364
 13981                           
 13982                           ;Config register CONFIG2 @ 0x8008
 13983                           ;	Master Clear Enable bit
 13984                           ;	MCLRE = ON, MCLR pin is Master Clear function
 13985                           ;	Power-up Timer Enable bit
 13986                           ;	PWRTE = OFF, PWRT disabled
 13987                           ;	Low-Power BOR enable bit
 13988                           ;	LPBOREN = OFF, ULPBOR disabled
 13989                           ;	Brown-out reset enable bits
 13990                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 13991                           ;	Brown-out Reset Voltage Selection
 13992                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 13993                           ;	Zero-cross detect disable
 13994                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 13995                           ;	Peripheral Pin Select one-way control
 13996                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 13997                           ;	Stack Overflow/Underflow Reset Enable bit
 13998                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 13999                           ;	Background Debugger
 14000                           ;	DEBUG = OFF, Background Debugger disabled
 14001  8008                     	org	32776
 14002  8008  3FFF               	dw	16383
 14003                           
 14004                           ;Config register CONFIG3 @ 0x8009
 14005                           ;	WDT Period Select bits
 14006                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 14007                           ;	WDT operating mode
 14008                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 14009                           ;	WDT Window Select bits
 14010                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 14011                           ;	WDT input clock selector
 14012                           ;	WDTCCS = SC, Software Control
 14013  8009                     	org	32777
 14014  8009  3F9F               	dw	16287
 14015                           
 14016                           ;Config register CONFIG4 @ 0x800A
 14017                           ;	UserNVM self-write protection bits
 14018                           ;	WRT = OFF, Write protection off
 14019                           ;	Scanner Enable bit
 14020                           ;	SCANE = available, Scanner module is available for use
 14021                           ;	Low Voltage Programming Enable bit
 14022                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 14023  800A                     	org	32778
 14024  800A  3FFF               	dw	16383
 14025                           
 14026                           ;Config register CONFIG5 @ 0x800B
 14027                           ;	UserNVM Program memory code protection bit
 14028                           ;	CP = OFF, Program Memory code protection disabled
 14029                           ;	DataNVM code protection bit
 14030                           ;	CPD = OFF, Data EEPROM code protection disabled
 14031  800B                     	org	32779
 14032  800B  3FFF               	dw	16383

Data Sizes:
    Strings     38
    Constant    10
    Data        5
    BSS         18
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     76      80
    BANK1            80     12      28
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11            3      0       0
    BANK12            0      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_20(CODE[6]), STR_19(CODE[6]), STR_18(CODE[7]), STR_17(CODE[7]), 
		 -> STR_16(CODE[15]), STR_15(CODE[15]), STR_14(CODE[15]), STR_13(CODE[15]), 
		 -> STR_12(CODE[6]), STR_11(CODE[7]), STR_10(CODE[4]), STR_9(CODE[15]), 
		 -> STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[6]), 
		 -> STR_4(CODE[7]), STR_3(CODE[15]), STR_2(CODE[2]), STR_1(CODE[2]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> lcd@buf(BANK0[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCDstr@p	PTR unsigned char  size(1) Largest target is 17
		 -> lcd@buf(BANK0[17]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_callback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_callback(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_CallBack->_TMR0_callback
    _TMR0_callback->___awmod

Critical Paths under _main in BANK0

    _main->_lcd
    _tsttc->_WriteI2C
    _lumin->_ADCC_GetConversionResult
    _lcd->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCDstr->_LCDchar
    _LCDchar->_LCDsend2x4
    _LCDcmd->_LCDsend2x4
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0   12453
                                             71 BANK0      5     5      0
                                              0 BANK1     12    12      0
                            _LCDinit
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                            ___lwmod
                      _checkButtonS1
                      _checkButtonS2
                    _conf_alarm_flag
                      _conf_alarm_hh
                      _conf_alarm_mm
                      _conf_alarm_ss
                      _conf_clock_hh
                      _conf_clock_mm
                      _conf_clock_ss
                         _conf_lumin
                          _conf_temp
                   _i2c1_driver_open
                                _lcd
                              _lumin
                              _tsttc
 ---------------------------------------------------------------------------------
 (1) _tsttc                                                2     2      0      68
                                              2 BANK0      2     2      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _lumin                                                4     4      0      92
                                              2 BANK0      4     4      0
           _ADCC_GetConversionResult
                    _ADCC_Initialize
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _lcd                                                 36    24     12    9941
                                             35 BANK0     36    24     12
                             _LCDcmd
                             _LCDstr
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             29    21      8    4885
                                             14 BANK0     21    13      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     396
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4    1019
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCDstr                                               3     3      0    1515
                                              9 BANK0      3     3      0
                            _LCDchar
 ---------------------------------------------------------------------------------
 (3) _LCDchar                                              1     1      0     810
                                              8 BANK0      1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDcmd                                               1     1      0     810
                                              8 BANK0      1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conf_temp                                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _conf_lumin                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _conf_clock_ss                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conf_clock_mm                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _conf_clock_hh                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _conf_alarm_ss                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _conf_alarm_mm                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _conf_alarm_hh                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _conf_alarm_flag                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkButtonS2                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _checkButtonS1                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
                    _ADCC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     832
                                              8 BANK0      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (4) _LCDsend2x4                                           6     5      1     788
                                              2 BANK0      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 BANK0      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0    2047
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0    2047
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (8) _TMR0_CallBack                                        0     0      0    2047
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                      _TMR0_callback *
 ---------------------------------------------------------------------------------
 (9) _TMR0_callback                                        2     2      0    2047
                                              7 COMMON     2     2      0
                   _DATAEE_WriteByte
                            ___awmod
                            ___lbmod
                          i1___lwmod
 ---------------------------------------------------------------------------------
 (10) i1___lwmod                                           6     2      4     211
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (10) ___lbmod                                             6     5      1     235
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (10) ___awmod                                             7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (10) _DATAEE_WriteByte                                    4     1      3    1153
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (9) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _SYSTEM_Initialize
     _ADCC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   ___lwmod
     ___lwdiv (ARG)
   _checkButtonS1
   _checkButtonS2
   _conf_alarm_flag
   _conf_alarm_hh
   _conf_alarm_mm
   _conf_alarm_ss
   _conf_clock_hh
   _conf_clock_mm
   _conf_clock_ss
   _conf_lumin
   _conf_temp
   _i2c1_driver_open
   _lcd
     _LCDcmd
       _LCDsend2x4
         _WriteI2C
     _LCDstr
       _LCDchar
         _LCDsend2x4
           _WriteI2C
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _lumin
     _ADCC_GetConversionResult
     _ADCC_Initialize
     _ADCC_StartConversion
   _tsttc
     _ReadI2C
     _WriteI2C

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _TMR0_callback *
         _DATAEE_WriteByte
         ___awmod
         ___lbmod
         i1___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      C      1C       7       35.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      7A      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11               3      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      7A      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sun Nov 15 17:46:19 2020

                                      l30 0E57                                        l22 0C2B  
                                      l23 0C2D                                        l33 0E1F  
                                      l42 0E41                                        l26 0C33  
                                      l35 0E24                                        l47 0E55  
                     ___wmul@multiplicand 0022                                       l120 0D1A  
                                     l162 0B11                                       l165 0A8C  
                                     l229 0ABE                                       l168 0A73  
                                     l363 0B79                                       l620 0BF1  
                                     l613 0BD4                                       l701 07D0  
                                     l630 0690                                       l391 0A95  
                                     l711 0B01                                       l631 0692  
                                     l624 0BF6                                       l617 0BD9  
                                     l545 035A                                       l706 0AF3  
                                     l714 0A6B                                       l642 06CB  
                                     l643 06CD                                       l627 0681  
                                     l724 0B21                                       l660 071F  
                                     l661 0721                                       l902 0FF6  
                                     l734 0B51                                       l654 0709  
                                     l903 0FF8                                       l719 0AE5  
                                     l663 0725                                       l655 070C  
                                     l744 0AB2                                       l912 0A7B  
                                     l680 0776                                       l729 0B31  
                                     l921 0BA5                                       l906 0FFF  
                                     l739 0B41                                       l915 0A9E  
                                     l691 07B2                                       l667 0739  
                                     l692 07B5                                       l668 073B  
                                     l773 0DBC                                       l909 0F2B  
                                     l774 0DBE                                       l951 07FB  
                                     l679 0774                                       l785 0DF7  
                                     l697 07C8                                       l786 0DF9  
                                     l890 0FA0                                       l698 07CA  
                                     l875 0F4E                                       l876 0F50  
                                     l948 0318                                       l789 0DFD  
                                     l899 0FE0                                       _lcd 0062  
                                     _reg 2373                   __size_of_PMD_Initialize 0008  
                            ___awmod@sign 0076                                       wreg 0009  
                             ?_LCDsend2x4 0022                           __end_of_LCDchar 0A9F  
                                    l1030 0B8F                                      l1033 0A83  
                                    l1310 0680                                      l1039 0AA7  
                                    l1314 0C3F                                      l1316 0C53  
                                    l4011 0AA8                                      l4003 0B32  
                                    l1275 0500                                      l4013 0AAE  
                                    l4005 0B39                                      l1293 05B3  
                                    l4101 01A3                                      l4021 0069  
                                    l4015 0AB1                                      l4007 0B3B  
                                    l4111 01BD                                      l4103 01A7  
                                    l4031 0088                                      l4023 006D  
                                    l3401 0FE7                                      l4113 01C4  
                                    l4121 01EE                                      l4105 01AE  
                                    l4041 00B8                                      l4033 008C  
                                    l4025 0076                                      l3331 0E29  
                                    l3403 0FFC                                      l4123 01F5  
                                    l4131 021F                                      l4115 01C8  
                                    l4107 01B2                                      l4051 00E8  
                                    l4043 00BC                                      l4035 0092  
                                    l4027 007B                                      l4019 0064  
                                    l3341 0E46                                      l3325 0E08  
                                    l3317 0E00                                      l4133 0226  
                                    l4141 0250                                      l4125 01F9  
                                    l4117 01E6                                      l4109 01B9  
                                    l4053 00EE                                      l4061 0104  
                                    l4045 00D0                                      l4037 0096  
                                    l4029 007F                                      l4301 0330  
                                    l3327 0E12                                      l3319 0E03  
                                    l3503 0A98                                      l3511 0B61  
                                    l4143 0257                                      l4151 0281  
                                    l4135 022A                                      l4127 0217  
                                    l4119 01EA                                      l4063 010A  
                                    l4071 0120                                      l4055 00F2  
                                    l4047 00D4                                      l4039 00B4  
                                    l4311 0361                                      l4303 0331  
                                    l3329 0E1D                                      l3337 0E2B  
                                    l3601 0CF3                                      l3521 0C3B  
                                    l3513 0B63                                      l3505 0B54  
                                    l4153 0288                                      l4161 02A4  
                                    l4145 025B                                      l4137 0248  
                                    l4129 021B                                      l4081 013A  
                                    l4073 0124                                      l4065 010E  
                                    l4057 00FB                                      l4049 00E4  
                                    l4321 0377                                      l4313 0366  
                                    l4305 0334                                      l1586 0D57  
                                    ?_lcd 0043                                      l3339 0E36  
                                    l3371 0F3F                                      l3611 0D07  
                                    l3603 0CF5                                      l3531 0D1B  
                                    l3523 0C44                                      l3507 0B55  
                                    l4163 02AB                                      l4171 02C7  
                                    l4155 028C                                      l4147 0279  
                                    l4139 024C                                      l4091 0171  
                                    l4083 0158                                      l4075 012D  
                                    l4067 0117                                      l4059 00FF  
                                    l4403 0447                                      l4331 0393  
                                    l4323 037E                                      l4315 0369  
                                    l4307 0337                                      l1596 0CDF  
                                    l3381 0F7C                                      l3373 0F54  
                                    l3621 0D12                                      l3613 0D09  
                                    l3605 0CF7                                      l3541 0D30  
                                    l3533 0D1E                                      l3525 0C49  
                                    l3517 0C34                                      l3509 0B5B  
                                    l3701 051D                                      l4173 02CE  
                                    l4181 02EA                                      l4165 02AF  
                                    l4157 029C                                      l4149 027D  
                                    l4093 0181                                      l4085 015C  
                                    l4077 0131                                      l4069 011B  
                                    l4405 044C                                      l4341 03AD  
                                    l4333 0398                                      l4325 0383  
                                    l4317 036E                                      l4413 0457  
                                    l4309 034A                      _ADCC_StartConversion 0A7C  
                                    l3391 0FB6                                      l3383 0F8B  
                                    l3375 0F63                                      l3367 0F2E  
                                    l3631 0A87                                      l3623 0D15  
                                    l3615 0D0B                                      l3607 0CF9  
                                    l3551 0D4D                                      l3543 0D34  
                                    l3535 0D24                                      l3527 0C4F  
                                    l3519 0C37                                      l1767 0B64  
                                    l3703 052E                                      l3711 054D  
                                    l4183 02F1                                      l4191 030D  
                                    l4175 02D2                                      l4167 02BF  
                                    l4159 02A0                                      l4095 0185  
                                    l4087 0160                                      l4079 0136  
                                    l4407 0450                                      l4351 03C9  
                                    l4343 03B4                                      l4335 039C  
                                    l4327 0387                                      l4319 0372  
                                    l4415 0481                                      l3393 0FBC  
                                    l3385 0F91                                      l3377 0F67  
                                    l3369 0F33                                      l3641 0B8E  
                                    l3633 0A88                                      l3625 0D17  
                                    l3617 0D0D                                      l3609 0D05  
                                    l3481 0A8D                                      l3801 0B02  
                                    l3545 0D43                                      l3537 0D27  
                                    l3553 0D53                                      l3561 0CB5  
                                    l3721 0578                                      l3713 0565  
                                    l3705 053D                                      l4193 0314  
                                    l4185 02F5                                      l4177 02E2  
                                    l4169 02C3                                      l4097 0199  
                                    l4089 016D                                      l4417 0494  
                                    l4409 0455                                      l4361 03E3  
                                    l4353 03CE                                      l4345 03B9  
                                    l4337 03A1                                      l4329 038C  
                                    l3395 0FCB                                      l3387 0FA0  
                                    l3379 0F76                                      l3635 0A8B  
                                    l3619 0D0F                                      l3627 0A6C  
                                    l3651 0B6E                                      l3643 0B65  
                                    l3803 0B05                                      l3811 0AB3  
                                    l3547 0D47                                      l3539 0D2C  
                                    l3571 0CD0                                      l3563 0CBA  
                                    l3723 057D                                      l3715 056C  
                                    l3707 0541                                      l4187 0305  
                                    l4179 02E6                                      l4099 019D  
                                    l4371 03F9                                      l4363 03EA  
                                    l4355 03D5                                      l4347 03C0  
                                    l4339 03A8                                      l4291 0327  
                                    l4283 0319                                      l3661 0DAD  
                                    l3397 0FD1                                      l3389 0FA7  
                                    l3637 0B7A                                      l3629 0A84  
                                    l3653 0B76                                      l3645 0B6A  
                                    l3805 0B08                                      l3813 0AB8  
                                    l3549 0D48                                      l3573 0CD5  
                                    l3565 0CBE                                      l3557 0CAB  
                                    l3741 05BE                                      l3733 0599  
                                    l3717 0570                                      l4189 0309  
                                    l3581 0C20                                      l3901 077A  
                                    l4381 0416                                      l4373 03FE  
                                    l4365 03EF                                      l4357 03DA  
                                    l4349 03C5                                      l4293 0328  
                                    l4285 031B                                      l3671 0DE8  
                                    l3663 0DC2                                      l3399 0FE0  
                                    l3831 0EB6                                      l3639 0B8C  
                                    l3591 0CE8                                      l3647 0B6B  
                                    l3807 0B0B                                      l3815 0AB9  
                                    l3567 0CC2                                      l3559 0CB2  
                                    l3575 0CDB                                      l3751 05DB  
                                    l3743 05C7                                      l3735 05A3  
                                    l3719 0574                                      l3583 0C32  
                                    l3911 07B9                                      l3903 0789  
                                    l4391 042C                                      l4383 041A  
                                    l4375 0405                                      l4367 03F3  
                                    l4359 03DE                                      l4295 032B  
                                    l4287 031E                                      l3665 0DD1  
                                    l3841 0EDB                                      l3833 0EBF  
                         __end_of_LCDinit 0F2C                                      l3593 0CEA  
                                    l3649 0B6D                                      l3809 0B0E  
                                    l3817 0ABB                                      l3673 0A76  
                                    l3569 0CCC                                      l3753 05DF  
                                    l3761 05FB                                      l3745 05CA  
                                    l3737 05A9                                      l3729 057F  
                                    l3681 04E5                                      l3921 07D8  
                                    l3913 07CE                                      l3905 078D  
                                    l4393 0431                                      l4377 040A  
                                    l4297 032D                                      l4289 0326  
                                    l3667 0DD5                                      l3659 0DAD  
                                    l3851 0EF7                                      l3843 0EDF  
                                    l3835 0EC3                                      l3595 0CEC  
                                    l3587 0CE0                                      l3931 0BBD  
                                    l3675 0B92                                      l3771 061C  
                                    l3763 0601                                      l3755 05E5  
                                    l3747 05CE                                      l3739 05AF  
                                    l3691 0501                                      l3683 04EA  
                                    l3923 07E0                                      l3579 0C15  
                                    l3907 079C                                      l4395 0438  
                                    l4387 0420                                      l4379 0411  
                                    l4299 032E                                      l3669 0DE4  
                                    l3861 0F1B                                      l3853 0F03  
                                    l3845 0EE7                                      l3837 0ECB  
                                    l3597 0CEE                                      l3589 0CE6  
                                    l3933 0BC3                                      l3941 0BDA  
                                    l3677 0B93                                      l3781 065B  
                                    l3773 0623                                      l3765 0608  
                                    l3757 05EC                                      l3749 05D4  
                                    l3685 04F0                                      l3925 07ED  
                                    l3917 07D1                                      l3909 07A3  
                                    l4397 043D                                      l4389 0425  
                                    l3863 0F21                                      l3855 0F07  
                                    l3847 0EEB                                      l3839 0ECF  
                                    l3599 0CF0                                      l3935 0BC7  
                                    l3943 0BE0                                      l3951 0AE6  
                                    l3679 0B97                                      l3783 065F  
                                    l3767 060C                                      l3759 05F0  
                                    l3775 0627                                      l3695 0505  
                                    l3687 04F7                                      l3791 0A7E  
                                    l3927 07FA                                      l3919 07D8  
                                    l3871 06A9                                      l4399 0441  
                                    l3857 0F0F                                      l3849 0EF3  
                                    l3937 0BD0                                      l3945 0BE4  
                                    l3953 0AED                                      l3961 0AFB  
                                    l3777 062C                                      l3769 0616  
                                    l3697 050E                                      l3689 04FC  
                                    l3785 0668                                      l3793 0A81  
                                    l3881 06E4                                      l3873 06B8  
                                    l3865 0681                                      l3859 0F15  
                                    l3939 0BD8                                      l3947 0BED  
                                    l3971 0AD8                                      l3955 0AEF  
                                    l3963 0AFD                                      l3779 0654  
                                    l3787 067C                                      l3699 051A  
                                    l3795 0A82                                      l3891 073F  
                                    l3883 06F3                                      l3875 06BC  
                                    l3867 0696                                      l3949 0BF5  
                                    l3973 0ADE                                      l3981 0B19  
                                    l3797 0A9F                                      l3893 074E  
                                    l3885 06FA                                      l3877 06D1  
                                    l3869 06A5                                      l3975 0AE0  
                                    l3983 0B1B                                      l3991 0B2B  
                                    l3959 0AF4                                      l3967 0A67  
                                    l3895 0752                                      l3887 0710  
                                    l3879 06E0                                      l3897 0761  
                                    l3889 072A                                      l3979 0B12  
                                    l3987 0B22                                      l3995 0B42  
                                    l3899 0765                                      l3989 0B29  
                                    l3997 0B49                                      l3999 0B4B  
                                    _ALAF 00B3                                      _ALAH 007D  
                                    _ALAL 00B6                           __end_of_LCDsend 0DFE  
                                    _ALAM 00B5                                      _ALAS 00B4  
                                    _ALAT 00B7                                      STR_1 102A  
                                    STR_2 102E                                      STR_3 1000  
                                    STR_4 1019                                      STR_5 1020  
                                    STR_6 101E                                      STR_7 102C  
                                    STR_8 1028                                      STR_9 1000  
                                    _CLKH 006F                                      _CLKM 006E  
                                    u2200 0E12                                      u3000 05BE  
                                    u2201 0E11                                      u3001 05BD  
                                    u2210 0E1D                                      u3010 05CE  
                                    u2211 0E1C                                      u3011 05CD  
                                    u2220 0E24                                      u2300 0F4E  
                                    u3100 0AB8                                      u3020 05D4  
                                    u2221 0E23                                      u2301 0F4D  
                                    u3101 0AB7                                      u3021 05D3  
                                    u3005 05BA                                      _LATA 0016  
                                    u2230 0E29                                      u2310 0F54  
                                    u3030 05E5                                      _LATB 0017  
                                    u2231 0E28                                      u2311 0F53  
                                    u3031 05E4                                      _LATC 0018  
                                    u2240 0E36                                      u2400 0FFC  
                                    u2320 0F63                                      u3040 05FA  
                                    u3200 0709                                      u3120 0690  
                                    _LATD 0019                                      u2241 0E35  
                                    u2401 0FFB                                      u2321 0F62  
                                    u3041 05F9                                      u3201 0708  
                                    u3121 068F                                      _LATE 001A  
                                    u2250 0E41                                      u2330 0F76  
                                    u3050 0601                                      u3210 0710  
                                    u3130 0696                                      u2251 0E40  
                                    u2331 0F75                                      u3051 0600  
                                    u3211 070F                                      u3131 0695  
                                    u2260 0E46                                      u2340 0F8B  
                                    u3060 0616                                      u3300 077A  
                                    u3220 071F                                      u3140 06A5  
                                    u4100 03AD                                      u4020 034A  
                                    u2261 0E45                                      u2341 0F8A  
                                    u3061 0615                                      u3301 0779  
                                    u3221 071E                                      u3141 06A4  
                                    u4101 03AC                                      u4021 0349  
                                    u2270 0E55                                      u2190 0E07  
                                    u2350 0FA0                                      u3070 061C  
                                    u3310 0789                                      u3230 0725  
                                    u3150 06B8                                      u4110 03B9  
                                    u4030 0366                                      u2271 0E54  
                                    u2191 0E06                                      u2351 0F9F  
                                    u3071 061B                                      u3311 0788  
                                    u3231 0724                                      u3151 06B7  
                                    u4111 03B8                                      u4031 0365  
                                    u2360 0FB6                                      u3400 0BC7  
                                    u3080 0668                                      u3320 079C  
                                    u3240 072A                                      u3160 06CB  
                                    u4200 0416                                      u4120 03C5  
                                    u4040 036E                                      u2361 0FB5  
                                    u3401 0BC6                                      u3081 0667  
                                    u3321 079B                                      u3241 0729  
                                    u3161 06CA                                      u4201 0415  
                                    u4121 03C4                                      u4041 036D  
                                    u2370 0FCB                                      u3410 0BD8  
                                    u3090 067C                                      u3330 07B2  
                                    u3250 0739                                      u3170 06D1  
                                    u4210 041F                                      u4130 03CE  
                                    u4050 0377                                      u2371 0FCA  
                                    u3411 0BD7                                      u3091 067B  
                                    u3331 07B1                                      u3251 0738  
                                    u3171 06D0                                      u4211 041E  
                                    u4131 03CD                                      u4051 0376  
                                    _CSUM 00B2                                      u2380 0FE0  
                                    u3420 0BE0                                      u3500 0B49  
                                    u2700 0D34                                      u2620 0B5B  
                                    u3340 07B9                                      u3260 073F  
                                    u3180 06E0                                      u4220 0425  
                                    u4140 03DA                                      u4060 0383  
                                    u2381 0FDF                                      u3421 0BDF  
                                    u3501 0B48                                      u2701 0D33  
                                    u2621 0B5A                                      u3341 07B8  
                                    u3261 073E                                      u3181 06DF  
                                    u4221 0424                                      u4141 03D9  
                                    u4061 0382                                      u2390 0FF6  
                                    u3430 0BE4                                      u3510 0B39  
                                    u2630 0B61                                      u3350 07C8  
                                    u3270 074E                                      u3190 06F3  
                                    u4230 0431                                      u4150 03E3  
                                    u4070 038C                                      u2391 0FF5  
                                    u2295 0F36                                      u3431 0BE3  
                                    u3511 0B38                                      u2631 0B60  
                                    u3351 07C7                                      u3271 074D  
                                    u3191 06F2                                      u4231 0430  
                                    u4151 03E2                                      u4071 038B  
                                    u3440 0BF5                                      u3520 0AAE  
                                    u2720 0D43                                      u2800 0CDB  
                                    u2640 0C3B                                      u3600 01C4  
                                    u3360 07CE                                      u3280 0761  
                                    u4240 043D                                      u4160 03EF  
                                    u4080 0398                                      u3441 0BF4  
                                    u3521 0AAD                                      u2721 0D42  
                                    u2801 0CDA                                      u2641 0C3A  
                                    u3601 01C3                                      u3361 07CD  
                                    u3281 0760                                      u4241 043C  
                                    u4161 03EE                                      u4081 0397  
                                    u3450 0AED                                      u3610 01F5  
                                    u3530 0069                                      u2810 0C20  
                                    u3290 0774                                      u4250 0446  
                                    u4170 03F8                                      u4090 03A1  
                                    u4307 0BCB                                      u3451 0AEC  
                                    u2715 0D35                                      u3611 01F4  
                                    u3531 0068                                      u2811 0C1F  
                                    u3291 0773                                      u4251 0445  
                                    u4171 03F7                                      u4091 03A0  
                                    u2900 0DFD                                      u3460 0AFB  
                                    u2740 0D53                                      u3620 0226  
                                    u3540 0092                                      u2820 0C2B  
                                    u4260 044C                                      u4180 03FE  
                                    u2901 0DFC                                      u4317 0EBA  
                                    u3461 0AFA                                      u2741 0D52  
                                    u2725 0D3F                                      u3621 0225  
                                    u3541 0091                                      u2821 0C2A  
                                    u4261 044B                                      u4181 03FD  
                                    u3390 0BC3                                      u3470 0ADE  
                                    u2910 0BA5                                      u2750 0CB2  
                                    u2670 0C4F                                      u3630 0257  
                                    u3550 00EE                                      u2830 0C32  
                                    u4270 0455                                      u4190 040A  
                                    u4407 0F28                                      u4327 0EC8  
                                    u3391 0BC2                                      u3471 0ADD  
                                    u2911 0BA4                                      u2735 0D49  
                                    u2751 0CB1                                      u2671 0C4E  
                                    u2655 0C40                                      u3631 0256  
                                    u3551 00ED                                      u3375 07E5  
                                    u2831 0C31                                      u4271 0454  
                                    u4191 0409                                      u3480 0B19  
                                    u2680 0D24                                      u2920 04F0  
                                    u3640 0288                                      u3560 010A  
                                    u4417 0FFD                                      u4337 0ED0  
                                    u3481 0B18                                      u2681 0D23  
                                    u2665 0C45                                      u2921 04EF  
                                    u3641 0287                                      u3561 0109  
                                    u3385 07F2                                      u2850 0DBC  
                                    u3490 0B29                                      u2770 0CC2  
                                    u2930 051A                                      u3650 02AB  
                                    u3570 01A3                                      u2851 0DBB  
                                    u4347 0EDC                                      u3491 0B28  
                                    u2771 0CC1                                      u2931 0519  
                                    u3651 02AA                                      u3571 01A2  
                                    u2860 0DC2                                      u2780 0CCC  
                                    u2940 054D                                      u3660 02CE  
                                    u3580 01AE                                      _PMD0 0796  
                                    u2861 0DC1                                      u4357 0EE4  
                                    u2781 0CCB                                      u2765 0CB6  
                                    u2941 054C                                      u3661 02CD  
                                    u3581 01AD                                      _PMD1 0797  
                                    u2870 0DD1                                      u2950 0574  
                                    u3670 02F1                                      u3590 01B9  
                                    _PMD2 0798                                      u2871 0DD0  
                                    u4367 0EF0                                      u2695 0D28  
                                    u2951 0573                                      u3671 02F0  
                                    u3591 01B8                                      _PMD3 0799  
                                    u2880 0DE4                                      u2960 0598  
                                    u3680 0314                                      _PMD4 079A  
                                    u2881 0DE3                                      u4377 0EF8  
                                    u4297 0BE8                                      u2785 0CC8  
                                    u2961 0597                                      u3681 0313  
                                    _PMD5 079B                                      u2890 0DF7  
                                    u2970 05A3                                      u2891 0DF6  
                                    u4387 0F04                                      u2795 0CD1  
                                    u2971 05A2                                      u2980 05A9  
                                    u4397 0F0C                                      u2981 05A8  
                                    u2965 0594                                      u2990 05AF  
                                    u2991 05AE                                      _TALA 00B8  
                                    _PMON 00B9                                      _WPUA 0F39  
                                    _WPUB 0F44                                      _WPUC 0F4F  
                                    _WPUD 0F5A                                      _WPUE 0F65  
                                    _main 0319                                      lcd@h 0046  
                                    lcd@m 0047                                      lcd@s 0048  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                                      start 0028  
                         __end_of_ReadI2C 0C34                           ??_conf_alarm_hh 0020  
                         ??_conf_alarm_mm 0020                           ??_conf_alarm_ss 0020  
                                   ??_lcd 004F                 __size_of_DATAEE_WriteByte 001E  
                 __end_of_TMR0_Initialize 0B7A                           ??_conf_clock_hh 0020  
                         ??_conf_clock_mm 0020                           ??_conf_clock_ss 0020  
          ??_TMR0_DefaultInterruptHandler 0070            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 0A8D                                     _ADACQ 009D  
                                   _ADCAP 009B                                     _ADACT 0099  
                __end_of_i2c1_driver_open 0ABF                                     ?_main 0070  
                                   _ADCLK 0098                                     _ADCNT 010C  
                                   _ADPCH 009E                                     _ADREF 009A  
                                   _ADPRE 009C                                     STR_10 1026  
                                   STR_11 1019                                     STR_20 1020  
                                   STR_12 1020                                     STR_13 1000  
                                   STR_14 1000                                     STR_15 1000  
                                   STR_16 1000                                     STR_17 1019  
                                   STR_18 1019                                     STR_19 1020  
                         __end_of___awmod 0DAB                                     _ADRPT 010D  
                         __end_of___lbmod 0C77                           __end_of___lwdiv 0D58  
                                   i1l330 0013                                     i1l333 0020  
                                   i1l337 0026                           __end_of___lwmod 0CE0  
                                   i1l338 0026                                     i1l435 0C0A  
                                   i1l437 0C0E                                     i1l605 0EB5  
                                   i1l438 0C14                                     i1l384 0BBC  
                                   i1l394 0002                                     i1l388 0AD7  
                                   _OSCEN 0891                                     _TMR0H 001D  
                                   _TMR0L 001C                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                                   _WPUC3 7A7B                                     _WPUC4 7A7C  
       __size_of_TMR0_SetInterruptHandler 0009                 ?_TMR0_SetInterruptHandler 0020  
                        __end_of_TMR0_ISR 0BBD                        i1___lwmod@dividend 0072  
                         __end_of_dpowers 1019                     ?_ADCC_StartConversion 0070  
                         __end_of_isdigit 0B65                                     _lumin 07D1  
                                   main@c 0067                                     main@l 0068  
                                   _tsttc 0681                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                         __end_of_sprintf 0681                        __size_ofi1___lwmod 0034  
                __size_of_conf_alarm_flag 000B                           __initialization 002A  
                            __end_of_main 04E3                            save_register@n 0079  
                     __size_of_LCDsend2x4 00D4               ?_INTERRUPT_InterruptManager 0070  
                                  ??_main 00A0                                 ??_LCDchar 0028  
                               ??_LCDinit 0028                                 ??_LCDsend 0022  
                                  _ADACCH 0091                                    _ADACCL 0090  
                                  _ADCON0 0093                                    _ADCON1 0094  
                                  _ADCON2 0095                                    _ADCON3 0096  
                                  _ADERRH 0117                                    _ADERRL 0116  
                                  _ADLTHH 010F                                    _ADLTHL 010E  
                                  _ADRESH 008D                                    _ADRESL 008C  
                                  _ADSTAT 0097                                    _ADUTHH 0111  
                                  _ADUTHL 0110                                    ?_lumin 0070  
                        __end_of_WriteI2C 0E58                                    _ANSELA 0F38  
                                  _ANSELB 0F43                                    _ANSELC 0F4E  
                                  _ANSELD 0F59                                    _ANSELE 0F64  
                                  _T0CON0 001E                                    _T0CON1 001F  
                                  ?_tsttc 0070                                    _RC3PPS 0F23  
                                  _RC4PPS 0F24                                    _ODCONA 0F3A  
                                  _ODCONB 0F45                                    _ODCONC 0F50  
                                  i1l1524 0C6F                                    _ODCOND 0F5B  
                                  _ODCONE 0F66                                    i1l1526 0C76  
                                  i1l1480 0DAA                                    i1l3411 0D62  
                                  i1l3421 0D76                                    i1l3413 0D64  
                                  i1l3405 0D58                                    i1l3501 0EA9  
                                  i1l3351 0C00                                    i1l3431 0D91  
                                  i1l3423 0D7B                                    i1l3415 0D68  
                                  i1l3407 0D59                                    i1l3361 0C07  
                                  i1l3353 0C02                                    i1l3433 0D96  
                                  i1l3425 0D7F                                    i1l3417 0D6D  
                                  i1l3409 0D5D                                    i1l3363 0C09  
                                  i1l3355 0C03                                    i1l3347 0BF7  
                                  i1l3427 0D83                                    i1l3419 0D73  
                                  i1l3435 0D9C                                    i1l3451 0C67  
                                  i1l3443 0C55                                    i1l1596 0CAA  
                                  i1l3365 0C0F                                    i1l3357 0C04  
                                  i1l3349 0BFE                                    i1l3437 0DA1  
                                  i1l3429 0D8D                                    i1l3453 0C6D  
                                  i1l3445 0C59                                    i1l3461 0C7D  
                                  i1l3359 0C05                                    i1l3439 0DA6  
                                  i1l3455 0C75                                    i1l3447 0C5A  
                                  i1l3471 0C97                                    i1l3463 0C80  
                                  i1l4271 000F                                    i1l3449 0C65  
                                  i1l3473 0C9B                                    i1l3465 0C85  
                                  i1l4273 0017                                    i1l3475 0CA0  
                                  i1l3467 0C89                                    i1l3459 0C77  
                                  i1l3491 0E87                                    i1l3483 0E58  
                                  i1l4275 001B                                    i1l4267 0006  
                                  i1l3469 0C8D                                    i1l3477 0CA6  
                                  i1l3493 0E8D                                    i1l3485 0E5C  
                                  i1l4269 000B                                    i1l3495 0E91  
                                  i1l3487 0E6D                                    i1l3655 0ACB  
                                  i1l3823 0BA6                                    i1l4279 0024  
                                  i1l3497 0E9D                                    i1l3489 0E72  
                                  i1l3657 0AD2                                    i1l3825 0BA8  
                                  i1l3499 0E9E                                    i1l3827 0BB6  
                                  i1l3829 0BB9                                    u311_20 0BB6  
                                  u311_21 0BB5                                    u400_20 001F  
                                  u400_21 001E                                    u241_20 0D5D  
                                  u401_20 0024                                    u241_21 0D5C  
                                  u401_21 0023                                    _LCDcmd 0A74  
                                  u242_20 0D68                                    u242_21 0D67  
                                  u250_25 0C5D                                    u243_20 0D73  
                                  u251_20 0C6D                                    u243_21 0D72  
                                  u251_21 0C6C                                    u228_20 0C0E  
                                  u252_20 0C75                                    u260_20 0E87  
                                  u228_21 0C0D                                    u252_21 0C74  
                                  u260_21 0E86                                    u244_25 0D77  
                                  u245_20 0D83                                    u253_20 0C7D  
                                  u261_20 0E8D                                    u245_21 0D82  
                                  u253_21 0C7C                                    u261_21 0E8C  
                                  u246_20 0D8D                                    u246_21 0D8C  
                                  u246_25 0D89                                    u254_25 0C81  
                                  u255_20 0C8D                                    u255_21 0C8C  
                                  u247_25 0D92                                    u248_20 0D9C  
                                  u256_20 0C97                                    u248_21 0D9B  
                                  u256_21 0C96                                    u256_25 0C93  
                                  u249_20 0DA1                                    u249_21 0DA0  
                                  u257_25 0C9C                                    u258_20 0CA6  
                                  u258_21 0CA5                                    u259_20 0E6D  
                                  u259_21 0E6C                                    u284_20 0AD2  
                                  u284_21 0AD1                                    _LCDstr 0B90  
                                  u396_20 000B                                    u396_21 000A  
                                  _OSCFRQ 0893                                    u397_20 000F  
                                  u397_21 000E                                    u398_20 0017  
                                  u398_21 0016                                    u399_20 001B  
                                  u399_21 001A                                 ??_ReadI2C 0020  
                             LCDsend2x4@c 0025                ??_ADCC_GetConversionResult 0022  
                                  ___wmul 0C34                                 ??___awmod 0074  
                               ??___lbmod 0071                                 ??___lwdiv 0024  
                               ??___lwmod 002C                          ?_TMR0_Initialize 0070  
                                  lcd@buf 0055                                    lcd@ctl 0045  
                         ___awmod@divisor 0070                           ___awmod@counter 0075  
                         _ADCC_Initialize 0B7A                            _PMD_Initialize 0A6C  
                            __pdataCOMMON 007D                         __end_ofi1___lwmod 0CAB  
                               ??_isdigit 0020                    ??_ADCC_StartConversion 0020  
                   __end_of_TMR0_CallBack 0AD8  TMR0_SetInterruptHandler@InterruptHandler 0020  
                               ??_sprintf 0036                         _SYSTEM_Initialize 0B02  
                         ___lbmod@divisor 0070                   __end_of__initialization 005E  
                         ___lbmod@counter 0074                        ?_SYSTEM_Initialize 0070  
                          __pcstackCOMMON 0070                              __pidataBANK1 07FC  
                     ??_SYSTEM_Initialize 0022                                 ?_TMR0_ISR 0070  
                        _DATAEE_WriteByte 0BF7                             __end_of_lumin 07FC  
                           __end_of_tsttc 07D1                    __end_of_PMD_Initialize 0A74  
                       ??_conf_alarm_flag 0020                     TMR0_ISR@CountCallBack 00AC  
                      __size_of_conf_temp 0010               ADCC_StartConversion@channel 0020  
                            ??_LCDsend2x4 0023                 __end_of_SYSTEM_Initialize 0B12  
                                 ??_lumin 0022                              sprintf@width 003F  
                   __end_of_TMR0_callback 0EB6                                   ??_tsttc 0022  
                              __pbssBANK0 006C                                __pbssBANK1 00AC  
                                 ?_LCDcmd 0070                                   ?_LCDstr 0070  
                                 LCDcmd@c 0028                                   LCDstr@c 002A  
                                 LCDstr@p 002B                                __pmaintext 0319  
                          lcd@temperature 0066          __end_of_TMR0_SetInterruptHandler 0A96  
                                 ?___wmul 0020                                ??_TMR0_ISR 0079  
                 __end_of_ADCC_Initialize 0B90                                __pintentry 0004  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                      __end_of_LCDsend2x4 1000                                   _ADPREVH 008F  
                                 _ADPREVL 008E                                 ?_WriteI2C 0070  
                                 _ADSTPTH 0113                                   _ADSTPTL 0112  
                         ?_PMD_Initialize 0070                         ?_i2c1_driver_open 0070  
                                 _LCDchar 0A96                                   _LCDinit 0EB6  
                                 _LCDsend 0DAB                        ??_i2c1_driver_open 0020  
                              _conf_lumin 0B32                                   _OSCCON1 088D  
                                 _OSCCON3 088F                                   _NVMADRH 081B  
                                 _NVMADRL 081A                                   _NVMDATH 081D  
                                 _OSCTUNE 0892                                   _NVMDATL 081C  
                                 _NVMCON2 081F                                   _SSP1ADD 018D  
                                 _SLRCONA 0F3B                                   _SLRCONB 0F46  
                                 _SLRCONC 0F51                                   _SLRCOND 0F5C  
                                 _SLRCONE 0F67                                   _SSP1BUF 018C  
                                 _SSP1MSK 018E                    __size_of_checkButtonS1 001D  
                  __size_of_checkButtonS2 001D                              LCDsend2x4@hc 0026  
                            LCDsend2x4@lc 0027                           __size_of_LCDcmd 0008  
                    DATAEE_WriteByte@bAdd 0070                        _i2c1_driver_i2cISR 00AE  
                         __size_of_LCDstr 0016                                   _ReadI2C 0C15  
                       __end_of_conf_temp 0B52                                   ___awmod 0D58  
                                 ___lbmod 0C54                           __size_of___wmul 0020  
                                 ___lwdiv 0D1B                                   ___lwmod 0CAB  
                   __end_of_conf_alarm_hh 0AE6                     __end_of_conf_alarm_mm 0B22  
                   __end_of_conf_alarm_ss 0B32                                ??_WriteI2C 0020  
                   __end_of_conf_clock_hh 0AF4                     __end_of_conf_clock_mm 0B02  
                                 __ptext1 0681                                   __ptext2 0C15  
                                 __ptext3 07D1                                   __ptext4 0A7C  
                                 __ptext5 0A9F                                   __ptext6 0062  
                                 __ptext7 04E3                                   __ptext8 0B52  
                                 __ptext9 0C34                     __end_of_conf_clock_ss 0A6C  
                                 _dpowers 100F                     _OSCILLATOR_Initialize 0A84  
                            __size_of_lcd 02B7                                   _isdigit 0B52  
                        ___awmod@dividend 0072                                   lcd@alah 004C  
                                 lcd@alam 004D                                   lcd@alas 004E  
                ??_PIN_MANAGER_Initialize 0020                      lcd@temperature_alarm 004A  
                                 main@ctl 0069                __size_of_SYSTEM_Initialize 0010  
                                 _sprintf 04E3                                   clrloop0 0AC0  
                    end_of_initialization 005E                             _checkButtonS1 0BBD  
                           _checkButtonS2 0BDA                          ?_ADCC_Initialize 0070  
                              _timer_flag 007B                  _TMR0_SetInterruptHandler 0A8D  
                               _PORTBbits 000D                                 _PORTCbits 000E  
                        ___lbmod@dividend 0073                               ?_conf_lumin 0070  
                               _TRISCbits 0013                                 i1___lwmod 0C77  
                __end_of_DATAEE_WriteByte 0C15                               ___lbmod@rem 0075  
                          __end_of_LCDcmd 0A7C                            __end_of_LCDstr 0BA6  
                          LCDsend2x4@mode 0022                           _conf_alarm_flag 0AA8  
                          ?_checkButtonS1 0070                            ?_checkButtonS2 0070  
                          __end_of___wmul 0C54                             __pidataCOMMON 0003  
                       __size_of_TMR0_ISR 0017                         i1___lwmod@divisor 0070  
                  ?_OSCILLATOR_Initialize 0070                         i1___lwmod@counter 0075  
       __size_of_ADCC_GetConversionResult 0009                 ?_ADCC_GetConversionResult 0020  
                     start_initialization 002A                  __size_of_TMR0_Initialize 0015  
         __size_of_PIN_MANAGER_Initialize 003B                               __end_of_lcd 0319  
                              ?i1___lwmod 0070                          WriteI2C@data_out 0021  
           __size_of_ADCC_StartConversion 0008                                  ??_LCDcmd 0028  
                                ??_LCDstr 0029                       __size_of_conf_lumin 0010  
                        ??_PMD_Initialize 0020                                  ??___wmul 0024  
                     lcd@luminosity_alarm 004B                    __size_of_TMR0_CallBack 000D  
                             __pdataBANK1 00B6                         __size_of_WriteI2C 005A  
                             __pbssBIGRAM 2373                                  ?_LCDchar 0070  
                             __pbssCOMMON 0079                                  ?_LCDinit 0070  
                                ?_LCDsend 0070                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                            _isdigit$2362 0020                                  LCDchar@c 0028  
                 __end_of_conf_alarm_flag 0AB3                                  LCDsend@c 0023  
                             sprintf@flag 003E                 __size_of_i2c1_driver_open 000C  
                             sprintf@prec 003B                                  ?_ReadI2C 0070  
                   _TMR0_InterruptHandler 00BA                                 _btn1State 006D  
                               _btn2State 006C                                 __pnvBANK1 00BA  
                         ??_checkButtonS1 0020                           ??_checkButtonS2 0020  
                               _main$2758 006A                          ___lwdiv@dividend 0022  
                  _PIN_MANAGER_Initialize 0CE0                             lcd@luminosity 0043  
                                ?___awmod 0070                                  ?___lbmod 0070  
                                ?___lwdiv 0020                                  ?___lwmod 0028  
             _i2c1_driver_busCollisionISR 00B0                    __size_of_TMR0_callback 005E  
                               _conf_temp 0B42              ??_INTERRUPT_InterruptManager 0079  
                                ?_isdigit 0070                          ___lwdiv@quotient 0025  
                             ??i1___lwmod 0074                                  ?_sprintf 002E  
                           _TMR0_CallBack 0ACB                            __size_of_lumin 002B  
                          __size_of_tsttc 0150                         ??_TMR0_Initialize 0022  
                          ___wmul@product 0024                                 clear_ram0 0ABF  
                                _PIE0bits 0716                                  _PIE3bits 0719  
     __size_of_INTERRUPT_InterruptManager 0024                ??_TMR0_SetInterruptHandler 0022  
                                _PIR0bits 070C                                  _PIR3bits 070F  
                         lumin@luminosity 0024                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR0_ISR 0BA6  
                                _SSP1STAT 018F                                ?_conf_temp 0070  
                              _ADCON0bits 0093                                _ADCON1bits 0094  
                              _ADCON2bits 0095                                _ADCON3bits 0096  
                       ___wmul@multiplier 0020                              ??_conf_lumin 0020  
                               main@state 006B                          __size_of_LCDchar 0009  
                   DATAEE_WriteByte@bData 0072                          __size_of_LCDinit 0076  
                        __size_of_LCDsend 0053                            ?_TMR0_CallBack 0070  
                           _TMR0_callback 0E58                         ?_DATAEE_WriteByte 0070  
                        ?_conf_alarm_flag 0070                    __size_of_conf_alarm_hh 000E  
                  __size_of_conf_alarm_mm 0010                    __size_of_conf_alarm_ss 0010  
                      ??_DATAEE_WriteByte 0073                    __size_of_conf_clock_hh 000E  
                  __size_of_conf_clock_mm 000E                    __size_of_conf_clock_ss 0005  
                        __size_of_ReadI2C 001F                                _ADSTATbits 0097  
        __end_of_ADCC_GetConversionResult 0AA8                        __end_of_conf_lumin 0B42  
                 ??_OSCILLATOR_Initialize 0020                          __size_of___awmod 0053  
                        __size_of___lbmod 0023                          __size_of___lwdiv 003D  
                        __size_of___lwmod 0035                                  _WriteI2C 0DFE  
                              sprintf@val 003C                                _T0CON0bits 001E  
                __size_of_ADCC_Initialize 0016                          __size_of_isdigit 0013  
                         ___lwdiv@divisor 0020                           ___lwdiv@counter 0027  
                                __ptext10 0CAB                                  __ptext11 0D1B  
                                __ptext20 0AE6                                  __ptext12 0B90  
                                __ptext21 0B22                                  __ptext13 0A96  
                                __ptext30 0A6C                                  __ptext22 0B12  
                                __ptext14 0A74                                  __ptext31 0CE0  
                                __ptext23 0AD8                                  __ptext15 0AB3  
                                __ptext40 0ACB                                  __ptext32 0A84  
                                __ptext24 0AA8                                  __ptext16 0B42  
                                __ptext41 0002                                  __ptext33 0B7A  
                                __ptext25 0BDA                                  __ptext17 0B32  
                                __ptext42 0E58                                  __ptext34 0EB6  
                                __ptext26 0BBD                                  __ptext18 0A67  
                                __ptext43 0C77                                  __ptext35 0F2C  
                                __ptext27 0B02                                  __ptext19 0AF4  
                                __ptext44 0C54                                  __ptext36 0DAB  
                                __ptext28 0B65                                  __ptext45 0D58  
                                __ptext37 0DFE                                  __ptext29 0A8D  
                                __ptext46 0BF7                                  __ptext39 0BA6  
                            _SSP1CON1bits 0190                              _SSP1CON2bits 0191  
                          ?_TMR0_callback 0070                          __size_of_sprintf 019E  
             DATAEE_WriteByte@GIEBitValue 0073                          _i2c1_driver_open 0AB3  
                           __size_of_main 01CA      __end_of_TMR0_DefaultInterruptHandler 0003  
   __size_of_TMR0_DefaultInterruptHandler 0001              _TMR0_DefaultInterruptHandler 0002  
                                lcd@alarm 0044                                  lcd@state 0049  
                              tsttc@value 0023              __end_of_ADCC_StartConversion 0A84  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 0028  
              _INTERRUPT_InterruptManager 0004                              _SSP1STATbits 018F  
                             ??_conf_temp 0020                             _conf_alarm_hh 0AD8  
                           _conf_alarm_mm 0B12                             _conf_alarm_ss 0B22  
                           _conf_clock_hh 0AE6                             _conf_clock_mm 0AF4  
                           _conf_clock_ss 0A67                                _INTCONbits 000B  
                         ??_TMR0_CallBack 0079                               _NVMCON1bits 081E  
                                isdigit@c 0021                                _LCDsend2x4 0F2C  
                                intlevel1 0000                                 sprintf@ap 003A  
                               sprintf@sp 0042                          ___lwmod@dividend 002A  
                 ?_PIN_MANAGER_Initialize 0070             ?_TMR0_DefaultInterruptHandler 0070  
                _ADCC_GetConversionResult 0A9F                            ?_conf_alarm_hh 0070  
                          ?_conf_alarm_mm 0070                            ?_conf_alarm_ss 0070  
                           __pstringtext1 100F                             __pstringtext2 1000  
                           __pstringtext3 1019                             __pstringtext4 1020  
                           __pstringtext5 1026                             __pstringtext6 102A  
                           __pstringtext7 102C                             __pstringtext8 102E  
                           __pstringtext9 0000                            ?_conf_clock_hh 0070  
                          ?_conf_clock_mm 0070                            ?_conf_clock_ss 0070  
                                sprintf@c 0041                                  sprintf@f 002E  
                              _SSP1DATPPS 0EC6                                _SSP1CLKPPS 0EC5  
                         ___lwmod@divisor 0028                           _TMR0_Initialize 0B65  
                         ___lwmod@counter 002D                           ??_TMR0_callback 0077  
          __end_of_PIN_MANAGER_Initialize 0D1B                         ??_ADCC_Initialize 0020  
                   __end_of_checkButtonS1 0BDA                     __end_of_checkButtonS2 0BF7  
