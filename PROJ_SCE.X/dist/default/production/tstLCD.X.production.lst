

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Tue Oct 13 17:06:11 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	intentry,global,class=CODE,delta=2
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38  0000                     
    39                           ; Version 2.20
    40                           ; Generated 30/04/2020 GMT
    41                           ; 
    42                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F18875 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000D                     	;# 
    87  000E                     	;# 
    88  000F                     	;# 
    89  0010                     	;# 
    90  0011                     	;# 
    91  0012                     	;# 
    92  0013                     	;# 
    93  0014                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001C                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  008C                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008E                     	;# 
   111  008F                     	;# 
   112  0090                     	;# 
   113  0090                     	;# 
   114  0091                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  010C                     	;# 
   128  010D                     	;# 
   129  010E                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0110                     	;# 
   133  0110                     	;# 
   134  0111                     	;# 
   135  0112                     	;# 
   136  0112                     	;# 
   137  0113                     	;# 
   138  0114                     	;# 
   139  0114                     	;# 
   140  0115                     	;# 
   141  0116                     	;# 
   142  0116                     	;# 
   143  0117                     	;# 
   144  0119                     	;# 
   145  0119                     	;# 
   146  0119                     	;# 
   147  011A                     	;# 
   148  011A                     	;# 
   149  011A                     	;# 
   150  011B                     	;# 
   151  011B                     	;# 
   152  011B                     	;# 
   153  011B                     	;# 
   154  011B                     	;# 
   155  011C                     	;# 
   156  011C                     	;# 
   157  011C                     	;# 
   158  011D                     	;# 
   159  011D                     	;# 
   160  011D                     	;# 
   161  011E                     	;# 
   162  011E                     	;# 
   163  011E                     	;# 
   164  011F                     	;# 
   165  011F                     	;# 
   166  011F                     	;# 
   167  011F                     	;# 
   168  011F                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  018E                     	;# 
   172  018F                     	;# 
   173  0190                     	;# 
   174  0191                     	;# 
   175  0192                     	;# 
   176  0196                     	;# 
   177  0197                     	;# 
   178  0198                     	;# 
   179  0199                     	;# 
   180  019A                     	;# 
   181  019B                     	;# 
   182  019C                     	;# 
   183  020C                     	;# 
   184  020C                     	;# 
   185  020D                     	;# 
   186  020E                     	;# 
   187  020F                     	;# 
   188  020F                     	;# 
   189  0210                     	;# 
   190  0210                     	;# 
   191  0211                     	;# 
   192  0211                     	;# 
   193  0212                     	;# 
   194  0212                     	;# 
   195  0213                     	;# 
   196  0214                     	;# 
   197  0215                     	;# 
   198  0215                     	;# 
   199  0216                     	;# 
   200  0216                     	;# 
   201  0217                     	;# 
   202  0217                     	;# 
   203  0218                     	;# 
   204  0218                     	;# 
   205  0219                     	;# 
   206  021A                     	;# 
   207  021B                     	;# 
   208  021B                     	;# 
   209  021C                     	;# 
   210  021C                     	;# 
   211  021D                     	;# 
   212  021D                     	;# 
   213  021E                     	;# 
   214  021F                     	;# 
   215  028C                     	;# 
   216  028C                     	;# 
   217  028D                     	;# 
   218  028D                     	;# 
   219  028E                     	;# 
   220  028F                     	;# 
   221  0290                     	;# 
   222  0290                     	;# 
   223  0291                     	;# 
   224  0292                     	;# 
   225  0292                     	;# 
   226  0293                     	;# 
   227  0293                     	;# 
   228  0294                     	;# 
   229  0295                     	;# 
   230  0296                     	;# 
   231  0296                     	;# 
   232  0297                     	;# 
   233  0298                     	;# 
   234  0298                     	;# 
   235  0299                     	;# 
   236  0299                     	;# 
   237  029A                     	;# 
   238  029B                     	;# 
   239  029C                     	;# 
   240  029C                     	;# 
   241  029D                     	;# 
   242  030C                     	;# 
   243  030C                     	;# 
   244  030D                     	;# 
   245  030E                     	;# 
   246  030F                     	;# 
   247  0310                     	;# 
   248  0310                     	;# 
   249  0311                     	;# 
   250  0312                     	;# 
   251  0313                     	;# 
   252  0314                     	;# 
   253  0314                     	;# 
   254  0315                     	;# 
   255  0316                     	;# 
   256  0317                     	;# 
   257  0318                     	;# 
   258  0318                     	;# 
   259  0319                     	;# 
   260  031A                     	;# 
   261  031B                     	;# 
   262  031C                     	;# 
   263  031C                     	;# 
   264  031D                     	;# 
   265  031E                     	;# 
   266  031F                     	;# 
   267  038C                     	;# 
   268  038C                     	;# 
   269  038D                     	;# 
   270  038E                     	;# 
   271  0390                     	;# 
   272  0390                     	;# 
   273  0391                     	;# 
   274  0392                     	;# 
   275  040C                     	;# 
   276  040D                     	;# 
   277  040E                     	;# 
   278  040F                     	;# 
   279  0410                     	;# 
   280  0411                     	;# 
   281  0416                     	;# 
   282  0416                     	;# 
   283  0417                     	;# 
   284  0418                     	;# 
   285  0418                     	;# 
   286  0419                     	;# 
   287  041A                     	;# 
   288  041A                     	;# 
   289  041B                     	;# 
   290  041C                     	;# 
   291  041C                     	;# 
   292  041D                     	;# 
   293  041E                     	;# 
   294  041F                     	;# 
   295  048C                     	;# 
   296  048C                     	;# 
   297  048D                     	;# 
   298  048E                     	;# 
   299  048F                     	;# 
   300  048F                     	;# 
   301  0490                     	;# 
   302  0491                     	;# 
   303  0492                     	;# 
   304  0492                     	;# 
   305  0493                     	;# 
   306  0494                     	;# 
   307  0495                     	;# 
   308  0495                     	;# 
   309  0496                     	;# 
   310  0497                     	;# 
   311  0498                     	;# 
   312  0499                     	;# 
   313  049A                     	;# 
   314  049B                     	;# 
   315  049C                     	;# 
   316  049D                     	;# 
   317  050C                     	;# 
   318  050C                     	;# 
   319  050D                     	;# 
   320  050E                     	;# 
   321  050F                     	;# 
   322  050F                     	;# 
   323  0510                     	;# 
   324  0511                     	;# 
   325  0512                     	;# 
   326  0512                     	;# 
   327  0513                     	;# 
   328  0514                     	;# 
   329  0515                     	;# 
   330  0515                     	;# 
   331  0516                     	;# 
   332  0517                     	;# 
   333  0518                     	;# 
   334  0519                     	;# 
   335  051A                     	;# 
   336  051B                     	;# 
   337  051C                     	;# 
   338  051D                     	;# 
   339  058C                     	;# 
   340  058C                     	;# 
   341  058D                     	;# 
   342  058E                     	;# 
   343  058F                     	;# 
   344  058F                     	;# 
   345  0590                     	;# 
   346  0591                     	;# 
   347  0592                     	;# 
   348  0593                     	;# 
   349  060C                     	;# 
   350  060D                     	;# 
   351  060E                     	;# 
   352  060F                     	;# 
   353  0610                     	;# 
   354  0611                     	;# 
   355  0612                     	;# 
   356  0613                     	;# 
   357  0614                     	;# 
   358  0616                     	;# 
   359  0617                     	;# 
   360  0618                     	;# 
   361  0619                     	;# 
   362  061A                     	;# 
   363  061B                     	;# 
   364  061C                     	;# 
   365  061D                     	;# 
   366  061E                     	;# 
   367  068C                     	;# 
   368  068D                     	;# 
   369  068E                     	;# 
   370  068F                     	;# 
   371  0690                     	;# 
   372  0691                     	;# 
   373  0692                     	;# 
   374  0693                     	;# 
   375  0694                     	;# 
   376  070C                     	;# 
   377  070D                     	;# 
   378  070E                     	;# 
   379  070F                     	;# 
   380  0710                     	;# 
   381  0711                     	;# 
   382  0712                     	;# 
   383  0713                     	;# 
   384  0714                     	;# 
   385  0716                     	;# 
   386  0717                     	;# 
   387  0718                     	;# 
   388  0719                     	;# 
   389  071A                     	;# 
   390  071B                     	;# 
   391  071C                     	;# 
   392  071D                     	;# 
   393  071E                     	;# 
   394  0796                     	;# 
   395  0797                     	;# 
   396  0798                     	;# 
   397  0799                     	;# 
   398  079A                     	;# 
   399  079B                     	;# 
   400  080C                     	;# 
   401  080D                     	;# 
   402  080E                     	;# 
   403  080F                     	;# 
   404  0810                     	;# 
   405  0811                     	;# 
   406  0812                     	;# 
   407  0813                     	;# 
   408  0814                     	;# 
   409  081A                     	;# 
   410  081B                     	;# 
   411  081C                     	;# 
   412  081D                     	;# 
   413  081E                     	;# 
   414  081F                     	;# 
   415  088C                     	;# 
   416  088D                     	;# 
   417  088E                     	;# 
   418  088F                     	;# 
   419  0890                     	;# 
   420  0891                     	;# 
   421  0892                     	;# 
   422  0893                     	;# 
   423  0895                     	;# 
   424  0896                     	;# 
   425  0897                     	;# 
   426  0898                     	;# 
   427  0899                     	;# 
   428  089A                     	;# 
   429  089B                     	;# 
   430  090C                     	;# 
   431  090E                     	;# 
   432  090F                     	;# 
   433  091F                     	;# 
   434  091F                     	;# 
   435  098F                     	;# 
   436  098F                     	;# 
   437  0990                     	;# 
   438  0991                     	;# 
   439  0992                     	;# 
   440  0993                     	;# 
   441  0994                     	;# 
   442  0995                     	;# 
   443  0996                     	;# 
   444  0997                     	;# 
   445  0E0F                     	;# 
   446  0E10                     	;# 
   447  0E11                     	;# 
   448  0E12                     	;# 
   449  0E13                     	;# 
   450  0E14                     	;# 
   451  0E15                     	;# 
   452  0E16                     	;# 
   453  0E17                     	;# 
   454  0E18                     	;# 
   455  0E19                     	;# 
   456  0E1A                     	;# 
   457  0E1B                     	;# 
   458  0E1C                     	;# 
   459  0E1D                     	;# 
   460  0E1E                     	;# 
   461  0E1F                     	;# 
   462  0E20                     	;# 
   463  0E21                     	;# 
   464  0E22                     	;# 
   465  0E23                     	;# 
   466  0E24                     	;# 
   467  0E25                     	;# 
   468  0E26                     	;# 
   469  0E27                     	;# 
   470  0E28                     	;# 
   471  0E29                     	;# 
   472  0E2A                     	;# 
   473  0E2B                     	;# 
   474  0E2C                     	;# 
   475  0E2D                     	;# 
   476  0E2E                     	;# 
   477  0E2F                     	;# 
   478  0E30                     	;# 
   479  0E31                     	;# 
   480  0E32                     	;# 
   481  0E33                     	;# 
   482  0E34                     	;# 
   483  0E35                     	;# 
   484  0E36                     	;# 
   485  0E37                     	;# 
   486  0E8F                     	;# 
   487  0E90                     	;# 
   488  0E91                     	;# 
   489  0E92                     	;# 
   490  0E93                     	;# 
   491  0E94                     	;# 
   492  0E95                     	;# 
   493  0E96                     	;# 
   494  0E97                     	;# 
   495  0E9C                     	;# 
   496  0E9D                     	;# 
   497  0E9E                     	;# 
   498  0EA1                     	;# 
   499  0EA2                     	;# 
   500  0EA3                     	;# 
   501  0EA4                     	;# 
   502  0EA5                     	;# 
   503  0EA9                     	;# 
   504  0EAA                     	;# 
   505  0EAB                     	;# 
   506  0EAC                     	;# 
   507  0EB1                     	;# 
   508  0EB2                     	;# 
   509  0EB3                     	;# 
   510  0EB8                     	;# 
   511  0EB9                     	;# 
   512  0EBA                     	;# 
   513  0EBB                     	;# 
   514  0EBC                     	;# 
   515  0EBD                     	;# 
   516  0EBE                     	;# 
   517  0EC3                     	;# 
   518  0EC5                     	;# 
   519  0EC6                     	;# 
   520  0EC7                     	;# 
   521  0EC8                     	;# 
   522  0EC9                     	;# 
   523  0ECA                     	;# 
   524  0ECB                     	;# 
   525  0ECC                     	;# 
   526  0F10                     	;# 
   527  0F11                     	;# 
   528  0F12                     	;# 
   529  0F13                     	;# 
   530  0F14                     	;# 
   531  0F15                     	;# 
   532  0F16                     	;# 
   533  0F17                     	;# 
   534  0F18                     	;# 
   535  0F19                     	;# 
   536  0F1A                     	;# 
   537  0F1B                     	;# 
   538  0F1C                     	;# 
   539  0F1D                     	;# 
   540  0F1E                     	;# 
   541  0F1F                     	;# 
   542  0F20                     	;# 
   543  0F21                     	;# 
   544  0F22                     	;# 
   545  0F23                     	;# 
   546  0F24                     	;# 
   547  0F25                     	;# 
   548  0F26                     	;# 
   549  0F27                     	;# 
   550  0F28                     	;# 
   551  0F29                     	;# 
   552  0F2A                     	;# 
   553  0F2B                     	;# 
   554  0F2C                     	;# 
   555  0F2D                     	;# 
   556  0F2E                     	;# 
   557  0F2F                     	;# 
   558  0F30                     	;# 
   559  0F31                     	;# 
   560  0F32                     	;# 
   561  0F38                     	;# 
   562  0F39                     	;# 
   563  0F3A                     	;# 
   564  0F3B                     	;# 
   565  0F3C                     	;# 
   566  0F3D                     	;# 
   567  0F3E                     	;# 
   568  0F3F                     	;# 
   569  0F40                     	;# 
   570  0F41                     	;# 
   571  0F43                     	;# 
   572  0F44                     	;# 
   573  0F45                     	;# 
   574  0F46                     	;# 
   575  0F47                     	;# 
   576  0F48                     	;# 
   577  0F49                     	;# 
   578  0F4A                     	;# 
   579  0F4B                     	;# 
   580  0F4C                     	;# 
   581  0F4E                     	;# 
   582  0F4F                     	;# 
   583  0F50                     	;# 
   584  0F51                     	;# 
   585  0F52                     	;# 
   586  0F53                     	;# 
   587  0F54                     	;# 
   588  0F55                     	;# 
   589  0F56                     	;# 
   590  0F57                     	;# 
   591  0F59                     	;# 
   592  0F5A                     	;# 
   593  0F5B                     	;# 
   594  0F5C                     	;# 
   595  0F5D                     	;# 
   596  0F61                     	;# 
   597  0F62                     	;# 
   598  0F64                     	;# 
   599  0F65                     	;# 
   600  0F66                     	;# 
   601  0F67                     	;# 
   602  0F68                     	;# 
   603  0F69                     	;# 
   604  0F6A                     	;# 
   605  0F6B                     	;# 
   606  0F6C                     	;# 
   607  0F6D                     	;# 
   608  0FE4                     	;# 
   609  0FE5                     	;# 
   610  0FE6                     	;# 
   611  0FE7                     	;# 
   612  0FE8                     	;# 
   613  0FE9                     	;# 
   614  0FEA                     	;# 
   615  0FEB                     	;# 
   616  0FED                     	;# 
   617  0FEE                     	;# 
   618  0FEF                     	;# 
   619  0000                     	;# 
   620  0001                     	;# 
   621  0002                     	;# 
   622  0003                     	;# 
   623  0004                     	;# 
   624  0005                     	;# 
   625  0006                     	;# 
   626  0007                     	;# 
   627  0008                     	;# 
   628  0009                     	;# 
   629  000A                     	;# 
   630  000B                     	;# 
   631  000C                     	;# 
   632  000D                     	;# 
   633  000E                     	;# 
   634  000F                     	;# 
   635  0010                     	;# 
   636  0011                     	;# 
   637  0012                     	;# 
   638  0013                     	;# 
   639  0014                     	;# 
   640  0015                     	;# 
   641  0016                     	;# 
   642  0017                     	;# 
   643  0018                     	;# 
   644  0019                     	;# 
   645  001A                     	;# 
   646  001C                     	;# 
   647  001C                     	;# 
   648  001D                     	;# 
   649  001D                     	;# 
   650  001E                     	;# 
   651  001F                     	;# 
   652  008C                     	;# 
   653  008C                     	;# 
   654  008D                     	;# 
   655  008E                     	;# 
   656  008E                     	;# 
   657  008F                     	;# 
   658  0090                     	;# 
   659  0090                     	;# 
   660  0091                     	;# 
   661  0093                     	;# 
   662  0094                     	;# 
   663  0095                     	;# 
   664  0096                     	;# 
   665  0097                     	;# 
   666  0098                     	;# 
   667  0099                     	;# 
   668  009A                     	;# 
   669  009B                     	;# 
   670  009C                     	;# 
   671  009D                     	;# 
   672  009E                     	;# 
   673  010C                     	;# 
   674  010D                     	;# 
   675  010E                     	;# 
   676  010E                     	;# 
   677  010F                     	;# 
   678  0110                     	;# 
   679  0110                     	;# 
   680  0111                     	;# 
   681  0112                     	;# 
   682  0112                     	;# 
   683  0113                     	;# 
   684  0114                     	;# 
   685  0114                     	;# 
   686  0115                     	;# 
   687  0116                     	;# 
   688  0116                     	;# 
   689  0117                     	;# 
   690  0119                     	;# 
   691  0119                     	;# 
   692  0119                     	;# 
   693  011A                     	;# 
   694  011A                     	;# 
   695  011A                     	;# 
   696  011B                     	;# 
   697  011B                     	;# 
   698  011B                     	;# 
   699  011B                     	;# 
   700  011B                     	;# 
   701  011C                     	;# 
   702  011C                     	;# 
   703  011C                     	;# 
   704  011D                     	;# 
   705  011D                     	;# 
   706  011D                     	;# 
   707  011E                     	;# 
   708  011E                     	;# 
   709  011E                     	;# 
   710  011F                     	;# 
   711  011F                     	;# 
   712  011F                     	;# 
   713  011F                     	;# 
   714  011F                     	;# 
   715  018C                     	;# 
   716  018D                     	;# 
   717  018E                     	;# 
   718  018F                     	;# 
   719  0190                     	;# 
   720  0191                     	;# 
   721  0192                     	;# 
   722  0196                     	;# 
   723  0197                     	;# 
   724  0198                     	;# 
   725  0199                     	;# 
   726  019A                     	;# 
   727  019B                     	;# 
   728  019C                     	;# 
   729  020C                     	;# 
   730  020C                     	;# 
   731  020D                     	;# 
   732  020E                     	;# 
   733  020F                     	;# 
   734  020F                     	;# 
   735  0210                     	;# 
   736  0210                     	;# 
   737  0211                     	;# 
   738  0211                     	;# 
   739  0212                     	;# 
   740  0212                     	;# 
   741  0213                     	;# 
   742  0214                     	;# 
   743  0215                     	;# 
   744  0215                     	;# 
   745  0216                     	;# 
   746  0216                     	;# 
   747  0217                     	;# 
   748  0217                     	;# 
   749  0218                     	;# 
   750  0218                     	;# 
   751  0219                     	;# 
   752  021A                     	;# 
   753  021B                     	;# 
   754  021B                     	;# 
   755  021C                     	;# 
   756  021C                     	;# 
   757  021D                     	;# 
   758  021D                     	;# 
   759  021E                     	;# 
   760  021F                     	;# 
   761  028C                     	;# 
   762  028C                     	;# 
   763  028D                     	;# 
   764  028D                     	;# 
   765  028E                     	;# 
   766  028F                     	;# 
   767  0290                     	;# 
   768  0290                     	;# 
   769  0291                     	;# 
   770  0292                     	;# 
   771  0292                     	;# 
   772  0293                     	;# 
   773  0293                     	;# 
   774  0294                     	;# 
   775  0295                     	;# 
   776  0296                     	;# 
   777  0296                     	;# 
   778  0297                     	;# 
   779  0298                     	;# 
   780  0298                     	;# 
   781  0299                     	;# 
   782  0299                     	;# 
   783  029A                     	;# 
   784  029B                     	;# 
   785  029C                     	;# 
   786  029C                     	;# 
   787  029D                     	;# 
   788  030C                     	;# 
   789  030C                     	;# 
   790  030D                     	;# 
   791  030E                     	;# 
   792  030F                     	;# 
   793  0310                     	;# 
   794  0310                     	;# 
   795  0311                     	;# 
   796  0312                     	;# 
   797  0313                     	;# 
   798  0314                     	;# 
   799  0314                     	;# 
   800  0315                     	;# 
   801  0316                     	;# 
   802  0317                     	;# 
   803  0318                     	;# 
   804  0318                     	;# 
   805  0319                     	;# 
   806  031A                     	;# 
   807  031B                     	;# 
   808  031C                     	;# 
   809  031C                     	;# 
   810  031D                     	;# 
   811  031E                     	;# 
   812  031F                     	;# 
   813  038C                     	;# 
   814  038C                     	;# 
   815  038D                     	;# 
   816  038E                     	;# 
   817  0390                     	;# 
   818  0390                     	;# 
   819  0391                     	;# 
   820  0392                     	;# 
   821  040C                     	;# 
   822  040D                     	;# 
   823  040E                     	;# 
   824  040F                     	;# 
   825  0410                     	;# 
   826  0411                     	;# 
   827  0416                     	;# 
   828  0416                     	;# 
   829  0417                     	;# 
   830  0418                     	;# 
   831  0418                     	;# 
   832  0419                     	;# 
   833  041A                     	;# 
   834  041A                     	;# 
   835  041B                     	;# 
   836  041C                     	;# 
   837  041C                     	;# 
   838  041D                     	;# 
   839  041E                     	;# 
   840  041F                     	;# 
   841  048C                     	;# 
   842  048C                     	;# 
   843  048D                     	;# 
   844  048E                     	;# 
   845  048F                     	;# 
   846  048F                     	;# 
   847  0490                     	;# 
   848  0491                     	;# 
   849  0492                     	;# 
   850  0492                     	;# 
   851  0493                     	;# 
   852  0494                     	;# 
   853  0495                     	;# 
   854  0495                     	;# 
   855  0496                     	;# 
   856  0497                     	;# 
   857  0498                     	;# 
   858  0499                     	;# 
   859  049A                     	;# 
   860  049B                     	;# 
   861  049C                     	;# 
   862  049D                     	;# 
   863  050C                     	;# 
   864  050C                     	;# 
   865  050D                     	;# 
   866  050E                     	;# 
   867  050F                     	;# 
   868  050F                     	;# 
   869  0510                     	;# 
   870  0511                     	;# 
   871  0512                     	;# 
   872  0512                     	;# 
   873  0513                     	;# 
   874  0514                     	;# 
   875  0515                     	;# 
   876  0515                     	;# 
   877  0516                     	;# 
   878  0517                     	;# 
   879  0518                     	;# 
   880  0519                     	;# 
   881  051A                     	;# 
   882  051B                     	;# 
   883  051C                     	;# 
   884  051D                     	;# 
   885  058C                     	;# 
   886  058C                     	;# 
   887  058D                     	;# 
   888  058E                     	;# 
   889  058F                     	;# 
   890  058F                     	;# 
   891  0590                     	;# 
   892  0591                     	;# 
   893  0592                     	;# 
   894  0593                     	;# 
   895  060C                     	;# 
   896  060D                     	;# 
   897  060E                     	;# 
   898  060F                     	;# 
   899  0610                     	;# 
   900  0611                     	;# 
   901  0612                     	;# 
   902  0613                     	;# 
   903  0614                     	;# 
   904  0616                     	;# 
   905  0617                     	;# 
   906  0618                     	;# 
   907  0619                     	;# 
   908  061A                     	;# 
   909  061B                     	;# 
   910  061C                     	;# 
   911  061D                     	;# 
   912  061E                     	;# 
   913  068C                     	;# 
   914  068D                     	;# 
   915  068E                     	;# 
   916  068F                     	;# 
   917  0690                     	;# 
   918  0691                     	;# 
   919  0692                     	;# 
   920  0693                     	;# 
   921  0694                     	;# 
   922  070C                     	;# 
   923  070D                     	;# 
   924  070E                     	;# 
   925  070F                     	;# 
   926  0710                     	;# 
   927  0711                     	;# 
   928  0712                     	;# 
   929  0713                     	;# 
   930  0714                     	;# 
   931  0716                     	;# 
   932  0717                     	;# 
   933  0718                     	;# 
   934  0719                     	;# 
   935  071A                     	;# 
   936  071B                     	;# 
   937  071C                     	;# 
   938  071D                     	;# 
   939  071E                     	;# 
   940  0796                     	;# 
   941  0797                     	;# 
   942  0798                     	;# 
   943  0799                     	;# 
   944  079A                     	;# 
   945  079B                     	;# 
   946  080C                     	;# 
   947  080D                     	;# 
   948  080E                     	;# 
   949  080F                     	;# 
   950  0810                     	;# 
   951  0811                     	;# 
   952  0812                     	;# 
   953  0813                     	;# 
   954  0814                     	;# 
   955  081A                     	;# 
   956  081B                     	;# 
   957  081C                     	;# 
   958  081D                     	;# 
   959  081E                     	;# 
   960  081F                     	;# 
   961  088C                     	;# 
   962  088D                     	;# 
   963  088E                     	;# 
   964  088F                     	;# 
   965  0890                     	;# 
   966  0891                     	;# 
   967  0892                     	;# 
   968  0893                     	;# 
   969  0895                     	;# 
   970  0896                     	;# 
   971  0897                     	;# 
   972  0898                     	;# 
   973  0899                     	;# 
   974  089A                     	;# 
   975  089B                     	;# 
   976  090C                     	;# 
   977  090E                     	;# 
   978  090F                     	;# 
   979  091F                     	;# 
   980  091F                     	;# 
   981  098F                     	;# 
   982  098F                     	;# 
   983  0990                     	;# 
   984  0991                     	;# 
   985  0992                     	;# 
   986  0993                     	;# 
   987  0994                     	;# 
   988  0995                     	;# 
   989  0996                     	;# 
   990  0997                     	;# 
   991  0E0F                     	;# 
   992  0E10                     	;# 
   993  0E11                     	;# 
   994  0E12                     	;# 
   995  0E13                     	;# 
   996  0E14                     	;# 
   997  0E15                     	;# 
   998  0E16                     	;# 
   999  0E17                     	;# 
  1000  0E18                     	;# 
  1001  0E19                     	;# 
  1002  0E1A                     	;# 
  1003  0E1B                     	;# 
  1004  0E1C                     	;# 
  1005  0E1D                     	;# 
  1006  0E1E                     	;# 
  1007  0E1F                     	;# 
  1008  0E20                     	;# 
  1009  0E21                     	;# 
  1010  0E22                     	;# 
  1011  0E23                     	;# 
  1012  0E24                     	;# 
  1013  0E25                     	;# 
  1014  0E26                     	;# 
  1015  0E27                     	;# 
  1016  0E28                     	;# 
  1017  0E29                     	;# 
  1018  0E2A                     	;# 
  1019  0E2B                     	;# 
  1020  0E2C                     	;# 
  1021  0E2D                     	;# 
  1022  0E2E                     	;# 
  1023  0E2F                     	;# 
  1024  0E30                     	;# 
  1025  0E31                     	;# 
  1026  0E32                     	;# 
  1027  0E33                     	;# 
  1028  0E34                     	;# 
  1029  0E35                     	;# 
  1030  0E36                     	;# 
  1031  0E37                     	;# 
  1032  0E8F                     	;# 
  1033  0E90                     	;# 
  1034  0E91                     	;# 
  1035  0E92                     	;# 
  1036  0E93                     	;# 
  1037  0E94                     	;# 
  1038  0E95                     	;# 
  1039  0E96                     	;# 
  1040  0E97                     	;# 
  1041  0E9C                     	;# 
  1042  0E9D                     	;# 
  1043  0E9E                     	;# 
  1044  0EA1                     	;# 
  1045  0EA2                     	;# 
  1046  0EA3                     	;# 
  1047  0EA4                     	;# 
  1048  0EA5                     	;# 
  1049  0EA9                     	;# 
  1050  0EAA                     	;# 
  1051  0EAB                     	;# 
  1052  0EAC                     	;# 
  1053  0EB1                     	;# 
  1054  0EB2                     	;# 
  1055  0EB3                     	;# 
  1056  0EB8                     	;# 
  1057  0EB9                     	;# 
  1058  0EBA                     	;# 
  1059  0EBB                     	;# 
  1060  0EBC                     	;# 
  1061  0EBD                     	;# 
  1062  0EBE                     	;# 
  1063  0EC3                     	;# 
  1064  0EC5                     	;# 
  1065  0EC6                     	;# 
  1066  0EC7                     	;# 
  1067  0EC8                     	;# 
  1068  0EC9                     	;# 
  1069  0ECA                     	;# 
  1070  0ECB                     	;# 
  1071  0ECC                     	;# 
  1072  0F10                     	;# 
  1073  0F11                     	;# 
  1074  0F12                     	;# 
  1075  0F13                     	;# 
  1076  0F14                     	;# 
  1077  0F15                     	;# 
  1078  0F16                     	;# 
  1079  0F17                     	;# 
  1080  0F18                     	;# 
  1081  0F19                     	;# 
  1082  0F1A                     	;# 
  1083  0F1B                     	;# 
  1084  0F1C                     	;# 
  1085  0F1D                     	;# 
  1086  0F1E                     	;# 
  1087  0F1F                     	;# 
  1088  0F20                     	;# 
  1089  0F21                     	;# 
  1090  0F22                     	;# 
  1091  0F23                     	;# 
  1092  0F24                     	;# 
  1093  0F25                     	;# 
  1094  0F26                     	;# 
  1095  0F27                     	;# 
  1096  0F28                     	;# 
  1097  0F29                     	;# 
  1098  0F2A                     	;# 
  1099  0F2B                     	;# 
  1100  0F2C                     	;# 
  1101  0F2D                     	;# 
  1102  0F2E                     	;# 
  1103  0F2F                     	;# 
  1104  0F30                     	;# 
  1105  0F31                     	;# 
  1106  0F32                     	;# 
  1107  0F38                     	;# 
  1108  0F39                     	;# 
  1109  0F3A                     	;# 
  1110  0F3B                     	;# 
  1111  0F3C                     	;# 
  1112  0F3D                     	;# 
  1113  0F3E                     	;# 
  1114  0F3F                     	;# 
  1115  0F40                     	;# 
  1116  0F41                     	;# 
  1117  0F43                     	;# 
  1118  0F44                     	;# 
  1119  0F45                     	;# 
  1120  0F46                     	;# 
  1121  0F47                     	;# 
  1122  0F48                     	;# 
  1123  0F49                     	;# 
  1124  0F4A                     	;# 
  1125  0F4B                     	;# 
  1126  0F4C                     	;# 
  1127  0F4E                     	;# 
  1128  0F4F                     	;# 
  1129  0F50                     	;# 
  1130  0F51                     	;# 
  1131  0F52                     	;# 
  1132  0F53                     	;# 
  1133  0F54                     	;# 
  1134  0F55                     	;# 
  1135  0F56                     	;# 
  1136  0F57                     	;# 
  1137  0F59                     	;# 
  1138  0F5A                     	;# 
  1139  0F5B                     	;# 
  1140  0F5C                     	;# 
  1141  0F5D                     	;# 
  1142  0F61                     	;# 
  1143  0F62                     	;# 
  1144  0F64                     	;# 
  1145  0F65                     	;# 
  1146  0F66                     	;# 
  1147  0F67                     	;# 
  1148  0F68                     	;# 
  1149  0F69                     	;# 
  1150  0F6A                     	;# 
  1151  0F6B                     	;# 
  1152  0F6C                     	;# 
  1153  0F6D                     	;# 
  1154  0FE4                     	;# 
  1155  0FE5                     	;# 
  1156  0FE6                     	;# 
  1157  0FE7                     	;# 
  1158  0FE8                     	;# 
  1159  0FE9                     	;# 
  1160  0FEA                     	;# 
  1161  0FEB                     	;# 
  1162  0FED                     	;# 
  1163  0FEE                     	;# 
  1164  0FEF                     	;# 
  1165  0000                     	;# 
  1166  0001                     	;# 
  1167  0002                     	;# 
  1168  0003                     	;# 
  1169  0004                     	;# 
  1170  0005                     	;# 
  1171  0006                     	;# 
  1172  0007                     	;# 
  1173  0008                     	;# 
  1174  0009                     	;# 
  1175  000A                     	;# 
  1176  000B                     	;# 
  1177  000C                     	;# 
  1178  000D                     	;# 
  1179  000E                     	;# 
  1180  000F                     	;# 
  1181  0010                     	;# 
  1182  0011                     	;# 
  1183  0012                     	;# 
  1184  0013                     	;# 
  1185  0014                     	;# 
  1186  0015                     	;# 
  1187  0016                     	;# 
  1188  0017                     	;# 
  1189  0018                     	;# 
  1190  0019                     	;# 
  1191  001A                     	;# 
  1192  001C                     	;# 
  1193  001C                     	;# 
  1194  001D                     	;# 
  1195  001D                     	;# 
  1196  001E                     	;# 
  1197  001F                     	;# 
  1198  008C                     	;# 
  1199  008C                     	;# 
  1200  008D                     	;# 
  1201  008E                     	;# 
  1202  008E                     	;# 
  1203  008F                     	;# 
  1204  0090                     	;# 
  1205  0090                     	;# 
  1206  0091                     	;# 
  1207  0093                     	;# 
  1208  0094                     	;# 
  1209  0095                     	;# 
  1210  0096                     	;# 
  1211  0097                     	;# 
  1212  0098                     	;# 
  1213  0099                     	;# 
  1214  009A                     	;# 
  1215  009B                     	;# 
  1216  009C                     	;# 
  1217  009D                     	;# 
  1218  009E                     	;# 
  1219  010C                     	;# 
  1220  010D                     	;# 
  1221  010E                     	;# 
  1222  010E                     	;# 
  1223  010F                     	;# 
  1224  0110                     	;# 
  1225  0110                     	;# 
  1226  0111                     	;# 
  1227  0112                     	;# 
  1228  0112                     	;# 
  1229  0113                     	;# 
  1230  0114                     	;# 
  1231  0114                     	;# 
  1232  0115                     	;# 
  1233  0116                     	;# 
  1234  0116                     	;# 
  1235  0117                     	;# 
  1236  0119                     	;# 
  1237  0119                     	;# 
  1238  0119                     	;# 
  1239  011A                     	;# 
  1240  011A                     	;# 
  1241  011A                     	;# 
  1242  011B                     	;# 
  1243  011B                     	;# 
  1244  011B                     	;# 
  1245  011B                     	;# 
  1246  011B                     	;# 
  1247  011C                     	;# 
  1248  011C                     	;# 
  1249  011C                     	;# 
  1250  011D                     	;# 
  1251  011D                     	;# 
  1252  011D                     	;# 
  1253  011E                     	;# 
  1254  011E                     	;# 
  1255  011E                     	;# 
  1256  011F                     	;# 
  1257  011F                     	;# 
  1258  011F                     	;# 
  1259  011F                     	;# 
  1260  011F                     	;# 
  1261  018C                     	;# 
  1262  018D                     	;# 
  1263  018E                     	;# 
  1264  018F                     	;# 
  1265  0190                     	;# 
  1266  0191                     	;# 
  1267  0192                     	;# 
  1268  0196                     	;# 
  1269  0197                     	;# 
  1270  0198                     	;# 
  1271  0199                     	;# 
  1272  019A                     	;# 
  1273  019B                     	;# 
  1274  019C                     	;# 
  1275  020C                     	;# 
  1276  020C                     	;# 
  1277  020D                     	;# 
  1278  020E                     	;# 
  1279  020F                     	;# 
  1280  020F                     	;# 
  1281  0210                     	;# 
  1282  0210                     	;# 
  1283  0211                     	;# 
  1284  0211                     	;# 
  1285  0212                     	;# 
  1286  0212                     	;# 
  1287  0213                     	;# 
  1288  0214                     	;# 
  1289  0215                     	;# 
  1290  0215                     	;# 
  1291  0216                     	;# 
  1292  0216                     	;# 
  1293  0217                     	;# 
  1294  0217                     	;# 
  1295  0218                     	;# 
  1296  0218                     	;# 
  1297  0219                     	;# 
  1298  021A                     	;# 
  1299  021B                     	;# 
  1300  021B                     	;# 
  1301  021C                     	;# 
  1302  021C                     	;# 
  1303  021D                     	;# 
  1304  021D                     	;# 
  1305  021E                     	;# 
  1306  021F                     	;# 
  1307  028C                     	;# 
  1308  028C                     	;# 
  1309  028D                     	;# 
  1310  028D                     	;# 
  1311  028E                     	;# 
  1312  028F                     	;# 
  1313  0290                     	;# 
  1314  0290                     	;# 
  1315  0291                     	;# 
  1316  0292                     	;# 
  1317  0292                     	;# 
  1318  0293                     	;# 
  1319  0293                     	;# 
  1320  0294                     	;# 
  1321  0295                     	;# 
  1322  0296                     	;# 
  1323  0296                     	;# 
  1324  0297                     	;# 
  1325  0298                     	;# 
  1326  0298                     	;# 
  1327  0299                     	;# 
  1328  0299                     	;# 
  1329  029A                     	;# 
  1330  029B                     	;# 
  1331  029C                     	;# 
  1332  029C                     	;# 
  1333  029D                     	;# 
  1334  030C                     	;# 
  1335  030C                     	;# 
  1336  030D                     	;# 
  1337  030E                     	;# 
  1338  030F                     	;# 
  1339  0310                     	;# 
  1340  0310                     	;# 
  1341  0311                     	;# 
  1342  0312                     	;# 
  1343  0313                     	;# 
  1344  0314                     	;# 
  1345  0314                     	;# 
  1346  0315                     	;# 
  1347  0316                     	;# 
  1348  0317                     	;# 
  1349  0318                     	;# 
  1350  0318                     	;# 
  1351  0319                     	;# 
  1352  031A                     	;# 
  1353  031B                     	;# 
  1354  031C                     	;# 
  1355  031C                     	;# 
  1356  031D                     	;# 
  1357  031E                     	;# 
  1358  031F                     	;# 
  1359  038C                     	;# 
  1360  038C                     	;# 
  1361  038D                     	;# 
  1362  038E                     	;# 
  1363  0390                     	;# 
  1364  0390                     	;# 
  1365  0391                     	;# 
  1366  0392                     	;# 
  1367  040C                     	;# 
  1368  040D                     	;# 
  1369  040E                     	;# 
  1370  040F                     	;# 
  1371  0410                     	;# 
  1372  0411                     	;# 
  1373  0416                     	;# 
  1374  0416                     	;# 
  1375  0417                     	;# 
  1376  0418                     	;# 
  1377  0418                     	;# 
  1378  0419                     	;# 
  1379  041A                     	;# 
  1380  041A                     	;# 
  1381  041B                     	;# 
  1382  041C                     	;# 
  1383  041C                     	;# 
  1384  041D                     	;# 
  1385  041E                     	;# 
  1386  041F                     	;# 
  1387  048C                     	;# 
  1388  048C                     	;# 
  1389  048D                     	;# 
  1390  048E                     	;# 
  1391  048F                     	;# 
  1392  048F                     	;# 
  1393  0490                     	;# 
  1394  0491                     	;# 
  1395  0492                     	;# 
  1396  0492                     	;# 
  1397  0493                     	;# 
  1398  0494                     	;# 
  1399  0495                     	;# 
  1400  0495                     	;# 
  1401  0496                     	;# 
  1402  0497                     	;# 
  1403  0498                     	;# 
  1404  0499                     	;# 
  1405  049A                     	;# 
  1406  049B                     	;# 
  1407  049C                     	;# 
  1408  049D                     	;# 
  1409  050C                     	;# 
  1410  050C                     	;# 
  1411  050D                     	;# 
  1412  050E                     	;# 
  1413  050F                     	;# 
  1414  050F                     	;# 
  1415  0510                     	;# 
  1416  0511                     	;# 
  1417  0512                     	;# 
  1418  0512                     	;# 
  1419  0513                     	;# 
  1420  0514                     	;# 
  1421  0515                     	;# 
  1422  0515                     	;# 
  1423  0516                     	;# 
  1424  0517                     	;# 
  1425  0518                     	;# 
  1426  0519                     	;# 
  1427  051A                     	;# 
  1428  051B                     	;# 
  1429  051C                     	;# 
  1430  051D                     	;# 
  1431  058C                     	;# 
  1432  058C                     	;# 
  1433  058D                     	;# 
  1434  058E                     	;# 
  1435  058F                     	;# 
  1436  058F                     	;# 
  1437  0590                     	;# 
  1438  0591                     	;# 
  1439  0592                     	;# 
  1440  0593                     	;# 
  1441  060C                     	;# 
  1442  060D                     	;# 
  1443  060E                     	;# 
  1444  060F                     	;# 
  1445  0610                     	;# 
  1446  0611                     	;# 
  1447  0612                     	;# 
  1448  0613                     	;# 
  1449  0614                     	;# 
  1450  0616                     	;# 
  1451  0617                     	;# 
  1452  0618                     	;# 
  1453  0619                     	;# 
  1454  061A                     	;# 
  1455  061B                     	;# 
  1456  061C                     	;# 
  1457  061D                     	;# 
  1458  061E                     	;# 
  1459  068C                     	;# 
  1460  068D                     	;# 
  1461  068E                     	;# 
  1462  068F                     	;# 
  1463  0690                     	;# 
  1464  0691                     	;# 
  1465  0692                     	;# 
  1466  0693                     	;# 
  1467  0694                     	;# 
  1468  070C                     	;# 
  1469  070D                     	;# 
  1470  070E                     	;# 
  1471  070F                     	;# 
  1472  0710                     	;# 
  1473  0711                     	;# 
  1474  0712                     	;# 
  1475  0713                     	;# 
  1476  0714                     	;# 
  1477  0716                     	;# 
  1478  0717                     	;# 
  1479  0718                     	;# 
  1480  0719                     	;# 
  1481  071A                     	;# 
  1482  071B                     	;# 
  1483  071C                     	;# 
  1484  071D                     	;# 
  1485  071E                     	;# 
  1486  0796                     	;# 
  1487  0797                     	;# 
  1488  0798                     	;# 
  1489  0799                     	;# 
  1490  079A                     	;# 
  1491  079B                     	;# 
  1492  080C                     	;# 
  1493  080D                     	;# 
  1494  080E                     	;# 
  1495  080F                     	;# 
  1496  0810                     	;# 
  1497  0811                     	;# 
  1498  0812                     	;# 
  1499  0813                     	;# 
  1500  0814                     	;# 
  1501  081A                     	;# 
  1502  081B                     	;# 
  1503  081C                     	;# 
  1504  081D                     	;# 
  1505  081E                     	;# 
  1506  081F                     	;# 
  1507  088C                     	;# 
  1508  088D                     	;# 
  1509  088E                     	;# 
  1510  088F                     	;# 
  1511  0890                     	;# 
  1512  0891                     	;# 
  1513  0892                     	;# 
  1514  0893                     	;# 
  1515  0895                     	;# 
  1516  0896                     	;# 
  1517  0897                     	;# 
  1518  0898                     	;# 
  1519  0899                     	;# 
  1520  089A                     	;# 
  1521  089B                     	;# 
  1522  090C                     	;# 
  1523  090E                     	;# 
  1524  090F                     	;# 
  1525  091F                     	;# 
  1526  091F                     	;# 
  1527  098F                     	;# 
  1528  098F                     	;# 
  1529  0990                     	;# 
  1530  0991                     	;# 
  1531  0992                     	;# 
  1532  0993                     	;# 
  1533  0994                     	;# 
  1534  0995                     	;# 
  1535  0996                     	;# 
  1536  0997                     	;# 
  1537  0E0F                     	;# 
  1538  0E10                     	;# 
  1539  0E11                     	;# 
  1540  0E12                     	;# 
  1541  0E13                     	;# 
  1542  0E14                     	;# 
  1543  0E15                     	;# 
  1544  0E16                     	;# 
  1545  0E17                     	;# 
  1546  0E18                     	;# 
  1547  0E19                     	;# 
  1548  0E1A                     	;# 
  1549  0E1B                     	;# 
  1550  0E1C                     	;# 
  1551  0E1D                     	;# 
  1552  0E1E                     	;# 
  1553  0E1F                     	;# 
  1554  0E20                     	;# 
  1555  0E21                     	;# 
  1556  0E22                     	;# 
  1557  0E23                     	;# 
  1558  0E24                     	;# 
  1559  0E25                     	;# 
  1560  0E26                     	;# 
  1561  0E27                     	;# 
  1562  0E28                     	;# 
  1563  0E29                     	;# 
  1564  0E2A                     	;# 
  1565  0E2B                     	;# 
  1566  0E2C                     	;# 
  1567  0E2D                     	;# 
  1568  0E2E                     	;# 
  1569  0E2F                     	;# 
  1570  0E30                     	;# 
  1571  0E31                     	;# 
  1572  0E32                     	;# 
  1573  0E33                     	;# 
  1574  0E34                     	;# 
  1575  0E35                     	;# 
  1576  0E36                     	;# 
  1577  0E37                     	;# 
  1578  0E8F                     	;# 
  1579  0E90                     	;# 
  1580  0E91                     	;# 
  1581  0E92                     	;# 
  1582  0E93                     	;# 
  1583  0E94                     	;# 
  1584  0E95                     	;# 
  1585  0E96                     	;# 
  1586  0E97                     	;# 
  1587  0E9C                     	;# 
  1588  0E9D                     	;# 
  1589  0E9E                     	;# 
  1590  0EA1                     	;# 
  1591  0EA2                     	;# 
  1592  0EA3                     	;# 
  1593  0EA4                     	;# 
  1594  0EA5                     	;# 
  1595  0EA9                     	;# 
  1596  0EAA                     	;# 
  1597  0EAB                     	;# 
  1598  0EAC                     	;# 
  1599  0EB1                     	;# 
  1600  0EB2                     	;# 
  1601  0EB3                     	;# 
  1602  0EB8                     	;# 
  1603  0EB9                     	;# 
  1604  0EBA                     	;# 
  1605  0EBB                     	;# 
  1606  0EBC                     	;# 
  1607  0EBD                     	;# 
  1608  0EBE                     	;# 
  1609  0EC3                     	;# 
  1610  0EC5                     	;# 
  1611  0EC6                     	;# 
  1612  0EC7                     	;# 
  1613  0EC8                     	;# 
  1614  0EC9                     	;# 
  1615  0ECA                     	;# 
  1616  0ECB                     	;# 
  1617  0ECC                     	;# 
  1618  0F10                     	;# 
  1619  0F11                     	;# 
  1620  0F12                     	;# 
  1621  0F13                     	;# 
  1622  0F14                     	;# 
  1623  0F15                     	;# 
  1624  0F16                     	;# 
  1625  0F17                     	;# 
  1626  0F18                     	;# 
  1627  0F19                     	;# 
  1628  0F1A                     	;# 
  1629  0F1B                     	;# 
  1630  0F1C                     	;# 
  1631  0F1D                     	;# 
  1632  0F1E                     	;# 
  1633  0F1F                     	;# 
  1634  0F20                     	;# 
  1635  0F21                     	;# 
  1636  0F22                     	;# 
  1637  0F23                     	;# 
  1638  0F24                     	;# 
  1639  0F25                     	;# 
  1640  0F26                     	;# 
  1641  0F27                     	;# 
  1642  0F28                     	;# 
  1643  0F29                     	;# 
  1644  0F2A                     	;# 
  1645  0F2B                     	;# 
  1646  0F2C                     	;# 
  1647  0F2D                     	;# 
  1648  0F2E                     	;# 
  1649  0F2F                     	;# 
  1650  0F30                     	;# 
  1651  0F31                     	;# 
  1652  0F32                     	;# 
  1653  0F38                     	;# 
  1654  0F39                     	;# 
  1655  0F3A                     	;# 
  1656  0F3B                     	;# 
  1657  0F3C                     	;# 
  1658  0F3D                     	;# 
  1659  0F3E                     	;# 
  1660  0F3F                     	;# 
  1661  0F40                     	;# 
  1662  0F41                     	;# 
  1663  0F43                     	;# 
  1664  0F44                     	;# 
  1665  0F45                     	;# 
  1666  0F46                     	;# 
  1667  0F47                     	;# 
  1668  0F48                     	;# 
  1669  0F49                     	;# 
  1670  0F4A                     	;# 
  1671  0F4B                     	;# 
  1672  0F4C                     	;# 
  1673  0F4E                     	;# 
  1674  0F4F                     	;# 
  1675  0F50                     	;# 
  1676  0F51                     	;# 
  1677  0F52                     	;# 
  1678  0F53                     	;# 
  1679  0F54                     	;# 
  1680  0F55                     	;# 
  1681  0F56                     	;# 
  1682  0F57                     	;# 
  1683  0F59                     	;# 
  1684  0F5A                     	;# 
  1685  0F5B                     	;# 
  1686  0F5C                     	;# 
  1687  0F5D                     	;# 
  1688  0F61                     	;# 
  1689  0F62                     	;# 
  1690  0F64                     	;# 
  1691  0F65                     	;# 
  1692  0F66                     	;# 
  1693  0F67                     	;# 
  1694  0F68                     	;# 
  1695  0F69                     	;# 
  1696  0F6A                     	;# 
  1697  0F6B                     	;# 
  1698  0F6C                     	;# 
  1699  0F6D                     	;# 
  1700  0FE4                     	;# 
  1701  0FE5                     	;# 
  1702  0FE6                     	;# 
  1703  0FE7                     	;# 
  1704  0FE8                     	;# 
  1705  0FE9                     	;# 
  1706  0FEA                     	;# 
  1707  0FEB                     	;# 
  1708  0FED                     	;# 
  1709  0FEE                     	;# 
  1710  0FEF                     	;# 
  1711  0000                     	;# 
  1712  0001                     	;# 
  1713  0002                     	;# 
  1714  0003                     	;# 
  1715  0004                     	;# 
  1716  0005                     	;# 
  1717  0006                     	;# 
  1718  0007                     	;# 
  1719  0008                     	;# 
  1720  0009                     	;# 
  1721  000A                     	;# 
  1722  000B                     	;# 
  1723  000C                     	;# 
  1724  000D                     	;# 
  1725  000E                     	;# 
  1726  000F                     	;# 
  1727  0010                     	;# 
  1728  0011                     	;# 
  1729  0012                     	;# 
  1730  0013                     	;# 
  1731  0014                     	;# 
  1732  0015                     	;# 
  1733  0016                     	;# 
  1734  0017                     	;# 
  1735  0018                     	;# 
  1736  0019                     	;# 
  1737  001A                     	;# 
  1738  001C                     	;# 
  1739  001C                     	;# 
  1740  001D                     	;# 
  1741  001D                     	;# 
  1742  001E                     	;# 
  1743  001F                     	;# 
  1744  008C                     	;# 
  1745  008C                     	;# 
  1746  008D                     	;# 
  1747  008E                     	;# 
  1748  008E                     	;# 
  1749  008F                     	;# 
  1750  0090                     	;# 
  1751  0090                     	;# 
  1752  0091                     	;# 
  1753  0093                     	;# 
  1754  0094                     	;# 
  1755  0095                     	;# 
  1756  0096                     	;# 
  1757  0097                     	;# 
  1758  0098                     	;# 
  1759  0099                     	;# 
  1760  009A                     	;# 
  1761  009B                     	;# 
  1762  009C                     	;# 
  1763  009D                     	;# 
  1764  009E                     	;# 
  1765  010C                     	;# 
  1766  010D                     	;# 
  1767  010E                     	;# 
  1768  010E                     	;# 
  1769  010F                     	;# 
  1770  0110                     	;# 
  1771  0110                     	;# 
  1772  0111                     	;# 
  1773  0112                     	;# 
  1774  0112                     	;# 
  1775  0113                     	;# 
  1776  0114                     	;# 
  1777  0114                     	;# 
  1778  0115                     	;# 
  1779  0116                     	;# 
  1780  0116                     	;# 
  1781  0117                     	;# 
  1782  0119                     	;# 
  1783  0119                     	;# 
  1784  0119                     	;# 
  1785  011A                     	;# 
  1786  011A                     	;# 
  1787  011A                     	;# 
  1788  011B                     	;# 
  1789  011B                     	;# 
  1790  011B                     	;# 
  1791  011B                     	;# 
  1792  011B                     	;# 
  1793  011C                     	;# 
  1794  011C                     	;# 
  1795  011C                     	;# 
  1796  011D                     	;# 
  1797  011D                     	;# 
  1798  011D                     	;# 
  1799  011E                     	;# 
  1800  011E                     	;# 
  1801  011E                     	;# 
  1802  011F                     	;# 
  1803  011F                     	;# 
  1804  011F                     	;# 
  1805  011F                     	;# 
  1806  011F                     	;# 
  1807  018C                     	;# 
  1808  018D                     	;# 
  1809  018E                     	;# 
  1810  018F                     	;# 
  1811  0190                     	;# 
  1812  0191                     	;# 
  1813  0192                     	;# 
  1814  0196                     	;# 
  1815  0197                     	;# 
  1816  0198                     	;# 
  1817  0199                     	;# 
  1818  019A                     	;# 
  1819  019B                     	;# 
  1820  019C                     	;# 
  1821  020C                     	;# 
  1822  020C                     	;# 
  1823  020D                     	;# 
  1824  020E                     	;# 
  1825  020F                     	;# 
  1826  020F                     	;# 
  1827  0210                     	;# 
  1828  0210                     	;# 
  1829  0211                     	;# 
  1830  0211                     	;# 
  1831  0212                     	;# 
  1832  0212                     	;# 
  1833  0213                     	;# 
  1834  0214                     	;# 
  1835  0215                     	;# 
  1836  0215                     	;# 
  1837  0216                     	;# 
  1838  0216                     	;# 
  1839  0217                     	;# 
  1840  0217                     	;# 
  1841  0218                     	;# 
  1842  0218                     	;# 
  1843  0219                     	;# 
  1844  021A                     	;# 
  1845  021B                     	;# 
  1846  021B                     	;# 
  1847  021C                     	;# 
  1848  021C                     	;# 
  1849  021D                     	;# 
  1850  021D                     	;# 
  1851  021E                     	;# 
  1852  021F                     	;# 
  1853  028C                     	;# 
  1854  028C                     	;# 
  1855  028D                     	;# 
  1856  028D                     	;# 
  1857  028E                     	;# 
  1858  028F                     	;# 
  1859  0290                     	;# 
  1860  0290                     	;# 
  1861  0291                     	;# 
  1862  0292                     	;# 
  1863  0292                     	;# 
  1864  0293                     	;# 
  1865  0293                     	;# 
  1866  0294                     	;# 
  1867  0295                     	;# 
  1868  0296                     	;# 
  1869  0296                     	;# 
  1870  0297                     	;# 
  1871  0298                     	;# 
  1872  0298                     	;# 
  1873  0299                     	;# 
  1874  0299                     	;# 
  1875  029A                     	;# 
  1876  029B                     	;# 
  1877  029C                     	;# 
  1878  029C                     	;# 
  1879  029D                     	;# 
  1880  030C                     	;# 
  1881  030C                     	;# 
  1882  030D                     	;# 
  1883  030E                     	;# 
  1884  030F                     	;# 
  1885  0310                     	;# 
  1886  0310                     	;# 
  1887  0311                     	;# 
  1888  0312                     	;# 
  1889  0313                     	;# 
  1890  0314                     	;# 
  1891  0314                     	;# 
  1892  0315                     	;# 
  1893  0316                     	;# 
  1894  0317                     	;# 
  1895  0318                     	;# 
  1896  0318                     	;# 
  1897  0319                     	;# 
  1898  031A                     	;# 
  1899  031B                     	;# 
  1900  031C                     	;# 
  1901  031C                     	;# 
  1902  031D                     	;# 
  1903  031E                     	;# 
  1904  031F                     	;# 
  1905  038C                     	;# 
  1906  038C                     	;# 
  1907  038D                     	;# 
  1908  038E                     	;# 
  1909  0390                     	;# 
  1910  0390                     	;# 
  1911  0391                     	;# 
  1912  0392                     	;# 
  1913  040C                     	;# 
  1914  040D                     	;# 
  1915  040E                     	;# 
  1916  040F                     	;# 
  1917  0410                     	;# 
  1918  0411                     	;# 
  1919  0416                     	;# 
  1920  0416                     	;# 
  1921  0417                     	;# 
  1922  0418                     	;# 
  1923  0418                     	;# 
  1924  0419                     	;# 
  1925  041A                     	;# 
  1926  041A                     	;# 
  1927  041B                     	;# 
  1928  041C                     	;# 
  1929  041C                     	;# 
  1930  041D                     	;# 
  1931  041E                     	;# 
  1932  041F                     	;# 
  1933  048C                     	;# 
  1934  048C                     	;# 
  1935  048D                     	;# 
  1936  048E                     	;# 
  1937  048F                     	;# 
  1938  048F                     	;# 
  1939  0490                     	;# 
  1940  0491                     	;# 
  1941  0492                     	;# 
  1942  0492                     	;# 
  1943  0493                     	;# 
  1944  0494                     	;# 
  1945  0495                     	;# 
  1946  0495                     	;# 
  1947  0496                     	;# 
  1948  0497                     	;# 
  1949  0498                     	;# 
  1950  0499                     	;# 
  1951  049A                     	;# 
  1952  049B                     	;# 
  1953  049C                     	;# 
  1954  049D                     	;# 
  1955  050C                     	;# 
  1956  050C                     	;# 
  1957  050D                     	;# 
  1958  050E                     	;# 
  1959  050F                     	;# 
  1960  050F                     	;# 
  1961  0510                     	;# 
  1962  0511                     	;# 
  1963  0512                     	;# 
  1964  0512                     	;# 
  1965  0513                     	;# 
  1966  0514                     	;# 
  1967  0515                     	;# 
  1968  0515                     	;# 
  1969  0516                     	;# 
  1970  0517                     	;# 
  1971  0518                     	;# 
  1972  0519                     	;# 
  1973  051A                     	;# 
  1974  051B                     	;# 
  1975  051C                     	;# 
  1976  051D                     	;# 
  1977  058C                     	;# 
  1978  058C                     	;# 
  1979  058D                     	;# 
  1980  058E                     	;# 
  1981  058F                     	;# 
  1982  058F                     	;# 
  1983  0590                     	;# 
  1984  0591                     	;# 
  1985  0592                     	;# 
  1986  0593                     	;# 
  1987  060C                     	;# 
  1988  060D                     	;# 
  1989  060E                     	;# 
  1990  060F                     	;# 
  1991  0610                     	;# 
  1992  0611                     	;# 
  1993  0612                     	;# 
  1994  0613                     	;# 
  1995  0614                     	;# 
  1996  0616                     	;# 
  1997  0617                     	;# 
  1998  0618                     	;# 
  1999  0619                     	;# 
  2000  061A                     	;# 
  2001  061B                     	;# 
  2002  061C                     	;# 
  2003  061D                     	;# 
  2004  061E                     	;# 
  2005  068C                     	;# 
  2006  068D                     	;# 
  2007  068E                     	;# 
  2008  068F                     	;# 
  2009  0690                     	;# 
  2010  0691                     	;# 
  2011  0692                     	;# 
  2012  0693                     	;# 
  2013  0694                     	;# 
  2014  070C                     	;# 
  2015  070D                     	;# 
  2016  070E                     	;# 
  2017  070F                     	;# 
  2018  0710                     	;# 
  2019  0711                     	;# 
  2020  0712                     	;# 
  2021  0713                     	;# 
  2022  0714                     	;# 
  2023  0716                     	;# 
  2024  0717                     	;# 
  2025  0718                     	;# 
  2026  0719                     	;# 
  2027  071A                     	;# 
  2028  071B                     	;# 
  2029  071C                     	;# 
  2030  071D                     	;# 
  2031  071E                     	;# 
  2032  0796                     	;# 
  2033  0797                     	;# 
  2034  0798                     	;# 
  2035  0799                     	;# 
  2036  079A                     	;# 
  2037  079B                     	;# 
  2038  080C                     	;# 
  2039  080D                     	;# 
  2040  080E                     	;# 
  2041  080F                     	;# 
  2042  0810                     	;# 
  2043  0811                     	;# 
  2044  0812                     	;# 
  2045  0813                     	;# 
  2046  0814                     	;# 
  2047  081A                     	;# 
  2048  081B                     	;# 
  2049  081C                     	;# 
  2050  081D                     	;# 
  2051  081E                     	;# 
  2052  081F                     	;# 
  2053  088C                     	;# 
  2054  088D                     	;# 
  2055  088E                     	;# 
  2056  088F                     	;# 
  2057  0890                     	;# 
  2058  0891                     	;# 
  2059  0892                     	;# 
  2060  0893                     	;# 
  2061  0895                     	;# 
  2062  0896                     	;# 
  2063  0897                     	;# 
  2064  0898                     	;# 
  2065  0899                     	;# 
  2066  089A                     	;# 
  2067  089B                     	;# 
  2068  090C                     	;# 
  2069  090E                     	;# 
  2070  090F                     	;# 
  2071  091F                     	;# 
  2072  091F                     	;# 
  2073  098F                     	;# 
  2074  098F                     	;# 
  2075  0990                     	;# 
  2076  0991                     	;# 
  2077  0992                     	;# 
  2078  0993                     	;# 
  2079  0994                     	;# 
  2080  0995                     	;# 
  2081  0996                     	;# 
  2082  0997                     	;# 
  2083  0E0F                     	;# 
  2084  0E10                     	;# 
  2085  0E11                     	;# 
  2086  0E12                     	;# 
  2087  0E13                     	;# 
  2088  0E14                     	;# 
  2089  0E15                     	;# 
  2090  0E16                     	;# 
  2091  0E17                     	;# 
  2092  0E18                     	;# 
  2093  0E19                     	;# 
  2094  0E1A                     	;# 
  2095  0E1B                     	;# 
  2096  0E1C                     	;# 
  2097  0E1D                     	;# 
  2098  0E1E                     	;# 
  2099  0E1F                     	;# 
  2100  0E20                     	;# 
  2101  0E21                     	;# 
  2102  0E22                     	;# 
  2103  0E23                     	;# 
  2104  0E24                     	;# 
  2105  0E25                     	;# 
  2106  0E26                     	;# 
  2107  0E27                     	;# 
  2108  0E28                     	;# 
  2109  0E29                     	;# 
  2110  0E2A                     	;# 
  2111  0E2B                     	;# 
  2112  0E2C                     	;# 
  2113  0E2D                     	;# 
  2114  0E2E                     	;# 
  2115  0E2F                     	;# 
  2116  0E30                     	;# 
  2117  0E31                     	;# 
  2118  0E32                     	;# 
  2119  0E33                     	;# 
  2120  0E34                     	;# 
  2121  0E35                     	;# 
  2122  0E36                     	;# 
  2123  0E37                     	;# 
  2124  0E8F                     	;# 
  2125  0E90                     	;# 
  2126  0E91                     	;# 
  2127  0E92                     	;# 
  2128  0E93                     	;# 
  2129  0E94                     	;# 
  2130  0E95                     	;# 
  2131  0E96                     	;# 
  2132  0E97                     	;# 
  2133  0E9C                     	;# 
  2134  0E9D                     	;# 
  2135  0E9E                     	;# 
  2136  0EA1                     	;# 
  2137  0EA2                     	;# 
  2138  0EA3                     	;# 
  2139  0EA4                     	;# 
  2140  0EA5                     	;# 
  2141  0EA9                     	;# 
  2142  0EAA                     	;# 
  2143  0EAB                     	;# 
  2144  0EAC                     	;# 
  2145  0EB1                     	;# 
  2146  0EB2                     	;# 
  2147  0EB3                     	;# 
  2148  0EB8                     	;# 
  2149  0EB9                     	;# 
  2150  0EBA                     	;# 
  2151  0EBB                     	;# 
  2152  0EBC                     	;# 
  2153  0EBD                     	;# 
  2154  0EBE                     	;# 
  2155  0EC3                     	;# 
  2156  0EC5                     	;# 
  2157  0EC6                     	;# 
  2158  0EC7                     	;# 
  2159  0EC8                     	;# 
  2160  0EC9                     	;# 
  2161  0ECA                     	;# 
  2162  0ECB                     	;# 
  2163  0ECC                     	;# 
  2164  0F10                     	;# 
  2165  0F11                     	;# 
  2166  0F12                     	;# 
  2167  0F13                     	;# 
  2168  0F14                     	;# 
  2169  0F15                     	;# 
  2170  0F16                     	;# 
  2171  0F17                     	;# 
  2172  0F18                     	;# 
  2173  0F19                     	;# 
  2174  0F1A                     	;# 
  2175  0F1B                     	;# 
  2176  0F1C                     	;# 
  2177  0F1D                     	;# 
  2178  0F1E                     	;# 
  2179  0F1F                     	;# 
  2180  0F20                     	;# 
  2181  0F21                     	;# 
  2182  0F22                     	;# 
  2183  0F23                     	;# 
  2184  0F24                     	;# 
  2185  0F25                     	;# 
  2186  0F26                     	;# 
  2187  0F27                     	;# 
  2188  0F28                     	;# 
  2189  0F29                     	;# 
  2190  0F2A                     	;# 
  2191  0F2B                     	;# 
  2192  0F2C                     	;# 
  2193  0F2D                     	;# 
  2194  0F2E                     	;# 
  2195  0F2F                     	;# 
  2196  0F30                     	;# 
  2197  0F31                     	;# 
  2198  0F32                     	;# 
  2199  0F38                     	;# 
  2200  0F39                     	;# 
  2201  0F3A                     	;# 
  2202  0F3B                     	;# 
  2203  0F3C                     	;# 
  2204  0F3D                     	;# 
  2205  0F3E                     	;# 
  2206  0F3F                     	;# 
  2207  0F40                     	;# 
  2208  0F41                     	;# 
  2209  0F43                     	;# 
  2210  0F44                     	;# 
  2211  0F45                     	;# 
  2212  0F46                     	;# 
  2213  0F47                     	;# 
  2214  0F48                     	;# 
  2215  0F49                     	;# 
  2216  0F4A                     	;# 
  2217  0F4B                     	;# 
  2218  0F4C                     	;# 
  2219  0F4E                     	;# 
  2220  0F4F                     	;# 
  2221  0F50                     	;# 
  2222  0F51                     	;# 
  2223  0F52                     	;# 
  2224  0F53                     	;# 
  2225  0F54                     	;# 
  2226  0F55                     	;# 
  2227  0F56                     	;# 
  2228  0F57                     	;# 
  2229  0F59                     	;# 
  2230  0F5A                     	;# 
  2231  0F5B                     	;# 
  2232  0F5C                     	;# 
  2233  0F5D                     	;# 
  2234  0F61                     	;# 
  2235  0F62                     	;# 
  2236  0F64                     	;# 
  2237  0F65                     	;# 
  2238  0F66                     	;# 
  2239  0F67                     	;# 
  2240  0F68                     	;# 
  2241  0F69                     	;# 
  2242  0F6A                     	;# 
  2243  0F6B                     	;# 
  2244  0F6C                     	;# 
  2245  0F6D                     	;# 
  2246  0FE4                     	;# 
  2247  0FE5                     	;# 
  2248  0FE6                     	;# 
  2249  0FE7                     	;# 
  2250  0FE8                     	;# 
  2251  0FE9                     	;# 
  2252  0FEA                     	;# 
  2253  0FEB                     	;# 
  2254  0FED                     	;# 
  2255  0FEE                     	;# 
  2256  0FEF                     	;# 
  2257  0000                     	;# 
  2258  0001                     	;# 
  2259  0002                     	;# 
  2260  0003                     	;# 
  2261  0004                     	;# 
  2262  0005                     	;# 
  2263  0006                     	;# 
  2264  0007                     	;# 
  2265  0008                     	;# 
  2266  0009                     	;# 
  2267  000A                     	;# 
  2268  000B                     	;# 
  2269  000C                     	;# 
  2270  000D                     	;# 
  2271  000E                     	;# 
  2272  000F                     	;# 
  2273  0010                     	;# 
  2274  0011                     	;# 
  2275  0012                     	;# 
  2276  0013                     	;# 
  2277  0014                     	;# 
  2278  0015                     	;# 
  2279  0016                     	;# 
  2280  0017                     	;# 
  2281  0018                     	;# 
  2282  0019                     	;# 
  2283  001A                     	;# 
  2284  001C                     	;# 
  2285  001C                     	;# 
  2286  001D                     	;# 
  2287  001D                     	;# 
  2288  001E                     	;# 
  2289  001F                     	;# 
  2290  008C                     	;# 
  2291  008C                     	;# 
  2292  008D                     	;# 
  2293  008E                     	;# 
  2294  008E                     	;# 
  2295  008F                     	;# 
  2296  0090                     	;# 
  2297  0090                     	;# 
  2298  0091                     	;# 
  2299  0093                     	;# 
  2300  0094                     	;# 
  2301  0095                     	;# 
  2302  0096                     	;# 
  2303  0097                     	;# 
  2304  0098                     	;# 
  2305  0099                     	;# 
  2306  009A                     	;# 
  2307  009B                     	;# 
  2308  009C                     	;# 
  2309  009D                     	;# 
  2310  009E                     	;# 
  2311  010C                     	;# 
  2312  010D                     	;# 
  2313  010E                     	;# 
  2314  010E                     	;# 
  2315  010F                     	;# 
  2316  0110                     	;# 
  2317  0110                     	;# 
  2318  0111                     	;# 
  2319  0112                     	;# 
  2320  0112                     	;# 
  2321  0113                     	;# 
  2322  0114                     	;# 
  2323  0114                     	;# 
  2324  0115                     	;# 
  2325  0116                     	;# 
  2326  0116                     	;# 
  2327  0117                     	;# 
  2328  0119                     	;# 
  2329  0119                     	;# 
  2330  0119                     	;# 
  2331  011A                     	;# 
  2332  011A                     	;# 
  2333  011A                     	;# 
  2334  011B                     	;# 
  2335  011B                     	;# 
  2336  011B                     	;# 
  2337  011B                     	;# 
  2338  011B                     	;# 
  2339  011C                     	;# 
  2340  011C                     	;# 
  2341  011C                     	;# 
  2342  011D                     	;# 
  2343  011D                     	;# 
  2344  011D                     	;# 
  2345  011E                     	;# 
  2346  011E                     	;# 
  2347  011E                     	;# 
  2348  011F                     	;# 
  2349  011F                     	;# 
  2350  011F                     	;# 
  2351  011F                     	;# 
  2352  011F                     	;# 
  2353  018C                     	;# 
  2354  018D                     	;# 
  2355  018E                     	;# 
  2356  018F                     	;# 
  2357  0190                     	;# 
  2358  0191                     	;# 
  2359  0192                     	;# 
  2360  0196                     	;# 
  2361  0197                     	;# 
  2362  0198                     	;# 
  2363  0199                     	;# 
  2364  019A                     	;# 
  2365  019B                     	;# 
  2366  019C                     	;# 
  2367  020C                     	;# 
  2368  020C                     	;# 
  2369  020D                     	;# 
  2370  020E                     	;# 
  2371  020F                     	;# 
  2372  020F                     	;# 
  2373  0210                     	;# 
  2374  0210                     	;# 
  2375  0211                     	;# 
  2376  0211                     	;# 
  2377  0212                     	;# 
  2378  0212                     	;# 
  2379  0213                     	;# 
  2380  0214                     	;# 
  2381  0215                     	;# 
  2382  0215                     	;# 
  2383  0216                     	;# 
  2384  0216                     	;# 
  2385  0217                     	;# 
  2386  0217                     	;# 
  2387  0218                     	;# 
  2388  0218                     	;# 
  2389  0219                     	;# 
  2390  021A                     	;# 
  2391  021B                     	;# 
  2392  021B                     	;# 
  2393  021C                     	;# 
  2394  021C                     	;# 
  2395  021D                     	;# 
  2396  021D                     	;# 
  2397  021E                     	;# 
  2398  021F                     	;# 
  2399  028C                     	;# 
  2400  028C                     	;# 
  2401  028D                     	;# 
  2402  028D                     	;# 
  2403  028E                     	;# 
  2404  028F                     	;# 
  2405  0290                     	;# 
  2406  0290                     	;# 
  2407  0291                     	;# 
  2408  0292                     	;# 
  2409  0292                     	;# 
  2410  0293                     	;# 
  2411  0293                     	;# 
  2412  0294                     	;# 
  2413  0295                     	;# 
  2414  0296                     	;# 
  2415  0296                     	;# 
  2416  0297                     	;# 
  2417  0298                     	;# 
  2418  0298                     	;# 
  2419  0299                     	;# 
  2420  0299                     	;# 
  2421  029A                     	;# 
  2422  029B                     	;# 
  2423  029C                     	;# 
  2424  029C                     	;# 
  2425  029D                     	;# 
  2426  030C                     	;# 
  2427  030C                     	;# 
  2428  030D                     	;# 
  2429  030E                     	;# 
  2430  030F                     	;# 
  2431  0310                     	;# 
  2432  0310                     	;# 
  2433  0311                     	;# 
  2434  0312                     	;# 
  2435  0313                     	;# 
  2436  0314                     	;# 
  2437  0314                     	;# 
  2438  0315                     	;# 
  2439  0316                     	;# 
  2440  0317                     	;# 
  2441  0318                     	;# 
  2442  0318                     	;# 
  2443  0319                     	;# 
  2444  031A                     	;# 
  2445  031B                     	;# 
  2446  031C                     	;# 
  2447  031C                     	;# 
  2448  031D                     	;# 
  2449  031E                     	;# 
  2450  031F                     	;# 
  2451  038C                     	;# 
  2452  038C                     	;# 
  2453  038D                     	;# 
  2454  038E                     	;# 
  2455  0390                     	;# 
  2456  0390                     	;# 
  2457  0391                     	;# 
  2458  0392                     	;# 
  2459  040C                     	;# 
  2460  040D                     	;# 
  2461  040E                     	;# 
  2462  040F                     	;# 
  2463  0410                     	;# 
  2464  0411                     	;# 
  2465  0416                     	;# 
  2466  0416                     	;# 
  2467  0417                     	;# 
  2468  0418                     	;# 
  2469  0418                     	;# 
  2470  0419                     	;# 
  2471  041A                     	;# 
  2472  041A                     	;# 
  2473  041B                     	;# 
  2474  041C                     	;# 
  2475  041C                     	;# 
  2476  041D                     	;# 
  2477  041E                     	;# 
  2478  041F                     	;# 
  2479  048C                     	;# 
  2480  048C                     	;# 
  2481  048D                     	;# 
  2482  048E                     	;# 
  2483  048F                     	;# 
  2484  048F                     	;# 
  2485  0490                     	;# 
  2486  0491                     	;# 
  2487  0492                     	;# 
  2488  0492                     	;# 
  2489  0493                     	;# 
  2490  0494                     	;# 
  2491  0495                     	;# 
  2492  0495                     	;# 
  2493  0496                     	;# 
  2494  0497                     	;# 
  2495  0498                     	;# 
  2496  0499                     	;# 
  2497  049A                     	;# 
  2498  049B                     	;# 
  2499  049C                     	;# 
  2500  049D                     	;# 
  2501  050C                     	;# 
  2502  050C                     	;# 
  2503  050D                     	;# 
  2504  050E                     	;# 
  2505  050F                     	;# 
  2506  050F                     	;# 
  2507  0510                     	;# 
  2508  0511                     	;# 
  2509  0512                     	;# 
  2510  0512                     	;# 
  2511  0513                     	;# 
  2512  0514                     	;# 
  2513  0515                     	;# 
  2514  0515                     	;# 
  2515  0516                     	;# 
  2516  0517                     	;# 
  2517  0518                     	;# 
  2518  0519                     	;# 
  2519  051A                     	;# 
  2520  051B                     	;# 
  2521  051C                     	;# 
  2522  051D                     	;# 
  2523  058C                     	;# 
  2524  058C                     	;# 
  2525  058D                     	;# 
  2526  058E                     	;# 
  2527  058F                     	;# 
  2528  058F                     	;# 
  2529  0590                     	;# 
  2530  0591                     	;# 
  2531  0592                     	;# 
  2532  0593                     	;# 
  2533  060C                     	;# 
  2534  060D                     	;# 
  2535  060E                     	;# 
  2536  060F                     	;# 
  2537  0610                     	;# 
  2538  0611                     	;# 
  2539  0612                     	;# 
  2540  0613                     	;# 
  2541  0614                     	;# 
  2542  0616                     	;# 
  2543  0617                     	;# 
  2544  0618                     	;# 
  2545  0619                     	;# 
  2546  061A                     	;# 
  2547  061B                     	;# 
  2548  061C                     	;# 
  2549  061D                     	;# 
  2550  061E                     	;# 
  2551  068C                     	;# 
  2552  068D                     	;# 
  2553  068E                     	;# 
  2554  068F                     	;# 
  2555  0690                     	;# 
  2556  0691                     	;# 
  2557  0692                     	;# 
  2558  0693                     	;# 
  2559  0694                     	;# 
  2560  070C                     	;# 
  2561  070D                     	;# 
  2562  070E                     	;# 
  2563  070F                     	;# 
  2564  0710                     	;# 
  2565  0711                     	;# 
  2566  0712                     	;# 
  2567  0713                     	;# 
  2568  0714                     	;# 
  2569  0716                     	;# 
  2570  0717                     	;# 
  2571  0718                     	;# 
  2572  0719                     	;# 
  2573  071A                     	;# 
  2574  071B                     	;# 
  2575  071C                     	;# 
  2576  071D                     	;# 
  2577  071E                     	;# 
  2578  0796                     	;# 
  2579  0797                     	;# 
  2580  0798                     	;# 
  2581  0799                     	;# 
  2582  079A                     	;# 
  2583  079B                     	;# 
  2584  080C                     	;# 
  2585  080D                     	;# 
  2586  080E                     	;# 
  2587  080F                     	;# 
  2588  0810                     	;# 
  2589  0811                     	;# 
  2590  0812                     	;# 
  2591  0813                     	;# 
  2592  0814                     	;# 
  2593  081A                     	;# 
  2594  081B                     	;# 
  2595  081C                     	;# 
  2596  081D                     	;# 
  2597  081E                     	;# 
  2598  081F                     	;# 
  2599  088C                     	;# 
  2600  088D                     	;# 
  2601  088E                     	;# 
  2602  088F                     	;# 
  2603  0890                     	;# 
  2604  0891                     	;# 
  2605  0892                     	;# 
  2606  0893                     	;# 
  2607  0895                     	;# 
  2608  0896                     	;# 
  2609  0897                     	;# 
  2610  0898                     	;# 
  2611  0899                     	;# 
  2612  089A                     	;# 
  2613  089B                     	;# 
  2614  090C                     	;# 
  2615  090E                     	;# 
  2616  090F                     	;# 
  2617  091F                     	;# 
  2618  091F                     	;# 
  2619  098F                     	;# 
  2620  098F                     	;# 
  2621  0990                     	;# 
  2622  0991                     	;# 
  2623  0992                     	;# 
  2624  0993                     	;# 
  2625  0994                     	;# 
  2626  0995                     	;# 
  2627  0996                     	;# 
  2628  0997                     	;# 
  2629  0E0F                     	;# 
  2630  0E10                     	;# 
  2631  0E11                     	;# 
  2632  0E12                     	;# 
  2633  0E13                     	;# 
  2634  0E14                     	;# 
  2635  0E15                     	;# 
  2636  0E16                     	;# 
  2637  0E17                     	;# 
  2638  0E18                     	;# 
  2639  0E19                     	;# 
  2640  0E1A                     	;# 
  2641  0E1B                     	;# 
  2642  0E1C                     	;# 
  2643  0E1D                     	;# 
  2644  0E1E                     	;# 
  2645  0E1F                     	;# 
  2646  0E20                     	;# 
  2647  0E21                     	;# 
  2648  0E22                     	;# 
  2649  0E23                     	;# 
  2650  0E24                     	;# 
  2651  0E25                     	;# 
  2652  0E26                     	;# 
  2653  0E27                     	;# 
  2654  0E28                     	;# 
  2655  0E29                     	;# 
  2656  0E2A                     	;# 
  2657  0E2B                     	;# 
  2658  0E2C                     	;# 
  2659  0E2D                     	;# 
  2660  0E2E                     	;# 
  2661  0E2F                     	;# 
  2662  0E30                     	;# 
  2663  0E31                     	;# 
  2664  0E32                     	;# 
  2665  0E33                     	;# 
  2666  0E34                     	;# 
  2667  0E35                     	;# 
  2668  0E36                     	;# 
  2669  0E37                     	;# 
  2670  0E8F                     	;# 
  2671  0E90                     	;# 
  2672  0E91                     	;# 
  2673  0E92                     	;# 
  2674  0E93                     	;# 
  2675  0E94                     	;# 
  2676  0E95                     	;# 
  2677  0E96                     	;# 
  2678  0E97                     	;# 
  2679  0E9C                     	;# 
  2680  0E9D                     	;# 
  2681  0E9E                     	;# 
  2682  0EA1                     	;# 
  2683  0EA2                     	;# 
  2684  0EA3                     	;# 
  2685  0EA4                     	;# 
  2686  0EA5                     	;# 
  2687  0EA9                     	;# 
  2688  0EAA                     	;# 
  2689  0EAB                     	;# 
  2690  0EAC                     	;# 
  2691  0EB1                     	;# 
  2692  0EB2                     	;# 
  2693  0EB3                     	;# 
  2694  0EB8                     	;# 
  2695  0EB9                     	;# 
  2696  0EBA                     	;# 
  2697  0EBB                     	;# 
  2698  0EBC                     	;# 
  2699  0EBD                     	;# 
  2700  0EBE                     	;# 
  2701  0EC3                     	;# 
  2702  0EC5                     	;# 
  2703  0EC6                     	;# 
  2704  0EC7                     	;# 
  2705  0EC8                     	;# 
  2706  0EC9                     	;# 
  2707  0ECA                     	;# 
  2708  0ECB                     	;# 
  2709  0ECC                     	;# 
  2710  0F10                     	;# 
  2711  0F11                     	;# 
  2712  0F12                     	;# 
  2713  0F13                     	;# 
  2714  0F14                     	;# 
  2715  0F15                     	;# 
  2716  0F16                     	;# 
  2717  0F17                     	;# 
  2718  0F18                     	;# 
  2719  0F19                     	;# 
  2720  0F1A                     	;# 
  2721  0F1B                     	;# 
  2722  0F1C                     	;# 
  2723  0F1D                     	;# 
  2724  0F1E                     	;# 
  2725  0F1F                     	;# 
  2726  0F20                     	;# 
  2727  0F21                     	;# 
  2728  0F22                     	;# 
  2729  0F23                     	;# 
  2730  0F24                     	;# 
  2731  0F25                     	;# 
  2732  0F26                     	;# 
  2733  0F27                     	;# 
  2734  0F28                     	;# 
  2735  0F29                     	;# 
  2736  0F2A                     	;# 
  2737  0F2B                     	;# 
  2738  0F2C                     	;# 
  2739  0F2D                     	;# 
  2740  0F2E                     	;# 
  2741  0F2F                     	;# 
  2742  0F30                     	;# 
  2743  0F31                     	;# 
  2744  0F32                     	;# 
  2745  0F38                     	;# 
  2746  0F39                     	;# 
  2747  0F3A                     	;# 
  2748  0F3B                     	;# 
  2749  0F3C                     	;# 
  2750  0F3D                     	;# 
  2751  0F3E                     	;# 
  2752  0F3F                     	;# 
  2753  0F40                     	;# 
  2754  0F41                     	;# 
  2755  0F43                     	;# 
  2756  0F44                     	;# 
  2757  0F45                     	;# 
  2758  0F46                     	;# 
  2759  0F47                     	;# 
  2760  0F48                     	;# 
  2761  0F49                     	;# 
  2762  0F4A                     	;# 
  2763  0F4B                     	;# 
  2764  0F4C                     	;# 
  2765  0F4E                     	;# 
  2766  0F4F                     	;# 
  2767  0F50                     	;# 
  2768  0F51                     	;# 
  2769  0F52                     	;# 
  2770  0F53                     	;# 
  2771  0F54                     	;# 
  2772  0F55                     	;# 
  2773  0F56                     	;# 
  2774  0F57                     	;# 
  2775  0F59                     	;# 
  2776  0F5A                     	;# 
  2777  0F5B                     	;# 
  2778  0F5C                     	;# 
  2779  0F5D                     	;# 
  2780  0F61                     	;# 
  2781  0F62                     	;# 
  2782  0F64                     	;# 
  2783  0F65                     	;# 
  2784  0F66                     	;# 
  2785  0F67                     	;# 
  2786  0F68                     	;# 
  2787  0F69                     	;# 
  2788  0F6A                     	;# 
  2789  0F6B                     	;# 
  2790  0F6C                     	;# 
  2791  0F6D                     	;# 
  2792  0FE4                     	;# 
  2793  0FE5                     	;# 
  2794  0FE6                     	;# 
  2795  0FE7                     	;# 
  2796  0FE8                     	;# 
  2797  0FE9                     	;# 
  2798  0FEA                     	;# 
  2799  0FEB                     	;# 
  2800  0FED                     	;# 
  2801  0FEE                     	;# 
  2802  0FEF                     	;# 
  2803  0000                     	;# 
  2804  0001                     	;# 
  2805  0002                     	;# 
  2806  0003                     	;# 
  2807  0004                     	;# 
  2808  0005                     	;# 
  2809  0006                     	;# 
  2810  0007                     	;# 
  2811  0008                     	;# 
  2812  0009                     	;# 
  2813  000A                     	;# 
  2814  000B                     	;# 
  2815  000C                     	;# 
  2816  000D                     	;# 
  2817  000E                     	;# 
  2818  000F                     	;# 
  2819  0010                     	;# 
  2820  0011                     	;# 
  2821  0012                     	;# 
  2822  0013                     	;# 
  2823  0014                     	;# 
  2824  0015                     	;# 
  2825  0016                     	;# 
  2826  0017                     	;# 
  2827  0018                     	;# 
  2828  0019                     	;# 
  2829  001A                     	;# 
  2830  001C                     	;# 
  2831  001C                     	;# 
  2832  001D                     	;# 
  2833  001D                     	;# 
  2834  001E                     	;# 
  2835  001F                     	;# 
  2836  008C                     	;# 
  2837  008C                     	;# 
  2838  008D                     	;# 
  2839  008E                     	;# 
  2840  008E                     	;# 
  2841  008F                     	;# 
  2842  0090                     	;# 
  2843  0090                     	;# 
  2844  0091                     	;# 
  2845  0093                     	;# 
  2846  0094                     	;# 
  2847  0095                     	;# 
  2848  0096                     	;# 
  2849  0097                     	;# 
  2850  0098                     	;# 
  2851  0099                     	;# 
  2852  009A                     	;# 
  2853  009B                     	;# 
  2854  009C                     	;# 
  2855  009D                     	;# 
  2856  009E                     	;# 
  2857  010C                     	;# 
  2858  010D                     	;# 
  2859  010E                     	;# 
  2860  010E                     	;# 
  2861  010F                     	;# 
  2862  0110                     	;# 
  2863  0110                     	;# 
  2864  0111                     	;# 
  2865  0112                     	;# 
  2866  0112                     	;# 
  2867  0113                     	;# 
  2868  0114                     	;# 
  2869  0114                     	;# 
  2870  0115                     	;# 
  2871  0116                     	;# 
  2872  0116                     	;# 
  2873  0117                     	;# 
  2874  0119                     	;# 
  2875  0119                     	;# 
  2876  0119                     	;# 
  2877  011A                     	;# 
  2878  011A                     	;# 
  2879  011A                     	;# 
  2880  011B                     	;# 
  2881  011B                     	;# 
  2882  011B                     	;# 
  2883  011B                     	;# 
  2884  011B                     	;# 
  2885  011C                     	;# 
  2886  011C                     	;# 
  2887  011C                     	;# 
  2888  011D                     	;# 
  2889  011D                     	;# 
  2890  011D                     	;# 
  2891  011E                     	;# 
  2892  011E                     	;# 
  2893  011E                     	;# 
  2894  011F                     	;# 
  2895  011F                     	;# 
  2896  011F                     	;# 
  2897  011F                     	;# 
  2898  011F                     	;# 
  2899  018C                     	;# 
  2900  018D                     	;# 
  2901  018E                     	;# 
  2902  018F                     	;# 
  2903  0190                     	;# 
  2904  0191                     	;# 
  2905  0192                     	;# 
  2906  0196                     	;# 
  2907  0197                     	;# 
  2908  0198                     	;# 
  2909  0199                     	;# 
  2910  019A                     	;# 
  2911  019B                     	;# 
  2912  019C                     	;# 
  2913  020C                     	;# 
  2914  020C                     	;# 
  2915  020D                     	;# 
  2916  020E                     	;# 
  2917  020F                     	;# 
  2918  020F                     	;# 
  2919  0210                     	;# 
  2920  0210                     	;# 
  2921  0211                     	;# 
  2922  0211                     	;# 
  2923  0212                     	;# 
  2924  0212                     	;# 
  2925  0213                     	;# 
  2926  0214                     	;# 
  2927  0215                     	;# 
  2928  0215                     	;# 
  2929  0216                     	;# 
  2930  0216                     	;# 
  2931  0217                     	;# 
  2932  0217                     	;# 
  2933  0218                     	;# 
  2934  0218                     	;# 
  2935  0219                     	;# 
  2936  021A                     	;# 
  2937  021B                     	;# 
  2938  021B                     	;# 
  2939  021C                     	;# 
  2940  021C                     	;# 
  2941  021D                     	;# 
  2942  021D                     	;# 
  2943  021E                     	;# 
  2944  021F                     	;# 
  2945  028C                     	;# 
  2946  028C                     	;# 
  2947  028D                     	;# 
  2948  028D                     	;# 
  2949  028E                     	;# 
  2950  028F                     	;# 
  2951  0290                     	;# 
  2952  0290                     	;# 
  2953  0291                     	;# 
  2954  0292                     	;# 
  2955  0292                     	;# 
  2956  0293                     	;# 
  2957  0293                     	;# 
  2958  0294                     	;# 
  2959  0295                     	;# 
  2960  0296                     	;# 
  2961  0296                     	;# 
  2962  0297                     	;# 
  2963  0298                     	;# 
  2964  0298                     	;# 
  2965  0299                     	;# 
  2966  0299                     	;# 
  2967  029A                     	;# 
  2968  029B                     	;# 
  2969  029C                     	;# 
  2970  029C                     	;# 
  2971  029D                     	;# 
  2972  030C                     	;# 
  2973  030C                     	;# 
  2974  030D                     	;# 
  2975  030E                     	;# 
  2976  030F                     	;# 
  2977  0310                     	;# 
  2978  0310                     	;# 
  2979  0311                     	;# 
  2980  0312                     	;# 
  2981  0313                     	;# 
  2982  0314                     	;# 
  2983  0314                     	;# 
  2984  0315                     	;# 
  2985  0316                     	;# 
  2986  0317                     	;# 
  2987  0318                     	;# 
  2988  0318                     	;# 
  2989  0319                     	;# 
  2990  031A                     	;# 
  2991  031B                     	;# 
  2992  031C                     	;# 
  2993  031C                     	;# 
  2994  031D                     	;# 
  2995  031E                     	;# 
  2996  031F                     	;# 
  2997  038C                     	;# 
  2998  038C                     	;# 
  2999  038D                     	;# 
  3000  038E                     	;# 
  3001  0390                     	;# 
  3002  0390                     	;# 
  3003  0391                     	;# 
  3004  0392                     	;# 
  3005  040C                     	;# 
  3006  040D                     	;# 
  3007  040E                     	;# 
  3008  040F                     	;# 
  3009  0410                     	;# 
  3010  0411                     	;# 
  3011  0416                     	;# 
  3012  0416                     	;# 
  3013  0417                     	;# 
  3014  0418                     	;# 
  3015  0418                     	;# 
  3016  0419                     	;# 
  3017  041A                     	;# 
  3018  041A                     	;# 
  3019  041B                     	;# 
  3020  041C                     	;# 
  3021  041C                     	;# 
  3022  041D                     	;# 
  3023  041E                     	;# 
  3024  041F                     	;# 
  3025  048C                     	;# 
  3026  048C                     	;# 
  3027  048D                     	;# 
  3028  048E                     	;# 
  3029  048F                     	;# 
  3030  048F                     	;# 
  3031  0490                     	;# 
  3032  0491                     	;# 
  3033  0492                     	;# 
  3034  0492                     	;# 
  3035  0493                     	;# 
  3036  0494                     	;# 
  3037  0495                     	;# 
  3038  0495                     	;# 
  3039  0496                     	;# 
  3040  0497                     	;# 
  3041  0498                     	;# 
  3042  0499                     	;# 
  3043  049A                     	;# 
  3044  049B                     	;# 
  3045  049C                     	;# 
  3046  049D                     	;# 
  3047  050C                     	;# 
  3048  050C                     	;# 
  3049  050D                     	;# 
  3050  050E                     	;# 
  3051  050F                     	;# 
  3052  050F                     	;# 
  3053  0510                     	;# 
  3054  0511                     	;# 
  3055  0512                     	;# 
  3056  0512                     	;# 
  3057  0513                     	;# 
  3058  0514                     	;# 
  3059  0515                     	;# 
  3060  0515                     	;# 
  3061  0516                     	;# 
  3062  0517                     	;# 
  3063  0518                     	;# 
  3064  0519                     	;# 
  3065  051A                     	;# 
  3066  051B                     	;# 
  3067  051C                     	;# 
  3068  051D                     	;# 
  3069  058C                     	;# 
  3070  058C                     	;# 
  3071  058D                     	;# 
  3072  058E                     	;# 
  3073  058F                     	;# 
  3074  058F                     	;# 
  3075  0590                     	;# 
  3076  0591                     	;# 
  3077  0592                     	;# 
  3078  0593                     	;# 
  3079  060C                     	;# 
  3080  060D                     	;# 
  3081  060E                     	;# 
  3082  060F                     	;# 
  3083  0610                     	;# 
  3084  0611                     	;# 
  3085  0612                     	;# 
  3086  0613                     	;# 
  3087  0614                     	;# 
  3088  0616                     	;# 
  3089  0617                     	;# 
  3090  0618                     	;# 
  3091  0619                     	;# 
  3092  061A                     	;# 
  3093  061B                     	;# 
  3094  061C                     	;# 
  3095  061D                     	;# 
  3096  061E                     	;# 
  3097  068C                     	;# 
  3098  068D                     	;# 
  3099  068E                     	;# 
  3100  068F                     	;# 
  3101  0690                     	;# 
  3102  0691                     	;# 
  3103  0692                     	;# 
  3104  0693                     	;# 
  3105  0694                     	;# 
  3106  070C                     	;# 
  3107  070D                     	;# 
  3108  070E                     	;# 
  3109  070F                     	;# 
  3110  0710                     	;# 
  3111  0711                     	;# 
  3112  0712                     	;# 
  3113  0713                     	;# 
  3114  0714                     	;# 
  3115  0716                     	;# 
  3116  0717                     	;# 
  3117  0718                     	;# 
  3118  0719                     	;# 
  3119  071A                     	;# 
  3120  071B                     	;# 
  3121  071C                     	;# 
  3122  071D                     	;# 
  3123  071E                     	;# 
  3124  0796                     	;# 
  3125  0797                     	;# 
  3126  0798                     	;# 
  3127  0799                     	;# 
  3128  079A                     	;# 
  3129  079B                     	;# 
  3130  080C                     	;# 
  3131  080D                     	;# 
  3132  080E                     	;# 
  3133  080F                     	;# 
  3134  0810                     	;# 
  3135  0811                     	;# 
  3136  0812                     	;# 
  3137  0813                     	;# 
  3138  0814                     	;# 
  3139  081A                     	;# 
  3140  081B                     	;# 
  3141  081C                     	;# 
  3142  081D                     	;# 
  3143  081E                     	;# 
  3144  081F                     	;# 
  3145  088C                     	;# 
  3146  088D                     	;# 
  3147  088E                     	;# 
  3148  088F                     	;# 
  3149  0890                     	;# 
  3150  0891                     	;# 
  3151  0892                     	;# 
  3152  0893                     	;# 
  3153  0895                     	;# 
  3154  0896                     	;# 
  3155  0897                     	;# 
  3156  0898                     	;# 
  3157  0899                     	;# 
  3158  089A                     	;# 
  3159  089B                     	;# 
  3160  090C                     	;# 
  3161  090E                     	;# 
  3162  090F                     	;# 
  3163  091F                     	;# 
  3164  091F                     	;# 
  3165  098F                     	;# 
  3166  098F                     	;# 
  3167  0990                     	;# 
  3168  0991                     	;# 
  3169  0992                     	;# 
  3170  0993                     	;# 
  3171  0994                     	;# 
  3172  0995                     	;# 
  3173  0996                     	;# 
  3174  0997                     	;# 
  3175  0E0F                     	;# 
  3176  0E10                     	;# 
  3177  0E11                     	;# 
  3178  0E12                     	;# 
  3179  0E13                     	;# 
  3180  0E14                     	;# 
  3181  0E15                     	;# 
  3182  0E16                     	;# 
  3183  0E17                     	;# 
  3184  0E18                     	;# 
  3185  0E19                     	;# 
  3186  0E1A                     	;# 
  3187  0E1B                     	;# 
  3188  0E1C                     	;# 
  3189  0E1D                     	;# 
  3190  0E1E                     	;# 
  3191  0E1F                     	;# 
  3192  0E20                     	;# 
  3193  0E21                     	;# 
  3194  0E22                     	;# 
  3195  0E23                     	;# 
  3196  0E24                     	;# 
  3197  0E25                     	;# 
  3198  0E26                     	;# 
  3199  0E27                     	;# 
  3200  0E28                     	;# 
  3201  0E29                     	;# 
  3202  0E2A                     	;# 
  3203  0E2B                     	;# 
  3204  0E2C                     	;# 
  3205  0E2D                     	;# 
  3206  0E2E                     	;# 
  3207  0E2F                     	;# 
  3208  0E30                     	;# 
  3209  0E31                     	;# 
  3210  0E32                     	;# 
  3211  0E33                     	;# 
  3212  0E34                     	;# 
  3213  0E35                     	;# 
  3214  0E36                     	;# 
  3215  0E37                     	;# 
  3216  0E8F                     	;# 
  3217  0E90                     	;# 
  3218  0E91                     	;# 
  3219  0E92                     	;# 
  3220  0E93                     	;# 
  3221  0E94                     	;# 
  3222  0E95                     	;# 
  3223  0E96                     	;# 
  3224  0E97                     	;# 
  3225  0E9C                     	;# 
  3226  0E9D                     	;# 
  3227  0E9E                     	;# 
  3228  0EA1                     	;# 
  3229  0EA2                     	;# 
  3230  0EA3                     	;# 
  3231  0EA4                     	;# 
  3232  0EA5                     	;# 
  3233  0EA9                     	;# 
  3234  0EAA                     	;# 
  3235  0EAB                     	;# 
  3236  0EAC                     	;# 
  3237  0EB1                     	;# 
  3238  0EB2                     	;# 
  3239  0EB3                     	;# 
  3240  0EB8                     	;# 
  3241  0EB9                     	;# 
  3242  0EBA                     	;# 
  3243  0EBB                     	;# 
  3244  0EBC                     	;# 
  3245  0EBD                     	;# 
  3246  0EBE                     	;# 
  3247  0EC3                     	;# 
  3248  0EC5                     	;# 
  3249  0EC6                     	;# 
  3250  0EC7                     	;# 
  3251  0EC8                     	;# 
  3252  0EC9                     	;# 
  3253  0ECA                     	;# 
  3254  0ECB                     	;# 
  3255  0ECC                     	;# 
  3256  0F10                     	;# 
  3257  0F11                     	;# 
  3258  0F12                     	;# 
  3259  0F13                     	;# 
  3260  0F14                     	;# 
  3261  0F15                     	;# 
  3262  0F16                     	;# 
  3263  0F17                     	;# 
  3264  0F18                     	;# 
  3265  0F19                     	;# 
  3266  0F1A                     	;# 
  3267  0F1B                     	;# 
  3268  0F1C                     	;# 
  3269  0F1D                     	;# 
  3270  0F1E                     	;# 
  3271  0F1F                     	;# 
  3272  0F20                     	;# 
  3273  0F21                     	;# 
  3274  0F22                     	;# 
  3275  0F23                     	;# 
  3276  0F24                     	;# 
  3277  0F25                     	;# 
  3278  0F26                     	;# 
  3279  0F27                     	;# 
  3280  0F28                     	;# 
  3281  0F29                     	;# 
  3282  0F2A                     	;# 
  3283  0F2B                     	;# 
  3284  0F2C                     	;# 
  3285  0F2D                     	;# 
  3286  0F2E                     	;# 
  3287  0F2F                     	;# 
  3288  0F30                     	;# 
  3289  0F31                     	;# 
  3290  0F32                     	;# 
  3291  0F38                     	;# 
  3292  0F39                     	;# 
  3293  0F3A                     	;# 
  3294  0F3B                     	;# 
  3295  0F3C                     	;# 
  3296  0F3D                     	;# 
  3297  0F3E                     	;# 
  3298  0F3F                     	;# 
  3299  0F40                     	;# 
  3300  0F41                     	;# 
  3301  0F43                     	;# 
  3302  0F44                     	;# 
  3303  0F45                     	;# 
  3304  0F46                     	;# 
  3305  0F47                     	;# 
  3306  0F48                     	;# 
  3307  0F49                     	;# 
  3308  0F4A                     	;# 
  3309  0F4B                     	;# 
  3310  0F4C                     	;# 
  3311  0F4E                     	;# 
  3312  0F4F                     	;# 
  3313  0F50                     	;# 
  3314  0F51                     	;# 
  3315  0F52                     	;# 
  3316  0F53                     	;# 
  3317  0F54                     	;# 
  3318  0F55                     	;# 
  3319  0F56                     	;# 
  3320  0F57                     	;# 
  3321  0F59                     	;# 
  3322  0F5A                     	;# 
  3323  0F5B                     	;# 
  3324  0F5C                     	;# 
  3325  0F5D                     	;# 
  3326  0F61                     	;# 
  3327  0F62                     	;# 
  3328  0F64                     	;# 
  3329  0F65                     	;# 
  3330  0F66                     	;# 
  3331  0F67                     	;# 
  3332  0F68                     	;# 
  3333  0F69                     	;# 
  3334  0F6A                     	;# 
  3335  0F6B                     	;# 
  3336  0F6C                     	;# 
  3337  0F6D                     	;# 
  3338  0FE4                     	;# 
  3339  0FE5                     	;# 
  3340  0FE6                     	;# 
  3341  0FE7                     	;# 
  3342  0FE8                     	;# 
  3343  0FE9                     	;# 
  3344  0FEA                     	;# 
  3345  0FEB                     	;# 
  3346  0FED                     	;# 
  3347  0FEE                     	;# 
  3348  0FEF                     	;# 
  3349  0000                     	;# 
  3350  0001                     	;# 
  3351  0002                     	;# 
  3352  0003                     	;# 
  3353  0004                     	;# 
  3354  0005                     	;# 
  3355  0006                     	;# 
  3356  0007                     	;# 
  3357  0008                     	;# 
  3358  0009                     	;# 
  3359  000A                     	;# 
  3360  000B                     	;# 
  3361  000C                     	;# 
  3362  000D                     	;# 
  3363  000E                     	;# 
  3364  000F                     	;# 
  3365  0010                     	;# 
  3366  0011                     	;# 
  3367  0012                     	;# 
  3368  0013                     	;# 
  3369  0014                     	;# 
  3370  0015                     	;# 
  3371  0016                     	;# 
  3372  0017                     	;# 
  3373  0018                     	;# 
  3374  0019                     	;# 
  3375  001A                     	;# 
  3376  001C                     	;# 
  3377  001C                     	;# 
  3378  001D                     	;# 
  3379  001D                     	;# 
  3380  001E                     	;# 
  3381  001F                     	;# 
  3382  008C                     	;# 
  3383  008C                     	;# 
  3384  008D                     	;# 
  3385  008E                     	;# 
  3386  008E                     	;# 
  3387  008F                     	;# 
  3388  0090                     	;# 
  3389  0090                     	;# 
  3390  0091                     	;# 
  3391  0093                     	;# 
  3392  0094                     	;# 
  3393  0095                     	;# 
  3394  0096                     	;# 
  3395  0097                     	;# 
  3396  0098                     	;# 
  3397  0099                     	;# 
  3398  009A                     	;# 
  3399  009B                     	;# 
  3400  009C                     	;# 
  3401  009D                     	;# 
  3402  009E                     	;# 
  3403  010C                     	;# 
  3404  010D                     	;# 
  3405  010E                     	;# 
  3406  010E                     	;# 
  3407  010F                     	;# 
  3408  0110                     	;# 
  3409  0110                     	;# 
  3410  0111                     	;# 
  3411  0112                     	;# 
  3412  0112                     	;# 
  3413  0113                     	;# 
  3414  0114                     	;# 
  3415  0114                     	;# 
  3416  0115                     	;# 
  3417  0116                     	;# 
  3418  0116                     	;# 
  3419  0117                     	;# 
  3420  0119                     	;# 
  3421  0119                     	;# 
  3422  0119                     	;# 
  3423  011A                     	;# 
  3424  011A                     	;# 
  3425  011A                     	;# 
  3426  011B                     	;# 
  3427  011B                     	;# 
  3428  011B                     	;# 
  3429  011B                     	;# 
  3430  011B                     	;# 
  3431  011C                     	;# 
  3432  011C                     	;# 
  3433  011C                     	;# 
  3434  011D                     	;# 
  3435  011D                     	;# 
  3436  011D                     	;# 
  3437  011E                     	;# 
  3438  011E                     	;# 
  3439  011E                     	;# 
  3440  011F                     	;# 
  3441  011F                     	;# 
  3442  011F                     	;# 
  3443  011F                     	;# 
  3444  011F                     	;# 
  3445  018C                     	;# 
  3446  018D                     	;# 
  3447  018E                     	;# 
  3448  018F                     	;# 
  3449  0190                     	;# 
  3450  0191                     	;# 
  3451  0192                     	;# 
  3452  0196                     	;# 
  3453  0197                     	;# 
  3454  0198                     	;# 
  3455  0199                     	;# 
  3456  019A                     	;# 
  3457  019B                     	;# 
  3458  019C                     	;# 
  3459  020C                     	;# 
  3460  020C                     	;# 
  3461  020D                     	;# 
  3462  020E                     	;# 
  3463  020F                     	;# 
  3464  020F                     	;# 
  3465  0210                     	;# 
  3466  0210                     	;# 
  3467  0211                     	;# 
  3468  0211                     	;# 
  3469  0212                     	;# 
  3470  0212                     	;# 
  3471  0213                     	;# 
  3472  0214                     	;# 
  3473  0215                     	;# 
  3474  0215                     	;# 
  3475  0216                     	;# 
  3476  0216                     	;# 
  3477  0217                     	;# 
  3478  0217                     	;# 
  3479  0218                     	;# 
  3480  0218                     	;# 
  3481  0219                     	;# 
  3482  021A                     	;# 
  3483  021B                     	;# 
  3484  021B                     	;# 
  3485  021C                     	;# 
  3486  021C                     	;# 
  3487  021D                     	;# 
  3488  021D                     	;# 
  3489  021E                     	;# 
  3490  021F                     	;# 
  3491  028C                     	;# 
  3492  028C                     	;# 
  3493  028D                     	;# 
  3494  028D                     	;# 
  3495  028E                     	;# 
  3496  028F                     	;# 
  3497  0290                     	;# 
  3498  0290                     	;# 
  3499  0291                     	;# 
  3500  0292                     	;# 
  3501  0292                     	;# 
  3502  0293                     	;# 
  3503  0293                     	;# 
  3504  0294                     	;# 
  3505  0295                     	;# 
  3506  0296                     	;# 
  3507  0296                     	;# 
  3508  0297                     	;# 
  3509  0298                     	;# 
  3510  0298                     	;# 
  3511  0299                     	;# 
  3512  0299                     	;# 
  3513  029A                     	;# 
  3514  029B                     	;# 
  3515  029C                     	;# 
  3516  029C                     	;# 
  3517  029D                     	;# 
  3518  030C                     	;# 
  3519  030C                     	;# 
  3520  030D                     	;# 
  3521  030E                     	;# 
  3522  030F                     	;# 
  3523  0310                     	;# 
  3524  0310                     	;# 
  3525  0311                     	;# 
  3526  0312                     	;# 
  3527  0313                     	;# 
  3528  0314                     	;# 
  3529  0314                     	;# 
  3530  0315                     	;# 
  3531  0316                     	;# 
  3532  0317                     	;# 
  3533  0318                     	;# 
  3534  0318                     	;# 
  3535  0319                     	;# 
  3536  031A                     	;# 
  3537  031B                     	;# 
  3538  031C                     	;# 
  3539  031C                     	;# 
  3540  031D                     	;# 
  3541  031E                     	;# 
  3542  031F                     	;# 
  3543  038C                     	;# 
  3544  038C                     	;# 
  3545  038D                     	;# 
  3546  038E                     	;# 
  3547  0390                     	;# 
  3548  0390                     	;# 
  3549  0391                     	;# 
  3550  0392                     	;# 
  3551  040C                     	;# 
  3552  040D                     	;# 
  3553  040E                     	;# 
  3554  040F                     	;# 
  3555  0410                     	;# 
  3556  0411                     	;# 
  3557  0416                     	;# 
  3558  0416                     	;# 
  3559  0417                     	;# 
  3560  0418                     	;# 
  3561  0418                     	;# 
  3562  0419                     	;# 
  3563  041A                     	;# 
  3564  041A                     	;# 
  3565  041B                     	;# 
  3566  041C                     	;# 
  3567  041C                     	;# 
  3568  041D                     	;# 
  3569  041E                     	;# 
  3570  041F                     	;# 
  3571  048C                     	;# 
  3572  048C                     	;# 
  3573  048D                     	;# 
  3574  048E                     	;# 
  3575  048F                     	;# 
  3576  048F                     	;# 
  3577  0490                     	;# 
  3578  0491                     	;# 
  3579  0492                     	;# 
  3580  0492                     	;# 
  3581  0493                     	;# 
  3582  0494                     	;# 
  3583  0495                     	;# 
  3584  0495                     	;# 
  3585  0496                     	;# 
  3586  0497                     	;# 
  3587  0498                     	;# 
  3588  0499                     	;# 
  3589  049A                     	;# 
  3590  049B                     	;# 
  3591  049C                     	;# 
  3592  049D                     	;# 
  3593  050C                     	;# 
  3594  050C                     	;# 
  3595  050D                     	;# 
  3596  050E                     	;# 
  3597  050F                     	;# 
  3598  050F                     	;# 
  3599  0510                     	;# 
  3600  0511                     	;# 
  3601  0512                     	;# 
  3602  0512                     	;# 
  3603  0513                     	;# 
  3604  0514                     	;# 
  3605  0515                     	;# 
  3606  0515                     	;# 
  3607  0516                     	;# 
  3608  0517                     	;# 
  3609  0518                     	;# 
  3610  0519                     	;# 
  3611  051A                     	;# 
  3612  051B                     	;# 
  3613  051C                     	;# 
  3614  051D                     	;# 
  3615  058C                     	;# 
  3616  058C                     	;# 
  3617  058D                     	;# 
  3618  058E                     	;# 
  3619  058F                     	;# 
  3620  058F                     	;# 
  3621  0590                     	;# 
  3622  0591                     	;# 
  3623  0592                     	;# 
  3624  0593                     	;# 
  3625  060C                     	;# 
  3626  060D                     	;# 
  3627  060E                     	;# 
  3628  060F                     	;# 
  3629  0610                     	;# 
  3630  0611                     	;# 
  3631  0612                     	;# 
  3632  0613                     	;# 
  3633  0614                     	;# 
  3634  0616                     	;# 
  3635  0617                     	;# 
  3636  0618                     	;# 
  3637  0619                     	;# 
  3638  061A                     	;# 
  3639  061B                     	;# 
  3640  061C                     	;# 
  3641  061D                     	;# 
  3642  061E                     	;# 
  3643  068C                     	;# 
  3644  068D                     	;# 
  3645  068E                     	;# 
  3646  068F                     	;# 
  3647  0690                     	;# 
  3648  0691                     	;# 
  3649  0692                     	;# 
  3650  0693                     	;# 
  3651  0694                     	;# 
  3652  070C                     	;# 
  3653  070D                     	;# 
  3654  070E                     	;# 
  3655  070F                     	;# 
  3656  0710                     	;# 
  3657  0711                     	;# 
  3658  0712                     	;# 
  3659  0713                     	;# 
  3660  0714                     	;# 
  3661  0716                     	;# 
  3662  0717                     	;# 
  3663  0718                     	;# 
  3664  0719                     	;# 
  3665  071A                     	;# 
  3666  071B                     	;# 
  3667  071C                     	;# 
  3668  071D                     	;# 
  3669  071E                     	;# 
  3670  0796                     	;# 
  3671  0797                     	;# 
  3672  0798                     	;# 
  3673  0799                     	;# 
  3674  079A                     	;# 
  3675  079B                     	;# 
  3676  080C                     	;# 
  3677  080D                     	;# 
  3678  080E                     	;# 
  3679  080F                     	;# 
  3680  0810                     	;# 
  3681  0811                     	;# 
  3682  0812                     	;# 
  3683  0813                     	;# 
  3684  0814                     	;# 
  3685  081A                     	;# 
  3686  081B                     	;# 
  3687  081C                     	;# 
  3688  081D                     	;# 
  3689  081E                     	;# 
  3690  081F                     	;# 
  3691  088C                     	;# 
  3692  088D                     	;# 
  3693  088E                     	;# 
  3694  088F                     	;# 
  3695  0890                     	;# 
  3696  0891                     	;# 
  3697  0892                     	;# 
  3698  0893                     	;# 
  3699  0895                     	;# 
  3700  0896                     	;# 
  3701  0897                     	;# 
  3702  0898                     	;# 
  3703  0899                     	;# 
  3704  089A                     	;# 
  3705  089B                     	;# 
  3706  090C                     	;# 
  3707  090E                     	;# 
  3708  090F                     	;# 
  3709  091F                     	;# 
  3710  091F                     	;# 
  3711  098F                     	;# 
  3712  098F                     	;# 
  3713  0990                     	;# 
  3714  0991                     	;# 
  3715  0992                     	;# 
  3716  0993                     	;# 
  3717  0994                     	;# 
  3718  0995                     	;# 
  3719  0996                     	;# 
  3720  0997                     	;# 
  3721  0E0F                     	;# 
  3722  0E10                     	;# 
  3723  0E11                     	;# 
  3724  0E12                     	;# 
  3725  0E13                     	;# 
  3726  0E14                     	;# 
  3727  0E15                     	;# 
  3728  0E16                     	;# 
  3729  0E17                     	;# 
  3730  0E18                     	;# 
  3731  0E19                     	;# 
  3732  0E1A                     	;# 
  3733  0E1B                     	;# 
  3734  0E1C                     	;# 
  3735  0E1D                     	;# 
  3736  0E1E                     	;# 
  3737  0E1F                     	;# 
  3738  0E20                     	;# 
  3739  0E21                     	;# 
  3740  0E22                     	;# 
  3741  0E23                     	;# 
  3742  0E24                     	;# 
  3743  0E25                     	;# 
  3744  0E26                     	;# 
  3745  0E27                     	;# 
  3746  0E28                     	;# 
  3747  0E29                     	;# 
  3748  0E2A                     	;# 
  3749  0E2B                     	;# 
  3750  0E2C                     	;# 
  3751  0E2D                     	;# 
  3752  0E2E                     	;# 
  3753  0E2F                     	;# 
  3754  0E30                     	;# 
  3755  0E31                     	;# 
  3756  0E32                     	;# 
  3757  0E33                     	;# 
  3758  0E34                     	;# 
  3759  0E35                     	;# 
  3760  0E36                     	;# 
  3761  0E37                     	;# 
  3762  0E8F                     	;# 
  3763  0E90                     	;# 
  3764  0E91                     	;# 
  3765  0E92                     	;# 
  3766  0E93                     	;# 
  3767  0E94                     	;# 
  3768  0E95                     	;# 
  3769  0E96                     	;# 
  3770  0E97                     	;# 
  3771  0E9C                     	;# 
  3772  0E9D                     	;# 
  3773  0E9E                     	;# 
  3774  0EA1                     	;# 
  3775  0EA2                     	;# 
  3776  0EA3                     	;# 
  3777  0EA4                     	;# 
  3778  0EA5                     	;# 
  3779  0EA9                     	;# 
  3780  0EAA                     	;# 
  3781  0EAB                     	;# 
  3782  0EAC                     	;# 
  3783  0EB1                     	;# 
  3784  0EB2                     	;# 
  3785  0EB3                     	;# 
  3786  0EB8                     	;# 
  3787  0EB9                     	;# 
  3788  0EBA                     	;# 
  3789  0EBB                     	;# 
  3790  0EBC                     	;# 
  3791  0EBD                     	;# 
  3792  0EBE                     	;# 
  3793  0EC3                     	;# 
  3794  0EC5                     	;# 
  3795  0EC6                     	;# 
  3796  0EC7                     	;# 
  3797  0EC8                     	;# 
  3798  0EC9                     	;# 
  3799  0ECA                     	;# 
  3800  0ECB                     	;# 
  3801  0ECC                     	;# 
  3802  0F10                     	;# 
  3803  0F11                     	;# 
  3804  0F12                     	;# 
  3805  0F13                     	;# 
  3806  0F14                     	;# 
  3807  0F15                     	;# 
  3808  0F16                     	;# 
  3809  0F17                     	;# 
  3810  0F18                     	;# 
  3811  0F19                     	;# 
  3812  0F1A                     	;# 
  3813  0F1B                     	;# 
  3814  0F1C                     	;# 
  3815  0F1D                     	;# 
  3816  0F1E                     	;# 
  3817  0F1F                     	;# 
  3818  0F20                     	;# 
  3819  0F21                     	;# 
  3820  0F22                     	;# 
  3821  0F23                     	;# 
  3822  0F24                     	;# 
  3823  0F25                     	;# 
  3824  0F26                     	;# 
  3825  0F27                     	;# 
  3826  0F28                     	;# 
  3827  0F29                     	;# 
  3828  0F2A                     	;# 
  3829  0F2B                     	;# 
  3830  0F2C                     	;# 
  3831  0F2D                     	;# 
  3832  0F2E                     	;# 
  3833  0F2F                     	;# 
  3834  0F30                     	;# 
  3835  0F31                     	;# 
  3836  0F32                     	;# 
  3837  0F38                     	;# 
  3838  0F39                     	;# 
  3839  0F3A                     	;# 
  3840  0F3B                     	;# 
  3841  0F3C                     	;# 
  3842  0F3D                     	;# 
  3843  0F3E                     	;# 
  3844  0F3F                     	;# 
  3845  0F40                     	;# 
  3846  0F41                     	;# 
  3847  0F43                     	;# 
  3848  0F44                     	;# 
  3849  0F45                     	;# 
  3850  0F46                     	;# 
  3851  0F47                     	;# 
  3852  0F48                     	;# 
  3853  0F49                     	;# 
  3854  0F4A                     	;# 
  3855  0F4B                     	;# 
  3856  0F4C                     	;# 
  3857  0F4E                     	;# 
  3858  0F4F                     	;# 
  3859  0F50                     	;# 
  3860  0F51                     	;# 
  3861  0F52                     	;# 
  3862  0F53                     	;# 
  3863  0F54                     	;# 
  3864  0F55                     	;# 
  3865  0F56                     	;# 
  3866  0F57                     	;# 
  3867  0F59                     	;# 
  3868  0F5A                     	;# 
  3869  0F5B                     	;# 
  3870  0F5C                     	;# 
  3871  0F5D                     	;# 
  3872  0F61                     	;# 
  3873  0F62                     	;# 
  3874  0F64                     	;# 
  3875  0F65                     	;# 
  3876  0F66                     	;# 
  3877  0F67                     	;# 
  3878  0F68                     	;# 
  3879  0F69                     	;# 
  3880  0F6A                     	;# 
  3881  0F6B                     	;# 
  3882  0F6C                     	;# 
  3883  0F6D                     	;# 
  3884  0FE4                     	;# 
  3885  0FE5                     	;# 
  3886  0FE6                     	;# 
  3887  0FE7                     	;# 
  3888  0FE8                     	;# 
  3889  0FE9                     	;# 
  3890  0FEA                     	;# 
  3891  0FEB                     	;# 
  3892  0FED                     	;# 
  3893  0FEE                     	;# 
  3894  0FEF                     	;# 
  3895                           
  3896                           	psect	stringtext1
  3897  07FD                     __pstringtext1:
  3898  07FD                     _dpowers:
  3899  07FD  3401               	retlw	1
  3900  07FE  3400               	retlw	0
  3901  07FF  340A               	retlw	10
  3902  0800  3400               	retlw	0
  3903  0801  3464               	retlw	100
  3904  0802  3400               	retlw	0
  3905  0803  34E8               	retlw	232
  3906  0804  3403               	retlw	3
  3907  0805  3410               	retlw	16
  3908  0806  3427               	retlw	39
  3909  0807                     __end_of_dpowers:
  3910                           
  3911                           	psect	stringtext2
  3912  07C6                     __pstringtext2:
  3913  07C6                     _hexpowers:
  3914  07C6  3401               	retlw	1
  3915  07C7  3400               	retlw	0
  3916  07C8  3410               	retlw	16
  3917  07C9  3400               	retlw	0
  3918  07CA  3400               	retlw	0
  3919  07CB  3401               	retlw	1
  3920  07CC  3400               	retlw	0
  3921  07CD  3410               	retlw	16
  3922  07CE                     __end_of_hexpowers:
  3923  0013                     _TRISCbits	set	19
  3924  000B                     _INTCONbits	set	11
  3925  0014                     _TRISD	set	20
  3926  0013                     _TRISC	set	19
  3927  0012                     _TRISB	set	18
  3928  0011                     _TRISA	set	17
  3929  0015                     _TRISE	set	21
  3930  0018                     _LATC	set	24
  3931  0017                     _LATB	set	23
  3932  0016                     _LATA	set	22
  3933  0019                     _LATD	set	25
  3934  001A                     _LATE	set	26
  3935  018E                     _SSP1MSK	set	398
  3936  018D                     _SSP1ADD	set	397
  3937  018F                     _SSP1STAT	set	399
  3938  0191                     _SSP1CON2	set	401
  3939  0190                     _SSP1CON1bits	set	400
  3940  018C                     _SSP1BUF	set	396
  3941  018F                     _SSP1STATbits	set	399
  3942  0191                     _SSP1CON2bits	set	401
  3943  0190                     _SSP1CON1	set	400
  3944  0719                     _PIE3bits	set	1817
  3945  070F                     _PIR3bits	set	1807
  3946  079B                     _PMD5	set	1947
  3947  079A                     _PMD4	set	1946
  3948  0799                     _PMD3	set	1945
  3949  0798                     _PMD2	set	1944
  3950  0797                     _PMD1	set	1943
  3951  0796                     _PMD0	set	1942
  3952  0892                     _OSCTUNE	set	2194
  3953  0893                     _OSCFRQ	set	2195
  3954  0891                     _OSCEN	set	2193
  3955  088F                     _OSCCON3	set	2191
  3956  088D                     _OSCCON1	set	2189
  3957  0EC6                     _SSP1DATPPS	set	3782
  3958  0EC5                     _SSP1CLKPPS	set	3781
  3959  0F24                     _RC4PPS	set	3876
  3960  0F23                     _RC3PPS	set	3875
  3961  0F67                     _SLRCONE	set	3943
  3962  0F5C                     _SLRCOND	set	3932
  3963  0F51                     _SLRCONC	set	3921
  3964  0F46                     _SLRCONB	set	3910
  3965  0F3B                     _SLRCONA	set	3899
  3966  0F5B                     _ODCOND	set	3931
  3967  0F50                     _ODCONC	set	3920
  3968  0F45                     _ODCONB	set	3909
  3969  0F3A                     _ODCONA	set	3898
  3970  0F66                     _ODCONE	set	3942
  3971  0F4F                     _WPUC	set	3919
  3972  0F39                     _WPUA	set	3897
  3973  0F44                     _WPUB	set	3908
  3974  0F65                     _WPUE	set	3941
  3975  0F5A                     _WPUD	set	3930
  3976  0F38                     _ANSELA	set	3896
  3977  0F64                     _ANSELE	set	3940
  3978  0F43                     _ANSELB	set	3907
  3979  0F4E                     _ANSELC	set	3918
  3980  0F59                     _ANSELD	set	3929
  3981  7A7C                     _WPUC4	set	31356
  3982  7A7B                     _WPUC3	set	31355
  3983  07CE                     STR_4:
  3984  07CE  3430               	retlw	48	;'0'
  3985  07CF  3431               	retlw	49	;'1'
  3986  07D0  3432               	retlw	50	;'2'
  3987  07D1  3433               	retlw	51	;'3'
  3988  07D2  3434               	retlw	52	;'4'
  3989  07D3  3435               	retlw	53	;'5'
  3990  07D4  3436               	retlw	54	;'6'
  3991  07D5  3437               	retlw	55	;'7'
  3992  07D6  3438               	retlw	56	;'8'
  3993  07D7  3439               	retlw	57	;'9'
  3994  07D8  3461               	retlw	97	;'a'
  3995  07D9  3462               	retlw	98	;'b'
  3996  07DA  3463               	retlw	99	;'c'
  3997  07DB  3464               	retlw	100	;'d'
  3998  07DC  3465               	retlw	101	;'e'
  3999  07DD  3466               	retlw	102	;'f'
  4000  07DE  3400               	retlw	0
  4001                           
  4002                           	psect	stringtext3
  4003  0807                     __pstringtext3:
  4004  0807                     STR_3:
  4005  0807  3425               	retlw	37	;'%'
  4006  0808  3430               	retlw	48	;'0'
  4007  0809  3432               	retlw	50	;'2'
  4008  080A  3478               	retlw	120	;'x'
  4009  080B  3420               	retlw	32	;' '
  4010  080C  3425               	retlw	37	;'%'
  4011  080D  3430               	retlw	48	;'0'
  4012  080E  3432               	retlw	50	;'2'
  4013  080F  3478               	retlw	120	;'x'
  4014  0810  3400               	retlw	0
  4015                           
  4016                           	psect	stringtext4
  4017  1000                     __pstringtext4:
  4018  1000                     STR_2:
  4019  1000  3425               	retlw	37	;'%'
  4020  1001  3430               	retlw	48	;'0'
  4021  1002  3432               	retlw	50	;'2'
  4022  1003  3464               	retlw	100	;'d'
  4023  1004  3420               	retlw	32	;' '
  4024  1005  3443               	retlw	67	;'C'
  4025  1006  3400               	retlw	0
  4026                           
  4027                           	psect	stringtext5
  4028  1007                     __pstringtext5:
  4029  1007                     STR_1:
  4030  1007  3454               	retlw	84	;'T'
  4031  1008  3465               	retlw	101	;'e'
  4032  1009  346D               	retlw	109	;'m'
  4033  100A  3470               	retlw	112	;'p'
  4034  100B  3400               	retlw	0
  4035                           
  4036                           	psect	stringtext6
  4037  0000                     __pstringtext6:
  4038                           
  4039                           	psect	cinit
  4040  001E                     start_initialization:	
  4041                           ; #config settings
  4042                           
  4043  001E                     __initialization:
  4044                           
  4045                           ; Clear objects allocated to BANK0
  4046  001E  0020               	movlb	0	; select bank0
  4047  001F  01CC               	clrf	__pbssBANK0& (0+127)
  4048  0020  01CD               	clrf	(__pbssBANK0+1)& (0+127)
  4049  0021  01CE               	clrf	(__pbssBANK0+2)& (0+127)
  4050  0022  01CF               	clrf	(__pbssBANK0+3)& (0+127)
  4051  0023                     end_of_initialization:	
  4052                           ;End of C runtime variable initialization code
  4053                           
  4054  0023                     __end_of__initialization:
  4055  0023  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4056  0024  0020               	movlb	0
  4057  0025  3185  2D44         	ljmp	_main	;jump to C main() function
  4058                           
  4059                           	psect	bssBANK0
  4060  004C                     __pbssBANK0:
  4061  004C                     _i2c1_driver_i2cISR:
  4062  004C                     	ds	2
  4063  004E                     _i2c1_driver_busCollisionISR:
  4064  004E                     	ds	2
  4065                           
  4066                           	psect	cstackCOMMON
  4067  0070                     __pcstackCOMMON:
  4068  0070                     ?_isdigit:
  4069  0070                     ?_i2c1_driver_open:	
  4070                           ; 1 bit 
  4071                           
  4072  0070                     ?_PMD_Initialize:	
  4073                           ; 1 bit 
  4074                           
  4075  0070                     ??_PMD_Initialize:	
  4076                           ; 1 bytes @ 0x0
  4077                           
  4078  0070                     ?_OSCILLATOR_Initialize:	
  4079                           ; 1 bytes @ 0x0
  4080                           
  4081  0070                     ??_OSCILLATOR_Initialize:	
  4082                           ; 1 bytes @ 0x0
  4083                           
  4084  0070                     ??_isdigit:	
  4085                           ; 1 bytes @ 0x0
  4086                           
  4087  0070                     ?_ReadI2C:	
  4088                           ; 1 bytes @ 0x0
  4089                           
  4090  0070                     ??_ReadI2C:	
  4091                           ; 1 bytes @ 0x0
  4092                           
  4093  0070                     ?_WriteI2C:	
  4094                           ; 1 bytes @ 0x0
  4095                           
  4096  0070                     ??_WriteI2C:	
  4097                           ; 1 bytes @ 0x0
  4098                           
  4099  0070                     ?_PIN_MANAGER_Initialize:	
  4100                           ; 1 bytes @ 0x0
  4101                           
  4102  0070                     ??_PIN_MANAGER_Initialize:	
  4103                           ; 1 bytes @ 0x0
  4104                           
  4105  0070                     ?_SYSTEM_Initialize:	
  4106                           ; 1 bytes @ 0x0
  4107                           
  4108  0070                     ??_SYSTEM_Initialize:	
  4109                           ; 1 bytes @ 0x0
  4110                           
  4111  0070                     ??_i2c1_driver_open:	
  4112                           ; 1 bytes @ 0x0
  4113                           
  4114  0070                     ?_INTERRUPT_InterruptManager:	
  4115                           ; 1 bytes @ 0x0
  4116                           
  4117  0070                     ??_INTERRUPT_InterruptManager:	
  4118                           ; 1 bytes @ 0x0
  4119                           
  4120  0070                     ?_tsttc:	
  4121                           ; 1 bytes @ 0x0
  4122                           
  4123  0070                     ?_LCDsend:	
  4124                           ; 1 bytes @ 0x0
  4125                           
  4126  0070                     ?_LCDrecv:	
  4127                           ; 1 bytes @ 0x0
  4128                           
  4129  0070                     ?_LCDinit:	
  4130                           ; 1 bytes @ 0x0
  4131                           
  4132  0070                     ?_LCDcmd:	
  4133                           ; 1 bytes @ 0x0
  4134                           
  4135  0070                     ?_LCDchar:	
  4136                           ; 1 bytes @ 0x0
  4137                           
  4138  0070                     ?_main:	
  4139                           ; 1 bytes @ 0x0
  4140                           
  4141  0070                     ?___wmul:	
  4142                           ; 1 bytes @ 0x0
  4143                           
  4144  0070                     ?___lwdiv:	
  4145                           ; 2 bytes @ 0x0
  4146                           
  4147  0070                     _isdigit$1514:	
  4148                           ; 2 bytes @ 0x0
  4149                           
  4150  0070                     ___wmul@multiplier:	
  4151                           ; 1 bytes @ 0x0
  4152                           
  4153  0070                     ___lwdiv@divisor:	
  4154                           ; 2 bytes @ 0x0
  4155                           
  4156                           
  4157                           ; 2 bytes @ 0x0
  4158  0070                     	ds	1
  4159  0071                     WriteI2C@data_out:
  4160  0071                     isdigit@c:	
  4161                           ; 1 bytes @ 0x1
  4162                           
  4163                           
  4164                           ; 1 bytes @ 0x1
  4165  0071                     	ds	1
  4166  0072                     ??_tsttc:
  4167  0072                     ??_LCDsend:	
  4168                           ; 1 bytes @ 0x2
  4169                           
  4170  0072                     ??_LCDrecv:	
  4171                           ; 1 bytes @ 0x2
  4172                           
  4173  0072                     ?_LCDsend2x4:	
  4174                           ; 1 bytes @ 0x2
  4175                           
  4176  0072                     LCDsend2x4@mode:	
  4177                           ; 1 bytes @ 0x2
  4178                           
  4179  0072                     ___wmul@multiplicand:	
  4180                           ; 1 bytes @ 0x2
  4181                           
  4182  0072                     ___lwdiv@dividend:	
  4183                           ; 2 bytes @ 0x2
  4184                           
  4185                           
  4186                           ; 2 bytes @ 0x2
  4187  0072                     	ds	1
  4188  0073                     ??_LCDsend2x4:
  4189  0073                     tsttc@value:	
  4190                           ; 1 bytes @ 0x3
  4191                           
  4192  0073                     LCDsend@c:	
  4193                           ; 1 bytes @ 0x3
  4194                           
  4195                           
  4196                           ; 1 bytes @ 0x3
  4197  0073                     	ds	1
  4198  0074                     ??___wmul:
  4199  0074                     ??___lwdiv:	
  4200                           ; 1 bytes @ 0x4
  4201                           
  4202  0074                     LCDrecv@hc:	
  4203                           ; 1 bytes @ 0x4
  4204                           
  4205  0074                     ___wmul@product:	
  4206                           ; 1 bytes @ 0x4
  4207                           
  4208                           
  4209                           ; 2 bytes @ 0x4
  4210  0074                     	ds	1
  4211  0075                     LCDrecv@lc:
  4212  0075                     LCDsend2x4@c:	
  4213                           ; 1 bytes @ 0x5
  4214                           
  4215  0075                     ___lwdiv@quotient:	
  4216                           ; 1 bytes @ 0x5
  4217                           
  4218                           
  4219                           ; 2 bytes @ 0x5
  4220  0075                     	ds	1
  4221  0076                     LCDrecv@mode:
  4222  0076                     LCDsend2x4@hc:	
  4223                           ; 1 bytes @ 0x6
  4224                           
  4225                           
  4226                           ; 1 bytes @ 0x6
  4227  0076                     	ds	1
  4228  0077                     LCDsend2x4@lc:
  4229  0077                     ___lwdiv@counter:	
  4230                           ; 1 bytes @ 0x7
  4231                           
  4232                           
  4233                           ; 1 bytes @ 0x7
  4234  0077                     	ds	1
  4235  0078                     ??_LCDinit:
  4236  0078                     ??_LCDcmd:	
  4237                           ; 1 bytes @ 0x8
  4238                           
  4239  0078                     ??_LCDchar:	
  4240                           ; 1 bytes @ 0x8
  4241                           
  4242  0078                     ?___lwmod:	
  4243                           ; 1 bytes @ 0x8
  4244                           
  4245  0078                     LCDcmd@c:	
  4246                           ; 2 bytes @ 0x8
  4247                           
  4248  0078                     LCDchar@c:	
  4249                           ; 1 bytes @ 0x8
  4250                           
  4251  0078                     ___lwmod@divisor:	
  4252                           ; 1 bytes @ 0x8
  4253                           
  4254                           
  4255                           ; 2 bytes @ 0x8
  4256  0078                     	ds	1
  4257  0079                     ?_LCDstr:
  4258  0079                     LCDstr@p:	
  4259                           ; 1 bytes @ 0x9
  4260                           
  4261                           
  4262                           ; 2 bytes @ 0x9
  4263  0079                     	ds	1
  4264  007A                     ___lwmod@dividend:
  4265                           
  4266                           ; 2 bytes @ 0xA
  4267  007A                     	ds	1
  4268  007B                     ??_LCDstr:
  4269                           
  4270                           ; 1 bytes @ 0xB
  4271  007B                     	ds	1
  4272  007C                     ??___lwmod:
  4273                           
  4274                           ; 1 bytes @ 0xC
  4275  007C                     	ds	1
  4276  007D                     ___lwmod@counter:
  4277                           
  4278                           ; 1 bytes @ 0xD
  4279  007D                     	ds	1
  4280                           
  4281                           	psect	cstackBANK0
  4282  0020                     __pcstackBANK0:
  4283  0020                     ?_sprintf:
  4284  0020                     LCDstr@c:	
  4285                           ; 2 bytes @ 0x0
  4286                           
  4287  0020                     sprintf@f:	
  4288                           ; 1 bytes @ 0x0
  4289                           
  4290                           
  4291                           ; 2 bytes @ 0x0
  4292  0020                     	ds	6
  4293  0026                     ??_sprintf:
  4294                           
  4295                           ; 1 bytes @ 0x6
  4296  0026                     	ds	4
  4297  002A                     sprintf@idx:
  4298                           
  4299                           ; 1 bytes @ 0xA
  4300  002A                     	ds	1
  4301  002B                     sprintf@ap:
  4302                           
  4303                           ; 1 bytes @ 0xB
  4304  002B                     	ds	1
  4305  002C                     sprintf@prec:
  4306                           
  4307                           ; 1 bytes @ 0xC
  4308  002C                     	ds	1
  4309  002D                     sprintf@val:
  4310                           
  4311                           ; 2 bytes @ 0xD
  4312  002D                     	ds	2
  4313  002F                     sprintf@flag:
  4314                           
  4315                           ; 1 bytes @ 0xF
  4316  002F                     	ds	1
  4317  0030                     sprintf@width:
  4318                           
  4319                           ; 2 bytes @ 0x10
  4320  0030                     	ds	2
  4321  0032                     sprintf@sp:
  4322                           
  4323                           ; 1 bytes @ 0x12
  4324  0032                     	ds	1
  4325  0033                     sprintf@c:
  4326                           
  4327                           ; 1 bytes @ 0x13
  4328  0033                     	ds	1
  4329  0034                     ??_main:
  4330                           
  4331                           ; 1 bytes @ 0x14
  4332  0034                     	ds	4
  4333  0038                     main@buf:
  4334                           
  4335                           ; 17 bytes @ 0x18
  4336  0038                     	ds	17
  4337  0049                     main@c:
  4338                           
  4339                           ; 1 bytes @ 0x29
  4340  0049                     	ds	1
  4341  004A                     main@c1:
  4342                           
  4343                           ; 1 bytes @ 0x2A
  4344  004A                     	ds	1
  4345  004B                     main@c2:
  4346                           
  4347                           ; 1 bytes @ 0x2B
  4348  004B                     	ds	1
  4349                           
  4350                           	psect	maintext
  4351  0544                     __pmaintext:	
  4352 ;;
  4353 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  4354 ;;
  4355 ;; *************** function _main *****************
  4356 ;; Defined at:
  4357 ;;		line 195 in file "main.c"
  4358 ;; Parameters:    Size  Location     Type
  4359 ;;		None
  4360 ;; Auto vars:     Size  Location     Type
  4361 ;;  buf            17   24[BANK0 ] unsigned char [17]
  4362 ;;  c2              1   43[BANK0 ] unsigned char 
  4363 ;;  c1              1   42[BANK0 ] unsigned char 
  4364 ;;  c               1   41[BANK0 ] unsigned char 
  4365 ;;  lc              1    0        unsigned char 
  4366 ;;  hc              1    0        unsigned char 
  4367 ;; Return value:  Size  Location     Type
  4368 ;;                  1    wreg      void 
  4369 ;; Registers used:
  4370 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4371 ;; Tracked objects:
  4372 ;;		On entry : B1F/0
  4373 ;;		On exit  : 0/0
  4374 ;;		Unchanged: 0/0
  4375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4377 ;;      Locals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4378 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4379 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4380 ;;Total ram usage:       24 bytes
  4381 ;; Hardware stack levels required when called:    5
  4382 ;; This function calls:
  4383 ;;		_LCDcmd
  4384 ;;		_LCDinit
  4385 ;;		_LCDrecv
  4386 ;;		_LCDstr
  4387 ;;		_SYSTEM_Initialize
  4388 ;;		_i2c1_driver_open
  4389 ;;		_sprintf
  4390 ;;		_tsttc
  4391 ;; This function is called by:
  4392 ;;		Startup code after reset
  4393 ;; This function uses a non-reentrant model
  4394 ;;
  4395                           
  4396                           
  4397                           ;psect for function _main
  4398  0544                     _main:
  4399  0544                     l2576:	
  4400                           ;incstack = 0
  4401                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4402                           
  4403                           
  4404                           ;main.c: 197: unsigned char c;;main.c: 198: unsigned char hc;;main.c: 199: unsigned char
      +                           lc;;main.c: 200: unsigned char c1;;main.c: 201: unsigned char c2;;main.c: 202: unsigned
      +                           char buf[17];;main.c: 205: SYSTEM_Initialize();
  4405  0544  318F  27F6  3185   	fcall	_SYSTEM_Initialize
  4406                           
  4407                           ;main.c: 222: i2c1_driver_open();
  4408  0547  3187  27F1  3185   	fcall	_i2c1_driver_open
  4409  054A                     l2578:
  4410                           
  4411                           ;main.c: 223: TRISCbits.TRISC3 = 1;
  4412  054A  0020               	movlb	0	; select bank0
  4413  054B  1593               	bsf	19,3	;volatile
  4414  054C                     l2580:
  4415                           
  4416                           ;main.c: 224: TRISCbits.TRISC4 = 1;
  4417  054C  1613               	bsf	19,4	;volatile
  4418  054D                     l2582:
  4419                           
  4420                           ;main.c: 225: WPUC3 = 1;
  4421  054D  003E               	movlb	30	; select bank30
  4422  054E  15CF               	bsf	79,3	;volatile
  4423  054F                     l2584:
  4424                           
  4425                           ;main.c: 226: WPUC4 = 1;
  4426  054F  164F               	bsf	79,4	;volatile
  4427                           
  4428                           ;main.c: 227: LCDinit();
  4429  0550  3185  25C8  3185   	fcall	_LCDinit
  4430  0553                     l2586:
  4431                           
  4432                           ;main.c: 230: {;main.c: 233: __nop();
  4433  0553  0000               	nop
  4434                           
  4435                           ;main.c: 234: c = tsttc();
  4436  0554  3183  2384  3185   	fcall	_tsttc
  4437  0557  0020               	movlb	0	; select bank0
  4438  0558  00B4               	movwf	??_main
  4439  0559  0834               	movf	??_main,w
  4440  055A  00C9               	movwf	main@c
  4441                           
  4442                           ;main.c: 237: LCDcmd(0x80);
  4443  055B  3080               	movlw	128
  4444  055C  318F  27D6  3185   	fcall	_LCDcmd
  4445  055F                     l2588:
  4446                           
  4447                           ;main.c: 238: LCDstr("Temp");
  4448  055F  3007               	movlw	low (STR_1| (0+32768))
  4449  0560  00F9               	movwf	LCDstr@p
  4450  0561  3090               	movlw	high (STR_1| (0+32768))
  4451  0562  00FA               	movwf	LCDstr@p+1
  4452  0563  3187  2791  3185   	fcall	_LCDstr
  4453  0566                     l2590:
  4454                           
  4455                           ;main.c: 239: LCDcmd(0xc0);
  4456  0566  30C0               	movlw	192
  4457  0567  318F  27D6  3185   	fcall	_LCDcmd
  4458  056A                     l2592:
  4459                           
  4460                           ;main.c: 241: sprintf(buf, "%02d C", c);
  4461  056A  3000               	movlw	low (STR_2| (0+32768))
  4462  056B  0020               	movlb	0	; select bank0
  4463  056C  00A0               	movwf	sprintf@f
  4464  056D  3090               	movlw	high (STR_2| (0+32768))
  4465  056E  00A1               	movwf	sprintf@f+1
  4466  056F  0849               	movf	main@c,w
  4467  0570  00B4               	movwf	??_main
  4468  0571  01B5               	clrf	??_main+1
  4469  0572  0834               	movf	??_main,w
  4470  0573  00A2               	movwf	?_sprintf+2
  4471  0574  0835               	movf	??_main+1,w
  4472  0575  00A3               	movwf	?_sprintf+3
  4473  0576  3038               	movlw	(low (main@buf| 0))& (0+255)
  4474  0577  3180  2027  3185   	fcall	_sprintf
  4475  057A                     l2594:
  4476                           
  4477                           ;main.c: 242: LCDstr(buf);
  4478  057A  3038               	movlw	low main@buf
  4479  057B  00F9               	movwf	LCDstr@p
  4480  057C  3000               	movlw	high main@buf
  4481  057D  00FA               	movwf	LCDstr@p+1
  4482  057E  3187  2791  3185   	fcall	_LCDstr
  4483  0581                     l2596:
  4484                           
  4485                           ;main.c: 243: LCDcmd(0x81);
  4486  0581  3081               	movlw	129
  4487  0582  318F  27D6  3185   	fcall	_LCDcmd
  4488  0585                     l2598:
  4489                           
  4490                           ;main.c: 246: c1 = LCDrecv(0);
  4491  0585  3000               	movlw	0
  4492  0586  3182  223E  3185   	fcall	_LCDrecv
  4493  0589  0020               	movlb	0	; select bank0
  4494  058A  00B4               	movwf	??_main
  4495  058B  0834               	movf	??_main,w
  4496  058C  00CA               	movwf	main@c1
  4497  058D                     l2600:
  4498                           
  4499                           ;main.c: 247: c2 = LCDrecv(0x01);
  4500  058D  3001               	movlw	1
  4501  058E  3182  223E  3185   	fcall	_LCDrecv
  4502  0591  0020               	movlb	0	; select bank0
  4503  0592  00B4               	movwf	??_main
  4504  0593  0834               	movf	??_main,w
  4505  0594  00CB               	movwf	main@c2
  4506  0595                     l2602:
  4507                           
  4508                           ;main.c: 248: LCDcmd(0xc8);
  4509  0595  30C8               	movlw	200
  4510  0596  318F  27D6  3185   	fcall	_LCDcmd
  4511                           
  4512                           ;main.c: 249: sprintf(buf, "%02x %02x", c1, c2);
  4513  0599  3007               	movlw	low (STR_3| (0+32768))
  4514  059A  0020               	movlb	0	; select bank0
  4515  059B  00A0               	movwf	sprintf@f
  4516  059C  3088               	movlw	high (STR_3| (0+32768))
  4517  059D  00A1               	movwf	sprintf@f+1
  4518  059E  084A               	movf	main@c1,w
  4519  059F  00B4               	movwf	??_main
  4520  05A0  01B5               	clrf	??_main+1
  4521  05A1  0834               	movf	??_main,w
  4522  05A2  00A2               	movwf	?_sprintf+2
  4523  05A3  0835               	movf	??_main+1,w
  4524  05A4  00A3               	movwf	?_sprintf+3
  4525  05A5  084B               	movf	main@c2,w
  4526  05A6  00B6               	movwf	??_main+2
  4527  05A7  01B7               	clrf	??_main+3
  4528  05A8  0836               	movf	??_main+2,w
  4529  05A9  00A4               	movwf	?_sprintf+4
  4530  05AA  0837               	movf	??_main+3,w
  4531  05AB  00A5               	movwf	?_sprintf+5
  4532  05AC  3038               	movlw	(low (main@buf| 0))& (0+255)
  4533  05AD  3180  2027  3185   	fcall	_sprintf
  4534  05B0                     l2604:
  4535                           
  4536                           ;main.c: 250: LCDstr(buf);
  4537  05B0  3038               	movlw	low main@buf
  4538  05B1  00F9               	movwf	LCDstr@p
  4539  05B2  3000               	movlw	high main@buf
  4540  05B3  00FA               	movwf	LCDstr@p+1
  4541  05B4  3187  2791  3185   	fcall	_LCDstr
  4542  05B7                     l2606:
  4543                           
  4544                           ;main.c: 251: __nop();
  4545  05B7  0000               	nop
  4546  05B8                     l2608:
  4547                           
  4548                           ;main.c: 252: _delay((unsigned long)((3000)*(1000000/4000.0)));
  4549  05B8  3004               	movlw	4
  4550  05B9  0020               	movlb	0	; select bank0
  4551  05BA  00B5               	movwf	??_main+1
  4552  05BB  30CF               	movlw	207
  4553  05BC  00B4               	movwf	??_main
  4554  05BD  3001               	movlw	1
  4555  05BE                     u2567:
  4556  05BE  0B89               	decfsz	9,f
  4557  05BF  2DBE               	goto	u2567
  4558  05C0  0BB4               	decfsz	??_main,f
  4559  05C1  2DBE               	goto	u2567
  4560  05C2  0BB5               	decfsz	??_main+1,f
  4561  05C3  2DBE               	goto	u2567
  4562  05C4  3200               	nop2
  4563  05C5  2D53               	goto	l2586
  4564  05C6  3180  281C         	ljmp	start
  4565  05C8                     __end_of_main:
  4566                           
  4567                           	psect	text1
  4568  0384                     __ptext1:	
  4569 ;; *************** function _tsttc *****************
  4570 ;; Defined at:
  4571 ;;		line 52 in file "main.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;		None
  4574 ;; Auto vars:     Size  Location     Type
  4575 ;;  value           1    3[COMMON] unsigned char 
  4576 ;; Return value:  Size  Location     Type
  4577 ;;                  1    wreg      unsigned char 
  4578 ;; Registers used:
  4579 ;;		wreg, status,2, status,0, pclath, cstack
  4580 ;; Tracked objects:
  4581 ;;		On entry : 0/0
  4582 ;;		On exit  : 0/0
  4583 ;;		Unchanged: 0/0
  4584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4586 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4587 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4588 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4589 ;;Total ram usage:        2 bytes
  4590 ;; Hardware stack levels used:    1
  4591 ;; Hardware stack levels required when called:    2
  4592 ;; This function calls:
  4593 ;;		_ReadI2C
  4594 ;;		_WriteI2C
  4595 ;; This function is called by:
  4596 ;;		_main
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           
  4601                           ;psect for function _tsttc
  4602  0384                     _tsttc:
  4603  0384                     l359:	
  4604                           ;incstack = 0
  4605                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
  4606                           ;main.c: 54: unsigned char value;;main.c: 55: do{
  4607                           
  4608  0384                     l2274:	
  4609                           ;main.c: 56: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4610                           
  4611  0384  0023               	movlb	3	; select bank3
  4612  0385  0C0F               	rrf	15,w	;volatile
  4613  0386  0C89               	rrf	9,f
  4614  0387  3901               	andlw	1
  4615  0388  00F2               	movwf	??_tsttc
  4616  0389  0811               	movf	17,w	;volatile
  4617  038A  391F               	andlw	31
  4618  038B  0472               	iorwf	??_tsttc,w
  4619  038C  1D03               	btfss	3,2
  4620  038D  2B8F               	goto	u1821
  4621  038E  2B90               	goto	u1820
  4622  038F                     u1821:
  4623  038F  2B84               	goto	l2274
  4624  0390                     u1820:
  4625  0390                     l362:
  4626                           
  4627                           ;main.c: 57: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
  4628  0390  1411               	bsf	17,0	;volatile
  4629  0391                     l363:
  4630  0391  1811               	btfsc	17,0	;volatile
  4631  0392  2B94               	goto	u1831
  4632  0393  2B95               	goto	u1830
  4633  0394                     u1831:
  4634  0394  2B91               	goto	l363
  4635  0395                     u1830:
  4636  0395                     l2276:
  4637  0395  0C0F               	rrf	15,w	;volatile
  4638  0396  0C89               	rrf	9,f
  4639  0397  3901               	andlw	1
  4640  0398  00F2               	movwf	??_tsttc
  4641  0399  0811               	movf	17,w	;volatile
  4642  039A  391F               	andlw	31
  4643  039B  0472               	iorwf	??_tsttc,w
  4644  039C  1D03               	btfss	3,2
  4645  039D  2B9F               	goto	u1841
  4646  039E  2BA0               	goto	u1840
  4647  039F                     u1841:
  4648  039F  2B95               	goto	l2276
  4649  03A0                     u1840:
  4650  03A0                     l2278:
  4651                           
  4652                           ;main.c: 59: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4653  03A0  309A               	movlw	154
  4654  03A1  3186  2639  3183   	fcall	_WriteI2C
  4655  03A4                     l2280:
  4656  03A4  0023               	movlb	3	; select bank3
  4657  03A5  0C0F               	rrf	15,w	;volatile
  4658  03A6  0C89               	rrf	9,f
  4659  03A7  3901               	andlw	1
  4660  03A8  00F2               	movwf	??_tsttc
  4661  03A9  0811               	movf	17,w	;volatile
  4662  03AA  391F               	andlw	31
  4663  03AB  0472               	iorwf	??_tsttc,w
  4664  03AC  1D03               	btfss	3,2
  4665  03AD  2BAF               	goto	u1851
  4666  03AE  2BB0               	goto	u1850
  4667  03AF                     u1851:
  4668  03AF  2BA4               	goto	l2280
  4669  03B0                     u1850:
  4670  03B0                     l2282:
  4671                           
  4672                           ;main.c: 60: WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4673  03B0  3001               	movlw	1
  4674  03B1  3186  2639  3183   	fcall	_WriteI2C
  4675  03B4                     l2284:
  4676  03B4  0023               	movlb	3	; select bank3
  4677  03B5  0C0F               	rrf	15,w	;volatile
  4678  03B6  0C89               	rrf	9,f
  4679  03B7  3901               	andlw	1
  4680  03B8  00F2               	movwf	??_tsttc
  4681  03B9  0811               	movf	17,w	;volatile
  4682  03BA  391F               	andlw	31
  4683  03BB  0472               	iorwf	??_tsttc,w
  4684  03BC  1D03               	btfss	3,2
  4685  03BD  2BBF               	goto	u1861
  4686  03BE  2BC0               	goto	u1860
  4687  03BF                     u1861:
  4688  03BF  2BB4               	goto	l2284
  4689  03C0                     u1860:
  4690  03C0                     l374:
  4691                           
  4692                           ;main.c: 61: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
  4693  03C0  1491               	bsf	17,1	;volatile
  4694  03C1                     l375:
  4695  03C1  1891               	btfsc	17,1	;volatile
  4696  03C2  2BC4               	goto	u1871
  4697  03C3  2BC5               	goto	u1870
  4698  03C4                     u1871:
  4699  03C4  2BC1               	goto	l375
  4700  03C5                     u1870:
  4701  03C5                     l2286:
  4702  03C5  0C0F               	rrf	15,w	;volatile
  4703  03C6  0C89               	rrf	9,f
  4704  03C7  3901               	andlw	1
  4705  03C8  00F2               	movwf	??_tsttc
  4706  03C9  0811               	movf	17,w	;volatile
  4707  03CA  391F               	andlw	31
  4708  03CB  0472               	iorwf	??_tsttc,w
  4709  03CC  1D03               	btfss	3,2
  4710  03CD  2BCF               	goto	u1881
  4711  03CE  2BD0               	goto	u1880
  4712  03CF                     u1881:
  4713  03CF  2BC5               	goto	l2286
  4714  03D0                     u1880:
  4715  03D0                     l2288:
  4716                           
  4717                           ;main.c: 62: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4718  03D0  309B               	movlw	155
  4719  03D1  3186  2639  3183   	fcall	_WriteI2C
  4720  03D4                     l2290:
  4721  03D4  0023               	movlb	3	; select bank3
  4722  03D5  0C0F               	rrf	15,w	;volatile
  4723  03D6  0C89               	rrf	9,f
  4724  03D7  3901               	andlw	1
  4725  03D8  00F2               	movwf	??_tsttc
  4726  03D9  0811               	movf	17,w	;volatile
  4727  03DA  391F               	andlw	31
  4728  03DB  0472               	iorwf	??_tsttc,w
  4729  03DC  1D03               	btfss	3,2
  4730  03DD  2BDF               	goto	u1891
  4731  03DE  2BE0               	goto	u1890
  4732  03DF                     u1891:
  4733  03DF  2BD4               	goto	l2290
  4734  03E0                     u1890:
  4735  03E0                     l2292:
  4736                           
  4737                           ;main.c: 63: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4738  03E0  3187  27AC  3183   	fcall	_ReadI2C
  4739  03E3  00F2               	movwf	??_tsttc
  4740  03E4  0872               	movf	??_tsttc,w
  4741  03E5  00F3               	movwf	tsttc@value
  4742  03E6                     l2294:
  4743  03E6  0023               	movlb	3	; select bank3
  4744  03E7  0C0F               	rrf	15,w	;volatile
  4745  03E8  0C89               	rrf	9,f
  4746  03E9  3901               	andlw	1
  4747  03EA  00F2               	movwf	??_tsttc
  4748  03EB  0811               	movf	17,w	;volatile
  4749  03EC  391F               	andlw	31
  4750  03ED  0472               	iorwf	??_tsttc,w
  4751  03EE  1D03               	btfss	3,2
  4752  03EF  2BF1               	goto	u1901
  4753  03F0  2BF2               	goto	u1900
  4754  03F1                     u1901:
  4755  03F1  2BE6               	goto	l2294
  4756  03F2                     u1900:
  4757  03F2                     l386:
  4758                           
  4759                           ;main.c: 64: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4760  03F2  1691               	bsf	17,5	;volatile
  4761  03F3  1611               	bsf	17,4	;volatile
  4762  03F4                     l387:
  4763  03F4  1A11               	btfsc	17,4	;volatile
  4764  03F5  2BF7               	goto	u1911
  4765  03F6  2BF8               	goto	u1910
  4766  03F7                     u1911:
  4767  03F7  2BF4               	goto	l387
  4768  03F8                     u1910:
  4769  03F8                     l2296:
  4770  03F8  0C0F               	rrf	15,w	;volatile
  4771  03F9  0C89               	rrf	9,f
  4772  03FA  3901               	andlw	1
  4773  03FB  00F2               	movwf	??_tsttc
  4774  03FC  0811               	movf	17,w	;volatile
  4775  03FD  391F               	andlw	31
  4776  03FE  0472               	iorwf	??_tsttc,w
  4777  03FF  1D03               	btfss	3,2
  4778  0400  2C02               	goto	u1921
  4779  0401  2C03               	goto	u1920
  4780  0402                     u1921:
  4781  0402  2BF8               	goto	l2296
  4782  0403                     u1920:
  4783  0403                     l392:
  4784                           
  4785                           ;main.c: 65: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  4786  0403  1511               	bsf	17,2	;volatile
  4787  0404                     l393:
  4788  0404  1911               	btfsc	17,2	;volatile
  4789  0405  2C07               	goto	u1931
  4790  0406  2C08               	goto	u1930
  4791  0407                     u1931:
  4792  0407  2C04               	goto	l393
  4793  0408                     u1930:
  4794  0408                     l395:
  4795                           
  4796                           ;main.c: 66: } while (!(value & 0x40));
  4797  0408  1F73               	btfss	tsttc@value,6
  4798  0409  2C0B               	goto	u1941
  4799  040A  2C0C               	goto	u1940
  4800  040B                     u1941:
  4801  040B  2B84               	goto	l359
  4802  040C                     u1940:
  4803  040C                     l2298:
  4804  040C  0C0F               	rrf	15,w	;volatile
  4805  040D  0C89               	rrf	9,f
  4806  040E  3901               	andlw	1
  4807  040F  00F2               	movwf	??_tsttc
  4808  0410  0811               	movf	17,w	;volatile
  4809  0411  391F               	andlw	31
  4810  0412  0472               	iorwf	??_tsttc,w
  4811  0413  1D03               	btfss	3,2
  4812  0414  2C16               	goto	u1951
  4813  0415  2C17               	goto	u1950
  4814  0416                     u1951:
  4815  0416  2C0C               	goto	l2298
  4816  0417                     u1950:
  4817  0417                     l399:
  4818                           
  4819                           ;main.c: 69: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
  4820  0417  1411               	bsf	17,0	;volatile
  4821  0418                     l400:
  4822  0418  1811               	btfsc	17,0	;volatile
  4823  0419  2C1B               	goto	u1961
  4824  041A  2C1C               	goto	u1960
  4825  041B                     u1961:
  4826  041B  2C18               	goto	l400
  4827  041C                     u1960:
  4828  041C                     l2300:
  4829  041C  0C0F               	rrf	15,w	;volatile
  4830  041D  0C89               	rrf	9,f
  4831  041E  3901               	andlw	1
  4832  041F  00F2               	movwf	??_tsttc
  4833  0420  0811               	movf	17,w	;volatile
  4834  0421  391F               	andlw	31
  4835  0422  0472               	iorwf	??_tsttc,w
  4836  0423  1D03               	btfss	3,2
  4837  0424  2C26               	goto	u1971
  4838  0425  2C27               	goto	u1970
  4839  0426                     u1971:
  4840  0426  2C1C               	goto	l2300
  4841  0427                     u1970:
  4842  0427                     l2302:
  4843                           
  4844                           ;main.c: 70: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4845  0427  309A               	movlw	154
  4846  0428  3186  2639  3183   	fcall	_WriteI2C
  4847  042B                     l2304:
  4848  042B  0023               	movlb	3	; select bank3
  4849  042C  0C0F               	rrf	15,w	;volatile
  4850  042D  0C89               	rrf	9,f
  4851  042E  3901               	andlw	1
  4852  042F  00F2               	movwf	??_tsttc
  4853  0430  0811               	movf	17,w	;volatile
  4854  0431  391F               	andlw	31
  4855  0432  0472               	iorwf	??_tsttc,w
  4856  0433  1D03               	btfss	3,2
  4857  0434  2C36               	goto	u1981
  4858  0435  2C37               	goto	u1980
  4859  0436                     u1981:
  4860  0436  2C2B               	goto	l2304
  4861  0437                     u1980:
  4862  0437                     l2306:
  4863                           
  4864                           ;main.c: 71: WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4865  0437  3000               	movlw	0
  4866  0438  3186  2639  3183   	fcall	_WriteI2C
  4867  043B                     l2308:
  4868  043B  0023               	movlb	3	; select bank3
  4869  043C  0C0F               	rrf	15,w	;volatile
  4870  043D  0C89               	rrf	9,f
  4871  043E  3901               	andlw	1
  4872  043F  00F2               	movwf	??_tsttc
  4873  0440  0811               	movf	17,w	;volatile
  4874  0441  391F               	andlw	31
  4875  0442  0472               	iorwf	??_tsttc,w
  4876  0443  1D03               	btfss	3,2
  4877  0444  2C46               	goto	u1991
  4878  0445  2C47               	goto	u1990
  4879  0446                     u1991:
  4880  0446  2C3B               	goto	l2308
  4881  0447                     u1990:
  4882  0447                     l411:
  4883                           
  4884                           ;main.c: 72: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (S
      +                          SP1STATbits.R_W));
  4885  0447  1491               	bsf	17,1	;volatile
  4886  0448                     l412:
  4887  0448  1891               	btfsc	17,1	;volatile
  4888  0449  2C4B               	goto	u2001
  4889  044A  2C4C               	goto	u2000
  4890  044B                     u2001:
  4891  044B  2C48               	goto	l412
  4892  044C                     u2000:
  4893  044C                     l2310:
  4894  044C  0C0F               	rrf	15,w	;volatile
  4895  044D  0C89               	rrf	9,f
  4896  044E  3901               	andlw	1
  4897  044F  00F2               	movwf	??_tsttc
  4898  0450  0811               	movf	17,w	;volatile
  4899  0451  391F               	andlw	31
  4900  0452  0472               	iorwf	??_tsttc,w
  4901  0453  1D03               	btfss	3,2
  4902  0454  2C56               	goto	u2011
  4903  0455  2C57               	goto	u2010
  4904  0456                     u2011:
  4905  0456  2C4C               	goto	l2310
  4906  0457                     u2010:
  4907  0457                     l2312:
  4908                           
  4909                           ;main.c: 73: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4910  0457  309B               	movlw	155
  4911  0458  3186  2639  3183   	fcall	_WriteI2C
  4912  045B                     l2314:
  4913  045B  0023               	movlb	3	; select bank3
  4914  045C  0C0F               	rrf	15,w	;volatile
  4915  045D  0C89               	rrf	9,f
  4916  045E  3901               	andlw	1
  4917  045F  00F2               	movwf	??_tsttc
  4918  0460  0811               	movf	17,w	;volatile
  4919  0461  391F               	andlw	31
  4920  0462  0472               	iorwf	??_tsttc,w
  4921  0463  1D03               	btfss	3,2
  4922  0464  2C66               	goto	u2021
  4923  0465  2C67               	goto	u2020
  4924  0466                     u2021:
  4925  0466  2C5B               	goto	l2314
  4926  0467                     u2020:
  4927  0467                     l2316:
  4928                           
  4929                           ;main.c: 74: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4930  0467  3187  27AC  3183   	fcall	_ReadI2C
  4931  046A  00F2               	movwf	??_tsttc
  4932  046B  0872               	movf	??_tsttc,w
  4933  046C  00F3               	movwf	tsttc@value
  4934  046D                     l2318:
  4935  046D  0023               	movlb	3	; select bank3
  4936  046E  0C0F               	rrf	15,w	;volatile
  4937  046F  0C89               	rrf	9,f
  4938  0470  3901               	andlw	1
  4939  0471  00F2               	movwf	??_tsttc
  4940  0472  0811               	movf	17,w	;volatile
  4941  0473  391F               	andlw	31
  4942  0474  0472               	iorwf	??_tsttc,w
  4943  0475  1D03               	btfss	3,2
  4944  0476  2C78               	goto	u2031
  4945  0477  2C79               	goto	u2030
  4946  0478                     u2031:
  4947  0478  2C6D               	goto	l2318
  4948  0479                     u2030:
  4949  0479                     l423:
  4950                           
  4951                           ;main.c: 75: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  4952  0479  1691               	bsf	17,5	;volatile
  4953  047A  1611               	bsf	17,4	;volatile
  4954  047B                     l424:
  4955  047B  1A11               	btfsc	17,4	;volatile
  4956  047C  2C7E               	goto	u2041
  4957  047D  2C7F               	goto	u2040
  4958  047E                     u2041:
  4959  047E  2C7B               	goto	l424
  4960  047F                     u2040:
  4961  047F                     l2320:
  4962  047F  0C0F               	rrf	15,w	;volatile
  4963  0480  0C89               	rrf	9,f
  4964  0481  3901               	andlw	1
  4965  0482  00F2               	movwf	??_tsttc
  4966  0483  0811               	movf	17,w	;volatile
  4967  0484  391F               	andlw	31
  4968  0485  0472               	iorwf	??_tsttc,w
  4969  0486  1D03               	btfss	3,2
  4970  0487  2C89               	goto	u2051
  4971  0488  2C8A               	goto	u2050
  4972  0489                     u2051:
  4973  0489  2C7F               	goto	l2320
  4974  048A                     u2050:
  4975  048A                     l429:
  4976                           
  4977                           ;main.c: 76: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  4978  048A  1511               	bsf	17,2	;volatile
  4979  048B                     l430:
  4980  048B  1911               	btfsc	17,2	;volatile
  4981  048C  2C8E               	goto	u2061
  4982  048D  2C8F               	goto	u2060
  4983  048E                     u2061:
  4984  048E  2C8B               	goto	l430
  4985  048F                     u2060:
  4986  048F                     l2322:
  4987                           
  4988                           ;main.c: 78: return value;
  4989  048F  0873               	movf	tsttc@value,w
  4990  0490                     l433:
  4991  0490  0008               	return
  4992  0491                     __end_of_tsttc:
  4993                           
  4994                           	psect	text2
  4995  0027                     __ptext2:	
  4996 ;; *************** function _sprintf *****************
  4997 ;; Defined at:
  4998 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
  4999 ;; Parameters:    Size  Location     Type
  5000 ;;  sp              1    wreg     PTR unsigned char 
  5001 ;;		 -> main@buf(17), 
  5002 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  5003 ;;		 -> STR_3(10), STR_2(7), 
  5004 ;; Auto vars:     Size  Location     Type
  5005 ;;  sp              1   18[BANK0 ] PTR unsigned char 
  5006 ;;		 -> main@buf(17), 
  5007 ;;  idx             1   10[BANK0 ] unsigned char 
  5008 ;;  tmpval          4    0        struct .
  5009 ;;  width           2   16[BANK0 ] int 
  5010 ;;  val             2   13[BANK0 ] unsigned int 
  5011 ;;  cp              2    0        PTR const unsigned char 
  5012 ;;  len             2    0        unsigned int 
  5013 ;;  c               1   19[BANK0 ] unsigned char 
  5014 ;;  flag            1   15[BANK0 ] unsigned char 
  5015 ;;  prec            1   12[BANK0 ] char 
  5016 ;;  ap              1   11[BANK0 ] PTR void [1]
  5017 ;;		 -> ?_sprintf(2), 
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  2    0[BANK0 ] int 
  5020 ;; Registers used:
  5021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5027 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5028 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5029 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5030 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5031 ;;Total ram usage:       20 bytes
  5032 ;; Hardware stack levels used:    1
  5033 ;; Hardware stack levels required when called:    2
  5034 ;; This function calls:
  5035 ;;		___lwdiv
  5036 ;;		___lwmod
  5037 ;;		___wmul
  5038 ;;		_isdigit
  5039 ;; This function is called by:
  5040 ;;		_main
  5041 ;; This function uses a non-reentrant model
  5042 ;;
  5043                           
  5044                           
  5045                           ;psect for function _sprintf
  5046  0027                     _sprintf:
  5047                           
  5048                           ;incstack = 0
  5049                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5050                           ;sprintf@sp stored from wreg
  5051  0027  0020               	movlb	0	; select bank0
  5052  0028  00B2               	movwf	sprintf@sp
  5053  0029                     l2434:
  5054                           
  5055                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
  5056  0029  3022               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  5057  002A  00A6               	movwf	??_sprintf
  5058  002B  0826               	movf	??_sprintf,w
  5059  002C  00AB               	movwf	sprintf@ap
  5060                           
  5061                           ;doprnt.c: 553: while((c = *f++)) {
  5062  002D  2A25               	goto	l2562
  5063  002E                     l2436:
  5064                           
  5065                           ;doprnt.c: 555: if(c != '%')
  5066  002E  3025               	movlw	37
  5067  002F  0633               	xorwf	sprintf@c,w
  5068  0030  1903               	btfsc	3,2
  5069  0031  2833               	goto	u2351
  5070  0032  2834               	goto	u2350
  5071  0033                     u2351:
  5072  0033  2840               	goto	l2442
  5073  0034                     u2350:
  5074  0034                     l2438:
  5075                           
  5076                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
  5077  0034  0833               	movf	sprintf@c,w
  5078  0035  00A6               	movwf	??_sprintf
  5079  0036  0832               	movf	sprintf@sp,w
  5080  0037  0086               	movwf	6
  5081  0038  0187               	clrf	7
  5082  0039  0826               	movf	??_sprintf,w
  5083  003A  0081               	movwf	1
  5084  003B                     l2440:
  5085  003B  3001               	movlw	1
  5086  003C  00A6               	movwf	??_sprintf
  5087  003D  0826               	movf	??_sprintf,w
  5088  003E  07B2               	addwf	sprintf@sp,f
  5089                           
  5090                           ;doprnt.c: 559: continue;
  5091  003F  2A25               	goto	l2562
  5092  0040                     l2442:
  5093                           
  5094                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
  5095  0040  01B0               	clrf	sprintf@width
  5096  0041  01B1               	clrf	sprintf@width+1
  5097                           
  5098                           ;doprnt.c: 565: flag = 0;
  5099  0042  01AF               	clrf	sprintf@flag
  5100  0043  2849               	goto	l2448
  5101  0044                     l764:	
  5102                           ;doprnt.c: 596: case '0':
  5103                           
  5104                           
  5105                           ;doprnt.c: 597: flag |= 0x04;
  5106  0044  152F               	bsf	sprintf@flag,2
  5107  0045                     l2444:
  5108                           
  5109                           ;doprnt.c: 598: f++;
  5110  0045  3001               	movlw	1
  5111  0046  07A0               	addwf	sprintf@f,f
  5112  0047  3000               	movlw	0
  5113  0048  3DA1               	addwfc	sprintf@f+1,f
  5114  0049                     l2448:	
  5115                           ;doprnt.c: 599: continue;
  5116                           
  5117  0049  0820               	movf	sprintf@f,w
  5118  004A  0084               	movwf	4
  5119  004B  0821               	movf	sprintf@f+1,w
  5120  004C  0085               	movwf	5
  5121  004D  0800               	movf	0,w	;code access
  5122                           
  5123                           ; Switch size 1, requested type "simple"
  5124                           ; Number of cases is 1, Range of values is 48 to 48
  5125                           ; switch strategies available:
  5126                           ; Name         Instructions Cycles
  5127                           ; simple_byte            4     3 (average)
  5128                           ; direct_byte           11     9 (fixed)
  5129                           ; jumptable            263     9 (fixed)
  5130                           ;	Chosen strategy is simple_byte
  5131  004E  3A30               	xorlw	48	; case 48
  5132  004F  1903               	skipnz
  5133  0050  2844               	goto	l764
  5134  0051  2852               	goto	l2450
  5135  0052                     l2450:
  5136                           
  5137                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
  5138  0052  0820               	movf	sprintf@f,w
  5139  0053  0084               	movwf	4
  5140  0054  0821               	movf	sprintf@f+1,w
  5141  0055  0085               	movwf	5
  5142  0056  0800               	movf	0,w	;code access
  5143  0057  3187  27DF  3180   	fcall	_isdigit
  5144  005A  1C03               	btfss	3,0
  5145  005B  285D               	goto	u2361
  5146  005C  285E               	goto	u2360
  5147  005D                     u2361:
  5148  005D  2894               	goto	l2464
  5149  005E                     u2360:
  5150  005E                     l2452:
  5151                           
  5152                           ;doprnt.c: 615: width = 0;
  5153  005E  0020               	movlb	0	; select bank0
  5154  005F  01B0               	clrf	sprintf@width
  5155  0060  01B1               	clrf	sprintf@width+1
  5156  0061                     l2454:
  5157                           
  5158                           ;doprnt.c: 617: width *= 10;
  5159  0061  300A               	movlw	10
  5160  0062  00F0               	movwf	___wmul@multiplier
  5161  0063  3000               	movlw	0
  5162  0064  00F1               	movwf	___wmul@multiplier+1
  5163  0065  0020               	movlb	0	; select bank0
  5164  0066  0831               	movf	sprintf@width+1,w
  5165  0067  00F3               	movwf	___wmul@multiplicand+1
  5166  0068  0830               	movf	sprintf@width,w
  5167  0069  00F2               	movwf	___wmul@multiplicand
  5168  006A  3187  2772  3180   	fcall	___wmul
  5169  006D  0871               	movf	?___wmul+1,w
  5170  006E  0020               	movlb	0	; select bank0
  5171  006F  00B1               	movwf	sprintf@width+1
  5172  0070  0870               	movf	?___wmul,w
  5173  0071  00B0               	movwf	sprintf@width
  5174  0072                     l2456:
  5175                           
  5176                           ;doprnt.c: 618: width += *f++ - '0';
  5177  0072  0820               	movf	sprintf@f,w
  5178  0073  0084               	movwf	4
  5179  0074  0821               	movf	sprintf@f+1,w
  5180  0075  0085               	movwf	5
  5181  0076  0800               	movf	0,w	;code access
  5182  0077  3ED0               	addlw	208
  5183  0078  00A6               	movwf	??_sprintf
  5184  0079  30FF               	movlw	255
  5185  007A  1803               	skipnc
  5186  007B  3000               	movlw	0
  5187  007C  00A7               	movwf	??_sprintf+1
  5188  007D  0826               	movf	??_sprintf,w
  5189  007E  07B0               	addwf	sprintf@width,f
  5190  007F  0827               	movf	??_sprintf+1,w
  5191  0080  3DB1               	addwfc	sprintf@width+1,f
  5192  0081                     l2458:
  5193  0081  3001               	movlw	1
  5194  0082  07A0               	addwf	sprintf@f,f
  5195  0083  3000               	movlw	0
  5196  0084  3DA1               	addwfc	sprintf@f+1,f
  5197  0085                     l2460:
  5198                           
  5199                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
  5200  0085  0820               	movf	sprintf@f,w
  5201  0086  0084               	movwf	4
  5202  0087  0821               	movf	sprintf@f+1,w
  5203  0088  0085               	movwf	5
  5204  0089  0800               	movf	0,w	;code access
  5205  008A  3187  27DF  3180   	fcall	_isdigit
  5206  008D  1803               	btfsc	3,0
  5207  008E  2890               	goto	u2371
  5208  008F  2891               	goto	u2370
  5209  0090                     u2371:
  5210  0090  2861               	goto	l2454
  5211  0091                     u2370:
  5212  0091  2894               	goto	l2464
  5213  0092                     l777:	
  5214                           ;doprnt.c: 744: case 'x':
  5215                           
  5216                           
  5217                           ;doprnt.c: 747: flag |= 0x80;
  5218  0092  17AF               	bsf	sprintf@flag,7
  5219                           
  5220                           ;doprnt.c: 749: break;
  5221  0093  28AF               	goto	l776
  5222  0094                     l2464:
  5223  0094  0020               	movlb	0	; select bank0
  5224  0095  0821               	movf	sprintf@f+1,w
  5225  0096  00A7               	movwf	??_sprintf+1
  5226  0097  0820               	movf	sprintf@f,w
  5227  0098  00A6               	movwf	??_sprintf
  5228  0099  0AA0               	incf	sprintf@f,f
  5229  009A  1903               	skipnz
  5230  009B  0AA1               	incf	sprintf@f+1,f
  5231  009C  0826               	movf	??_sprintf,w
  5232  009D  0084               	movwf	4
  5233  009E  0827               	movf	??_sprintf+1,w
  5234  009F  0085               	movwf	5
  5235  00A0  0800               	movf	0,w	;code access
  5236  00A1  00B3               	movwf	sprintf@c
  5237                           
  5238                           ; Switch size 1, requested type "simple"
  5239                           ; Number of cases is 4, Range of values is 0 to 120
  5240                           ; switch strategies available:
  5241                           ; Name         Instructions Cycles
  5242                           ; simple_byte           13     7 (average)
  5243                           ; direct_byte          248     6 (fixed)
  5244                           ; jumptable            260     6 (fixed)
  5245                           ;	Chosen strategy is simple_byte
  5246  00A2  3A00               	xorlw	0	; case 0
  5247  00A3  1903               	skipnz
  5248  00A4  2A39               	goto	l2564
  5249  00A5  3A64               	xorlw	100	; case 100
  5250  00A6  1903               	skipnz
  5251  00A7  28AF               	goto	l776
  5252  00A8  3A0D               	xorlw	13	; case 105
  5253  00A9  1903               	skipnz
  5254  00AA  28AF               	goto	l776
  5255  00AB  3A11               	xorlw	17	; case 120
  5256  00AC  1903               	skipnz
  5257  00AD  2892               	goto	l777
  5258  00AE  2A25               	goto	l2562
  5259  00AF                     l776:
  5260                           
  5261                           ;doprnt.c: 1277: if((flag & 0x80) == 0x00)
  5262  00AF  1BAF               	btfsc	sprintf@flag,7
  5263  00B0  28B2               	goto	u2381
  5264  00B1  28B3               	goto	u2380
  5265  00B2                     u2381:
  5266  00B2  28CC               	goto	l2476
  5267  00B3                     u2380:
  5268  00B3                     l2466:
  5269                           
  5270                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
  5271  00B3  082B               	movf	sprintf@ap,w
  5272  00B4  0086               	movwf	6
  5273  00B5  0187               	clrf	7
  5274  00B6  3F40               	moviw [0]fsr1
  5275  00B7  00AD               	movwf	sprintf@val
  5276  00B8  3F41               	moviw [1]fsr1
  5277  00B9  00AE               	movwf	sprintf@val+1
  5278  00BA                     l2468:
  5279  00BA  3002               	movlw	2
  5280  00BB  00A6               	movwf	??_sprintf
  5281  00BC  0826               	movf	??_sprintf,w
  5282  00BD  07AB               	addwf	sprintf@ap,f
  5283  00BE                     l2470:
  5284                           
  5285                           ;doprnt.c: 1287: if((int)val < 0) {
  5286  00BE  1FAE               	btfss	sprintf@val+1,7
  5287  00BF  28C1               	goto	u2391
  5288  00C0  28C2               	goto	u2390
  5289  00C1                     u2391:
  5290  00C1  2926               	goto	l2502
  5291  00C2                     u2390:
  5292  00C2                     l2472:
  5293                           
  5294                           ;doprnt.c: 1288: flag |= 0x03;
  5295  00C2  3003               	movlw	3
  5296  00C3  00A6               	movwf	??_sprintf
  5297  00C4  0826               	movf	??_sprintf,w
  5298  00C5  04AF               	iorwf	sprintf@flag,f
  5299  00C6                     l2474:
  5300                           
  5301                           ;doprnt.c: 1289: val = -val;
  5302  00C6  09AD               	comf	sprintf@val,f
  5303  00C7  09AE               	comf	sprintf@val+1,f
  5304  00C8  0AAD               	incf	sprintf@val,f
  5305  00C9  1903               	skipnz
  5306  00CA  0AAE               	incf	sprintf@val+1,f
  5307  00CB  2926               	goto	l2502
  5308  00CC                     l2476:
  5309                           
  5310                           ;doprnt.c: 1294: else;doprnt.c: 1299: {;doprnt.c: 1312: val = (*(unsigned *)__va_arg((*(
      +                          unsigned **)ap), (unsigned)0));
  5311  00CC  082B               	movf	sprintf@ap,w
  5312  00CD  0086               	movwf	6
  5313  00CE  0187               	clrf	7
  5314  00CF  3F40               	moviw [0]fsr1
  5315  00D0  00AD               	movwf	sprintf@val
  5316  00D1  3F41               	moviw [1]fsr1
  5317  00D2  00AE               	movwf	sprintf@val+1
  5318  00D3                     l2478:
  5319  00D3  3002               	movlw	2
  5320  00D4  00A6               	movwf	??_sprintf
  5321  00D5  0826               	movf	??_sprintf,w
  5322  00D6  07AB               	addwf	sprintf@ap,f
  5323  00D7  2926               	goto	l2502
  5324  00D8                     l783:	
  5325                           ;doprnt.c: 1325: case 0x00:
  5326                           
  5327                           
  5328                           ;doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5329  00D8  01B3               	clrf	sprintf@c
  5330  00D9  0AB3               	incf	sprintf@c,f
  5331  00DA                     l2484:
  5332                           
  5333                           ;doprnt.c: 1332: if(val < dpowers[c])
  5334  00DA  0833               	movf	sprintf@c,w
  5335  00DB  00A6               	movwf	??_sprintf
  5336  00DC  01A7               	clrf	??_sprintf+1
  5337  00DD  35A6               	lslf	??_sprintf,f
  5338  00DE  0DA7               	rlf	??_sprintf+1,f
  5339  00DF  30FD               	movlw	low (_dpowers| (0+32768))
  5340  00E0  0726               	addwf	??_sprintf,w
  5341  00E1  0084               	movwf	4
  5342  00E2  3087               	movlw	high (_dpowers| (0+32768))
  5343  00E3  3D27               	addwfc	??_sprintf+1,w
  5344  00E4  0085               	movwf	5
  5345  00E5  3F00               	moviw [0]fsr0
  5346  00E6  00A8               	movwf	??_sprintf+2
  5347  00E7  3F01               	moviw [1]fsr0
  5348  00E8  00A9               	movwf	??_sprintf+3
  5349  00E9  0829               	movf	??_sprintf+3,w
  5350  00EA  022E               	subwf	sprintf@val+1,w
  5351  00EB  1D03               	skipz
  5352  00EC  28EF               	goto	u2405
  5353  00ED  0828               	movf	??_sprintf+2,w
  5354  00EE  022D               	subwf	sprintf@val,w
  5355  00EF                     u2405:
  5356  00EF  1803               	skipnc
  5357  00F0  28F2               	goto	u2401
  5358  00F1  28F3               	goto	u2400
  5359  00F2                     u2401:
  5360  00F2  28F4               	goto	l2488
  5361  00F3                     u2400:
  5362  00F3  292F               	goto	l2504
  5363  00F4                     l2488:
  5364  00F4  3001               	movlw	1
  5365  00F5  00A6               	movwf	??_sprintf
  5366  00F6  0826               	movf	??_sprintf,w
  5367  00F7  07B3               	addwf	sprintf@c,f
  5368  00F8  3005               	movlw	5
  5369  00F9  0633               	xorwf	sprintf@c,w
  5370  00FA  1D03               	btfss	3,2
  5371  00FB  28FD               	goto	u2411
  5372  00FC  28FE               	goto	u2410
  5373  00FD                     u2411:
  5374  00FD  28DA               	goto	l2484
  5375  00FE                     u2410:
  5376  00FE  292F               	goto	l2504
  5377  00FF                     l788:	
  5378                           ;doprnt.c: 1340: case 0x80:
  5379                           
  5380                           
  5381                           ;doprnt.c: 1342: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  5382  00FF  01B3               	clrf	sprintf@c
  5383  0100  0AB3               	incf	sprintf@c,f
  5384  0101                     l2494:
  5385                           
  5386                           ;doprnt.c: 1343: if(val < hexpowers[c])
  5387  0101  0833               	movf	sprintf@c,w
  5388  0102  00A6               	movwf	??_sprintf
  5389  0103  01A7               	clrf	??_sprintf+1
  5390  0104  35A6               	lslf	??_sprintf,f
  5391  0105  0DA7               	rlf	??_sprintf+1,f
  5392  0106  30C6               	movlw	low (_hexpowers| (0+32768))
  5393  0107  0726               	addwf	??_sprintf,w
  5394  0108  0084               	movwf	4
  5395  0109  3087               	movlw	high (_hexpowers| (0+32768))
  5396  010A  3D27               	addwfc	??_sprintf+1,w
  5397  010B  0085               	movwf	5
  5398  010C  3F00               	moviw [0]fsr0
  5399  010D  00A8               	movwf	??_sprintf+2
  5400  010E  3F01               	moviw [1]fsr0
  5401  010F  00A9               	movwf	??_sprintf+3
  5402  0110  0829               	movf	??_sprintf+3,w
  5403  0111  022E               	subwf	sprintf@val+1,w
  5404  0112  1D03               	skipz
  5405  0113  2916               	goto	u2425
  5406  0114  0828               	movf	??_sprintf+2,w
  5407  0115  022D               	subwf	sprintf@val,w
  5408  0116                     u2425:
  5409  0116  1803               	skipnc
  5410  0117  2919               	goto	u2421
  5411  0118  291A               	goto	u2420
  5412  0119                     u2421:
  5413  0119  291B               	goto	l2498
  5414  011A                     u2420:
  5415  011A  292F               	goto	l2504
  5416  011B                     l2498:
  5417  011B  3001               	movlw	1
  5418  011C  00A6               	movwf	??_sprintf
  5419  011D  0826               	movf	??_sprintf,w
  5420  011E  07B3               	addwf	sprintf@c,f
  5421  011F  3004               	movlw	4
  5422  0120  0633               	xorwf	sprintf@c,w
  5423  0121  1D03               	btfss	3,2
  5424  0122  2924               	goto	u2431
  5425  0123  2925               	goto	u2430
  5426  0124                     u2431:
  5427  0124  2901               	goto	l2494
  5428  0125                     u2430:
  5429  0125  292F               	goto	l2504
  5430  0126                     l2502:
  5431  0126  082F               	movf	sprintf@flag,w
  5432  0127  3980               	andlw	128
  5433                           
  5434                           ; Switch size 1, requested type "simple"
  5435                           ; Number of cases is 2, Range of values is 0 to 128
  5436                           ; switch strategies available:
  5437                           ; Name         Instructions Cycles
  5438                           ; simple_byte            7     4 (average)
  5439                           ; jumptable            260     6 (fixed)
  5440                           ;	Chosen strategy is simple_byte
  5441  0128  3A00               	xorlw	0	; case 0
  5442  0129  1903               	skipnz
  5443  012A  28D8               	goto	l783
  5444  012B  3A80               	xorlw	128	; case 128
  5445  012C  1903               	skipnz
  5446  012D  28FF               	goto	l788
  5447  012E  292F               	goto	l2504
  5448  012F                     l2504:
  5449                           
  5450                           ;doprnt.c: 1371: if(width && flag & 0x03)
  5451  012F  0830               	movf	sprintf@width,w
  5452  0130  0431               	iorwf	sprintf@width+1,w
  5453  0131  1903               	btfsc	3,2
  5454  0132  2934               	goto	u2441
  5455  0133  2935               	goto	u2440
  5456  0134                     u2441:
  5457  0134  293F               	goto	l792
  5458  0135                     u2440:
  5459  0135                     l2506:
  5460  0135  082F               	movf	sprintf@flag,w
  5461  0136  3903               	andlw	3
  5462  0137  1903               	btfsc	3,2
  5463  0138  293A               	goto	u2451
  5464  0139  293B               	goto	u2450
  5465  013A                     u2451:
  5466  013A  293F               	goto	l792
  5467  013B                     u2450:
  5468  013B                     l2508:
  5469                           
  5470                           ;doprnt.c: 1372: width--;
  5471  013B  30FF               	movlw	255
  5472  013C  07B0               	addwf	sprintf@width,f
  5473  013D  30FF               	movlw	255
  5474  013E  3DB1               	addwfc	sprintf@width+1,f
  5475  013F                     l792:
  5476                           
  5477                           ;doprnt.c: 1407: if(width > c)
  5478  013F  0831               	movf	sprintf@width+1,w
  5479  0140  3A80               	xorlw	128
  5480  0141  3C80               	sublw	128
  5481  0142  1D03               	skipz
  5482  0143  2946               	goto	u2465
  5483  0144  0830               	movf	sprintf@width,w
  5484  0145  0233               	subwf	sprintf@c,w
  5485  0146                     u2465:
  5486  0146  1803               	skipnc
  5487  0147  2949               	goto	u2461
  5488  0148  294A               	goto	u2460
  5489  0149                     u2461:
  5490  0149  2953               	goto	l2512
  5491  014A                     u2460:
  5492  014A                     l2510:
  5493                           
  5494                           ;doprnt.c: 1408: width -= c;
  5495  014A  0020               	movlb	0	; select bank0
  5496  014B  0833               	movf	sprintf@c,w
  5497  014C  00A6               	movwf	??_sprintf
  5498  014D  01A7               	clrf	??_sprintf+1
  5499  014E  0826               	movf	??_sprintf,w
  5500  014F  02B0               	subwf	sprintf@width,f
  5501  0150  0827               	movf	??_sprintf+1,w
  5502  0151  3BB1               	subwfb	sprintf@width+1,f
  5503  0152  2956               	goto	l2514
  5504  0153                     l2512:
  5505                           
  5506                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
  5507  0153  0020               	movlb	0	; select bank0
  5508  0154  01B0               	clrf	sprintf@width
  5509  0155  01B1               	clrf	sprintf@width+1
  5510  0156                     l2514:
  5511                           
  5512                           ;doprnt.c: 1413: if(flag & 0x04) {
  5513  0156  1D2F               	btfss	sprintf@flag,2
  5514  0157  2959               	goto	u2471
  5515  0158  295A               	goto	u2470
  5516  0159                     u2471:
  5517  0159  2987               	goto	l2530
  5518  015A                     u2470:
  5519  015A                     l2516:
  5520                           
  5521                           ;doprnt.c: 1418: if(flag & 0x03)
  5522  015A  082F               	movf	sprintf@flag,w
  5523  015B  3903               	andlw	3
  5524  015C  1903               	btfsc	3,2
  5525  015D  295F               	goto	u2481
  5526  015E  2960               	goto	u2480
  5527  015F                     u2481:
  5528  015F  296B               	goto	l2522
  5529  0160                     u2480:
  5530  0160                     l2518:
  5531                           
  5532                           ;doprnt.c: 1419: ((*sp++ = ('-')));
  5533  0160  302D               	movlw	45
  5534  0161  00A6               	movwf	??_sprintf
  5535  0162  0832               	movf	sprintf@sp,w
  5536  0163  0086               	movwf	6
  5537  0164  0187               	clrf	7
  5538  0165  0826               	movf	??_sprintf,w
  5539  0166  0081               	movwf	1
  5540  0167                     l2520:
  5541  0167  3001               	movlw	1
  5542  0168  00A6               	movwf	??_sprintf
  5543  0169  0826               	movf	??_sprintf,w
  5544  016A  07B2               	addwf	sprintf@sp,f
  5545  016B                     l2522:
  5546                           
  5547                           ;doprnt.c: 1441: if(width)
  5548  016B  0830               	movf	sprintf@width,w
  5549  016C  0431               	iorwf	sprintf@width+1,w
  5550  016D  1903               	btfsc	3,2
  5551  016E  2970               	goto	u2491
  5552  016F  2971               	goto	u2490
  5553  0170                     u2491:
  5554  0170  29B3               	goto	l2544
  5555  0171                     u2490:
  5556  0171                     l2524:
  5557                           
  5558                           ;doprnt.c: 1443: ((*sp++ = ('0')));
  5559  0171  3030               	movlw	48
  5560  0172  00A6               	movwf	??_sprintf
  5561  0173  0832               	movf	sprintf@sp,w
  5562  0174  0086               	movwf	6
  5563  0175  0187               	clrf	7
  5564  0176  0826               	movf	??_sprintf,w
  5565  0177  0081               	movwf	1
  5566  0178                     l2526:
  5567  0178  3001               	movlw	1
  5568  0179  00A6               	movwf	??_sprintf
  5569  017A  0826               	movf	??_sprintf,w
  5570  017B  07B2               	addwf	sprintf@sp,f
  5571  017C                     l2528:
  5572                           
  5573                           ;doprnt.c: 1444: while(--width);
  5574  017C  30FF               	movlw	255
  5575  017D  07B0               	addwf	sprintf@width,f
  5576  017E  30FF               	movlw	255
  5577  017F  3DB1               	addwfc	sprintf@width+1,f
  5578  0180  0830               	movf	sprintf@width,w
  5579  0181  0431               	iorwf	sprintf@width+1,w
  5580  0182  1D03               	btfss	3,2
  5581  0183  2985               	goto	u2501
  5582  0184  2986               	goto	u2500
  5583  0185                     u2501:
  5584  0185  2971               	goto	l2524
  5585  0186                     u2500:
  5586  0186  29B3               	goto	l2544
  5587  0187                     l2530:
  5588                           
  5589                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
  5590  0187  0830               	movf	sprintf@width,w
  5591  0188  0431               	iorwf	sprintf@width+1,w
  5592  0189  1903               	btfsc	3,2
  5593  018A  298C               	goto	u2511
  5594  018B  298D               	goto	u2510
  5595  018C                     u2511:
  5596  018C  29A2               	goto	l2538
  5597  018D                     u2510:
  5598  018D                     l2532:
  5599                           
  5600                           ;doprnt.c: 1456: ((*sp++ = (' ')));
  5601  018D  3020               	movlw	32
  5602  018E  00A6               	movwf	??_sprintf
  5603  018F  0832               	movf	sprintf@sp,w
  5604  0190  0086               	movwf	6
  5605  0191  0187               	clrf	7
  5606  0192  0826               	movf	??_sprintf,w
  5607  0193  0081               	movwf	1
  5608  0194                     l2534:
  5609  0194  3001               	movlw	1
  5610  0195  00A6               	movwf	??_sprintf
  5611  0196  0826               	movf	??_sprintf,w
  5612  0197  07B2               	addwf	sprintf@sp,f
  5613  0198                     l2536:
  5614                           
  5615                           ;doprnt.c: 1457: while(--width);
  5616  0198  30FF               	movlw	255
  5617  0199  07B0               	addwf	sprintf@width,f
  5618  019A  30FF               	movlw	255
  5619  019B  3DB1               	addwfc	sprintf@width+1,f
  5620  019C  0830               	movf	sprintf@width,w
  5621  019D  0431               	iorwf	sprintf@width+1,w
  5622  019E  1D03               	btfss	3,2
  5623  019F  29A1               	goto	u2521
  5624  01A0  29A2               	goto	u2520
  5625  01A1                     u2521:
  5626  01A1  298D               	goto	l2532
  5627  01A2                     u2520:
  5628  01A2                     l2538:
  5629                           
  5630                           ;doprnt.c: 1464: if(flag & 0x03)
  5631  01A2  082F               	movf	sprintf@flag,w
  5632  01A3  3903               	andlw	3
  5633  01A4  1903               	btfsc	3,2
  5634  01A5  29A7               	goto	u2531
  5635  01A6  29A8               	goto	u2530
  5636  01A7                     u2531:
  5637  01A7  29B3               	goto	l2544
  5638  01A8                     u2530:
  5639  01A8                     l2540:
  5640                           
  5641                           ;doprnt.c: 1465: ((*sp++ = ('-')));
  5642  01A8  302D               	movlw	45
  5643  01A9  00A6               	movwf	??_sprintf
  5644  01AA  0832               	movf	sprintf@sp,w
  5645  01AB  0086               	movwf	6
  5646  01AC  0187               	clrf	7
  5647  01AD  0826               	movf	??_sprintf,w
  5648  01AE  0081               	movwf	1
  5649  01AF                     l2542:
  5650  01AF  3001               	movlw	1
  5651  01B0  00A6               	movwf	??_sprintf
  5652  01B1  0826               	movf	??_sprintf,w
  5653  01B2  07B2               	addwf	sprintf@sp,f
  5654  01B3                     l2544:
  5655                           
  5656                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
  5657  01B3  0833               	movf	sprintf@c,w
  5658  01B4  00A6               	movwf	??_sprintf
  5659  01B5  0826               	movf	??_sprintf,w
  5660  01B6  00AC               	movwf	sprintf@prec
  5661                           
  5662                           ;doprnt.c: 1500: while(prec--) {
  5663  01B7  2A1C               	goto	l2560
  5664  01B8                     l2546:
  5665                           
  5666                           ;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
  5667  01B8  300A               	movlw	10
  5668  01B9  00F8               	movwf	___lwmod@divisor
  5669  01BA  3000               	movlw	0
  5670  01BB  00F9               	movwf	___lwmod@divisor+1
  5671  01BC  082C               	movf	sprintf@prec,w
  5672  01BD  00A6               	movwf	??_sprintf
  5673  01BE  01A7               	clrf	??_sprintf+1
  5674  01BF  35A6               	lslf	??_sprintf,f
  5675  01C0  0DA7               	rlf	??_sprintf+1,f
  5676  01C1  30FD               	movlw	low (_dpowers| (0+32768))
  5677  01C2  0726               	addwf	??_sprintf,w
  5678  01C3  0084               	movwf	4
  5679  01C4  3087               	movlw	high (_dpowers| (0+32768))
  5680  01C5  3D27               	addwfc	??_sprintf+1,w
  5681  01C6  0085               	movwf	5
  5682  01C7  3F00               	moviw [0]fsr0
  5683  01C8  00F0               	movwf	___lwdiv@divisor
  5684  01C9  3F01               	moviw [1]fsr0
  5685  01CA  00F1               	movwf	___lwdiv@divisor+1
  5686  01CB  082E               	movf	sprintf@val+1,w
  5687  01CC  00F3               	movwf	___lwdiv@dividend+1
  5688  01CD  082D               	movf	sprintf@val,w
  5689  01CE  00F2               	movwf	___lwdiv@dividend
  5690  01CF  3186  26C7  3180   	fcall	___lwdiv
  5691  01D2  0871               	movf	?___lwdiv+1,w
  5692  01D3  00FB               	movwf	___lwmod@dividend+1
  5693  01D4  0870               	movf	?___lwdiv,w
  5694  01D5  00FA               	movwf	___lwmod@dividend
  5695  01D6  3187  273E  3180   	fcall	___lwmod
  5696  01D9  0878               	movf	?___lwmod,w
  5697  01DA  3E30               	addlw	48
  5698  01DB  0020               	movlb	0	; select bank0
  5699  01DC  00A8               	movwf	??_sprintf+2
  5700  01DD  0828               	movf	??_sprintf+2,w
  5701  01DE  00B3               	movwf	sprintf@c
  5702                           
  5703                           ;doprnt.c: 1517: break;
  5704  01DF  2A11               	goto	l2556
  5705  01E0                     l2548:
  5706                           
  5707                           ;doprnt.c: 1525: {;doprnt.c: 1526: unsigned char idx = (val / hexpowers[(unsigned char)p
      +                          rec]) & 0xF;
  5708  01E0  082C               	movf	sprintf@prec,w
  5709  01E1  00A6               	movwf	??_sprintf
  5710  01E2  01A7               	clrf	??_sprintf+1
  5711  01E3  35A6               	lslf	??_sprintf,f
  5712  01E4  0DA7               	rlf	??_sprintf+1,f
  5713  01E5  30C6               	movlw	low (_hexpowers| (0+32768))
  5714  01E6  0726               	addwf	??_sprintf,w
  5715  01E7  0084               	movwf	4
  5716  01E8  3087               	movlw	high (_hexpowers| (0+32768))
  5717  01E9  3D27               	addwfc	??_sprintf+1,w
  5718  01EA  0085               	movwf	5
  5719  01EB  3F00               	moviw [0]fsr0
  5720  01EC  00F0               	movwf	___lwdiv@divisor
  5721  01ED  3F01               	moviw [1]fsr0
  5722  01EE  00F1               	movwf	___lwdiv@divisor+1
  5723  01EF  082E               	movf	sprintf@val+1,w
  5724  01F0  00F3               	movwf	___lwdiv@dividend+1
  5725  01F1  082D               	movf	sprintf@val,w
  5726  01F2  00F2               	movwf	___lwdiv@dividend
  5727  01F3  3186  26C7  3180   	fcall	___lwdiv
  5728  01F6  0870               	movf	?___lwdiv,w
  5729  01F7  390F               	andlw	15
  5730  01F8  0020               	movlb	0	; select bank0
  5731  01F9  00A8               	movwf	??_sprintf+2
  5732  01FA  0828               	movf	??_sprintf+2,w
  5733  01FB  00AA               	movwf	sprintf@idx
  5734  01FC                     l2550:
  5735                           
  5736                           ;doprnt.c: 1532: c = "0123456789abcdef"[idx];
  5737  01FC  082A               	movf	sprintf@idx,w
  5738  01FD  3ECE               	addlw	low (STR_4| (0+32768))
  5739  01FE  0084               	movwf	4
  5740  01FF  3087               	movlw	high (STR_4| (0+32768))
  5741  0200  1803               	skipnc
  5742  0201  3E01               	addlw	1
  5743  0202  0085               	movwf	5
  5744  0203  0800               	movf	0,w	;code access
  5745  0204  00A6               	movwf	??_sprintf
  5746  0205  0826               	movf	??_sprintf,w
  5747  0206  00B3               	movwf	sprintf@c
  5748                           
  5749                           ;doprnt.c: 1534: };doprnt.c: 1536: break;
  5750  0207  2A11               	goto	l2556
  5751  0208                     l2554:
  5752  0208  082F               	movf	sprintf@flag,w
  5753  0209  3980               	andlw	128
  5754                           
  5755                           ; Switch size 1, requested type "simple"
  5756                           ; Number of cases is 2, Range of values is 0 to 128
  5757                           ; switch strategies available:
  5758                           ; Name         Instructions Cycles
  5759                           ; simple_byte            7     4 (average)
  5760                           ; jumptable            260     6 (fixed)
  5761                           ;	Chosen strategy is simple_byte
  5762  020A  3A00               	xorlw	0	; case 0
  5763  020B  1903               	skipnz
  5764  020C  29B8               	goto	l2546
  5765  020D  3A80               	xorlw	128	; case 128
  5766  020E  1903               	skipnz
  5767  020F  29E0               	goto	l2548
  5768  0210  2A11               	goto	l2556
  5769  0211                     l2556:
  5770                           
  5771                           ;doprnt.c: 1550: ((*sp++ = (c)));
  5772  0211  0833               	movf	sprintf@c,w
  5773  0212  00A6               	movwf	??_sprintf
  5774  0213  0832               	movf	sprintf@sp,w
  5775  0214  0086               	movwf	6
  5776  0215  0187               	clrf	7
  5777  0216  0826               	movf	??_sprintf,w
  5778  0217  0081               	movwf	1
  5779  0218                     l2558:
  5780  0218  3001               	movlw	1
  5781  0219  00A6               	movwf	??_sprintf
  5782  021A  0826               	movf	??_sprintf,w
  5783  021B  07B2               	addwf	sprintf@sp,f
  5784  021C                     l2560:
  5785  021C  30FF               	movlw	255
  5786  021D  00A6               	movwf	??_sprintf
  5787  021E  0826               	movf	??_sprintf,w
  5788  021F  07AC               	addwf	sprintf@prec,f
  5789  0220  0A2C               	incf	sprintf@prec,w
  5790  0221  1D03               	btfss	3,2
  5791  0222  2A24               	goto	u2541
  5792  0223  2A25               	goto	u2540
  5793  0224                     u2541:
  5794  0224  2A08               	goto	l2554
  5795  0225                     u2540:
  5796  0225                     l2562:
  5797  0225  0821               	movf	sprintf@f+1,w
  5798  0226  00A7               	movwf	??_sprintf+1
  5799  0227  0820               	movf	sprintf@f,w
  5800  0228  00A6               	movwf	??_sprintf
  5801  0229  0AA0               	incf	sprintf@f,f
  5802  022A  1903               	skipnz
  5803  022B  0AA1               	incf	sprintf@f+1,f
  5804  022C  0826               	movf	??_sprintf,w
  5805  022D  0084               	movwf	4
  5806  022E  0827               	movf	??_sprintf+1,w
  5807  022F  0085               	movwf	5
  5808  0230  0800               	movf	0,w	;code access
  5809  0231  00A8               	movwf	??_sprintf+2
  5810  0232  0828               	movf	??_sprintf+2,w
  5811  0233  00B3               	movwf	sprintf@c
  5812  0234  0833               	movf	sprintf@c,w
  5813  0235  1D03               	btfss	3,2
  5814  0236  2A38               	goto	u2551
  5815  0237  2A39               	goto	u2550
  5816  0238                     u2551:
  5817  0238  282E               	goto	l2436
  5818  0239                     u2550:
  5819  0239                     l2564:
  5820                           
  5821                           ;doprnt.c: 1564: *sp = 0;
  5822  0239  0832               	movf	sprintf@sp,w
  5823  023A  0086               	movwf	6
  5824  023B  0187               	clrf	7
  5825  023C  0181               	clrf	1
  5826  023D                     l813:
  5827  023D  0008               	return
  5828  023E                     __end_of_sprintf:
  5829                           
  5830                           	psect	text3
  5831  07DF                     __ptext3:	
  5832 ;; *************** function _isdigit *****************
  5833 ;; Defined at:
  5834 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
  5835 ;; Parameters:    Size  Location     Type
  5836 ;;  c               1    wreg     unsigned char 
  5837 ;; Auto vars:     Size  Location     Type
  5838 ;;  c               1    1[COMMON] unsigned char 
  5839 ;; Return value:  Size  Location     Type
  5840 ;;		None               void
  5841 ;; Registers used:
  5842 ;;		wreg, status,2, status,0
  5843 ;; Tracked objects:
  5844 ;;		On entry : 0/0
  5845 ;;		On exit  : 0/0
  5846 ;;		Unchanged: 0/0
  5847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5849 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5851 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5852 ;;Total ram usage:        2 bytes
  5853 ;; Hardware stack levels used:    1
  5854 ;; Hardware stack levels required when called:    1
  5855 ;; This function calls:
  5856 ;;		Nothing
  5857 ;; This function is called by:
  5858 ;;		_sprintf
  5859 ;; This function uses a non-reentrant model
  5860 ;;
  5861                           
  5862                           
  5863                           ;psect for function _isdigit
  5864  07DF                     _isdigit:
  5865                           
  5866                           ;incstack = 0
  5867                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5868                           ;isdigit@c stored from wreg
  5869  07DF  00F1               	movwf	isdigit@c
  5870  07E0                     l2182:
  5871  07E0  01F0               	clrf	_isdigit$1514
  5872  07E1                     l2184:
  5873  07E1  303A               	movlw	58
  5874  07E2  0271               	subwf	isdigit@c,w
  5875  07E3  1803               	skipnc
  5876  07E4  2FE6               	goto	u1621
  5877  07E5  2FE7               	goto	u1620
  5878  07E6                     u1621:
  5879  07E6  2FEF               	goto	l2190
  5880  07E7                     u1620:
  5881  07E7                     l2186:
  5882  07E7  3030               	movlw	48
  5883  07E8  0271               	subwf	isdigit@c,w
  5884  07E9  1C03               	skipc
  5885  07EA  2FEC               	goto	u1631
  5886  07EB  2FED               	goto	u1630
  5887  07EC                     u1631:
  5888  07EC  2FEF               	goto	l2190
  5889  07ED                     u1630:
  5890  07ED                     l2188:
  5891  07ED  01F0               	clrf	_isdigit$1514
  5892  07EE  0AF0               	incf	_isdigit$1514,f
  5893  07EF                     l2190:
  5894  07EF  0C70               	rrf	_isdigit$1514,w
  5895  07F0                     l1270:
  5896  07F0  0008               	return
  5897  07F1                     __end_of_isdigit:
  5898                           
  5899                           	psect	text4
  5900  0772                     __ptext4:	
  5901 ;; *************** function ___wmul *****************
  5902 ;; Defined at:
  5903 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
  5904 ;; Parameters:    Size  Location     Type
  5905 ;;  multiplier      2    0[COMMON] unsigned int 
  5906 ;;  multiplicand    2    2[COMMON] unsigned int 
  5907 ;; Auto vars:     Size  Location     Type
  5908 ;;  product         2    4[COMMON] unsigned int 
  5909 ;; Return value:  Size  Location     Type
  5910 ;;                  2    0[COMMON] unsigned int 
  5911 ;; Registers used:
  5912 ;;		wreg, status,2, status,0
  5913 ;; Tracked objects:
  5914 ;;		On entry : 0/0
  5915 ;;		On exit  : 0/0
  5916 ;;		Unchanged: 0/0
  5917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5918 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5919 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5921 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5922 ;;Total ram usage:        6 bytes
  5923 ;; Hardware stack levels used:    1
  5924 ;; Hardware stack levels required when called:    1
  5925 ;; This function calls:
  5926 ;;		Nothing
  5927 ;; This function is called by:
  5928 ;;		_sprintf
  5929 ;; This function uses a non-reentrant model
  5930 ;;
  5931                           
  5932                           
  5933                           ;psect for function ___wmul
  5934  0772                     ___wmul:
  5935  0772                     l2194:	
  5936                           ;incstack = 0
  5937                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5938                           
  5939  0772  01F4               	clrf	___wmul@product
  5940  0773  01F5               	clrf	___wmul@product+1
  5941  0774                     l2196:
  5942  0774  1C70               	btfss	___wmul@multiplier,0
  5943  0775  2F77               	goto	u1641
  5944  0776  2F78               	goto	u1640
  5945  0777                     u1641:
  5946  0777  2F7C               	goto	l817
  5947  0778                     u1640:
  5948  0778                     l2198:
  5949  0778  0872               	movf	___wmul@multiplicand,w
  5950  0779  07F4               	addwf	___wmul@product,f
  5951  077A  0873               	movf	___wmul@multiplicand+1,w
  5952  077B  3DF5               	addwfc	___wmul@product+1,f
  5953  077C                     l817:
  5954  077C  3001               	movlw	1
  5955  077D                     u1655:
  5956  077D  35F2               	lslf	___wmul@multiplicand,f
  5957  077E  0DF3               	rlf	___wmul@multiplicand+1,f
  5958  077F  0B89               	decfsz	9,f
  5959  0780  2F7D               	goto	u1655
  5960  0781                     l2200:
  5961  0781  3001               	movlw	1
  5962  0782                     u1665:
  5963  0782  36F1               	lsrf	___wmul@multiplier+1,f
  5964  0783  0CF0               	rrf	___wmul@multiplier,f
  5965  0784  0B89               	decfsz	9,f
  5966  0785  2F82               	goto	u1665
  5967  0786                     l2202:
  5968  0786  0870               	movf	___wmul@multiplier,w
  5969  0787  0471               	iorwf	___wmul@multiplier+1,w
  5970  0788  1D03               	btfss	3,2
  5971  0789  2F8B               	goto	u1671
  5972  078A  2F8C               	goto	u1670
  5973  078B                     u1671:
  5974  078B  2F74               	goto	l2196
  5975  078C                     u1670:
  5976  078C                     l2204:
  5977  078C  0875               	movf	___wmul@product+1,w
  5978  078D  00F1               	movwf	?___wmul+1
  5979  078E  0874               	movf	___wmul@product,w
  5980  078F  00F0               	movwf	?___wmul
  5981  0790                     l819:
  5982  0790  0008               	return
  5983  0791                     __end_of___wmul:
  5984                           
  5985                           	psect	text5
  5986  073E                     __ptext5:	
  5987 ;; *************** function ___lwmod *****************
  5988 ;; Defined at:
  5989 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
  5990 ;; Parameters:    Size  Location     Type
  5991 ;;  divisor         2    8[COMMON] unsigned int 
  5992 ;;  dividend        2   10[COMMON] unsigned int 
  5993 ;; Auto vars:     Size  Location     Type
  5994 ;;  counter         1   13[COMMON] unsigned char 
  5995 ;; Return value:  Size  Location     Type
  5996 ;;                  2    8[COMMON] unsigned int 
  5997 ;; Registers used:
  5998 ;;		wreg, status,2, status,0
  5999 ;; Tracked objects:
  6000 ;;		On entry : 0/0
  6001 ;;		On exit  : 0/0
  6002 ;;		Unchanged: 0/0
  6003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6004 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6005 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6006 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6007 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6008 ;;Total ram usage:        6 bytes
  6009 ;; Hardware stack levels used:    1
  6010 ;; Hardware stack levels required when called:    1
  6011 ;; This function calls:
  6012 ;;		Nothing
  6013 ;; This function is called by:
  6014 ;;		_sprintf
  6015 ;; This function uses a non-reentrant model
  6016 ;;
  6017                           
  6018                           
  6019                           ;psect for function ___lwmod
  6020  073E                     ___lwmod:
  6021  073E                     l2234:	
  6022                           ;incstack = 0
  6023                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6024                           
  6025  073E  0878               	movf	___lwmod@divisor,w
  6026  073F  0479               	iorwf	___lwmod@divisor+1,w
  6027  0740  1903               	btfsc	3,2
  6028  0741  2F43               	goto	u1751
  6029  0742  2F44               	goto	u1750
  6030  0743                     u1751:
  6031  0743  2F6D               	goto	l2252
  6032  0744                     u1750:
  6033  0744                     l2236:
  6034  0744  01FD               	clrf	___lwmod@counter
  6035  0745  0AFD               	incf	___lwmod@counter,f
  6036  0746  2F50               	goto	l2242
  6037  0747                     l2238:
  6038  0747  3001               	movlw	1
  6039  0748                     u1765:
  6040  0748  35F8               	lslf	___lwmod@divisor,f
  6041  0749  0DF9               	rlf	___lwmod@divisor+1,f
  6042  074A  0B89               	decfsz	9,f
  6043  074B  2F48               	goto	u1765
  6044  074C                     l2240:
  6045  074C  3001               	movlw	1
  6046  074D  00FC               	movwf	??___lwmod
  6047  074E  087C               	movf	??___lwmod,w
  6048  074F  07FD               	addwf	___lwmod@counter,f
  6049  0750                     l2242:
  6050  0750  1FF9               	btfss	___lwmod@divisor+1,7
  6051  0751  2F53               	goto	u1771
  6052  0752  2F54               	goto	u1770
  6053  0753                     u1771:
  6054  0753  2F47               	goto	l2238
  6055  0754                     u1770:
  6056  0754                     l2244:
  6057  0754  0879               	movf	___lwmod@divisor+1,w
  6058  0755  027B               	subwf	___lwmod@dividend+1,w
  6059  0756  1D03               	skipz
  6060  0757  2F5A               	goto	u1785
  6061  0758  0878               	movf	___lwmod@divisor,w
  6062  0759  027A               	subwf	___lwmod@dividend,w
  6063  075A                     u1785:
  6064  075A  1C03               	skipc
  6065  075B  2F5D               	goto	u1781
  6066  075C  2F5E               	goto	u1780
  6067  075D                     u1781:
  6068  075D  2F62               	goto	l2248
  6069  075E                     u1780:
  6070  075E                     l2246:
  6071  075E  0878               	movf	___lwmod@divisor,w
  6072  075F  02FA               	subwf	___lwmod@dividend,f
  6073  0760  0879               	movf	___lwmod@divisor+1,w
  6074  0761  3BFB               	subwfb	___lwmod@dividend+1,f
  6075  0762                     l2248:
  6076  0762  3001               	movlw	1
  6077  0763                     u1795:
  6078  0763  36F9               	lsrf	___lwmod@divisor+1,f
  6079  0764  0CF8               	rrf	___lwmod@divisor,f
  6080  0765  0B89               	decfsz	9,f
  6081  0766  2F63               	goto	u1795
  6082  0767                     l2250:
  6083  0767  3001               	movlw	1
  6084  0768  02FD               	subwf	___lwmod@counter,f
  6085  0769  1D03               	btfss	3,2
  6086  076A  2F6C               	goto	u1801
  6087  076B  2F6D               	goto	u1800
  6088  076C                     u1801:
  6089  076C  2F54               	goto	l2244
  6090  076D                     u1800:
  6091  076D                     l2252:
  6092  076D  087B               	movf	___lwmod@dividend+1,w
  6093  076E  00F9               	movwf	?___lwmod+1
  6094  076F  087A               	movf	___lwmod@dividend,w
  6095  0770  00F8               	movwf	?___lwmod
  6096  0771                     l1099:
  6097  0771  0008               	return
  6098  0772                     __end_of___lwmod:
  6099                           
  6100                           	psect	text6
  6101  06C7                     __ptext6:	
  6102 ;; *************** function ___lwdiv *****************
  6103 ;; Defined at:
  6104 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
  6105 ;; Parameters:    Size  Location     Type
  6106 ;;  divisor         2    0[COMMON] unsigned int 
  6107 ;;  dividend        2    2[COMMON] unsigned int 
  6108 ;; Auto vars:     Size  Location     Type
  6109 ;;  quotient        2    5[COMMON] unsigned int 
  6110 ;;  counter         1    7[COMMON] unsigned char 
  6111 ;; Return value:  Size  Location     Type
  6112 ;;                  2    0[COMMON] unsigned int 
  6113 ;; Registers used:
  6114 ;;		wreg, status,2, status,0
  6115 ;; Tracked objects:
  6116 ;;		On entry : 0/0
  6117 ;;		On exit  : 0/0
  6118 ;;		Unchanged: 0/0
  6119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6120 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6121 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6122 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6123 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6124 ;;Total ram usage:        8 bytes
  6125 ;; Hardware stack levels used:    1
  6126 ;; Hardware stack levels required when called:    1
  6127 ;; This function calls:
  6128 ;;		Nothing
  6129 ;; This function is called by:
  6130 ;;		_sprintf
  6131 ;; This function uses a non-reentrant model
  6132 ;;
  6133                           
  6134                           
  6135                           ;psect for function ___lwdiv
  6136  06C7                     ___lwdiv:
  6137  06C7                     l2208:	
  6138                           ;incstack = 0
  6139                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6140                           
  6141  06C7  01F5               	clrf	___lwdiv@quotient
  6142  06C8  01F6               	clrf	___lwdiv@quotient+1
  6143  06C9                     l2210:
  6144  06C9  0870               	movf	___lwdiv@divisor,w
  6145  06CA  0471               	iorwf	___lwdiv@divisor+1,w
  6146  06CB  1903               	btfsc	3,2
  6147  06CC  2ECE               	goto	u1681
  6148  06CD  2ECF               	goto	u1680
  6149  06CE                     u1681:
  6150  06CE  2EFE               	goto	l2230
  6151  06CF                     u1680:
  6152  06CF                     l2212:
  6153  06CF  01F7               	clrf	___lwdiv@counter
  6154  06D0  0AF7               	incf	___lwdiv@counter,f
  6155  06D1  2EDB               	goto	l2218
  6156  06D2                     l2214:
  6157  06D2  3001               	movlw	1
  6158  06D3                     u1695:
  6159  06D3  35F0               	lslf	___lwdiv@divisor,f
  6160  06D4  0DF1               	rlf	___lwdiv@divisor+1,f
  6161  06D5  0B89               	decfsz	9,f
  6162  06D6  2ED3               	goto	u1695
  6163  06D7                     l2216:
  6164  06D7  3001               	movlw	1
  6165  06D8  00F4               	movwf	??___lwdiv
  6166  06D9  0874               	movf	??___lwdiv,w
  6167  06DA  07F7               	addwf	___lwdiv@counter,f
  6168  06DB                     l2218:
  6169  06DB  1FF1               	btfss	___lwdiv@divisor+1,7
  6170  06DC  2EDE               	goto	u1701
  6171  06DD  2EDF               	goto	u1700
  6172  06DE                     u1701:
  6173  06DE  2ED2               	goto	l2214
  6174  06DF                     u1700:
  6175  06DF                     l2220:
  6176  06DF  3001               	movlw	1
  6177  06E0                     u1715:
  6178  06E0  35F5               	lslf	___lwdiv@quotient,f
  6179  06E1  0DF6               	rlf	___lwdiv@quotient+1,f
  6180  06E2  0B89               	decfsz	9,f
  6181  06E3  2EE0               	goto	u1715
  6182  06E4  0871               	movf	___lwdiv@divisor+1,w
  6183  06E5  0273               	subwf	___lwdiv@dividend+1,w
  6184  06E6  1D03               	skipz
  6185  06E7  2EEA               	goto	u1725
  6186  06E8  0870               	movf	___lwdiv@divisor,w
  6187  06E9  0272               	subwf	___lwdiv@dividend,w
  6188  06EA                     u1725:
  6189  06EA  1C03               	skipc
  6190  06EB  2EED               	goto	u1721
  6191  06EC  2EEE               	goto	u1720
  6192  06ED                     u1721:
  6193  06ED  2EF3               	goto	l2226
  6194  06EE                     u1720:
  6195  06EE                     l2222:
  6196  06EE  0870               	movf	___lwdiv@divisor,w
  6197  06EF  02F2               	subwf	___lwdiv@dividend,f
  6198  06F0  0871               	movf	___lwdiv@divisor+1,w
  6199  06F1  3BF3               	subwfb	___lwdiv@dividend+1,f
  6200  06F2                     l2224:
  6201  06F2  1475               	bsf	___lwdiv@quotient,0
  6202  06F3                     l2226:
  6203  06F3  3001               	movlw	1
  6204  06F4                     u1735:
  6205  06F4  36F1               	lsrf	___lwdiv@divisor+1,f
  6206  06F5  0CF0               	rrf	___lwdiv@divisor,f
  6207  06F6  0B89               	decfsz	9,f
  6208  06F7  2EF4               	goto	u1735
  6209  06F8                     l2228:
  6210  06F8  3001               	movlw	1
  6211  06F9  02F7               	subwf	___lwdiv@counter,f
  6212  06FA  1D03               	btfss	3,2
  6213  06FB  2EFD               	goto	u1741
  6214  06FC  2EFE               	goto	u1740
  6215  06FD                     u1741:
  6216  06FD  2EDF               	goto	l2220
  6217  06FE                     u1740:
  6218  06FE                     l2230:
  6219  06FE  0876               	movf	___lwdiv@quotient+1,w
  6220  06FF  00F1               	movwf	?___lwdiv+1
  6221  0700  0875               	movf	___lwdiv@quotient,w
  6222  0701  00F0               	movwf	?___lwdiv
  6223  0702                     l1089:
  6224  0702  0008               	return
  6225  0703                     __end_of___lwdiv:
  6226                           
  6227                           	psect	text7
  6228  07F1                     __ptext7:	
  6229 ;; *************** function _i2c1_driver_open *****************
  6230 ;; Defined at:
  6231 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
  6232 ;; Parameters:    Size  Location     Type
  6233 ;;		None
  6234 ;; Auto vars:     Size  Location     Type
  6235 ;;		None
  6236 ;; Return value:  Size  Location     Type
  6237 ;;		None               void
  6238 ;; Registers used:
  6239 ;;		wreg, status,2
  6240 ;; Tracked objects:
  6241 ;;		On entry : 0/0
  6242 ;;		On exit  : 0/0
  6243 ;;		Unchanged: 0/0
  6244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6249 ;;Total ram usage:        0 bytes
  6250 ;; Hardware stack levels used:    1
  6251 ;; Hardware stack levels required when called:    1
  6252 ;; This function calls:
  6253 ;;		Nothing
  6254 ;; This function is called by:
  6255 ;;		_main
  6256 ;; This function uses a non-reentrant model
  6257 ;;
  6258                           
  6259                           
  6260                           ;psect for function _i2c1_driver_open
  6261  07F1                     _i2c1_driver_open:
  6262  07F1                     l2262:	
  6263                           ;incstack = 0
  6264                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
  6265                           
  6266                           
  6267                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
  6268  07F1  0023               	movlb	3	; select bank3
  6269  07F2  1A90               	btfsc	16,5	;volatile
  6270  07F3  2FF5               	goto	u1811
  6271  07F4  2FF6               	goto	u1810
  6272  07F5                     u1811:
  6273  07F5  2FFC               	goto	l225
  6274  07F6                     u1810:
  6275  07F6                     l2264:
  6276                           
  6277                           ;i2c1_driver.c: 86: {;i2c1_driver.c: 87: SSP1STAT = 0x00;
  6278  07F6  018F               	clrf	15	;volatile
  6279  07F7                     l2266:
  6280                           
  6281                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
  6282  07F7  3028               	movlw	40
  6283  07F8  0090               	movwf	16	;volatile
  6284  07F9                     l2268:
  6285                           
  6286                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
  6287  07F9  0191               	clrf	17	;volatile
  6288                           
  6289                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
  6290  07FA  3003               	movlw	3
  6291  07FB  008D               	movwf	13	;volatile
  6292  07FC                     l225:
  6293  07FC  0008               	return
  6294  07FD                     __end_of_i2c1_driver_open:
  6295                           
  6296                           	psect	text8
  6297  0FF6                     __ptext8:	
  6298 ;; *************** function _SYSTEM_Initialize *****************
  6299 ;; Defined at:
  6300 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6301 ;; Parameters:    Size  Location     Type
  6302 ;;		None
  6303 ;; Auto vars:     Size  Location     Type
  6304 ;;		None
  6305 ;; Return value:  Size  Location     Type
  6306 ;;                  1    wreg      void 
  6307 ;; Registers used:
  6308 ;;		wreg, status,2, status,0, pclath, cstack
  6309 ;; Tracked objects:
  6310 ;;		On entry : 0/0
  6311 ;;		On exit  : 0/0
  6312 ;;		Unchanged: 0/0
  6313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6318 ;;Total ram usage:        0 bytes
  6319 ;; Hardware stack levels used:    1
  6320 ;; Hardware stack levels required when called:    2
  6321 ;; This function calls:
  6322 ;;		_OSCILLATOR_Initialize
  6323 ;;		_PIN_MANAGER_Initialize
  6324 ;;		_PMD_Initialize
  6325 ;; This function is called by:
  6326 ;;		_main
  6327 ;; This function uses a non-reentrant model
  6328 ;;
  6329                           
  6330                           
  6331                           ;psect for function _SYSTEM_Initialize
  6332  0FF6                     _SYSTEM_Initialize:
  6333  0FF6                     l2256:	
  6334                           ;incstack = 0
  6335                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  6336                           
  6337                           
  6338                           ;mcc.c: 52: PMD_Initialize();
  6339  0FF6  318F  27E5  318F   	fcall	_PMD_Initialize
  6340  0FF9                     l2258:
  6341                           
  6342                           ;mcc.c: 53: PIN_MANAGER_Initialize();
  6343  0FF9  3187  2703  318F   	fcall	_PIN_MANAGER_Initialize
  6344  0FFC                     l2260:
  6345                           
  6346                           ;mcc.c: 54: OSCILLATOR_Initialize();
  6347  0FFC  318F  27ED  318F   	fcall	_OSCILLATOR_Initialize
  6348  0FFF                     l158:
  6349  0FFF  0008               	return
  6350  1000                     __end_of_SYSTEM_Initialize:
  6351                           
  6352                           	psect	text9
  6353  0FE5                     __ptext9:	
  6354 ;; *************** function _PMD_Initialize *****************
  6355 ;; Defined at:
  6356 ;;		line 71 in file "mcc_generated_files/mcc.c"
  6357 ;; Parameters:    Size  Location     Type
  6358 ;;		None
  6359 ;; Auto vars:     Size  Location     Type
  6360 ;;		None
  6361 ;; Return value:  Size  Location     Type
  6362 ;;                  1    wreg      void 
  6363 ;; Registers used:
  6364 ;;		status,2
  6365 ;; Tracked objects:
  6366 ;;		On entry : 0/0
  6367 ;;		On exit  : 0/0
  6368 ;;		Unchanged: 0/0
  6369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6374 ;;Total ram usage:        0 bytes
  6375 ;; Hardware stack levels used:    1
  6376 ;; Hardware stack levels required when called:    1
  6377 ;; This function calls:
  6378 ;;		Nothing
  6379 ;; This function is called by:
  6380 ;;		_SYSTEM_Initialize
  6381 ;; This function uses a non-reentrant model
  6382 ;;
  6383                           
  6384                           
  6385                           ;psect for function _PMD_Initialize
  6386  0FE5                     _PMD_Initialize:
  6387  0FE5                     l2156:	
  6388                           ;incstack = 0
  6389                           ; Regs used in _PMD_Initialize: [status,2]
  6390                           
  6391                           
  6392                           ;mcc.c: 74: PMD0 = 0x00;
  6393  0FE5  002F               	movlb	15	; select bank15
  6394  0FE6  0196               	clrf	22	;volatile
  6395                           
  6396                           ;mcc.c: 76: PMD1 = 0x00;
  6397  0FE7  0197               	clrf	23	;volatile
  6398                           
  6399                           ;mcc.c: 78: PMD2 = 0x00;
  6400  0FE8  0198               	clrf	24	;volatile
  6401                           
  6402                           ;mcc.c: 80: PMD3 = 0x00;
  6403  0FE9  0199               	clrf	25	;volatile
  6404                           
  6405                           ;mcc.c: 82: PMD4 = 0x00;
  6406  0FEA  019A               	clrf	26	;volatile
  6407                           
  6408                           ;mcc.c: 84: PMD5 = 0x00;
  6409  0FEB  019B               	clrf	27	;volatile
  6410  0FEC                     l164:
  6411  0FEC  0008               	return
  6412  0FED                     __end_of_PMD_Initialize:
  6413                           
  6414                           	psect	text10
  6415  0703                     __ptext10:	
  6416 ;; *************** function _PIN_MANAGER_Initialize *****************
  6417 ;; Defined at:
  6418 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  6419 ;; Parameters:    Size  Location     Type
  6420 ;;		None
  6421 ;; Auto vars:     Size  Location     Type
  6422 ;;		None
  6423 ;; Return value:  Size  Location     Type
  6424 ;;                  1    wreg      void 
  6425 ;; Registers used:
  6426 ;;		wreg, status,2
  6427 ;; Tracked objects:
  6428 ;;		On entry : 0/0
  6429 ;;		On exit  : 0/0
  6430 ;;		Unchanged: 0/0
  6431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6436 ;;Total ram usage:        0 bytes
  6437 ;; Hardware stack levels used:    1
  6438 ;; Hardware stack levels required when called:    1
  6439 ;; This function calls:
  6440 ;;		Nothing
  6441 ;; This function is called by:
  6442 ;;		_SYSTEM_Initialize
  6443 ;; This function uses a non-reentrant model
  6444 ;;
  6445                           
  6446                           
  6447                           ;psect for function _PIN_MANAGER_Initialize
  6448  0703                     _PIN_MANAGER_Initialize:
  6449  0703                     l2116:	
  6450                           ;incstack = 0
  6451                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  6452                           
  6453                           
  6454                           ;pin_manager.c: 62: LATE = 0x00;
  6455  0703  0020               	movlb	0	; select bank0
  6456  0704  019A               	clrf	26	;volatile
  6457                           
  6458                           ;pin_manager.c: 63: LATD = 0x00;
  6459  0705  0199               	clrf	25	;volatile
  6460                           
  6461                           ;pin_manager.c: 64: LATA = 0x00;
  6462  0706  0196               	clrf	22	;volatile
  6463                           
  6464                           ;pin_manager.c: 65: LATB = 0x00;
  6465  0707  0197               	clrf	23	;volatile
  6466                           
  6467                           ;pin_manager.c: 66: LATC = 0x00;
  6468  0708  0198               	clrf	24	;volatile
  6469  0709                     l2118:
  6470                           
  6471                           ;pin_manager.c: 71: TRISE = 0x07;
  6472  0709  3007               	movlw	7
  6473  070A  0095               	movwf	21	;volatile
  6474  070B                     l2120:
  6475                           
  6476                           ;pin_manager.c: 72: TRISA = 0xFF;
  6477  070B  30FF               	movlw	255
  6478  070C  0091               	movwf	17	;volatile
  6479  070D                     l2122:
  6480                           
  6481                           ;pin_manager.c: 73: TRISB = 0xFF;
  6482  070D  30FF               	movlw	255
  6483  070E  0092               	movwf	18	;volatile
  6484  070F                     l2124:
  6485                           
  6486                           ;pin_manager.c: 74: TRISC = 0xFF;
  6487  070F  30FF               	movlw	255
  6488  0710  0093               	movwf	19	;volatile
  6489  0711                     l2126:
  6490                           
  6491                           ;pin_manager.c: 75: TRISD = 0xFF;
  6492  0711  30FF               	movlw	255
  6493  0712  0094               	movwf	20	;volatile
  6494  0713                     l2128:
  6495                           
  6496                           ;pin_manager.c: 80: ANSELD = 0xFF;
  6497  0713  30FF               	movlw	255
  6498  0714  003E               	movlb	30	; select bank30
  6499  0715  00D9               	movwf	89	;volatile
  6500  0716                     l2130:
  6501                           
  6502                           ;pin_manager.c: 81: ANSELC = 0xE7;
  6503  0716  30E7               	movlw	231
  6504  0717  00CE               	movwf	78	;volatile
  6505  0718                     l2132:
  6506                           
  6507                           ;pin_manager.c: 82: ANSELB = 0xFF;
  6508  0718  30FF               	movlw	255
  6509  0719  00C3               	movwf	67	;volatile
  6510  071A                     l2134:
  6511                           
  6512                           ;pin_manager.c: 83: ANSELE = 0x07;
  6513  071A  3007               	movlw	7
  6514  071B  00E4               	movwf	100	;volatile
  6515  071C                     l2136:
  6516                           
  6517                           ;pin_manager.c: 84: ANSELA = 0xFF;
  6518  071C  30FF               	movlw	255
  6519  071D  00B8               	movwf	56	;volatile
  6520                           
  6521                           ;pin_manager.c: 89: WPUD = 0x00;
  6522  071E  01DA               	clrf	90	;volatile
  6523                           
  6524                           ;pin_manager.c: 90: WPUE = 0x00;
  6525  071F  01E5               	clrf	101	;volatile
  6526                           
  6527                           ;pin_manager.c: 91: WPUB = 0x00;
  6528  0720  01C4               	clrf	68	;volatile
  6529                           
  6530                           ;pin_manager.c: 92: WPUA = 0x00;
  6531  0721  01B9               	clrf	57	;volatile
  6532                           
  6533                           ;pin_manager.c: 93: WPUC = 0x00;
  6534  0722  01CF               	clrf	79	;volatile
  6535                           
  6536                           ;pin_manager.c: 98: ODCONE = 0x00;
  6537  0723  01E6               	clrf	102	;volatile
  6538                           
  6539                           ;pin_manager.c: 99: ODCONA = 0x00;
  6540  0724  01BA               	clrf	58	;volatile
  6541                           
  6542                           ;pin_manager.c: 100: ODCONB = 0x00;
  6543  0725  01C5               	clrf	69	;volatile
  6544                           
  6545                           ;pin_manager.c: 101: ODCONC = 0x00;
  6546  0726  01D0               	clrf	80	;volatile
  6547                           
  6548                           ;pin_manager.c: 102: ODCOND = 0x00;
  6549  0727  01DB               	clrf	91	;volatile
  6550  0728                     l2138:
  6551                           
  6552                           ;pin_manager.c: 107: SLRCONA = 0xFF;
  6553  0728  30FF               	movlw	255
  6554  0729  00BB               	movwf	59	;volatile
  6555  072A                     l2140:
  6556                           
  6557                           ;pin_manager.c: 108: SLRCONB = 0xFF;
  6558  072A  30FF               	movlw	255
  6559  072B  00C6               	movwf	70	;volatile
  6560  072C                     l2142:
  6561                           
  6562                           ;pin_manager.c: 109: SLRCONC = 0xFF;
  6563  072C  30FF               	movlw	255
  6564  072D  00D1               	movwf	81	;volatile
  6565  072E                     l2144:
  6566                           
  6567                           ;pin_manager.c: 110: SLRCOND = 0xFF;
  6568  072E  30FF               	movlw	255
  6569  072F  00DC               	movwf	92	;volatile
  6570  0730                     l2146:
  6571                           
  6572                           ;pin_manager.c: 111: SLRCONE = 0x07;
  6573  0730  3007               	movlw	7
  6574  0731  00E7               	movwf	103	;volatile
  6575  0732                     l2148:
  6576                           
  6577                           ;pin_manager.c: 120: SSP1CLKPPS = 0x13;
  6578  0732  3013               	movlw	19
  6579  0733  003D               	movlb	29	; select bank29
  6580  0734  00C5               	movwf	69	;volatile
  6581  0735                     l2150:
  6582                           
  6583                           ;pin_manager.c: 121: RC3PPS = 0x14;
  6584  0735  3014               	movlw	20
  6585  0736  003E               	movlb	30	; select bank30
  6586  0737  00A3               	movwf	35	;volatile
  6587  0738                     l2152:
  6588                           
  6589                           ;pin_manager.c: 122: RC4PPS = 0x15;
  6590  0738  3015               	movlw	21
  6591  0739  00A4               	movwf	36	;volatile
  6592  073A                     l2154:
  6593                           
  6594                           ;pin_manager.c: 123: SSP1DATPPS = 0x14;
  6595  073A  3014               	movlw	20
  6596  073B  003D               	movlb	29	; select bank29
  6597  073C  00C6               	movwf	70	;volatile
  6598  073D                     l120:
  6599  073D  0008               	return
  6600  073E                     __end_of_PIN_MANAGER_Initialize:
  6601                           
  6602                           	psect	text11
  6603  0FED                     __ptext11:	
  6604 ;; *************** function _OSCILLATOR_Initialize *****************
  6605 ;; Defined at:
  6606 ;;		line 57 in file "mcc_generated_files/mcc.c"
  6607 ;; Parameters:    Size  Location     Type
  6608 ;;		None
  6609 ;; Auto vars:     Size  Location     Type
  6610 ;;		None
  6611 ;; Return value:  Size  Location     Type
  6612 ;;                  1    wreg      void 
  6613 ;; Registers used:
  6614 ;;		wreg, status,2
  6615 ;; Tracked objects:
  6616 ;;		On entry : 0/0
  6617 ;;		On exit  : 0/0
  6618 ;;		Unchanged: 0/0
  6619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6624 ;;Total ram usage:        0 bytes
  6625 ;; Hardware stack levels used:    1
  6626 ;; Hardware stack levels required when called:    1
  6627 ;; This function calls:
  6628 ;;		Nothing
  6629 ;; This function is called by:
  6630 ;;		_SYSTEM_Initialize
  6631 ;; This function uses a non-reentrant model
  6632 ;;
  6633                           
  6634                           
  6635                           ;psect for function _OSCILLATOR_Initialize
  6636  0FED                     _OSCILLATOR_Initialize:
  6637  0FED                     l2158:	
  6638                           ;incstack = 0
  6639                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  6640                           
  6641                           
  6642                           ;mcc.c: 60: OSCCON1 = 0x62;
  6643  0FED  3062               	movlw	98
  6644  0FEE  0031               	movlb	17	; select bank17
  6645  0FEF  008D               	movwf	13	;volatile
  6646  0FF0                     l2160:
  6647                           
  6648                           ;mcc.c: 62: OSCCON3 = 0x00;
  6649  0FF0  018F               	clrf	15	;volatile
  6650  0FF1                     l2162:
  6651                           
  6652                           ;mcc.c: 64: OSCEN = 0x00;
  6653  0FF1  0191               	clrf	17	;volatile
  6654                           
  6655                           ;mcc.c: 66: OSCFRQ = 0x02;
  6656  0FF2  3002               	movlw	2
  6657  0FF3  0093               	movwf	19	;volatile
  6658  0FF4                     l2164:
  6659                           
  6660                           ;mcc.c: 68: OSCTUNE = 0x00;
  6661  0FF4  0192               	clrf	18	;volatile
  6662  0FF5                     l161:
  6663  0FF5  0008               	return
  6664  0FF6                     __end_of_OSCILLATOR_Initialize:
  6665                           
  6666                           	psect	text12
  6667  0791                     __ptext12:	
  6668 ;; *************** function _LCDstr *****************
  6669 ;; Defined at:
  6670 ;;		line 182 in file "main.c"
  6671 ;; Parameters:    Size  Location     Type
  6672 ;;  p               2    9[COMMON] PTR unsigned char 
  6673 ;;		 -> main@buf(17), STR_1(5), 
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;  c               1    0[BANK0 ] unsigned char 
  6676 ;; Return value:  Size  Location     Type
  6677 ;;                  1    wreg      void 
  6678 ;; Registers used:
  6679 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6680 ;; Tracked objects:
  6681 ;;		On entry : 0/0
  6682 ;;		On exit  : 0/0
  6683 ;;		Unchanged: 0/0
  6684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6685 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6686 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6687 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6688 ;;      Totals:         5       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6689 ;;Total ram usage:        6 bytes
  6690 ;; Hardware stack levels used:    1
  6691 ;; Hardware stack levels required when called:    4
  6692 ;; This function calls:
  6693 ;;		_LCDchar
  6694 ;; This function is called by:
  6695 ;;		_main
  6696 ;; This function uses a non-reentrant model
  6697 ;;
  6698                           
  6699                           
  6700                           ;psect for function _LCDstr
  6701  0791                     _LCDstr:
  6702  0791                     l2428:	
  6703                           ;incstack = 0
  6704                           ; Regs used in _LCDstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6705                           
  6706                           
  6707                           ;main.c: 184: unsigned char c;;main.c: 186: while((c = *p++)) LCDchar(c);
  6708  0791  2F96               	goto	l2432
  6709  0792                     l2430:
  6710  0792  0820               	movf	LCDstr@c,w
  6711  0793  318F  27DD  3187   	fcall	_LCDchar
  6712  0796                     l2432:
  6713  0796  087A               	movf	LCDstr@p+1,w
  6714  0797  00FC               	movwf	??_LCDstr+1
  6715  0798  0879               	movf	LCDstr@p,w
  6716  0799  00FB               	movwf	??_LCDstr
  6717  079A  0AF9               	incf	LCDstr@p,f
  6718  079B  1903               	skipnz
  6719  079C  0AFA               	incf	LCDstr@p+1,f
  6720  079D  087B               	movf	??_LCDstr,w
  6721  079E  0084               	movwf	4
  6722  079F  087C               	movf	??_LCDstr+1,w
  6723  07A0  0085               	movwf	5
  6724  07A1  0800               	movf	0,w	;code access
  6725  07A2  00FD               	movwf	??_LCDstr+2
  6726  07A3  087D               	movf	??_LCDstr+2,w
  6727  07A4  0020               	movlb	0	; select bank0
  6728  07A5  00A0               	movwf	LCDstr@c
  6729  07A6  0820               	movf	LCDstr@c,w
  6730  07A7  1D03               	btfss	3,2
  6731  07A8  2FAA               	goto	u2341
  6732  07A9  2FAB               	goto	u2340
  6733  07AA                     u2341:
  6734  07AA  2F92               	goto	l2430
  6735  07AB                     u2340:
  6736  07AB                     l586:
  6737  07AB  0008               	return
  6738  07AC                     __end_of_LCDstr:
  6739                           
  6740                           	psect	text13
  6741  0FDD                     __ptext13:	
  6742 ;; *************** function _LCDchar *****************
  6743 ;; Defined at:
  6744 ;;		line 177 in file "main.c"
  6745 ;; Parameters:    Size  Location     Type
  6746 ;;  c               1    wreg     unsigned char 
  6747 ;; Auto vars:     Size  Location     Type
  6748 ;;  c               1    8[COMMON] unsigned char 
  6749 ;; Return value:  Size  Location     Type
  6750 ;;                  1    wreg      void 
  6751 ;; Registers used:
  6752 ;;		wreg, status,2, status,0, pclath, cstack
  6753 ;; Tracked objects:
  6754 ;;		On entry : 0/0
  6755 ;;		On exit  : 0/0
  6756 ;;		Unchanged: 0/0
  6757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6759 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6761 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6762 ;;Total ram usage:        1 bytes
  6763 ;; Hardware stack levels used:    1
  6764 ;; Hardware stack levels required when called:    3
  6765 ;; This function calls:
  6766 ;;		_LCDsend2x4
  6767 ;; This function is called by:
  6768 ;;		_LCDstr
  6769 ;; This function uses a non-reentrant model
  6770 ;;
  6771                           
  6772                           
  6773                           ;psect for function _LCDchar
  6774  0FDD                     _LCDchar:
  6775                           
  6776                           ;incstack = 0
  6777                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
  6778                           ;LCDchar@c stored from wreg
  6779  0FDD  00F8               	movwf	LCDchar@c
  6780  0FDE                     l2180:
  6781                           
  6782                           ;main.c: 179: LCDsend2x4(c, 0x01);
  6783  0FDE  01F2               	clrf	LCDsend2x4@mode
  6784  0FDF  0AF2               	incf	LCDsend2x4@mode,f
  6785  0FE0  0878               	movf	LCDchar@c,w
  6786  0FE1  3184  2491  318F   	fcall	_LCDsend2x4
  6787  0FE4                     l580:
  6788  0FE4  0008               	return
  6789  0FE5                     __end_of_LCDchar:
  6790                           
  6791                           	psect	text14
  6792  023E                     __ptext14:	
  6793 ;; *************** function _LCDrecv *****************
  6794 ;; Defined at:
  6795 ;;		line 95 in file "main.c"
  6796 ;; Parameters:    Size  Location     Type
  6797 ;;  mode            1    wreg     unsigned char 
  6798 ;; Auto vars:     Size  Location     Type
  6799 ;;  mode            1    6[COMMON] unsigned char 
  6800 ;;  lc              1    5[COMMON] unsigned char 
  6801 ;;  hc              1    4[COMMON] unsigned char 
  6802 ;; Return value:  Size  Location     Type
  6803 ;;                  1    wreg      unsigned char 
  6804 ;; Registers used:
  6805 ;;		wreg, status,2, status,0, pclath, cstack
  6806 ;; Tracked objects:
  6807 ;;		On entry : 0/0
  6808 ;;		On exit  : 0/0
  6809 ;;		Unchanged: 0/0
  6810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6812 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6813 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6814 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6815 ;;Total ram usage:        5 bytes
  6816 ;; Hardware stack levels used:    1
  6817 ;; Hardware stack levels required when called:    2
  6818 ;; This function calls:
  6819 ;;		_ReadI2C
  6820 ;;		_WriteI2C
  6821 ;; This function is called by:
  6822 ;;		_main
  6823 ;;		_LCDbusy
  6824 ;; This function uses a non-reentrant model
  6825 ;;
  6826                           
  6827                           
  6828                           ;psect for function _LCDrecv
  6829  023E                     _LCDrecv:
  6830                           
  6831                           ;incstack = 0
  6832                           ; Regs used in _LCDrecv: [wreg+status,2+status,0+pclath+cstack]
  6833                           ;LCDrecv@mode stored from wreg
  6834  023E  00F6               	movwf	LCDrecv@mode
  6835  023F                     l2326:
  6836  023F                     l2328:	
  6837                           ;main.c: 97: unsigned char hc;;main.c: 98: unsigned char lc;;main.c: 100: while ((SSP1CO
      +                          N2 & 0x1F) | (SSP1STATbits.R_W));
  6838                           
  6839  023F  0023               	movlb	3	; select bank3
  6840  0240  0C0F               	rrf	15,w	;volatile
  6841  0241  0C89               	rrf	9,f
  6842  0242  3901               	andlw	1
  6843  0243  00F2               	movwf	??_LCDrecv
  6844  0244  0811               	movf	17,w	;volatile
  6845  0245  391F               	andlw	31
  6846  0246  0472               	iorwf	??_LCDrecv,w
  6847  0247  1D03               	btfss	3,2
  6848  0248  2A4A               	goto	u2071
  6849  0249  2A4B               	goto	u2070
  6850  024A                     u2071:
  6851  024A  2A3F               	goto	l2328
  6852  024B                     u2070:
  6853  024B                     l459:
  6854                           
  6855                           ;main.c: 101: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
  6856  024B  1411               	bsf	17,0	;volatile
  6857  024C                     l460:
  6858  024C  1811               	btfsc	17,0	;volatile
  6859  024D  2A4F               	goto	u2081
  6860  024E  2A50               	goto	u2080
  6861  024F                     u2081:
  6862  024F  2A4C               	goto	l460
  6863  0250                     u2080:
  6864  0250                     l2330:
  6865  0250  0C0F               	rrf	15,w	;volatile
  6866  0251  0C89               	rrf	9,f
  6867  0252  3901               	andlw	1
  6868  0253  00F2               	movwf	??_LCDrecv
  6869  0254  0811               	movf	17,w	;volatile
  6870  0255  391F               	andlw	31
  6871  0256  0472               	iorwf	??_LCDrecv,w
  6872  0257  1D03               	btfss	3,2
  6873  0258  2A5A               	goto	u2091
  6874  0259  2A5B               	goto	u2090
  6875  025A                     u2091:
  6876  025A  2A50               	goto	l2330
  6877  025B                     u2090:
  6878  025B                     l2332:
  6879                           
  6880                           ;main.c: 102: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  6881  025B  304E               	movlw	78
  6882  025C  3186  2639  3182   	fcall	_WriteI2C
  6883  025F                     l2334:
  6884  025F  0023               	movlb	3	; select bank3
  6885  0260  0C0F               	rrf	15,w	;volatile
  6886  0261  0C89               	rrf	9,f
  6887  0262  3901               	andlw	1
  6888  0263  00F2               	movwf	??_LCDrecv
  6889  0264  0811               	movf	17,w	;volatile
  6890  0265  391F               	andlw	31
  6891  0266  0472               	iorwf	??_LCDrecv,w
  6892  0267  1D03               	btfss	3,2
  6893  0268  2A6A               	goto	u2101
  6894  0269  2A6B               	goto	u2100
  6895  026A                     u2101:
  6896  026A  2A5F               	goto	l2334
  6897  026B                     u2100:
  6898  026B                     l2336:
  6899                           
  6900                           ;main.c: 103: WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATb
      +                          its.R_W));
  6901  026B  0876               	movf	LCDrecv@mode,w
  6902  026C  38FA               	iorlw	250
  6903  026D  3186  2639  3182   	fcall	_WriteI2C
  6904  0270                     l2338:
  6905  0270  0023               	movlb	3	; select bank3
  6906  0271  0C0F               	rrf	15,w	;volatile
  6907  0272  0C89               	rrf	9,f
  6908  0273  3901               	andlw	1
  6909  0274  00F2               	movwf	??_LCDrecv
  6910  0275  0811               	movf	17,w	;volatile
  6911  0276  391F               	andlw	31
  6912  0277  0472               	iorwf	??_LCDrecv,w
  6913  0278  1D03               	btfss	3,2
  6914  0279  2A7B               	goto	u2111
  6915  027A  2A7C               	goto	u2110
  6916  027B                     u2111:
  6917  027B  2A70               	goto	l2338
  6918  027C                     u2110:
  6919  027C                     l2340:
  6920                           
  6921                           ;main.c: 104: WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
  6922  027C  0876               	movf	LCDrecv@mode,w
  6923  027D  38FE               	iorlw	254
  6924  027E  3186  2639  3182   	fcall	_WriteI2C
  6925  0281                     l2342:
  6926  0281  0023               	movlb	3	; select bank3
  6927  0282  0C0F               	rrf	15,w	;volatile
  6928  0283  0C89               	rrf	9,f
  6929  0284  3901               	andlw	1
  6930  0285  00F2               	movwf	??_LCDrecv
  6931  0286  0811               	movf	17,w	;volatile
  6932  0287  391F               	andlw	31
  6933  0288  0472               	iorwf	??_LCDrecv,w
  6934  0289  1D03               	btfss	3,2
  6935  028A  2A8C               	goto	u2121
  6936  028B  2A8D               	goto	u2120
  6937  028C                     u2121:
  6938  028C  2A81               	goto	l2342
  6939  028D                     u2120:
  6940  028D                     l474:
  6941                           
  6942                           ;main.c: 105: _delay((unsigned long)((1)*(1000000/4000000.0)));
  6943                           ;main.c: 106: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
  6944  028D  0023               	movlb	3	; select bank3
  6945  028E  1491               	bsf	17,1	;volatile
  6946  028F                     l475:
  6947  028F  1891               	btfsc	17,1	;volatile
  6948  0290  2A92               	goto	u2131
  6949  0291  2A93               	goto	u2130
  6950  0292                     u2131:
  6951  0292  2A8F               	goto	l475
  6952  0293                     u2130:
  6953  0293                     l2344:
  6954  0293  0C0F               	rrf	15,w	;volatile
  6955  0294  0C89               	rrf	9,f
  6956  0295  3901               	andlw	1
  6957  0296  00F2               	movwf	??_LCDrecv
  6958  0297  0811               	movf	17,w	;volatile
  6959  0298  391F               	andlw	31
  6960  0299  0472               	iorwf	??_LCDrecv,w
  6961  029A  1D03               	btfss	3,2
  6962  029B  2A9D               	goto	u2141
  6963  029C  2A9E               	goto	u2140
  6964  029D                     u2141:
  6965  029D  2A93               	goto	l2344
  6966  029E                     u2140:
  6967  029E                     l2346:
  6968                           
  6969                           ;main.c: 107: WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  6970  029E  304F               	movlw	79
  6971  029F  3186  2639  3182   	fcall	_WriteI2C
  6972  02A2                     l2348:
  6973  02A2  0023               	movlb	3	; select bank3
  6974  02A3  0C0F               	rrf	15,w	;volatile
  6975  02A4  0C89               	rrf	9,f
  6976  02A5  3901               	andlw	1
  6977  02A6  00F2               	movwf	??_LCDrecv
  6978  02A7  0811               	movf	17,w	;volatile
  6979  02A8  391F               	andlw	31
  6980  02A9  0472               	iorwf	??_LCDrecv,w
  6981  02AA  1D03               	btfss	3,2
  6982  02AB  2AAD               	goto	u2151
  6983  02AC  2AAE               	goto	u2150
  6984  02AD                     u2151:
  6985  02AD  2AA2               	goto	l2348
  6986  02AE                     u2150:
  6987  02AE                     l2350:
  6988                           
  6989                           ;main.c: 108: hc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  6990  02AE  3187  27AC  3182   	fcall	_ReadI2C
  6991  02B1  00F2               	movwf	??_LCDrecv
  6992  02B2  0872               	movf	??_LCDrecv,w
  6993  02B3  00F4               	movwf	LCDrecv@hc
  6994  02B4                     l2352:
  6995  02B4  0023               	movlb	3	; select bank3
  6996  02B5  0C0F               	rrf	15,w	;volatile
  6997  02B6  0C89               	rrf	9,f
  6998  02B7  3901               	andlw	1
  6999  02B8  00F2               	movwf	??_LCDrecv
  7000  02B9  0811               	movf	17,w	;volatile
  7001  02BA  391F               	andlw	31
  7002  02BB  0472               	iorwf	??_LCDrecv,w
  7003  02BC  1D03               	btfss	3,2
  7004  02BD  2ABF               	goto	u2161
  7005  02BE  2AC0               	goto	u2160
  7006  02BF                     u2161:
  7007  02BF  2AB4               	goto	l2352
  7008  02C0                     u2160:
  7009  02C0                     l486:
  7010                           
  7011                           ;main.c: 109: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN);
  7012  02C0  1691               	bsf	17,5	;volatile
  7013  02C1  1611               	bsf	17,4	;volatile
  7014  02C2                     l487:
  7015  02C2  1A11               	btfsc	17,4	;volatile
  7016  02C3  2AC5               	goto	u2171
  7017  02C4  2AC6               	goto	u2170
  7018  02C5                     u2171:
  7019  02C5  2AC2               	goto	l487
  7020  02C6                     u2170:
  7021  02C6                     l489:
  7022                           
  7023                           ;main.c: 110: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
  7024  02C6  1491               	bsf	17,1	;volatile
  7025  02C7                     l490:
  7026  02C7  1891               	btfsc	17,1	;volatile
  7027  02C8  2ACA               	goto	u2181
  7028  02C9  2ACB               	goto	u2180
  7029  02CA                     u2181:
  7030  02CA  2AC7               	goto	l490
  7031  02CB                     u2180:
  7032  02CB                     l2354:
  7033  02CB  0C0F               	rrf	15,w	;volatile
  7034  02CC  0C89               	rrf	9,f
  7035  02CD  3901               	andlw	1
  7036  02CE  00F2               	movwf	??_LCDrecv
  7037  02CF  0811               	movf	17,w	;volatile
  7038  02D0  391F               	andlw	31
  7039  02D1  0472               	iorwf	??_LCDrecv,w
  7040  02D2  1D03               	btfss	3,2
  7041  02D3  2AD5               	goto	u2191
  7042  02D4  2AD6               	goto	u2190
  7043  02D5                     u2191:
  7044  02D5  2ACB               	goto	l2354
  7045  02D6                     u2190:
  7046  02D6                     l2356:
  7047                           
  7048                           ;main.c: 111: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7049  02D6  304E               	movlw	78
  7050  02D7  3186  2639  3182   	fcall	_WriteI2C
  7051  02DA                     l2358:
  7052  02DA  0023               	movlb	3	; select bank3
  7053  02DB  0C0F               	rrf	15,w	;volatile
  7054  02DC  0C89               	rrf	9,f
  7055  02DD  3901               	andlw	1
  7056  02DE  00F2               	movwf	??_LCDrecv
  7057  02DF  0811               	movf	17,w	;volatile
  7058  02E0  391F               	andlw	31
  7059  02E1  0472               	iorwf	??_LCDrecv,w
  7060  02E2  1D03               	btfss	3,2
  7061  02E3  2AE5               	goto	u2201
  7062  02E4  2AE6               	goto	u2200
  7063  02E5                     u2201:
  7064  02E5  2ADA               	goto	l2358
  7065  02E6                     u2200:
  7066  02E6                     l2360:
  7067                           
  7068                           ;main.c: 112: WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATb
      +                          its.R_W));
  7069  02E6  0876               	movf	LCDrecv@mode,w
  7070  02E7  38FA               	iorlw	250
  7071  02E8  3186  2639  3182   	fcall	_WriteI2C
  7072  02EB                     l2362:
  7073  02EB  0023               	movlb	3	; select bank3
  7074  02EC  0C0F               	rrf	15,w	;volatile
  7075  02ED  0C89               	rrf	9,f
  7076  02EE  3901               	andlw	1
  7077  02EF  00F2               	movwf	??_LCDrecv
  7078  02F0  0811               	movf	17,w	;volatile
  7079  02F1  391F               	andlw	31
  7080  02F2  0472               	iorwf	??_LCDrecv,w
  7081  02F3  1D03               	btfss	3,2
  7082  02F4  2AF6               	goto	u2211
  7083  02F5  2AF7               	goto	u2210
  7084  02F6                     u2211:
  7085  02F6  2AEB               	goto	l2362
  7086  02F7                     u2210:
  7087  02F7                     l2364:
  7088                           
  7089                           ;main.c: 113: WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
  7090  02F7  0876               	movf	LCDrecv@mode,w
  7091  02F8  38FE               	iorlw	254
  7092  02F9  3186  2639  3182   	fcall	_WriteI2C
  7093  02FC                     l2366:
  7094  02FC  0023               	movlb	3	; select bank3
  7095  02FD  0C0F               	rrf	15,w	;volatile
  7096  02FE  0C89               	rrf	9,f
  7097  02FF  3901               	andlw	1
  7098  0300  00F2               	movwf	??_LCDrecv
  7099  0301  0811               	movf	17,w	;volatile
  7100  0302  391F               	andlw	31
  7101  0303  0472               	iorwf	??_LCDrecv,w
  7102  0304  1D03               	btfss	3,2
  7103  0305  2B07               	goto	u2221
  7104  0306  2B08               	goto	u2220
  7105  0307                     u2221:
  7106  0307  2AFC               	goto	l2366
  7107  0308                     u2220:
  7108  0308                     l504:
  7109                           
  7110                           ;main.c: 114: _delay((unsigned long)((1)*(1000000/4000000.0)));
  7111                           ;main.c: 115: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
  7112  0308  0023               	movlb	3	; select bank3
  7113  0309  1491               	bsf	17,1	;volatile
  7114  030A                     l505:
  7115  030A  1891               	btfsc	17,1	;volatile
  7116  030B  2B0D               	goto	u2231
  7117  030C  2B0E               	goto	u2230
  7118  030D                     u2231:
  7119  030D  2B0A               	goto	l505
  7120  030E                     u2230:
  7121  030E                     l2368:
  7122  030E  0C0F               	rrf	15,w	;volatile
  7123  030F  0C89               	rrf	9,f
  7124  0310  3901               	andlw	1
  7125  0311  00F2               	movwf	??_LCDrecv
  7126  0312  0811               	movf	17,w	;volatile
  7127  0313  391F               	andlw	31
  7128  0314  0472               	iorwf	??_LCDrecv,w
  7129  0315  1D03               	btfss	3,2
  7130  0316  2B18               	goto	u2241
  7131  0317  2B19               	goto	u2240
  7132  0318                     u2241:
  7133  0318  2B0E               	goto	l2368
  7134  0319                     u2240:
  7135  0319                     l2370:
  7136                           
  7137                           ;main.c: 116: WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7138  0319  304F               	movlw	79
  7139  031A  3186  2639  3182   	fcall	_WriteI2C
  7140  031D                     l2372:
  7141  031D  0023               	movlb	3	; select bank3
  7142  031E  0C0F               	rrf	15,w	;volatile
  7143  031F  0C89               	rrf	9,f
  7144  0320  3901               	andlw	1
  7145  0321  00F2               	movwf	??_LCDrecv
  7146  0322  0811               	movf	17,w	;volatile
  7147  0323  391F               	andlw	31
  7148  0324  0472               	iorwf	??_LCDrecv,w
  7149  0325  1D03               	btfss	3,2
  7150  0326  2B28               	goto	u2251
  7151  0327  2B29               	goto	u2250
  7152  0328                     u2251:
  7153  0328  2B1D               	goto	l2372
  7154  0329                     u2250:
  7155  0329                     l2374:
  7156                           
  7157                           ;main.c: 117: lc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7158  0329  3187  27AC  3182   	fcall	_ReadI2C
  7159  032C  00F2               	movwf	??_LCDrecv
  7160  032D  0872               	movf	??_LCDrecv,w
  7161  032E  00F5               	movwf	LCDrecv@lc
  7162  032F                     l2376:
  7163  032F  0023               	movlb	3	; select bank3
  7164  0330  0C0F               	rrf	15,w	;volatile
  7165  0331  0C89               	rrf	9,f
  7166  0332  3901               	andlw	1
  7167  0333  00F2               	movwf	??_LCDrecv
  7168  0334  0811               	movf	17,w	;volatile
  7169  0335  391F               	andlw	31
  7170  0336  0472               	iorwf	??_LCDrecv,w
  7171  0337  1D03               	btfss	3,2
  7172  0338  2B3A               	goto	u2261
  7173  0339  2B3B               	goto	u2260
  7174  033A                     u2261:
  7175  033A  2B2F               	goto	l2376
  7176  033B                     u2260:
  7177  033B                     l516:
  7178                           
  7179                           ;main.c: 118: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN);
  7180  033B  1691               	bsf	17,5	;volatile
  7181  033C  1611               	bsf	17,4	;volatile
  7182  033D                     l517:
  7183  033D  1A11               	btfsc	17,4	;volatile
  7184  033E  2B40               	goto	u2271
  7185  033F  2B41               	goto	u2270
  7186  0340                     u2271:
  7187  0340  2B3D               	goto	l517
  7188  0341                     u2270:
  7189  0341                     l519:
  7190                           
  7191                           ;main.c: 119: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
  7192  0341  1491               	bsf	17,1	;volatile
  7193  0342                     l520:
  7194  0342  1891               	btfsc	17,1	;volatile
  7195  0343  2B45               	goto	u2281
  7196  0344  2B46               	goto	u2280
  7197  0345                     u2281:
  7198  0345  2B42               	goto	l520
  7199  0346                     u2280:
  7200  0346                     l2378:
  7201  0346  0C0F               	rrf	15,w	;volatile
  7202  0347  0C89               	rrf	9,f
  7203  0348  3901               	andlw	1
  7204  0349  00F2               	movwf	??_LCDrecv
  7205  034A  0811               	movf	17,w	;volatile
  7206  034B  391F               	andlw	31
  7207  034C  0472               	iorwf	??_LCDrecv,w
  7208  034D  1D03               	btfss	3,2
  7209  034E  2B50               	goto	u2291
  7210  034F  2B51               	goto	u2290
  7211  0350                     u2291:
  7212  0350  2B46               	goto	l2378
  7213  0351                     u2290:
  7214  0351                     l2380:
  7215                           
  7216                           ;main.c: 120: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7217  0351  304E               	movlw	78
  7218  0352  3186  2639  3182   	fcall	_WriteI2C
  7219  0355                     l2382:
  7220  0355  0023               	movlb	3	; select bank3
  7221  0356  0C0F               	rrf	15,w	;volatile
  7222  0357  0C89               	rrf	9,f
  7223  0358  3901               	andlw	1
  7224  0359  00F2               	movwf	??_LCDrecv
  7225  035A  0811               	movf	17,w	;volatile
  7226  035B  391F               	andlw	31
  7227  035C  0472               	iorwf	??_LCDrecv,w
  7228  035D  1D03               	btfss	3,2
  7229  035E  2B60               	goto	u2301
  7230  035F  2B61               	goto	u2300
  7231  0360                     u2301:
  7232  0360  2B55               	goto	l2382
  7233  0361                     u2300:
  7234  0361                     l2384:
  7235                           
  7236                           ;main.c: 121: WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATb
      +                          its.R_W));
  7237  0361  0876               	movf	LCDrecv@mode,w
  7238  0362  38FA               	iorlw	250
  7239  0363  3186  2639  3182   	fcall	_WriteI2C
  7240  0366                     l2386:
  7241  0366  0023               	movlb	3	; select bank3
  7242  0367  0C0F               	rrf	15,w	;volatile
  7243  0368  0C89               	rrf	9,f
  7244  0369  3901               	andlw	1
  7245  036A  00F2               	movwf	??_LCDrecv
  7246  036B  0811               	movf	17,w	;volatile
  7247  036C  391F               	andlw	31
  7248  036D  0472               	iorwf	??_LCDrecv,w
  7249  036E  1D03               	btfss	3,2
  7250  036F  2B71               	goto	u2311
  7251  0370  2B72               	goto	u2310
  7252  0371                     u2311:
  7253  0371  2B66               	goto	l2386
  7254  0372                     u2310:
  7255  0372                     l531:
  7256                           
  7257                           ;main.c: 122: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  7258  0372  1511               	bsf	17,2	;volatile
  7259  0373                     l532:
  7260  0373  1911               	btfsc	17,2	;volatile
  7261  0374  2B76               	goto	u2321
  7262  0375  2B77               	goto	u2320
  7263  0376                     u2321:
  7264  0376  2B73               	goto	l532
  7265  0377                     u2320:
  7266  0377                     l2388:
  7267                           
  7268                           ;main.c: 123: return ((hc&0xf0) | ((lc>>4)&0x0f));
  7269  0377  0875               	movf	LCDrecv@lc,w
  7270  0378  00F2               	movwf	??_LCDrecv
  7271  0379  3004               	movlw	4
  7272  037A                     u2335:
  7273  037A  36F2               	lsrf	??_LCDrecv,f
  7274  037B  0B89               	decfsz	9,f
  7275  037C  2B7A               	goto	u2335
  7276  037D  300F               	movlw	15
  7277  037E  0572               	andwf	??_LCDrecv,w
  7278  037F  00F3               	movwf	??_LCDrecv+1
  7279  0380  0874               	movf	LCDrecv@hc,w
  7280  0381  39F0               	andlw	240
  7281  0382  0473               	iorwf	??_LCDrecv+1,w
  7282  0383                     l535:
  7283  0383  0008               	return
  7284  0384                     __end_of_LCDrecv:
  7285                           
  7286                           	psect	text15
  7287  07AC                     __ptext15:	
  7288 ;; *************** function _ReadI2C *****************
  7289 ;; Defined at:
  7290 ;;		line 32 in file "I2C/i2c.c"
  7291 ;; Parameters:    Size  Location     Type
  7292 ;;		None
  7293 ;; Auto vars:     Size  Location     Type
  7294 ;;		None
  7295 ;; Return value:  Size  Location     Type
  7296 ;;                  1    wreg      unsigned char 
  7297 ;; Registers used:
  7298 ;;		wreg, status,2, status,0
  7299 ;; Tracked objects:
  7300 ;;		On entry : 0/0
  7301 ;;		On exit  : 0/0
  7302 ;;		Unchanged: 0/0
  7303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7306 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7307 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7308 ;;Total ram usage:        1 bytes
  7309 ;; Hardware stack levels used:    1
  7310 ;; Hardware stack levels required when called:    1
  7311 ;; This function calls:
  7312 ;;		Nothing
  7313 ;; This function is called by:
  7314 ;;		_tsttc
  7315 ;;		_LCDrecv
  7316 ;; This function uses a non-reentrant model
  7317 ;;
  7318                           
  7319                           
  7320                           ;psect for function _ReadI2C
  7321  07AC                     _ReadI2C:
  7322  07AC                     l2108:	
  7323                           ;incstack = 0
  7324                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
  7325                           
  7326                           
  7327                           ;i2c.c: 34: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
  7328  07AC  300F               	movlw	15
  7329  07AD  0023               	movlb	3	; select bank3
  7330  07AE  0510               	andwf	16,w	;volatile
  7331  07AF  00F0               	movwf	??_ReadI2C
  7332  07B0  3008               	movlw	8
  7333  07B1  0670               	xorwf	??_ReadI2C,w
  7334  07B2  1903               	btfsc	3,2
  7335  07B3  2FB5               	goto	u1531
  7336  07B4  2FB6               	goto	u1530
  7337  07B5                     u1531:
  7338  07B5  2FBF               	goto	l22
  7339  07B6                     u1530:
  7340  07B6                     l2110:
  7341  07B6  300F               	movlw	15
  7342  07B7  0510               	andwf	16,w	;volatile
  7343  07B8  00F0               	movwf	??_ReadI2C
  7344  07B9  300B               	movlw	11
  7345  07BA  0670               	xorwf	??_ReadI2C,w
  7346  07BB  1D03               	btfss	3,2
  7347  07BC  2FBE               	goto	u1541
  7348  07BD  2FBF               	goto	u1540
  7349  07BE                     u1541:
  7350  07BE  2FC0               	goto	l23
  7351  07BF                     u1540:
  7352  07BF                     l22:
  7353                           
  7354                           ;i2c.c: 35: SSP1CON2bits.RCEN = 1;
  7355  07BF  1591               	bsf	17,3	;volatile
  7356  07C0                     l23:
  7357  07C0  1C0F               	btfss	15,0	;volatile
  7358  07C1  2FC3               	goto	u1551
  7359  07C2  2FC4               	goto	u1550
  7360  07C3                     u1551:
  7361  07C3  2FC0               	goto	l23
  7362  07C4                     u1550:
  7363  07C4                     l2112:
  7364                           
  7365                           ;i2c.c: 37: return ( SSP1BUF );
  7366  07C4  080C               	movf	12,w	;volatile
  7367  07C5                     l26:
  7368  07C5  0008               	return
  7369  07C6                     __end_of_ReadI2C:
  7370                           
  7371                           	psect	text16
  7372  05C8                     __ptext16:	
  7373 ;; *************** function _LCDinit *****************
  7374 ;; Defined at:
  7375 ;;		line 149 in file "main.c"
  7376 ;; Parameters:    Size  Location     Type
  7377 ;;		None
  7378 ;; Auto vars:     Size  Location     Type
  7379 ;;		None
  7380 ;; Return value:  Size  Location     Type
  7381 ;;                  1    wreg      void 
  7382 ;; Registers used:
  7383 ;;		wreg, status,2, status,0, pclath, cstack
  7384 ;; Tracked objects:
  7385 ;;		On entry : 0/0
  7386 ;;		On exit  : 0/0
  7387 ;;		Unchanged: 0/0
  7388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7391 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7392 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7393 ;;Total ram usage:        1 bytes
  7394 ;; Hardware stack levels used:    1
  7395 ;; Hardware stack levels required when called:    3
  7396 ;; This function calls:
  7397 ;;		_LCDsend
  7398 ;;		_LCDsend2x4
  7399 ;; This function is called by:
  7400 ;;		_main
  7401 ;; This function uses a non-reentrant model
  7402 ;;
  7403                           
  7404                           
  7405                           ;psect for function _LCDinit
  7406  05C8                     _LCDinit:
  7407  05C8                     l2392:	
  7408                           ;incstack = 0
  7409                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
  7410                           
  7411                           
  7412                           ;main.c: 151: _delay((unsigned long)((50)*(1000000/4000.0)));
  7413  05C8  3011               	movlw	17
  7414  05C9  00F8               	movwf	??_LCDinit
  7415  05CA  303A               	movlw	58
  7416  05CB                     u2577:
  7417  05CB  0B89               	decfsz	9,f
  7418  05CC  2DCB               	goto	u2577
  7419  05CD  0BF8               	decfsz	??_LCDinit,f
  7420  05CE  2DCB               	goto	u2577
  7421  05CF  3200               	nop2
  7422  05D0                     l2394:
  7423                           
  7424                           ;main.c: 152: LCDsend(0x30);
  7425  05D0  3030               	movlw	48
  7426  05D1  3186  2684  3185   	fcall	_LCDsend
  7427  05D4                     l2396:
  7428                           
  7429                           ;main.c: 153: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
  7430  05D4  3034               	movlw	52
  7431  05D5  3186  2684  3185   	fcall	_LCDsend
  7432  05D8  3029               	movlw	41
  7433  05D9                     u2587:
  7434  05D9  0B89               	decfsz	9,f
  7435  05DA  2DD9               	goto	u2587
  7436  05DB  3200               	nop2
  7437  05DC                     l2398:
  7438  05DC  3030               	movlw	48
  7439  05DD  3186  2684  3185   	fcall	_LCDsend
  7440  05E0                     l2400:
  7441                           
  7442                           ;main.c: 154: _delay((unsigned long)((5)*(1000000/4000.0)));
  7443  05E0  30FA               	movlw	250
  7444  05E1                     u2597:
  7445  05E1  3200               	nop2
  7446  05E2  0B89               	decfsz	9,f
  7447  05E3  2DE1               	goto	u2597
  7448                           
  7449                           ;main.c: 155: LCDsend(0x30);
  7450  05E4  3030               	movlw	48
  7451  05E5  3186  2684  3185   	fcall	_LCDsend
  7452                           
  7453                           ;main.c: 156: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
  7454  05E8  3034               	movlw	52
  7455  05E9  3186  2684  3185   	fcall	_LCDsend
  7456  05EC                     l2402:
  7457  05EC  3029               	movlw	41
  7458  05ED                     u2607:
  7459  05ED  0B89               	decfsz	9,f
  7460  05EE  2DED               	goto	u2607
  7461  05EF  3200               	nop2
  7462  05F0                     l2404:
  7463  05F0  3030               	movlw	48
  7464  05F1  3186  2684  3185   	fcall	_LCDsend
  7465                           
  7466                           ;main.c: 157: _delay((unsigned long)((100)*(1000000/4000000.0)));
  7467  05F4  3008               	movlw	8
  7468  05F5                     u2617:
  7469  05F5  0B89               	decfsz	9,f
  7470  05F6  2DF5               	goto	u2617
  7471  05F7  0000               	nop
  7472  05F8                     l2406:
  7473                           
  7474                           ;main.c: 158: LCDsend(0x30);
  7475  05F8  3030               	movlw	48
  7476  05F9  3186  2684  3185   	fcall	_LCDsend
  7477  05FC                     l2408:
  7478                           
  7479                           ;main.c: 159: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x30);
  7480  05FC  3034               	movlw	52
  7481  05FD  3186  2684  3185   	fcall	_LCDsend
  7482  0600  3029               	movlw	41
  7483  0601                     u2627:
  7484  0601  0B89               	decfsz	9,f
  7485  0602  2E01               	goto	u2627
  7486  0603  3200               	nop2
  7487  0604                     l2410:
  7488  0604  3030               	movlw	48
  7489  0605  3186  2684  3185   	fcall	_LCDsend
  7490  0608                     l2412:
  7491                           
  7492                           ;main.c: 160: _delay((unsigned long)((100)*(1000000/4000000.0)));
  7493  0608  3008               	movlw	8
  7494  0609                     u2637:
  7495  0609  0B89               	decfsz	9,f
  7496  060A  2E09               	goto	u2637
  7497  060B  0000               	nop
  7498                           
  7499                           ;main.c: 161: LCDsend(0x20);
  7500  060C  3020               	movlw	32
  7501  060D  3186  2684  3185   	fcall	_LCDsend
  7502                           
  7503                           ;main.c: 162: LCDsend(0x24); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend
      +                          (0x20);
  7504  0610  3024               	movlw	36
  7505  0611  3186  2684  3185   	fcall	_LCDsend
  7506  0614                     l2414:
  7507  0614  3029               	movlw	41
  7508  0615                     u2647:
  7509  0615  0B89               	decfsz	9,f
  7510  0616  2E15               	goto	u2647
  7511  0617  3200               	nop2
  7512  0618                     l2416:
  7513  0618  3020               	movlw	32
  7514  0619  3186  2684  3185   	fcall	_LCDsend
  7515                           
  7516                           ;main.c: 163: _delay((unsigned long)((5)*(1000000/4000.0)));
  7517  061C  30FA               	movlw	250
  7518  061D                     u2657:
  7519  061D  3200               	nop2
  7520  061E  0B89               	decfsz	9,f
  7521  061F  2E1D               	goto	u2657
  7522  0620                     l2418:
  7523                           
  7524                           ;main.c: 165: LCDsend2x4(0x28, 0);
  7525  0620  01F2               	clrf	LCDsend2x4@mode
  7526  0621  3028               	movlw	40
  7527  0622  3184  2491  3185   	fcall	_LCDsend2x4
  7528  0625                     l2420:
  7529                           
  7530                           ;main.c: 166: LCDsend2x4(0x06, 0);
  7531  0625  01F2               	clrf	LCDsend2x4@mode
  7532  0626  3006               	movlw	6
  7533  0627  3184  2491  3185   	fcall	_LCDsend2x4
  7534  062A                     l2422:
  7535                           
  7536                           ;main.c: 167: LCDsend2x4(0x0f, 0);
  7537  062A  01F2               	clrf	LCDsend2x4@mode
  7538  062B  300F               	movlw	15
  7539  062C  3184  2491  3185   	fcall	_LCDsend2x4
  7540  062F                     l2424:
  7541                           
  7542                           ;main.c: 168: LCDsend2x4(0x01, 0);
  7543  062F  01F2               	clrf	LCDsend2x4@mode
  7544  0630  3001               	movlw	1
  7545  0631  3184  2491  3185   	fcall	_LCDsend2x4
  7546                           
  7547                           ;main.c: 169: _delay((unsigned long)((2)*(1000000/4000.0)));
  7548  0634  30A6               	movlw	166
  7549  0635                     u2667:
  7550  0635  0B89               	decfsz	9,f
  7551  0636  2E35               	goto	u2667
  7552  0637  3200               	nop2
  7553  0638                     l574:
  7554  0638  0008               	return
  7555  0639                     __end_of_LCDinit:
  7556                           
  7557                           	psect	text17
  7558  0684                     __ptext17:	
  7559 ;; *************** function _LCDsend *****************
  7560 ;; Defined at:
  7561 ;;		line 87 in file "main.c"
  7562 ;; Parameters:    Size  Location     Type
  7563 ;;  c               1    wreg     unsigned char 
  7564 ;; Auto vars:     Size  Location     Type
  7565 ;;  c               1    3[COMMON] unsigned char 
  7566 ;; Return value:  Size  Location     Type
  7567 ;;                  1    wreg      void 
  7568 ;; Registers used:
  7569 ;;		wreg, status,2, status,0, pclath, cstack
  7570 ;; Tracked objects:
  7571 ;;		On entry : 0/0
  7572 ;;		On exit  : 0/0
  7573 ;;		Unchanged: 0/0
  7574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7576 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7577 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7578 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7579 ;;Total ram usage:        2 bytes
  7580 ;; Hardware stack levels used:    1
  7581 ;; Hardware stack levels required when called:    2
  7582 ;; This function calls:
  7583 ;;		_WriteI2C
  7584 ;; This function is called by:
  7585 ;;		_LCDinit
  7586 ;; This function uses a non-reentrant model
  7587 ;;
  7588                           
  7589                           
  7590                           ;psect for function _LCDsend
  7591  0684                     _LCDsend:
  7592                           
  7593                           ;incstack = 0
  7594                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
  7595                           ;LCDsend@c stored from wreg
  7596  0684  00F3               	movwf	LCDsend@c
  7597  0685                     l2166:
  7598  0685                     l2168:	
  7599                           ;main.c: 89: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7600                           
  7601  0685  0023               	movlb	3	; select bank3
  7602  0686  0C0F               	rrf	15,w	;volatile
  7603  0687  0C89               	rrf	9,f
  7604  0688  3901               	andlw	1
  7605  0689  00F2               	movwf	??_LCDsend
  7606  068A  0811               	movf	17,w	;volatile
  7607  068B  391F               	andlw	31
  7608  068C  0472               	iorwf	??_LCDsend,w
  7609  068D  1D03               	btfss	3,2
  7610  068E  2E90               	goto	u1561
  7611  068F  2E91               	goto	u1560
  7612  0690                     u1561:
  7613  0690  2E85               	goto	l2168
  7614  0691                     u1560:
  7615  0691                     l438:
  7616                           
  7617                           ;main.c: 90: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP
      +                          1STATbits.R_W));
  7618  0691  1411               	bsf	17,0	;volatile
  7619  0692                     l439:
  7620  0692  1811               	btfsc	17,0	;volatile
  7621  0693  2E95               	goto	u1571
  7622  0694  2E96               	goto	u1570
  7623  0695                     u1571:
  7624  0695  2E92               	goto	l439
  7625  0696                     u1570:
  7626  0696                     l2170:
  7627  0696  0C0F               	rrf	15,w	;volatile
  7628  0697  0C89               	rrf	9,f
  7629  0698  3901               	andlw	1
  7630  0699  00F2               	movwf	??_LCDsend
  7631  069A  0811               	movf	17,w	;volatile
  7632  069B  391F               	andlw	31
  7633  069C  0472               	iorwf	??_LCDsend,w
  7634  069D  1D03               	btfss	3,2
  7635  069E  2EA0               	goto	u1581
  7636  069F  2EA1               	goto	u1580
  7637  06A0                     u1581:
  7638  06A0  2E96               	goto	l2170
  7639  06A1                     u1580:
  7640  06A1                     l2172:
  7641                           
  7642                           ;main.c: 91: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7643  06A1  304E               	movlw	78
  7644  06A2  3186  2639  3186   	fcall	_WriteI2C
  7645  06A5                     l2174:
  7646  06A5  0023               	movlb	3	; select bank3
  7647  06A6  0C0F               	rrf	15,w	;volatile
  7648  06A7  0C89               	rrf	9,f
  7649  06A8  3901               	andlw	1
  7650  06A9  00F2               	movwf	??_LCDsend
  7651  06AA  0811               	movf	17,w	;volatile
  7652  06AB  391F               	andlw	31
  7653  06AC  0472               	iorwf	??_LCDsend,w
  7654  06AD  1D03               	btfss	3,2
  7655  06AE  2EB0               	goto	u1591
  7656  06AF  2EB1               	goto	u1590
  7657  06B0                     u1591:
  7658  06B0  2EA5               	goto	l2174
  7659  06B1                     u1590:
  7660  06B1                     l2176:
  7661                           
  7662                           ;main.c: 92: WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7663  06B1  0873               	movf	LCDsend@c,w
  7664  06B2  3186  2639  3186   	fcall	_WriteI2C
  7665  06B5                     l2178:
  7666  06B5  0023               	movlb	3	; select bank3
  7667  06B6  0C0F               	rrf	15,w	;volatile
  7668  06B7  0C89               	rrf	9,f
  7669  06B8  3901               	andlw	1
  7670  06B9  00F2               	movwf	??_LCDsend
  7671  06BA  0811               	movf	17,w	;volatile
  7672  06BB  391F               	andlw	31
  7673  06BC  0472               	iorwf	??_LCDsend,w
  7674  06BD  1D03               	btfss	3,2
  7675  06BE  2EC0               	goto	u1601
  7676  06BF  2EC1               	goto	u1600
  7677  06C0                     u1601:
  7678  06C0  2EB5               	goto	l2178
  7679  06C1                     u1600:
  7680  06C1                     l450:
  7681                           
  7682                           ;main.c: 93: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  7683  06C1  1511               	bsf	17,2	;volatile
  7684  06C2                     l451:
  7685  06C2  1911               	btfsc	17,2	;volatile
  7686  06C3  2EC5               	goto	u1611
  7687  06C4  2EC6               	goto	u1610
  7688  06C5                     u1611:
  7689  06C5  2EC2               	goto	l451
  7690  06C6                     u1610:
  7691  06C6                     l454:
  7692  06C6  0008               	return
  7693  06C7                     __end_of_LCDsend:
  7694                           
  7695                           	psect	text18
  7696  0FD6                     __ptext18:	
  7697 ;; *************** function _LCDcmd *****************
  7698 ;; Defined at:
  7699 ;;		line 172 in file "main.c"
  7700 ;; Parameters:    Size  Location     Type
  7701 ;;  c               1    wreg     unsigned char 
  7702 ;; Auto vars:     Size  Location     Type
  7703 ;;  c               1    8[COMMON] unsigned char 
  7704 ;; Return value:  Size  Location     Type
  7705 ;;                  1    wreg      void 
  7706 ;; Registers used:
  7707 ;;		wreg, status,2, status,0, pclath, cstack
  7708 ;; Tracked objects:
  7709 ;;		On entry : 0/0
  7710 ;;		On exit  : 0/0
  7711 ;;		Unchanged: 0/0
  7712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7714 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7716 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7717 ;;Total ram usage:        1 bytes
  7718 ;; Hardware stack levels used:    1
  7719 ;; Hardware stack levels required when called:    3
  7720 ;; This function calls:
  7721 ;;		_LCDsend2x4
  7722 ;; This function is called by:
  7723 ;;		_main
  7724 ;; This function uses a non-reentrant model
  7725 ;;
  7726                           
  7727                           
  7728                           ;psect for function _LCDcmd
  7729  0FD6                     _LCDcmd:
  7730                           
  7731                           ;incstack = 0
  7732                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
  7733                           ;LCDcmd@c stored from wreg
  7734  0FD6  00F8               	movwf	LCDcmd@c
  7735  0FD7                     l2426:
  7736                           
  7737                           ;main.c: 174: LCDsend2x4(c, 0);
  7738  0FD7  01F2               	clrf	LCDsend2x4@mode
  7739  0FD8  0878               	movf	LCDcmd@c,w
  7740  0FD9  3184  2491  318F   	fcall	_LCDsend2x4
  7741  0FDC                     l577:
  7742  0FDC  0008               	return
  7743  0FDD                     __end_of_LCDcmd:
  7744                           
  7745                           	psect	text19
  7746  0491                     __ptext19:	
  7747 ;; *************** function _LCDsend2x4 *****************
  7748 ;; Defined at:
  7749 ;;		line 126 in file "main.c"
  7750 ;; Parameters:    Size  Location     Type
  7751 ;;  c               1    wreg     unsigned char 
  7752 ;;  mode            1    2[COMMON] unsigned char 
  7753 ;; Auto vars:     Size  Location     Type
  7754 ;;  c               1    5[COMMON] unsigned char 
  7755 ;;  lc              1    7[COMMON] unsigned char 
  7756 ;;  hc              1    6[COMMON] unsigned char 
  7757 ;; Return value:  Size  Location     Type
  7758 ;;                  1    wreg      void 
  7759 ;; Registers used:
  7760 ;;		wreg, status,2, status,0, pclath, cstack
  7761 ;; Tracked objects:
  7762 ;;		On entry : 0/0
  7763 ;;		On exit  : 0/0
  7764 ;;		Unchanged: 0/0
  7765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7766 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7767 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7768 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7769 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7770 ;;Total ram usage:        6 bytes
  7771 ;; Hardware stack levels used:    1
  7772 ;; Hardware stack levels required when called:    2
  7773 ;; This function calls:
  7774 ;;		_WriteI2C
  7775 ;; This function is called by:
  7776 ;;		_LCDinit
  7777 ;;		_LCDcmd
  7778 ;;		_LCDchar
  7779 ;; This function uses a non-reentrant model
  7780 ;;
  7781                           
  7782                           
  7783                           ;psect for function _LCDsend2x4
  7784  0491                     _LCDsend2x4:
  7785                           
  7786                           ;incstack = 0
  7787                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
  7788                           ;LCDsend2x4@c stored from wreg
  7789  0491  00F5               	movwf	LCDsend2x4@c
  7790  0492                     l2070:
  7791                           
  7792                           ;main.c: 128: unsigned char hc;;main.c: 129: unsigned char lc;;main.c: 131: hc = c & 0xf
      +                          0;
  7793  0492  0875               	movf	LCDsend2x4@c,w
  7794  0493  39F0               	andlw	240
  7795  0494  00F3               	movwf	??_LCDsend2x4
  7796  0495  0873               	movf	??_LCDsend2x4,w
  7797  0496  00F6               	movwf	LCDsend2x4@hc
  7798  0497                     l2072:
  7799                           
  7800                           ;main.c: 132: lc = (c << 4) & 0xf0;
  7801  0497  0875               	movf	LCDsend2x4@c,w
  7802  0498  00F3               	movwf	??_LCDsend2x4
  7803  0499  3003               	movlw	3
  7804  049A                     u1415:
  7805  049A  35F3               	lslf	??_LCDsend2x4,f
  7806  049B  3EFF               	addlw	-1
  7807  049C  1D03               	skipz
  7808  049D  2C9A               	goto	u1415
  7809  049E  3573               	lslf	??_LCDsend2x4,w
  7810  049F  39F0               	andlw	240
  7811  04A0  00F4               	movwf	??_LCDsend2x4+1
  7812  04A1  0874               	movf	??_LCDsend2x4+1,w
  7813  04A2  00F7               	movwf	LCDsend2x4@lc
  7814  04A3                     l2074:	
  7815                           ;main.c: 134: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7816                           
  7817  04A3  0023               	movlb	3	; select bank3
  7818  04A4  0C0F               	rrf	15,w	;volatile
  7819  04A5  0C89               	rrf	9,f
  7820  04A6  3901               	andlw	1
  7821  04A7  00F3               	movwf	??_LCDsend2x4
  7822  04A8  0811               	movf	17,w	;volatile
  7823  04A9  391F               	andlw	31
  7824  04AA  0473               	iorwf	??_LCDsend2x4,w
  7825  04AB  1D03               	btfss	3,2
  7826  04AC  2CAE               	goto	u1421
  7827  04AD  2CAF               	goto	u1420
  7828  04AE                     u1421:
  7829  04AE  2CA3               	goto	l2074
  7830  04AF                     u1420:
  7831  04AF                     l540:
  7832                           
  7833                           ;main.c: 135: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
  7834  04AF  1411               	bsf	17,0	;volatile
  7835  04B0                     l541:
  7836  04B0  1811               	btfsc	17,0	;volatile
  7837  04B1  2CB3               	goto	u1431
  7838  04B2  2CB4               	goto	u1430
  7839  04B3                     u1431:
  7840  04B3  2CB0               	goto	l541
  7841  04B4                     u1430:
  7842  04B4                     l2076:
  7843  04B4  0C0F               	rrf	15,w	;volatile
  7844  04B5  0C89               	rrf	9,f
  7845  04B6  3901               	andlw	1
  7846  04B7  00F3               	movwf	??_LCDsend2x4
  7847  04B8  0811               	movf	17,w	;volatile
  7848  04B9  391F               	andlw	31
  7849  04BA  0473               	iorwf	??_LCDsend2x4,w
  7850  04BB  1D03               	btfss	3,2
  7851  04BC  2CBE               	goto	u1441
  7852  04BD  2CBF               	goto	u1440
  7853  04BE                     u1441:
  7854  04BE  2CB4               	goto	l2076
  7855  04BF                     u1440:
  7856  04BF                     l2078:
  7857                           
  7858                           ;main.c: 136: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7859  04BF  304E               	movlw	78
  7860  04C0  3186  2639  3184   	fcall	_WriteI2C
  7861  04C3                     l2080:
  7862  04C3  0023               	movlb	3	; select bank3
  7863  04C4  0C0F               	rrf	15,w	;volatile
  7864  04C5  0C89               	rrf	9,f
  7865  04C6  3901               	andlw	1
  7866  04C7  00F3               	movwf	??_LCDsend2x4
  7867  04C8  0811               	movf	17,w	;volatile
  7868  04C9  391F               	andlw	31
  7869  04CA  0473               	iorwf	??_LCDsend2x4,w
  7870  04CB  1D03               	btfss	3,2
  7871  04CC  2CCE               	goto	u1451
  7872  04CD  2CCF               	goto	u1450
  7873  04CE                     u1451:
  7874  04CE  2CC3               	goto	l2080
  7875  04CF                     u1450:
  7876  04CF                     l2082:
  7877                           
  7878                           ;main.c: 137: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  7879  04CF  0876               	movf	LCDsend2x4@hc,w
  7880  04D0  0472               	iorwf	LCDsend2x4@mode,w
  7881  04D1  3808               	iorlw	8
  7882  04D2  3186  2639  3184   	fcall	_WriteI2C
  7883  04D5                     l2084:
  7884  04D5  0023               	movlb	3	; select bank3
  7885  04D6  0C0F               	rrf	15,w	;volatile
  7886  04D7  0C89               	rrf	9,f
  7887  04D8  3901               	andlw	1
  7888  04D9  00F3               	movwf	??_LCDsend2x4
  7889  04DA  0811               	movf	17,w	;volatile
  7890  04DB  391F               	andlw	31
  7891  04DC  0473               	iorwf	??_LCDsend2x4,w
  7892  04DD  1D03               	btfss	3,2
  7893  04DE  2CE0               	goto	u1461
  7894  04DF  2CE1               	goto	u1460
  7895  04E0                     u1461:
  7896  04E0  2CD5               	goto	l2084
  7897  04E1                     u1460:
  7898  04E1                     l2086:
  7899                           
  7900                           ;main.c: 138: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
  7901  04E1  0876               	movf	LCDsend2x4@hc,w
  7902  04E2  0472               	iorwf	LCDsend2x4@mode,w
  7903  04E3  380C               	iorlw	12
  7904  04E4  3186  2639  3184   	fcall	_WriteI2C
  7905  04E7                     l2088:
  7906  04E7  0023               	movlb	3	; select bank3
  7907  04E8  0C0F               	rrf	15,w	;volatile
  7908  04E9  0C89               	rrf	9,f
  7909  04EA  3901               	andlw	1
  7910  04EB  00F3               	movwf	??_LCDsend2x4
  7911  04EC  0811               	movf	17,w	;volatile
  7912  04ED  391F               	andlw	31
  7913  04EE  0473               	iorwf	??_LCDsend2x4,w
  7914  04EF  1D03               	btfss	3,2
  7915  04F0  2CF2               	goto	u1471
  7916  04F1  2CF3               	goto	u1470
  7917  04F2                     u1471:
  7918  04F2  2CE7               	goto	l2088
  7919  04F3                     u1470:
  7920  04F3                     l555:
  7921  04F3                     l2090:	
  7922                           ;main.c: 139: _delay((unsigned long)((1)*(1000000/4000000.0)));
  7923                           
  7924                           
  7925                           ;main.c: 140: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  7926  04F3  0876               	movf	LCDsend2x4@hc,w
  7927  04F4  0472               	iorwf	LCDsend2x4@mode,w
  7928  04F5  3808               	iorlw	8
  7929  04F6  3186  2639  3184   	fcall	_WriteI2C
  7930  04F9                     l2092:
  7931  04F9  0023               	movlb	3	; select bank3
  7932  04FA  0C0F               	rrf	15,w	;volatile
  7933  04FB  0C89               	rrf	9,f
  7934  04FC  3901               	andlw	1
  7935  04FD  00F3               	movwf	??_LCDsend2x4
  7936  04FE  0811               	movf	17,w	;volatile
  7937  04FF  391F               	andlw	31
  7938  0500  0473               	iorwf	??_LCDsend2x4,w
  7939  0501  1D03               	btfss	3,2
  7940  0502  2D04               	goto	u1481
  7941  0503  2D05               	goto	u1480
  7942  0504                     u1481:
  7943  0504  2CF9               	goto	l2092
  7944  0505                     u1480:
  7945  0505                     l2094:
  7946                           
  7947                           ;main.c: 141: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  7948  0505  0877               	movf	LCDsend2x4@lc,w
  7949  0506  0472               	iorwf	LCDsend2x4@mode,w
  7950  0507  3808               	iorlw	8
  7951  0508  3186  2639  3184   	fcall	_WriteI2C
  7952  050B                     l2096:
  7953  050B  0023               	movlb	3	; select bank3
  7954  050C  0C0F               	rrf	15,w	;volatile
  7955  050D  0C89               	rrf	9,f
  7956  050E  3901               	andlw	1
  7957  050F  00F3               	movwf	??_LCDsend2x4
  7958  0510  0811               	movf	17,w	;volatile
  7959  0511  391F               	andlw	31
  7960  0512  0473               	iorwf	??_LCDsend2x4,w
  7961  0513  1D03               	btfss	3,2
  7962  0514  2D16               	goto	u1491
  7963  0515  2D17               	goto	u1490
  7964  0516                     u1491:
  7965  0516  2D0B               	goto	l2096
  7966  0517                     u1490:
  7967  0517                     l2098:
  7968                           
  7969                           ;main.c: 142: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbit
      +                          s.R_W));
  7970  0517  0877               	movf	LCDsend2x4@lc,w
  7971  0518  0472               	iorwf	LCDsend2x4@mode,w
  7972  0519  380C               	iorlw	12
  7973  051A  3186  2639  3184   	fcall	_WriteI2C
  7974  051D                     l2100:
  7975  051D  0023               	movlb	3	; select bank3
  7976  051E  0C0F               	rrf	15,w	;volatile
  7977  051F  0C89               	rrf	9,f
  7978  0520  3901               	andlw	1
  7979  0521  00F3               	movwf	??_LCDsend2x4
  7980  0522  0811               	movf	17,w	;volatile
  7981  0523  391F               	andlw	31
  7982  0524  0473               	iorwf	??_LCDsend2x4,w
  7983  0525  1D03               	btfss	3,2
  7984  0526  2D28               	goto	u1501
  7985  0527  2D29               	goto	u1500
  7986  0528                     u1501:
  7987  0528  2D1D               	goto	l2100
  7988  0529                     u1500:
  7989  0529                     l564:
  7990  0529                     l2102:	
  7991                           ;main.c: 143: _delay((unsigned long)((1)*(1000000/4000000.0)));
  7992                           
  7993                           
  7994                           ;main.c: 144: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W))
      +                          ;
  7995  0529  0877               	movf	LCDsend2x4@lc,w
  7996  052A  0472               	iorwf	LCDsend2x4@mode,w
  7997  052B  3808               	iorlw	8
  7998  052C  3186  2639  3184   	fcall	_WriteI2C
  7999  052F                     l2104:
  8000  052F  0023               	movlb	3	; select bank3
  8001  0530  0C0F               	rrf	15,w	;volatile
  8002  0531  0C89               	rrf	9,f
  8003  0532  3901               	andlw	1
  8004  0533  00F3               	movwf	??_LCDsend2x4
  8005  0534  0811               	movf	17,w	;volatile
  8006  0535  391F               	andlw	31
  8007  0536  0473               	iorwf	??_LCDsend2x4,w
  8008  0537  1D03               	btfss	3,2
  8009  0538  2D3A               	goto	u1511
  8010  0539  2D3B               	goto	u1510
  8011  053A                     u1511:
  8012  053A  2D2F               	goto	l2104
  8013  053B                     u1510:
  8014  053B                     l567:
  8015                           
  8016                           ;main.c: 145: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  8017  053B  1511               	bsf	17,2	;volatile
  8018  053C                     l568:
  8019  053C  1911               	btfsc	17,2	;volatile
  8020  053D  2D3F               	goto	u1521
  8021  053E  2D40               	goto	u1520
  8022  053F                     u1521:
  8023  053F  2D3C               	goto	l568
  8024  0540                     u1520:
  8025  0540                     l2106:
  8026                           
  8027                           ;main.c: 146: _delay((unsigned long)((50)*(1000000/4000000.0)));
  8028  0540  3004               	movlw	4
  8029  0541                     u2677:
  8030  0541  0B89               	decfsz	9,f
  8031  0542  2D41               	goto	u2677
  8032  0543                     l571:
  8033  0543  0008               	return
  8034  0544                     __end_of_LCDsend2x4:
  8035                           
  8036                           	psect	text20
  8037  0639                     __ptext20:	
  8038 ;; *************** function _WriteI2C *****************
  8039 ;; Defined at:
  8040 ;;		line 47 in file "I2C/i2c.c"
  8041 ;; Parameters:    Size  Location     Type
  8042 ;;  data_out        1    wreg     unsigned char 
  8043 ;; Auto vars:     Size  Location     Type
  8044 ;;  data_out        1    1[COMMON] unsigned char 
  8045 ;; Return value:  Size  Location     Type
  8046 ;;                  1    wreg      char 
  8047 ;; Registers used:
  8048 ;;		wreg, status,2, status,0
  8049 ;; Tracked objects:
  8050 ;;		On entry : 0/0
  8051 ;;		On exit  : 0/0
  8052 ;;		Unchanged: 0/0
  8053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8055 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8056 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8057 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8058 ;;Total ram usage:        2 bytes
  8059 ;; Hardware stack levels used:    1
  8060 ;; Hardware stack levels required when called:    1
  8061 ;; This function calls:
  8062 ;;		Nothing
  8063 ;; This function is called by:
  8064 ;;		_tsttc
  8065 ;;		_LCDsend
  8066 ;;		_LCDrecv
  8067 ;;		_LCDsend2x4
  8068 ;; This function uses a non-reentrant model
  8069 ;;
  8070                           
  8071                           
  8072                           ;psect for function _WriteI2C
  8073  0639                     _WriteI2C:
  8074                           
  8075                           ;incstack = 0
  8076                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
  8077                           ;WriteI2C@data_out stored from wreg
  8078  0639  00F1               	movwf	WriteI2C@data_out
  8079  063A                     l2040:
  8080                           
  8081                           ;i2c.c: 49: SSP1BUF = data_out;
  8082  063A  0871               	movf	WriteI2C@data_out,w
  8083  063B  0023               	movlb	3	; select bank3
  8084  063C  008C               	movwf	12	;volatile
  8085  063D                     l2042:
  8086                           
  8087                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
  8088  063D  1F90               	btfss	16,7	;volatile
  8089  063E  2E40               	goto	u1321
  8090  063F  2E41               	goto	u1320
  8091  0640                     u1321:
  8092  0640  2E42               	goto	l2048
  8093  0641                     u1320:
  8094  0641  2E83               	goto	l30
  8095  0642                     l2048:
  8096                           
  8097                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
  8098  0642  300F               	movlw	15
  8099  0643  0510               	andwf	16,w	;volatile
  8100  0644  00F0               	movwf	??_WriteI2C
  8101  0645  3008               	movlw	8
  8102  0646  0670               	xorwf	??_WriteI2C,w
  8103  0647  1903               	btfsc	3,2
  8104  0648  2E4A               	goto	u1331
  8105  0649  2E4B               	goto	u1330
  8106  064A                     u1331:
  8107  064A  2E61               	goto	l2060
  8108  064B                     u1330:
  8109  064B                     l2050:
  8110  064B  300F               	movlw	15
  8111  064C  0510               	andwf	16,w	;volatile
  8112  064D  00F0               	movwf	??_WriteI2C
  8113  064E  300B               	movlw	11
  8114  064F  0670               	xorwf	??_WriteI2C,w
  8115  0650  1903               	btfsc	3,2
  8116  0651  2E53               	goto	u1341
  8117  0652  2E54               	goto	u1340
  8118  0653                     u1341:
  8119  0653  2E61               	goto	l2060
  8120  0654                     u1340:
  8121  0654                     l2052:
  8122                           
  8123                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
  8124  0654  1610               	bsf	16,4	;volatile
  8125  0655                     l33:	
  8126                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
  8127                           
  8128  0655  002E               	movlb	14	; select bank14
  8129  0656  1C0F               	btfss	15,0	;volatile
  8130  0657  2E59               	goto	u1351
  8131  0658  2E5A               	goto	u1350
  8132  0659                     u1351:
  8133  0659  2E55               	goto	l33
  8134  065A                     u1350:
  8135  065A                     l35:
  8136                           
  8137                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
  8138  065A  0023               	movlb	3	; select bank3
  8139  065B  190F               	btfsc	15,2	;volatile
  8140  065C  2E5E               	goto	u1361
  8141  065D  2E5F               	goto	u1360
  8142  065E                     u1361:
  8143  065E  2E83               	goto	l30
  8144  065F                     u1360:
  8145  065F                     l2054:
  8146  065F  080F               	movf	15,w	;volatile
  8147  0660  2E83               	goto	l30
  8148  0661                     l2060:
  8149                           
  8150                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
  8151  0661  300F               	movlw	15
  8152  0662  0510               	andwf	16,w	;volatile
  8153  0663  00F0               	movwf	??_WriteI2C
  8154  0664  3008               	movlw	8
  8155  0665  0670               	xorwf	??_WriteI2C,w
  8156  0666  1903               	btfsc	3,2
  8157  0667  2E69               	goto	u1371
  8158  0668  2E6A               	goto	u1370
  8159  0669                     u1371:
  8160  0669  2E73               	goto	l42
  8161  066A                     u1370:
  8162  066A                     l2062:
  8163  066A  300F               	movlw	15
  8164  066B  0510               	andwf	16,w	;volatile
  8165  066C  00F0               	movwf	??_WriteI2C
  8166  066D  300B               	movlw	11
  8167  066E  0670               	xorwf	??_WriteI2C,w
  8168  066F  1D03               	btfss	3,2
  8169  0670  2E72               	goto	u1381
  8170  0671  2E73               	goto	u1380
  8171  0672                     u1381:
  8172  0672  2E83               	goto	l30
  8173  0673                     u1380:
  8174  0673                     l42:
  8175  0673  180F               	btfsc	15,0	;volatile
  8176  0674  2E76               	goto	u1391
  8177  0675  2E77               	goto	u1390
  8178  0676                     u1391:
  8179  0676  2E73               	goto	l42
  8180  0677                     u1390:
  8181  0677                     l2064:
  8182  0677  0C0F               	rrf	15,w	;volatile
  8183  0678  0C89               	rrf	9,f
  8184  0679  3901               	andlw	1
  8185  067A  00F0               	movwf	??_WriteI2C
  8186  067B  0811               	movf	17,w	;volatile
  8187  067C  391F               	andlw	31
  8188  067D  0470               	iorwf	??_WriteI2C,w
  8189  067E  1D03               	btfss	3,2
  8190  067F  2E81               	goto	u1401
  8191  0680  2E82               	goto	u1400
  8192  0681                     u1401:
  8193  0681  2E77               	goto	l2064
  8194  0682                     u1400:
  8195  0682                     l47:
  8196                           
  8197                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
  8198  0682  0811               	movf	17,w	;volatile
  8199  0683                     l30:
  8200  0683  0008               	return
  8201  0684                     __end_of_WriteI2C:
  8202                           
  8203                           	psect	intentry
  8204  0004                     __pintentry:	
  8205 ;; *************** function _INTERRUPT_InterruptManager *****************
  8206 ;; Defined at:
  8207 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  8208 ;; Parameters:    Size  Location     Type
  8209 ;;		None
  8210 ;; Auto vars:     Size  Location     Type
  8211 ;;		None
  8212 ;; Return value:  Size  Location     Type
  8213 ;;                  1    wreg      void 
  8214 ;; Registers used:
  8215 ;;		wreg
  8216 ;; Tracked objects:
  8217 ;;		On entry : 0/0
  8218 ;;		On exit  : 0/0
  8219 ;;		Unchanged: 0/0
  8220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8225 ;;Total ram usage:        0 bytes
  8226 ;; Hardware stack levels used:    1
  8227 ;; This function calls:
  8228 ;;		Nothing
  8229 ;; This function is called by:
  8230 ;;		Interrupt level 1
  8231 ;; This function uses a non-reentrant model
  8232 ;;
  8233                           
  8234  0004                     _INTERRUPT_InterruptManager:
  8235                           
  8236                           ;incstack = 0
  8237  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  8238                           
  8239                           ; Regs used in _INTERRUPT_InterruptManager: [wreg]
  8240  0005  3180               	pagesel	$
  8241  0006                     i1l1990:
  8242                           
  8243                           ;interrupt_manager.c: 55: if(INTCONbits.PEIE == 1)
  8244  0006  1F0B               	btfss	11,6	;volatile
  8245  0007  2809               	goto	u128_21
  8246  0008  280A               	goto	u128_20
  8247  0009                     u128_21:
  8248  0009  281A               	goto	i1l326
  8249  000A                     u128_20:
  8250  000A                     i1l1992:
  8251                           
  8252                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: if(PIE3bits.BCL1IE == 1 && PIR3bits
      +                          .BCL1IF == 1)
  8253  000A  002E               	movlb	14	; select bank14
  8254  000B  1C99               	btfss	25,1	;volatile
  8255  000C  280E               	goto	u129_21
  8256  000D  280F               	goto	u129_20
  8257  000E                     u129_21:
  8258  000E  2814               	goto	i1l321
  8259  000F                     u129_20:
  8260  000F                     i1l1994:
  8261                           
  8262                           ;interrupt_manager.c: 58: {;interrupt_manager.c: 59: i2c1_driver_busCollisionISR();
  8263  000F  1C8F               	btfss	15,1	;volatile
  8264  0010  2812               	goto	u130_21
  8265  0011  2813               	goto	u130_20
  8266  0012                     u130_21:
  8267  0012  2814               	goto	i1l321
  8268  0013                     u130_20:
  8269  0013  281A               	goto	i1l326
  8270  0014                     i1l321:
  8271                           
  8272                           ;interrupt_manager.c: 61: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
  8273  0014  1C19               	btfss	25,0	;volatile
  8274  0015  2817               	goto	u131_21
  8275  0016  2818               	goto	u131_20
  8276  0017                     u131_21:
  8277  0017  281A               	goto	i1l322
  8278  0018                     u131_20:
  8279  0018                     i1l1998:
  8280                           
  8281                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: i2c1_driver_i2cISR();
  8282  0018  080F               	movf	15,w	;volatile
  8283  0019  281A               	goto	i1l326
  8284  001A                     i1l322:
  8285  001A                     i1l326:	
  8286                           ;interrupt_manager.c: 68: };interrupt_manager.c: 69: }
  8287                           
  8288  001A  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8289  001B  0009               	retfie
  8290  001C                     __end_of_INTERRUPT_InterruptManager:
  8291  007E                     btemp	set	126	;btemp
  8292  007E                     int$flags	set	126
  8293  007E                     wtemp0	set	126
  8294                           
  8295                           	psect	config
  8296                           
  8297                           ;Config register CONFIG1 @ 0x8007
  8298                           ;	External Oscillator mode selection bits
  8299                           ;	FEXTOSC = OFF, Oscillator not enabled
  8300                           ;	Power-up default value for COSC bits
  8301                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
  8302                           ;	Clock Out Enable bit
  8303                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  8304                           ;	Clock Switch Enable bit
  8305                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  8306                           ;	Fail-Safe Clock Monitor Enable bit
  8307                           ;	FCMEN = ON, FSCM timer enabled
  8308  8007                     	org	32775
  8309  8007  3FEC               	dw	16364
  8310                           
  8311                           ;Config register CONFIG2 @ 0x8008
  8312                           ;	Master Clear Enable bit
  8313                           ;	MCLRE = ON, MCLR pin is Master Clear function
  8314                           ;	Power-up Timer Enable bit
  8315                           ;	PWRTE = OFF, PWRT disabled
  8316                           ;	Low-Power BOR enable bit
  8317                           ;	LPBOREN = OFF, ULPBOR disabled
  8318                           ;	Brown-out reset enable bits
  8319                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  8320                           ;	Brown-out Reset Voltage Selection
  8321                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
  8322                           ;	Zero-cross detect disable
  8323                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  8324                           ;	Peripheral Pin Select one-way control
  8325                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  8326                           ;	Stack Overflow/Underflow Reset Enable bit
  8327                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  8328                           ;	Background Debugger
  8329                           ;	DEBUG = OFF, Background Debugger disabled
  8330  8008                     	org	32776
  8331  8008  3FFF               	dw	16383
  8332                           
  8333                           ;Config register CONFIG3 @ 0x8009
  8334                           ;	WDT Period Select bits
  8335                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  8336                           ;	WDT operating mode
  8337                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  8338                           ;	WDT Window Select bits
  8339                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  8340                           ;	WDT input clock selector
  8341                           ;	WDTCCS = SC, Software Control
  8342  8009                     	org	32777
  8343  8009  3F9F               	dw	16287
  8344                           
  8345                           ;Config register CONFIG4 @ 0x800A
  8346                           ;	UserNVM self-write protection bits
  8347                           ;	WRT = OFF, Write protection off
  8348                           ;	Scanner Enable bit
  8349                           ;	SCANE = available, Scanner module is available for use
  8350                           ;	Low Voltage Programming Enable bit
  8351                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
  8352  800A                     	org	32778
  8353  800A  3FFF               	dw	16383
  8354                           
  8355                           ;Config register CONFIG5 @ 0x800B
  8356                           ;	UserNVM Program memory code protection bit
  8357                           ;	CP = OFF, Program Memory code protection disabled
  8358                           ;	DataNVM code protection bit
  8359                           ;	CPD = OFF, Data EEPROM code protection disabled
  8360  800B                     	org	32779
  8361  800B  3FFF               	dw	16383

Data Sizes:
    Strings     39
    Constant    18
    Data        0
    BSS         4
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     44      48
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_3(CODE[10]), STR_2(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> main@buf(BANK0[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCDstr@p	PTR unsigned char  size(2) Largest target is 17
		 -> main@buf(BANK0[17]), STR_1(CODE[5]), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    _main->_LCDstr
    _tsttc->_WriteI2C
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCDstr->_LCDchar
    _LCDchar->_LCDsend2x4
    _LCDrecv->_WriteI2C
    _LCDinit->_LCDsend2x4
    _LCDsend->_WriteI2C
    _LCDcmd->_LCDsend2x4
    _LCDsend2x4->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0    5607
                                             20 BANK0     24    24      0
                             _LCDcmd
                            _LCDinit
                            _LCDrecv
                             _LCDstr
                  _SYSTEM_Initialize
                   _i2c1_driver_open
                            _sprintf
                              _tsttc
 ---------------------------------------------------------------------------------
 (1) _tsttc                                                2     2      0      68
                                              2 COMMON     2     2      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             28    22      6    2464
                                              0 BANK0     20    14      6
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDstr                                               6     4      2    1083
                                              9 COMMON     5     3      2
                                              0 BANK0      1     1      0
                            _LCDchar
 ---------------------------------------------------------------------------------
 (2) _LCDchar                                              1     1      0     810
                                              8 COMMON     1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (1) _LCDrecv                                              5     5      0     178
                                              2 COMMON     5     5      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     832
                                              8 COMMON     1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 COMMON     2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _LCDcmd                                               1     1      0     810
                                              8 COMMON     1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (3) _LCDsend2x4                                           6     5      1     788
                                              2 COMMON     6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDcmd
     _LCDsend2x4
       _WriteI2C
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _LCDrecv
     _ReadI2C
     _WriteI2C
   _LCDstr
     _LCDchar
       _LCDsend2x4
         _WriteI2C
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _i2c1_driver_open
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit
   _tsttc
     _ReadI2C
     _WriteI2C

 _INTERRUPT_InterruptManager (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2C      30       5       60.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      3E      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      3E      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Tue Oct 13 17:06:11 2020

                                 l30 0683                                   l22 07BF  
                                 l23 07C0                                   l33 0655  
                                 l42 0673                                   l26 07C5  
                                 l35 065A                                   l47 0682  
                ___wmul@multiplicand 0072                                  l120 073D  
                                l400 0418                                  l161 0FF5  
                                l225 07FC                                  l411 0447  
                                l164 0FEC                                  l412 0448  
                                l158 0FFF                                  l430 048B  
                                l423 0479                                  l520 0342  
                                l504 0308                                  l424 047B  
                                l505 030A                                  l433 0490  
                                l450 06C1                                  l362 0390  
                                l451 06C2                                  l531 0372  
                                l363 0391                                  l540 04AF  
                                l532 0373                                  l516 033B  
                                l460 024C                                  l541 04B0  
                                l517 033D                                  l429 048A  
                                l454 06C6                                  l438 0691  
                                l374 03C0                                  l439 0692  
                                l535 0383                                  l519 0341  
                                l375 03C1                                  l359 0384  
                                l392 0403                                  l393 0404  
                                l490 02C7                                  l474 028D  
                                l386 03F2                                  l571 0543  
                                l555 04F3                                  l475 028F  
                                l459 024B                                  l395 0408  
                                l387 03F4                                  l564 0529  
                                l580 0FE4                                  l813 023D  
                                l574 0638                                  l486 02C0  
                                l567 053B                                  l487 02C2  
                                l399 0417                                  l568 053C  
                                l577 0FDC                                  l489 02C6  
                                l817 077C                                  l586 07AB  
                                l819 0790                                  l764 0044  
                                l783 00D8                                  l792 013F  
                                l776 00AF                                  l777 0092  
                                l788 00FF              __size_of_PMD_Initialize 0008  
                                wreg 0009                          ?_LCDsend2x4 0072  
                    __end_of_LCDchar 0FE5                                 l2100 051D  
                               l2102 0529                                 l2110 07B6  
                               l2040 063A                                 l2104 052F  
                               l2112 07C4                                 l2120 070B  
                               l2200 0781                                 l2050 064B  
                               l2042 063D                                 l2106 0540  
                               l2130 0716                                 l2122 070D  
                               l2210 06C9                                 l2202 0786  
                               l2052 0654                                 l2060 0661  
                               l2108 07AC                                 l2140 072A  
                               l2132 0718                                 l2124 070F  
                               l2116 0703                                 l2220 06DF  
                               l2212 06CF                                 l2204 078C  
                               l2300 041C                                 l2062 066A  
                               l2054 065F                                 l2070 0492  
                               l2150 0735                                 l2142 072C  
                               l2134 071A                                 l2126 0711  
                               l2118 0709                                 l2222 06EE  
                               l2214 06D2                                 l2230 06FE  
                               l1270 07F0                                 l2310 044C  
                               l2302 0427                                 l2064 0677  
                               l2048 0642                                 l2080 04C3  
                               l2072 0497                                 l2400 05E0  
                               l2160 0FF0                                 l2152 0738  
                               l2144 072E                                 l2136 071C  
                               l2128 0713                                 l2224 06F2  
                               l2216 06D7                                 l2208 06C7  
                               l2240 074C                                 l2320 047F  
                               l2312 0457                                 l2304 042B  
                               l1089 0702                                 l2090 04F3  
                               l2082 04CF                                 l2074 04A3  
                               l2170 0696                                 l2410 0604  
                               l2402 05EC                                 l2330 0250  
                               l2162 0FF1                                 l2154 073A  
                               l2146 0730                                 l2138 0728  
                               l2226 06F3                                 l2218 06DB  
                               l2250 0767                                 l2242 0750  
                               l2234 073E                                 l2322 048F  
                               l2314 045B                                 l2306 0437  
                               l1099 0771                                 l2092 04F9  
                               l2084 04D5                                 l2076 04B4  
                               l2172 06A1                                 l2420 0625  
                               l2412 0608                                 l2404 05F0  
                               l2340 027C                                 l2332 025B  
                               l2180 0FDE                                 l2164 0FF4  
                               l2148 0732                                 l2156 0FE5  
                               l2260 0FFC                                 l2228 06F8  
                               l2244 0754                                 l2236 0744  
                               l2252 076D                                 l2316 0467  
                               l2308 043B                                 l2094 0505  
                               l2086 04E1                                 l2078 04BF  
                               l2174 06A5                                 l2166 0685  
                               l2422 062A                                 l2414 0614  
                               l2406 05F8                                 l2350 02AE  
                               l2342 0281                                 l2334 025F  
                               l2326 023F                                 l2430 0792  
                               l2158 0FED                                 l2262 07F1  
                               l2246 075E                                 l2238 0747  
                               l2190 07EF                                 l2182 07E0  
                               l2510 014A                                 l2502 0126  
                               l2318 046D                                 l2096 050B  
                               l2088 04E7                                 l2176 06B1  
                               l2168 0685                                 l2424 062F  
                               l2416 0618                                 l2408 05FC  
                               l2360 02E6                                 l2352 02B4  
                               l2344 0293                                 l2336 026B  
                               l2328 023F                                 l2432 0796  
                               l2256 0FF6                                 l2264 07F6  
                               l2248 0762                                 l2184 07E1  
                               l2520 0167                                 l2512 0153  
                               l2504 012F                                 l2440 003B  
                               l2280 03A4                                 l2600 058D  
                               l2098 0517                                 l2426 0FD7  
                               l2178 06B5                                 l2418 0620  
                               l2370 0319                                 l2362 02EB  
                               l2354 02CB                                 l2346 029E  
                               l2338 0270                                 l2258 0FF9  
                               l2266 07F7                                 l2194 0772  
                               l2186 07E7                                 l2522 016B  
                               l2530 0187                                 l2514 0156  
                               l2506 0135                                 l2450 0052  
                               l2442 0040                                 l2434 0029  
                               l2290 03D4                                 l2282 03B0  
                               l2274 0384                                 l2602 0595  
                               l2380 0351                                 l2372 031D  
                               l2364 02F7                                 l2356 02D6  
                               l2348 02A2                                 l2428 0791  
                               l2268 07F9                                 l2196 0774  
                               l2188 07ED                                 l2540 01A8  
                               l2532 018D                                 l2524 0171  
                               l2516 015A                                 l2508 013B  
                               l2460 0085                                 l2452 005E  
                               l2444 0045                                 l2436 002E  
                               l2292 03E0                                 l2284 03B4  
                               l2276 0395                                 l2604 05B0  
                               l2382 0355                                 l2374 0329  
                               l2366 02FC                                 l2358 02DA  
                               l2198 0778                                 l2550 01FC  
                               l2542 01AF                                 l2534 0194  
                               l2526 0178                                 l2518 0160  
                               l2470 00BE                                 l2454 0061  
                               l2438 0034                                 l2294 03E6  
                               l2286 03C5                                 l2278 03A0  
                               l2606 05B7                                 l2392 05C8  
                               l2384 0361                                 l2376 032F  
                               l2368 030E                                 l2560 021C  
                               l2536 0198                                 l2528 017C  
                               l2544 01B3                                 l2472 00C2  
                               l2456 0072                                 l2464 0094  
                               l2448 0049                                 l2296 03F8  
                               l2288 03D0                                 l2608 05B8  
                               l2394 05D0                                 l2386 0366  
                               l2378 0346                                 l2554 0208  
                               l2546 01B8                                 l2538 01A2  
                               l2474 00C6                                 l2466 00B3  
                               l2458 0081                                 l2562 0225  
                               l2298 040C                                 l2396 05D4  
                               l2388 0377                                 l2548 01E0  
                               l2556 0211                                 l2484 00DA  
                               l2468 00BA                                 l2476 00CC  
                               l2564 0239                                 l2580 054C  
                               l2398 05DC                                 l2558 0218  
                               l2494 0101                                 l2478 00D3  
                               l2590 0566                                 l2582 054D  
                               l2488 00F4                                 l2592 056A  
                               l2584 054F                                 l2576 0544  
                               l2498 011B                                 l2594 057A  
                               l2586 0553                                 l2578 054A  
                               l2596 0581                                 l2588 055F  
                               l2598 0585                      __end_of_LCDinit 0639  
                    __end_of_LCDrecv 0384                      __end_of_LCDsend 06C7  
                               STR_1 1007                                 STR_2 1000  
                               STR_3 0807                                 STR_4 07CE  
                               u2000 044C                                 u2001 044B  
                               u2010 0457                                 u2011 0456  
                               u2100 026B                                 u2020 0467  
                               u2101 026A                                 u2021 0466  
                               u2110 027C                                 u2030 0479  
                               u2111 027B                                 u2031 0478  
                               u1400 0682                                 u1320 0641  
                               u2200 02E6                                 u2120 028D  
                               u2040 047F                                 u1401 0681  
                               u1321 0640                                 u2201 02E5  
                               u2121 028C                                 u2041 047E  
                               u1330 064B                                 u2210 02F7  
                               u2130 0293                                 u2050 048A  
                               u1331 064A                                 u2211 02F6  
                               u2131 0292                                 u2051 0489  
                               u1340 0654                                 u1500 0529  
                               u1420 04AF                                 u2300 0361  
                               u2220 0308                                 u2140 029E  
                               u2060 048F                                 u1341 0653  
                               u1501 0528                                 u1421 04AE  
                               u2301 0360                                 u2221 0307  
                               u2141 029D                                 u2061 048E  
                               _LATA 0016                                 u1350 065A  
                               u1510 053B                                 u1430 04B4  
                               u2310 0372                                 u2230 030E  
                               u2150 02AE                                 u2070 024B  
                               _LATB 0017                                 u1351 0659  
                               u1511 053A                                 u1431 04B3  
                               u1415 049A                                 u2311 0371  
                               u2231 030D                                 u2151 02AD  
                               u2071 024A                                 _LATC 0018  
                               u1360 065F                                 u1520 0540  
                               u1440 04BF                                 u1600 06C1  
                               u2320 0377                                 u2240 0319  
                               u2160 02C0                                 u2080 0250  
                               u2400 00F3                                 _LATD 0019  
                               u1361 065E                                 u1521 053F  
                               u1441 04BE                                 u1601 06C0  
                               u2321 0376                                 u2241 0318  
                               u2161 02BF                                 u2081 024F  
                               u2401 00F2                                 _LATE 001A  
                               u1370 066A                                 u1450 04CF  
                               u1610 06C6                                 u1530 07B6  
                               u2250 0329                                 u2170 02C6  
                               u2090 025B                                 u2410 00FE  
                               u1371 0669                                 u1451 04CE  
                               u1611 06C5                                 u1531 07B5  
                               u2251 0328                                 u2171 02C5  
                               u2091 025A                                 u2411 00FD  
                               u1380 0673                                 u1460 04E1  
                               u1540 07BF                                 u2260 033B  
                               u2180 02CB                                 u2340 07AB  
                               u1700 06DF                                 u1620 07E7  
                               u2500 0186                                 u2420 011A  
                               u1381 0672                                 u1461 04E0  
                               u1541 07BE                                 u2261 033A  
                               u2181 02CA                                 u2341 07AA  
                               u1701 06DE                                 u1621 07E6  
                               u2501 0185                                 u2421 0119  
                               u2405 00EF                                 u1390 0677  
                               u1470 04F3                                 u1550 07C4  
                               u2270 0341                                 u2190 02D6  
                               u1630 07ED                                 u2510 018D  
                               u2430 0125                                 u2350 0034  
                               u1391 0676                                 u1471 04F2  
                               u1551 07C3                                 u2335 037A  
                               u2271 0340                                 u2191 02D5  
                               u1631 07EC                                 u2511 018C  
                               u2431 0124                                 u2351 0033  
                               u1480 0505                                 u1560 0691  
                               u2280 0346                                 u1720 06EE  
                               u1800 076D                                 u1640 0778  
                               u2520 01A2                                 u2440 0135  
                               u2360 005E                                 u1481 0504  
                               u1561 0690                                 u2281 0345  
                               u1721 06ED                                 u1801 076C  
                               u1641 0777                                 u2521 01A1  
                               u2441 0134                                 u2425 0116  
                               u2361 005D                                 u1490 0517  
                               u1570 0696                                 u2290 0351  
                               u1810 07F6                                 u2530 01A8  
                               u2450 013B                                 u2370 0091  
                               u1491 0516                                 u1571 0695  
                               u2291 0350                                 u1811 07F5  
                               u1715 06E0                                 u2531 01A7  
                               u2451 013A                                 u2371 0090  
                               u1580 06A1                                 u1740 06FE  
                               u2540 0225                                 u2460 014A  
                               u2380 00B3                                 u1900 03F2  
                               u1820 0390                                 u1581 06A0  
                               u1741 06FD                                 u1725 06EA  
                               u2541 0224                                 u2461 0149  
                               u2381 00B2                                 u1901 03F1  
                               u1821 038F                                 u1590 06B1  
                               u1750 0744                                 u1670 078C  
                               u2550 0239                                 u2470 015A  
                               u2390 00C2                                 u1910 03F8  
                               u1830 0395                                 u1591 06B0  
                               u2607 05ED                                 u1735 06F4  
                               u1751 0743                                 u1671 078B  
                               u1655 077D                                 u2551 0238  
                               u2471 0159                                 u2391 00C1  
                               u1911 03F7                                 u1831 0394  
                               u1680 06CF                                 u2480 0160  
                               u1920 0403                                 u1840 03A0  
                               u2617 05F5                                 u1681 06CE  
                               u1665 0782                                 u2481 015F  
                               u2465 0146                                 u1921 0402  
                               u1841 039F                                 u1770 0754  
                               u2490 0171                                 u1930 0408  
                               u1850 03B0                                 u2627 0601  
                               u1771 0753                                 u2491 0170  
                               u1931 0407                                 u1851 03AF  
                               u1780 075E                                 u1940 040C  
                               u1860 03C0                                 u2637 0609  
                               u1781 075D                                 u1765 0748  
                               u1941 040B                                 u1861 03BF  
                               u1950 0417                                 u1870 03C5  
                               u2647 0615                                 u1695 06D3  
                               u1951 0416                                 u1871 03C4  
                               u2567 05BE                                 u1960 041C  
                               u1880 03D0                                 u2657 061D  
                               u2577 05CB                                 u1785 075A  
                               u1961 041B                                 u1881 03CF  
                               u1970 0427                                 u1890 03E0  
                               u2667 0635                                 u2587 05D9  
                               u1795 0763                                 u1971 0426  
                               u1891 03DF                                 u1980 0437  
                               _PMD0 0796                                 u2677 0541  
                               u2597 05E1                                 u1981 0436  
                               _PMD1 0797                                 u1990 0447  
                               _PMD2 0798                                 u1991 0446  
                               _PMD3 0799                                 _PMD4 079A  
                               _PMD5 079B                                 _WPUA 0F39  
                               _WPUB 0F44                                 _WPUC 0F4F  
                               _WPUD 0F5A                                 _WPUE 0F65  
                               _main 0544                                 fsr0h 0005  
                               fsr1h 0007                                 indf0 0000  
                               fsr0l 0004                                 indf1 0001  
                               fsr1l 0006                                 btemp 007E  
                               start 001C                      __end_of_ReadI2C 07C6  
     __size_of_OSCILLATOR_Initialize 0009        __end_of_OSCILLATOR_Initialize 0FF6  
           __end_of_i2c1_driver_open 07FD                                ?_main 0070  
                    __end_of___lwdiv 0703                                i1l321 0014  
                              i1l322 001A                                i1l326 001A  
                    __end_of___lwmod 0772                                _OSCEN 0891  
                              _TRISA 0011                                _TRISB 0012  
                              _TRISC 0013                                _TRISD 0014  
                              _TRISE 0015                                _WPUC3 7A7B  
                              _WPUC4 7A7C                      __end_of_dpowers 0807  
                    __end_of_isdigit 07F1                                main@c 0049  
                              _tsttc 0384                                status 0003  
                              wtemp0 007E                      __end_of_sprintf 023E  
                    __initialization 001E                         __end_of_main 05C8  
                __size_of_LCDsend2x4 00B3          ?_INTERRUPT_InterruptManager 0070  
                             ??_main 0034                            ??_LCDchar 0078  
                          ??_LCDinit 0078                            ??_LCDrecv 0072  
                          ??_LCDsend 0072                     __end_of_WriteI2C 0684  
                             _ANSELA 0F38                               _ANSELB 0F43  
                             _ANSELC 0F4E                               _ANSELD 0F59  
                             _ANSELE 0F64                               ?_tsttc 0070  
                             _RC3PPS 0F23                               _RC4PPS 0F24  
                             _ODCONA 0F3A                               _ODCONB 0F45  
                             _ODCONC 0F50                               _ODCOND 0F5B  
                             _ODCONE 0F66                               u130_20 0013  
                             u130_21 0012                               u131_20 0018  
                             u131_21 0017                               i1l1990 0006  
                             i1l1992 000A                               i1l1994 000F  
                             i1l1998 0018                               u128_20 000A  
                             u128_21 0009                               u129_20 000F  
                             u129_21 000E                               _LCDcmd 0FD6  
                             _LCDstr 0791                               _OSCFRQ 0893  
                          ??_ReadI2C 0070                          LCDsend2x4@c 0075  
                        LCDrecv@mode 0076                               ___wmul 0772  
                          ??___lwdiv 0074                            ??___lwmod 007C  
                             main@c1 004A                               main@c2 004B  
                     _PMD_Initialize 0FE5                            ??_isdigit 0070  
                          ??_sprintf 0026                    _SYSTEM_Initialize 0FF6  
            __end_of__initialization 0023                   ?_SYSTEM_Initialize 0070  
                     __pcstackCOMMON 0070                  ??_SYSTEM_Initialize 0070  
                      __end_of_tsttc 0491               __end_of_PMD_Initialize 0FED  
                          LCDrecv@hc 0074                            LCDrecv@lc 0075  
                       ??_LCDsend2x4 0073            __end_of_SYSTEM_Initialize 1000  
                       sprintf@width 0030                              ??_tsttc 0072  
                         __pbssBANK0 004C                              ?_LCDcmd 0070  
                            ?_LCDstr 0079                              LCDcmd@c 0078  
                            LCDstr@c 0020                              LCDstr@p 0079  
                         __pmaintext 0544                              ?___wmul 0070  
                         __pintentry 0004                   __end_of_LCDsend2x4 0544  
                          ?_WriteI2C 0070                      ?_PMD_Initialize 0070  
                  ?_i2c1_driver_open 0070                              _LCDchar 0FDD  
                            _LCDinit 05C8                              _LCDrecv 023E  
                            _LCDsend 0684                   ??_i2c1_driver_open 0070  
                            _OSCCON1 088D                              _OSCCON3 088F  
                            _OSCTUNE 0892                              _SSP1ADD 018D  
                            _SLRCONA 0F3B                              _SLRCONB 0F46  
                            _SLRCONC 0F51                              _SLRCOND 0F5C  
                            _SLRCONE 0F67                              _SSP1BUF 018C  
                            _SSP1MSK 018E                         LCDsend2x4@hc 0076  
                       LCDsend2x4@lc 0077                      __size_of_LCDcmd 0007  
                 _i2c1_driver_i2cISR 004C                      __size_of_LCDstr 001B  
                            _ReadI2C 07AC                      __size_of___wmul 001F  
                            ___lwdiv 06C7                              ___lwmod 073E  
                         ??_WriteI2C 0070                              __ptext1 0384  
                            __ptext2 0027                              __ptext3 07DF  
                            __ptext4 0772                              __ptext5 073E  
                            __ptext6 06C7                              __ptext7 07F1  
                            __ptext8 0FF6                              __ptext9 0FE5  
                  __end_of_hexpowers 07CE                              _dpowers 07FD  
              _OSCILLATOR_Initialize 0FED                              _isdigit 07DF  
           ??_PIN_MANAGER_Initialize 0070                              main@buf 0038  
         __size_of_SYSTEM_Initialize 000A                              _sprintf 0027  
               end_of_initialization 0023                            _TRISCbits 0013  
                     __end_of_LCDcmd 0FDD                       __end_of_LCDstr 07AC  
                     LCDsend2x4@mode 0072                       __end_of___wmul 0791  
             ?_OSCILLATOR_Initialize 0070                  start_initialization 001E  
    __size_of_PIN_MANAGER_Initialize 003B                     WriteI2C@data_out 0071  
                           ??_LCDcmd 0078                             ??_LCDstr 007B  
                   ??_PMD_Initialize 0070                             ??___wmul 0074  
                  __size_of_WriteI2C 004B                             ?_LCDchar 0070  
                           ?_LCDinit 0070                             ?_LCDrecv 0070  
                           ?_LCDsend 0070                            ___latbits 0002  
                      __pcstackBANK0 0020                         _isdigit$1514 0070  
                           LCDchar@c 0078                             LCDsend@c 0073  
                        sprintf@flag 002F            __size_of_i2c1_driver_open 000C  
                        sprintf@prec 002C                             ?_ReadI2C 0070  
                   ___lwdiv@dividend 0072               _PIN_MANAGER_Initialize 0703  
                           ?___lwdiv 0070                             ?___lwmod 0078  
        _i2c1_driver_busCollisionISR 004E         ??_INTERRUPT_InterruptManager 0070  
                           ?_isdigit 0070                            _hexpowers 07C6  
                   ___lwdiv@quotient 0075                             ?_sprintf 0020  
                     __size_of_tsttc 010D                       ___wmul@product 0074  
                           _PIE3bits 0719  __size_of_INTERRUPT_InterruptManager 0018  
                           _PIR3bits 070F                             _SSP1CON1 0190  
                           _SSP1CON2 0191                             _SSP1STAT 018F  
                  ___wmul@multiplier 0070                     __size_of_LCDchar 0008  
                   __size_of_LCDinit 0071                     __size_of_LCDrecv 0146  
                   __size_of_LCDsend 0043                     __size_of_ReadI2C 001A  
            ??_OSCILLATOR_Initialize 0070                     __size_of___lwdiv 003C  
                   __size_of___lwmod 0034                             _WriteI2C 0639  
                         sprintf@idx 002A                           sprintf@val 002D  
                   __size_of_isdigit 0012                      ___lwdiv@divisor 0070  
                    ___lwdiv@counter 0077                             __ptext10 0703  
                           __ptext11 0FED                             __ptext20 0639  
                           __ptext12 0791                             __ptext13 0FDD  
                           __ptext14 023E                             __ptext15 07AC  
                           __ptext16 05C8                             __ptext17 0684  
                           __ptext18 0FD6                             __ptext19 0491  
                       _SSP1CON1bits 0190                         _SSP1CON2bits 0191  
                   __size_of_sprintf 0217                     _i2c1_driver_open 07F1  
                      __size_of_main 0084                           tsttc@value 0073  
                           int$flags 007E   __end_of_INTERRUPT_InterruptManager 001C  
         _INTERRUPT_InterruptManager 0004                         _SSP1STATbits 018F  
                         _INTCONbits 000B                             isdigit@c 0071  
                         _LCDsend2x4 0491                             intlevel1 0000  
                          sprintf@ap 002B                            sprintf@sp 0032  
                   ___lwmod@dividend 007A              ?_PIN_MANAGER_Initialize 0070  
                      __pstringtext1 07FD                        __pstringtext2 07C6  
                      __pstringtext3 0807                        __pstringtext4 1000  
                      __pstringtext5 1007                        __pstringtext6 0000  
                           sprintf@c 0033                             sprintf@f 0020  
                         _SSP1DATPPS 0EC6                           _SSP1CLKPPS 0EC5  
                    ___lwmod@divisor 0078                      ___lwmod@counter 007D  
     __end_of_PIN_MANAGER_Initialize 073E  
