

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Sun Nov 15 19:17:34 2020

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    16                           	psect	cinit,global,class=CODE,merge=1,delta=2
    17                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    21                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	clrtext,global,class=CODE,delta=2
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    24                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    27                           	psect	text1,local,class=CODE,merge=1,delta=2
    28                           	psect	text2,local,class=CODE,merge=1,delta=2
    29                           	psect	text3,local,class=CODE,merge=1,delta=2
    30                           	psect	text4,local,class=CODE,merge=1,delta=2
    31                           	psect	text5,local,class=CODE,merge=1,delta=2
    32                           	psect	text6,local,class=CODE,merge=1,delta=2
    33                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text12,local,class=CODE,merge=1,delta=2
    39                           	psect	text13,local,class=CODE,merge=1,delta=2
    40                           	psect	text14,local,class=CODE,merge=1,delta=2
    41                           	psect	text15,local,class=CODE,merge=1,delta=2
    42                           	psect	text16,local,class=CODE,merge=1,delta=2
    43                           	psect	text17,local,class=CODE,merge=1,delta=2
    44                           	psect	text18,local,class=CODE,merge=1,delta=2
    45                           	psect	text19,local,class=CODE,merge=1,delta=2
    46                           	psect	text20,local,class=CODE,merge=1,delta=2
    47                           	psect	text21,local,class=CODE,merge=1,delta=2
    48                           	psect	text22,local,class=CODE,merge=1,delta=2
    49                           	psect	text23,local,class=CODE,merge=1,delta=2
    50                           	psect	text24,local,class=CODE,merge=1,delta=2
    51                           	psect	text25,local,class=CODE,merge=1,delta=2
    52                           	psect	text26,local,class=CODE,merge=1,delta=2
    53                           	psect	text27,local,class=CODE,merge=1,delta=2
    54                           	psect	text28,local,class=CODE,merge=1,delta=2
    55                           	psect	text29,local,class=CODE,merge=1,delta=2
    56                           	psect	text30,local,class=CODE,merge=1,delta=2
    57                           	psect	text31,local,class=CODE,merge=1,delta=2
    58                           	psect	text32,local,class=CODE,merge=1,delta=2
    59                           	psect	text33,local,class=CODE,merge=1,delta=2
    60                           	psect	text34,local,class=CODE,merge=1,delta=2
    61                           	psect	text35,local,class=CODE,merge=1,delta=2
    62                           	psect	text36,local,class=CODE,merge=1,delta=2
    63                           	psect	text37,local,class=CODE,merge=1,delta=2
    64                           	psect	text38,local,class=CODE,merge=1,delta=2
    65                           	psect	text39,local,class=CODE,merge=1,delta=2
    66                           	psect	text40,local,class=CODE,merge=1,delta=2
    67                           	psect	text41,local,class=CODE,merge=1,delta=2
    68                           	psect	intentry,global,class=CODE,delta=2
    69                           	psect	text43,local,class=CODE,merge=1,delta=2
    70                           	psect	text44,local,class=CODE,merge=1,delta=2
    71                           	psect	text45,local,class=CODE,merge=1,delta=2
    72                           	psect	text46,local,class=CODE,merge=1,delta=2
    73                           	psect	text47,local,class=CODE,merge=1,delta=2
    74                           	psect	text48,local,class=CODE,merge=1,delta=2
    75                           	psect	text49,local,class=CODE,merge=1,delta=2,group=2
    76                           	psect	text50,local,class=CODE,merge=1,delta=2,group=2
    77                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    78                           	dabs	1,0x620,48
    79                           	dabs	1,0x5A3,77
    80                           	dabs	1,0x2373,0,_reg
    81                           	dabs	1,0x7E,2
    82  0000                     
    83                           ; Version 2.20
    84                           ; Generated 30/04/2020 GMT
    85                           ; 
    86                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    87                           ; All rights reserved.
    88                           ; 
    89                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    90                           ; 
    91                           ; Redistribution and use in source and binary forms, with or without modification, are
    92                           ; permitted provided that the following conditions are met:
    93                           ; 
    94                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    95                           ;        conditions and the following disclaimer.
    96                           ; 
    97                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    98                           ;        of conditions and the following disclaimer in the documentation and/or other
    99                           ;        materials provided with the distribution.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC16F18875 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  0006                     	;# 
   124  0007                     	;# 
   125  0008                     	;# 
   126  0009                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000D                     	;# 
   131  000E                     	;# 
   132  000F                     	;# 
   133  0010                     	;# 
   134  0011                     	;# 
   135  0012                     	;# 
   136  0013                     	;# 
   137  0014                     	;# 
   138  0015                     	;# 
   139  0016                     	;# 
   140  0017                     	;# 
   141  0018                     	;# 
   142  0019                     	;# 
   143  001A                     	;# 
   144  001C                     	;# 
   145  001C                     	;# 
   146  001D                     	;# 
   147  001D                     	;# 
   148  001E                     	;# 
   149  001F                     	;# 
   150  008C                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  008E                     	;# 
   155  008F                     	;# 
   156  0090                     	;# 
   157  0090                     	;# 
   158  0091                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0095                     	;# 
   162  0096                     	;# 
   163  0097                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009A                     	;# 
   167  009B                     	;# 
   168  009C                     	;# 
   169  009D                     	;# 
   170  009E                     	;# 
   171  010C                     	;# 
   172  010D                     	;# 
   173  010E                     	;# 
   174  010E                     	;# 
   175  010F                     	;# 
   176  0110                     	;# 
   177  0110                     	;# 
   178  0111                     	;# 
   179  0112                     	;# 
   180  0112                     	;# 
   181  0113                     	;# 
   182  0114                     	;# 
   183  0114                     	;# 
   184  0115                     	;# 
   185  0116                     	;# 
   186  0116                     	;# 
   187  0117                     	;# 
   188  0119                     	;# 
   189  0119                     	;# 
   190  0119                     	;# 
   191  011A                     	;# 
   192  011A                     	;# 
   193  011A                     	;# 
   194  011B                     	;# 
   195  011B                     	;# 
   196  011B                     	;# 
   197  011B                     	;# 
   198  011B                     	;# 
   199  011C                     	;# 
   200  011C                     	;# 
   201  011C                     	;# 
   202  011D                     	;# 
   203  011D                     	;# 
   204  011D                     	;# 
   205  011E                     	;# 
   206  011E                     	;# 
   207  011E                     	;# 
   208  011F                     	;# 
   209  011F                     	;# 
   210  011F                     	;# 
   211  011F                     	;# 
   212  011F                     	;# 
   213  018C                     	;# 
   214  018D                     	;# 
   215  018E                     	;# 
   216  018F                     	;# 
   217  0190                     	;# 
   218  0191                     	;# 
   219  0192                     	;# 
   220  0196                     	;# 
   221  0197                     	;# 
   222  0198                     	;# 
   223  0199                     	;# 
   224  019A                     	;# 
   225  019B                     	;# 
   226  019C                     	;# 
   227  020C                     	;# 
   228  020C                     	;# 
   229  020D                     	;# 
   230  020E                     	;# 
   231  020F                     	;# 
   232  020F                     	;# 
   233  0210                     	;# 
   234  0210                     	;# 
   235  0211                     	;# 
   236  0211                     	;# 
   237  0212                     	;# 
   238  0212                     	;# 
   239  0213                     	;# 
   240  0214                     	;# 
   241  0215                     	;# 
   242  0215                     	;# 
   243  0216                     	;# 
   244  0216                     	;# 
   245  0217                     	;# 
   246  0217                     	;# 
   247  0218                     	;# 
   248  0218                     	;# 
   249  0219                     	;# 
   250  021A                     	;# 
   251  021B                     	;# 
   252  021B                     	;# 
   253  021C                     	;# 
   254  021C                     	;# 
   255  021D                     	;# 
   256  021D                     	;# 
   257  021E                     	;# 
   258  021F                     	;# 
   259  028C                     	;# 
   260  028C                     	;# 
   261  028D                     	;# 
   262  028D                     	;# 
   263  028E                     	;# 
   264  028F                     	;# 
   265  0290                     	;# 
   266  0290                     	;# 
   267  0291                     	;# 
   268  0292                     	;# 
   269  0292                     	;# 
   270  0293                     	;# 
   271  0293                     	;# 
   272  0294                     	;# 
   273  0295                     	;# 
   274  0296                     	;# 
   275  0296                     	;# 
   276  0297                     	;# 
   277  0298                     	;# 
   278  0298                     	;# 
   279  0299                     	;# 
   280  0299                     	;# 
   281  029A                     	;# 
   282  029B                     	;# 
   283  029C                     	;# 
   284  029C                     	;# 
   285  029D                     	;# 
   286  030C                     	;# 
   287  030C                     	;# 
   288  030D                     	;# 
   289  030E                     	;# 
   290  030F                     	;# 
   291  0310                     	;# 
   292  0310                     	;# 
   293  0311                     	;# 
   294  0312                     	;# 
   295  0313                     	;# 
   296  0314                     	;# 
   297  0314                     	;# 
   298  0315                     	;# 
   299  0316                     	;# 
   300  0317                     	;# 
   301  0318                     	;# 
   302  0318                     	;# 
   303  0319                     	;# 
   304  031A                     	;# 
   305  031B                     	;# 
   306  031C                     	;# 
   307  031C                     	;# 
   308  031D                     	;# 
   309  031E                     	;# 
   310  031F                     	;# 
   311  038C                     	;# 
   312  038C                     	;# 
   313  038D                     	;# 
   314  038E                     	;# 
   315  0390                     	;# 
   316  0390                     	;# 
   317  0391                     	;# 
   318  0392                     	;# 
   319  040C                     	;# 
   320  040D                     	;# 
   321  040E                     	;# 
   322  040F                     	;# 
   323  0410                     	;# 
   324  0411                     	;# 
   325  0416                     	;# 
   326  0416                     	;# 
   327  0417                     	;# 
   328  0418                     	;# 
   329  0418                     	;# 
   330  0419                     	;# 
   331  041A                     	;# 
   332  041A                     	;# 
   333  041B                     	;# 
   334  041C                     	;# 
   335  041C                     	;# 
   336  041D                     	;# 
   337  041E                     	;# 
   338  041F                     	;# 
   339  048C                     	;# 
   340  048C                     	;# 
   341  048D                     	;# 
   342  048E                     	;# 
   343  048F                     	;# 
   344  048F                     	;# 
   345  0490                     	;# 
   346  0491                     	;# 
   347  0492                     	;# 
   348  0492                     	;# 
   349  0493                     	;# 
   350  0494                     	;# 
   351  0495                     	;# 
   352  0495                     	;# 
   353  0496                     	;# 
   354  0497                     	;# 
   355  0498                     	;# 
   356  0499                     	;# 
   357  049A                     	;# 
   358  049B                     	;# 
   359  049C                     	;# 
   360  049D                     	;# 
   361  050C                     	;# 
   362  050C                     	;# 
   363  050D                     	;# 
   364  050E                     	;# 
   365  050F                     	;# 
   366  050F                     	;# 
   367  0510                     	;# 
   368  0511                     	;# 
   369  0512                     	;# 
   370  0512                     	;# 
   371  0513                     	;# 
   372  0514                     	;# 
   373  0515                     	;# 
   374  0515                     	;# 
   375  0516                     	;# 
   376  0517                     	;# 
   377  0518                     	;# 
   378  0519                     	;# 
   379  051A                     	;# 
   380  051B                     	;# 
   381  051C                     	;# 
   382  051D                     	;# 
   383  058C                     	;# 
   384  058C                     	;# 
   385  058D                     	;# 
   386  058E                     	;# 
   387  058F                     	;# 
   388  058F                     	;# 
   389  0590                     	;# 
   390  0591                     	;# 
   391  0592                     	;# 
   392  0593                     	;# 
   393  060C                     	;# 
   394  060D                     	;# 
   395  060E                     	;# 
   396  060F                     	;# 
   397  0610                     	;# 
   398  0611                     	;# 
   399  0612                     	;# 
   400  0613                     	;# 
   401  0614                     	;# 
   402  0616                     	;# 
   403  0617                     	;# 
   404  0618                     	;# 
   405  0619                     	;# 
   406  061A                     	;# 
   407  061B                     	;# 
   408  061C                     	;# 
   409  061D                     	;# 
   410  061E                     	;# 
   411  068C                     	;# 
   412  068D                     	;# 
   413  068E                     	;# 
   414  068F                     	;# 
   415  0690                     	;# 
   416  0691                     	;# 
   417  0692                     	;# 
   418  0693                     	;# 
   419  0694                     	;# 
   420  070C                     	;# 
   421  070D                     	;# 
   422  070E                     	;# 
   423  070F                     	;# 
   424  0710                     	;# 
   425  0711                     	;# 
   426  0712                     	;# 
   427  0713                     	;# 
   428  0714                     	;# 
   429  0716                     	;# 
   430  0717                     	;# 
   431  0718                     	;# 
   432  0719                     	;# 
   433  071A                     	;# 
   434  071B                     	;# 
   435  071C                     	;# 
   436  071D                     	;# 
   437  071E                     	;# 
   438  0796                     	;# 
   439  0797                     	;# 
   440  0798                     	;# 
   441  0799                     	;# 
   442  079A                     	;# 
   443  079B                     	;# 
   444  080C                     	;# 
   445  080D                     	;# 
   446  080E                     	;# 
   447  080F                     	;# 
   448  0810                     	;# 
   449  0811                     	;# 
   450  0812                     	;# 
   451  0813                     	;# 
   452  0814                     	;# 
   453  081A                     	;# 
   454  081B                     	;# 
   455  081C                     	;# 
   456  081D                     	;# 
   457  081E                     	;# 
   458  081F                     	;# 
   459  088C                     	;# 
   460  088D                     	;# 
   461  088E                     	;# 
   462  088F                     	;# 
   463  0890                     	;# 
   464  0891                     	;# 
   465  0892                     	;# 
   466  0893                     	;# 
   467  0895                     	;# 
   468  0896                     	;# 
   469  0897                     	;# 
   470  0898                     	;# 
   471  0899                     	;# 
   472  089A                     	;# 
   473  089B                     	;# 
   474  090C                     	;# 
   475  090E                     	;# 
   476  090F                     	;# 
   477  091F                     	;# 
   478  091F                     	;# 
   479  098F                     	;# 
   480  098F                     	;# 
   481  0990                     	;# 
   482  0991                     	;# 
   483  0992                     	;# 
   484  0993                     	;# 
   485  0994                     	;# 
   486  0995                     	;# 
   487  0996                     	;# 
   488  0997                     	;# 
   489  0E0F                     	;# 
   490  0E10                     	;# 
   491  0E11                     	;# 
   492  0E12                     	;# 
   493  0E13                     	;# 
   494  0E14                     	;# 
   495  0E15                     	;# 
   496  0E16                     	;# 
   497  0E17                     	;# 
   498  0E18                     	;# 
   499  0E19                     	;# 
   500  0E1A                     	;# 
   501  0E1B                     	;# 
   502  0E1C                     	;# 
   503  0E1D                     	;# 
   504  0E1E                     	;# 
   505  0E1F                     	;# 
   506  0E20                     	;# 
   507  0E21                     	;# 
   508  0E22                     	;# 
   509  0E23                     	;# 
   510  0E24                     	;# 
   511  0E25                     	;# 
   512  0E26                     	;# 
   513  0E27                     	;# 
   514  0E28                     	;# 
   515  0E29                     	;# 
   516  0E2A                     	;# 
   517  0E2B                     	;# 
   518  0E2C                     	;# 
   519  0E2D                     	;# 
   520  0E2E                     	;# 
   521  0E2F                     	;# 
   522  0E30                     	;# 
   523  0E31                     	;# 
   524  0E32                     	;# 
   525  0E33                     	;# 
   526  0E34                     	;# 
   527  0E35                     	;# 
   528  0E36                     	;# 
   529  0E37                     	;# 
   530  0E8F                     	;# 
   531  0E90                     	;# 
   532  0E91                     	;# 
   533  0E92                     	;# 
   534  0E93                     	;# 
   535  0E94                     	;# 
   536  0E95                     	;# 
   537  0E96                     	;# 
   538  0E97                     	;# 
   539  0E9C                     	;# 
   540  0E9D                     	;# 
   541  0E9E                     	;# 
   542  0EA1                     	;# 
   543  0EA2                     	;# 
   544  0EA3                     	;# 
   545  0EA4                     	;# 
   546  0EA5                     	;# 
   547  0EA9                     	;# 
   548  0EAA                     	;# 
   549  0EAB                     	;# 
   550  0EAC                     	;# 
   551  0EB1                     	;# 
   552  0EB2                     	;# 
   553  0EB3                     	;# 
   554  0EB8                     	;# 
   555  0EB9                     	;# 
   556  0EBA                     	;# 
   557  0EBB                     	;# 
   558  0EBC                     	;# 
   559  0EBD                     	;# 
   560  0EBE                     	;# 
   561  0EC3                     	;# 
   562  0EC5                     	;# 
   563  0EC6                     	;# 
   564  0EC7                     	;# 
   565  0EC8                     	;# 
   566  0EC9                     	;# 
   567  0ECA                     	;# 
   568  0ECB                     	;# 
   569  0ECC                     	;# 
   570  0F10                     	;# 
   571  0F11                     	;# 
   572  0F12                     	;# 
   573  0F13                     	;# 
   574  0F14                     	;# 
   575  0F15                     	;# 
   576  0F16                     	;# 
   577  0F17                     	;# 
   578  0F18                     	;# 
   579  0F19                     	;# 
   580  0F1A                     	;# 
   581  0F1B                     	;# 
   582  0F1C                     	;# 
   583  0F1D                     	;# 
   584  0F1E                     	;# 
   585  0F1F                     	;# 
   586  0F20                     	;# 
   587  0F21                     	;# 
   588  0F22                     	;# 
   589  0F23                     	;# 
   590  0F24                     	;# 
   591  0F25                     	;# 
   592  0F26                     	;# 
   593  0F27                     	;# 
   594  0F28                     	;# 
   595  0F29                     	;# 
   596  0F2A                     	;# 
   597  0F2B                     	;# 
   598  0F2C                     	;# 
   599  0F2D                     	;# 
   600  0F2E                     	;# 
   601  0F2F                     	;# 
   602  0F30                     	;# 
   603  0F31                     	;# 
   604  0F32                     	;# 
   605  0F38                     	;# 
   606  0F39                     	;# 
   607  0F3A                     	;# 
   608  0F3B                     	;# 
   609  0F3C                     	;# 
   610  0F3D                     	;# 
   611  0F3E                     	;# 
   612  0F3F                     	;# 
   613  0F40                     	;# 
   614  0F41                     	;# 
   615  0F43                     	;# 
   616  0F44                     	;# 
   617  0F45                     	;# 
   618  0F46                     	;# 
   619  0F47                     	;# 
   620  0F48                     	;# 
   621  0F49                     	;# 
   622  0F4A                     	;# 
   623  0F4B                     	;# 
   624  0F4C                     	;# 
   625  0F4E                     	;# 
   626  0F4F                     	;# 
   627  0F50                     	;# 
   628  0F51                     	;# 
   629  0F52                     	;# 
   630  0F53                     	;# 
   631  0F54                     	;# 
   632  0F55                     	;# 
   633  0F56                     	;# 
   634  0F57                     	;# 
   635  0F59                     	;# 
   636  0F5A                     	;# 
   637  0F5B                     	;# 
   638  0F5C                     	;# 
   639  0F5D                     	;# 
   640  0F61                     	;# 
   641  0F62                     	;# 
   642  0F64                     	;# 
   643  0F65                     	;# 
   644  0F66                     	;# 
   645  0F67                     	;# 
   646  0F68                     	;# 
   647  0F69                     	;# 
   648  0F6A                     	;# 
   649  0F6B                     	;# 
   650  0F6C                     	;# 
   651  0F6D                     	;# 
   652  0FE4                     	;# 
   653  0FE5                     	;# 
   654  0FE6                     	;# 
   655  0FE7                     	;# 
   656  0FE8                     	;# 
   657  0FE9                     	;# 
   658  0FEA                     	;# 
   659  0FEB                     	;# 
   660  0FED                     	;# 
   661  0FEE                     	;# 
   662  0FEF                     	;# 
   663  0000                     	;# 
   664  0001                     	;# 
   665  0002                     	;# 
   666  0003                     	;# 
   667  0004                     	;# 
   668  0005                     	;# 
   669  0006                     	;# 
   670  0007                     	;# 
   671  0008                     	;# 
   672  0009                     	;# 
   673  000A                     	;# 
   674  000B                     	;# 
   675  000C                     	;# 
   676  000D                     	;# 
   677  000E                     	;# 
   678  000F                     	;# 
   679  0010                     	;# 
   680  0011                     	;# 
   681  0012                     	;# 
   682  0013                     	;# 
   683  0014                     	;# 
   684  0015                     	;# 
   685  0016                     	;# 
   686  0017                     	;# 
   687  0018                     	;# 
   688  0019                     	;# 
   689  001A                     	;# 
   690  001C                     	;# 
   691  001C                     	;# 
   692  001D                     	;# 
   693  001D                     	;# 
   694  001E                     	;# 
   695  001F                     	;# 
   696  008C                     	;# 
   697  008C                     	;# 
   698  008D                     	;# 
   699  008E                     	;# 
   700  008E                     	;# 
   701  008F                     	;# 
   702  0090                     	;# 
   703  0090                     	;# 
   704  0091                     	;# 
   705  0093                     	;# 
   706  0094                     	;# 
   707  0095                     	;# 
   708  0096                     	;# 
   709  0097                     	;# 
   710  0098                     	;# 
   711  0099                     	;# 
   712  009A                     	;# 
   713  009B                     	;# 
   714  009C                     	;# 
   715  009D                     	;# 
   716  009E                     	;# 
   717  010C                     	;# 
   718  010D                     	;# 
   719  010E                     	;# 
   720  010E                     	;# 
   721  010F                     	;# 
   722  0110                     	;# 
   723  0110                     	;# 
   724  0111                     	;# 
   725  0112                     	;# 
   726  0112                     	;# 
   727  0113                     	;# 
   728  0114                     	;# 
   729  0114                     	;# 
   730  0115                     	;# 
   731  0116                     	;# 
   732  0116                     	;# 
   733  0117                     	;# 
   734  0119                     	;# 
   735  0119                     	;# 
   736  0119                     	;# 
   737  011A                     	;# 
   738  011A                     	;# 
   739  011A                     	;# 
   740  011B                     	;# 
   741  011B                     	;# 
   742  011B                     	;# 
   743  011B                     	;# 
   744  011B                     	;# 
   745  011C                     	;# 
   746  011C                     	;# 
   747  011C                     	;# 
   748  011D                     	;# 
   749  011D                     	;# 
   750  011D                     	;# 
   751  011E                     	;# 
   752  011E                     	;# 
   753  011E                     	;# 
   754  011F                     	;# 
   755  011F                     	;# 
   756  011F                     	;# 
   757  011F                     	;# 
   758  011F                     	;# 
   759  018C                     	;# 
   760  018D                     	;# 
   761  018E                     	;# 
   762  018F                     	;# 
   763  0190                     	;# 
   764  0191                     	;# 
   765  0192                     	;# 
   766  0196                     	;# 
   767  0197                     	;# 
   768  0198                     	;# 
   769  0199                     	;# 
   770  019A                     	;# 
   771  019B                     	;# 
   772  019C                     	;# 
   773  020C                     	;# 
   774  020C                     	;# 
   775  020D                     	;# 
   776  020E                     	;# 
   777  020F                     	;# 
   778  020F                     	;# 
   779  0210                     	;# 
   780  0210                     	;# 
   781  0211                     	;# 
   782  0211                     	;# 
   783  0212                     	;# 
   784  0212                     	;# 
   785  0213                     	;# 
   786  0214                     	;# 
   787  0215                     	;# 
   788  0215                     	;# 
   789  0216                     	;# 
   790  0216                     	;# 
   791  0217                     	;# 
   792  0217                     	;# 
   793  0218                     	;# 
   794  0218                     	;# 
   795  0219                     	;# 
   796  021A                     	;# 
   797  021B                     	;# 
   798  021B                     	;# 
   799  021C                     	;# 
   800  021C                     	;# 
   801  021D                     	;# 
   802  021D                     	;# 
   803  021E                     	;# 
   804  021F                     	;# 
   805  028C                     	;# 
   806  028C                     	;# 
   807  028D                     	;# 
   808  028D                     	;# 
   809  028E                     	;# 
   810  028F                     	;# 
   811  0290                     	;# 
   812  0290                     	;# 
   813  0291                     	;# 
   814  0292                     	;# 
   815  0292                     	;# 
   816  0293                     	;# 
   817  0293                     	;# 
   818  0294                     	;# 
   819  0295                     	;# 
   820  0296                     	;# 
   821  0296                     	;# 
   822  0297                     	;# 
   823  0298                     	;# 
   824  0298                     	;# 
   825  0299                     	;# 
   826  0299                     	;# 
   827  029A                     	;# 
   828  029B                     	;# 
   829  029C                     	;# 
   830  029C                     	;# 
   831  029D                     	;# 
   832  030C                     	;# 
   833  030C                     	;# 
   834  030D                     	;# 
   835  030E                     	;# 
   836  030F                     	;# 
   837  0310                     	;# 
   838  0310                     	;# 
   839  0311                     	;# 
   840  0312                     	;# 
   841  0313                     	;# 
   842  0314                     	;# 
   843  0314                     	;# 
   844  0315                     	;# 
   845  0316                     	;# 
   846  0317                     	;# 
   847  0318                     	;# 
   848  0318                     	;# 
   849  0319                     	;# 
   850  031A                     	;# 
   851  031B                     	;# 
   852  031C                     	;# 
   853  031C                     	;# 
   854  031D                     	;# 
   855  031E                     	;# 
   856  031F                     	;# 
   857  038C                     	;# 
   858  038C                     	;# 
   859  038D                     	;# 
   860  038E                     	;# 
   861  0390                     	;# 
   862  0390                     	;# 
   863  0391                     	;# 
   864  0392                     	;# 
   865  040C                     	;# 
   866  040D                     	;# 
   867  040E                     	;# 
   868  040F                     	;# 
   869  0410                     	;# 
   870  0411                     	;# 
   871  0416                     	;# 
   872  0416                     	;# 
   873  0417                     	;# 
   874  0418                     	;# 
   875  0418                     	;# 
   876  0419                     	;# 
   877  041A                     	;# 
   878  041A                     	;# 
   879  041B                     	;# 
   880  041C                     	;# 
   881  041C                     	;# 
   882  041D                     	;# 
   883  041E                     	;# 
   884  041F                     	;# 
   885  048C                     	;# 
   886  048C                     	;# 
   887  048D                     	;# 
   888  048E                     	;# 
   889  048F                     	;# 
   890  048F                     	;# 
   891  0490                     	;# 
   892  0491                     	;# 
   893  0492                     	;# 
   894  0492                     	;# 
   895  0493                     	;# 
   896  0494                     	;# 
   897  0495                     	;# 
   898  0495                     	;# 
   899  0496                     	;# 
   900  0497                     	;# 
   901  0498                     	;# 
   902  0499                     	;# 
   903  049A                     	;# 
   904  049B                     	;# 
   905  049C                     	;# 
   906  049D                     	;# 
   907  050C                     	;# 
   908  050C                     	;# 
   909  050D                     	;# 
   910  050E                     	;# 
   911  050F                     	;# 
   912  050F                     	;# 
   913  0510                     	;# 
   914  0511                     	;# 
   915  0512                     	;# 
   916  0512                     	;# 
   917  0513                     	;# 
   918  0514                     	;# 
   919  0515                     	;# 
   920  0515                     	;# 
   921  0516                     	;# 
   922  0517                     	;# 
   923  0518                     	;# 
   924  0519                     	;# 
   925  051A                     	;# 
   926  051B                     	;# 
   927  051C                     	;# 
   928  051D                     	;# 
   929  058C                     	;# 
   930  058C                     	;# 
   931  058D                     	;# 
   932  058E                     	;# 
   933  058F                     	;# 
   934  058F                     	;# 
   935  0590                     	;# 
   936  0591                     	;# 
   937  0592                     	;# 
   938  0593                     	;# 
   939  060C                     	;# 
   940  060D                     	;# 
   941  060E                     	;# 
   942  060F                     	;# 
   943  0610                     	;# 
   944  0611                     	;# 
   945  0612                     	;# 
   946  0613                     	;# 
   947  0614                     	;# 
   948  0616                     	;# 
   949  0617                     	;# 
   950  0618                     	;# 
   951  0619                     	;# 
   952  061A                     	;# 
   953  061B                     	;# 
   954  061C                     	;# 
   955  061D                     	;# 
   956  061E                     	;# 
   957  068C                     	;# 
   958  068D                     	;# 
   959  068E                     	;# 
   960  068F                     	;# 
   961  0690                     	;# 
   962  0691                     	;# 
   963  0692                     	;# 
   964  0693                     	;# 
   965  0694                     	;# 
   966  070C                     	;# 
   967  070D                     	;# 
   968  070E                     	;# 
   969  070F                     	;# 
   970  0710                     	;# 
   971  0711                     	;# 
   972  0712                     	;# 
   973  0713                     	;# 
   974  0714                     	;# 
   975  0716                     	;# 
   976  0717                     	;# 
   977  0718                     	;# 
   978  0719                     	;# 
   979  071A                     	;# 
   980  071B                     	;# 
   981  071C                     	;# 
   982  071D                     	;# 
   983  071E                     	;# 
   984  0796                     	;# 
   985  0797                     	;# 
   986  0798                     	;# 
   987  0799                     	;# 
   988  079A                     	;# 
   989  079B                     	;# 
   990  080C                     	;# 
   991  080D                     	;# 
   992  080E                     	;# 
   993  080F                     	;# 
   994  0810                     	;# 
   995  0811                     	;# 
   996  0812                     	;# 
   997  0813                     	;# 
   998  0814                     	;# 
   999  081A                     	;# 
  1000  081B                     	;# 
  1001  081C                     	;# 
  1002  081D                     	;# 
  1003  081E                     	;# 
  1004  081F                     	;# 
  1005  088C                     	;# 
  1006  088D                     	;# 
  1007  088E                     	;# 
  1008  088F                     	;# 
  1009  0890                     	;# 
  1010  0891                     	;# 
  1011  0892                     	;# 
  1012  0893                     	;# 
  1013  0895                     	;# 
  1014  0896                     	;# 
  1015  0897                     	;# 
  1016  0898                     	;# 
  1017  0899                     	;# 
  1018  089A                     	;# 
  1019  089B                     	;# 
  1020  090C                     	;# 
  1021  090E                     	;# 
  1022  090F                     	;# 
  1023  091F                     	;# 
  1024  091F                     	;# 
  1025  098F                     	;# 
  1026  098F                     	;# 
  1027  0990                     	;# 
  1028  0991                     	;# 
  1029  0992                     	;# 
  1030  0993                     	;# 
  1031  0994                     	;# 
  1032  0995                     	;# 
  1033  0996                     	;# 
  1034  0997                     	;# 
  1035  0E0F                     	;# 
  1036  0E10                     	;# 
  1037  0E11                     	;# 
  1038  0E12                     	;# 
  1039  0E13                     	;# 
  1040  0E14                     	;# 
  1041  0E15                     	;# 
  1042  0E16                     	;# 
  1043  0E17                     	;# 
  1044  0E18                     	;# 
  1045  0E19                     	;# 
  1046  0E1A                     	;# 
  1047  0E1B                     	;# 
  1048  0E1C                     	;# 
  1049  0E1D                     	;# 
  1050  0E1E                     	;# 
  1051  0E1F                     	;# 
  1052  0E20                     	;# 
  1053  0E21                     	;# 
  1054  0E22                     	;# 
  1055  0E23                     	;# 
  1056  0E24                     	;# 
  1057  0E25                     	;# 
  1058  0E26                     	;# 
  1059  0E27                     	;# 
  1060  0E28                     	;# 
  1061  0E29                     	;# 
  1062  0E2A                     	;# 
  1063  0E2B                     	;# 
  1064  0E2C                     	;# 
  1065  0E2D                     	;# 
  1066  0E2E                     	;# 
  1067  0E2F                     	;# 
  1068  0E30                     	;# 
  1069  0E31                     	;# 
  1070  0E32                     	;# 
  1071  0E33                     	;# 
  1072  0E34                     	;# 
  1073  0E35                     	;# 
  1074  0E36                     	;# 
  1075  0E37                     	;# 
  1076  0E8F                     	;# 
  1077  0E90                     	;# 
  1078  0E91                     	;# 
  1079  0E92                     	;# 
  1080  0E93                     	;# 
  1081  0E94                     	;# 
  1082  0E95                     	;# 
  1083  0E96                     	;# 
  1084  0E97                     	;# 
  1085  0E9C                     	;# 
  1086  0E9D                     	;# 
  1087  0E9E                     	;# 
  1088  0EA1                     	;# 
  1089  0EA2                     	;# 
  1090  0EA3                     	;# 
  1091  0EA4                     	;# 
  1092  0EA5                     	;# 
  1093  0EA9                     	;# 
  1094  0EAA                     	;# 
  1095  0EAB                     	;# 
  1096  0EAC                     	;# 
  1097  0EB1                     	;# 
  1098  0EB2                     	;# 
  1099  0EB3                     	;# 
  1100  0EB8                     	;# 
  1101  0EB9                     	;# 
  1102  0EBA                     	;# 
  1103  0EBB                     	;# 
  1104  0EBC                     	;# 
  1105  0EBD                     	;# 
  1106  0EBE                     	;# 
  1107  0EC3                     	;# 
  1108  0EC5                     	;# 
  1109  0EC6                     	;# 
  1110  0EC7                     	;# 
  1111  0EC8                     	;# 
  1112  0EC9                     	;# 
  1113  0ECA                     	;# 
  1114  0ECB                     	;# 
  1115  0ECC                     	;# 
  1116  0F10                     	;# 
  1117  0F11                     	;# 
  1118  0F12                     	;# 
  1119  0F13                     	;# 
  1120  0F14                     	;# 
  1121  0F15                     	;# 
  1122  0F16                     	;# 
  1123  0F17                     	;# 
  1124  0F18                     	;# 
  1125  0F19                     	;# 
  1126  0F1A                     	;# 
  1127  0F1B                     	;# 
  1128  0F1C                     	;# 
  1129  0F1D                     	;# 
  1130  0F1E                     	;# 
  1131  0F1F                     	;# 
  1132  0F20                     	;# 
  1133  0F21                     	;# 
  1134  0F22                     	;# 
  1135  0F23                     	;# 
  1136  0F24                     	;# 
  1137  0F25                     	;# 
  1138  0F26                     	;# 
  1139  0F27                     	;# 
  1140  0F28                     	;# 
  1141  0F29                     	;# 
  1142  0F2A                     	;# 
  1143  0F2B                     	;# 
  1144  0F2C                     	;# 
  1145  0F2D                     	;# 
  1146  0F2E                     	;# 
  1147  0F2F                     	;# 
  1148  0F30                     	;# 
  1149  0F31                     	;# 
  1150  0F32                     	;# 
  1151  0F38                     	;# 
  1152  0F39                     	;# 
  1153  0F3A                     	;# 
  1154  0F3B                     	;# 
  1155  0F3C                     	;# 
  1156  0F3D                     	;# 
  1157  0F3E                     	;# 
  1158  0F3F                     	;# 
  1159  0F40                     	;# 
  1160  0F41                     	;# 
  1161  0F43                     	;# 
  1162  0F44                     	;# 
  1163  0F45                     	;# 
  1164  0F46                     	;# 
  1165  0F47                     	;# 
  1166  0F48                     	;# 
  1167  0F49                     	;# 
  1168  0F4A                     	;# 
  1169  0F4B                     	;# 
  1170  0F4C                     	;# 
  1171  0F4E                     	;# 
  1172  0F4F                     	;# 
  1173  0F50                     	;# 
  1174  0F51                     	;# 
  1175  0F52                     	;# 
  1176  0F53                     	;# 
  1177  0F54                     	;# 
  1178  0F55                     	;# 
  1179  0F56                     	;# 
  1180  0F57                     	;# 
  1181  0F59                     	;# 
  1182  0F5A                     	;# 
  1183  0F5B                     	;# 
  1184  0F5C                     	;# 
  1185  0F5D                     	;# 
  1186  0F61                     	;# 
  1187  0F62                     	;# 
  1188  0F64                     	;# 
  1189  0F65                     	;# 
  1190  0F66                     	;# 
  1191  0F67                     	;# 
  1192  0F68                     	;# 
  1193  0F69                     	;# 
  1194  0F6A                     	;# 
  1195  0F6B                     	;# 
  1196  0F6C                     	;# 
  1197  0F6D                     	;# 
  1198  0FE4                     	;# 
  1199  0FE5                     	;# 
  1200  0FE6                     	;# 
  1201  0FE7                     	;# 
  1202  0FE8                     	;# 
  1203  0FE9                     	;# 
  1204  0FEA                     	;# 
  1205  0FEB                     	;# 
  1206  0FED                     	;# 
  1207  0FEE                     	;# 
  1208  0FEF                     	;# 
  1209  0000                     	;# 
  1210  0001                     	;# 
  1211  0002                     	;# 
  1212  0003                     	;# 
  1213  0004                     	;# 
  1214  0005                     	;# 
  1215  0006                     	;# 
  1216  0007                     	;# 
  1217  0008                     	;# 
  1218  0009                     	;# 
  1219  000A                     	;# 
  1220  000B                     	;# 
  1221  000C                     	;# 
  1222  000D                     	;# 
  1223  000E                     	;# 
  1224  000F                     	;# 
  1225  0010                     	;# 
  1226  0011                     	;# 
  1227  0012                     	;# 
  1228  0013                     	;# 
  1229  0014                     	;# 
  1230  0015                     	;# 
  1231  0016                     	;# 
  1232  0017                     	;# 
  1233  0018                     	;# 
  1234  0019                     	;# 
  1235  001A                     	;# 
  1236  001C                     	;# 
  1237  001C                     	;# 
  1238  001D                     	;# 
  1239  001D                     	;# 
  1240  001E                     	;# 
  1241  001F                     	;# 
  1242  008C                     	;# 
  1243  008C                     	;# 
  1244  008D                     	;# 
  1245  008E                     	;# 
  1246  008E                     	;# 
  1247  008F                     	;# 
  1248  0090                     	;# 
  1249  0090                     	;# 
  1250  0091                     	;# 
  1251  0093                     	;# 
  1252  0094                     	;# 
  1253  0095                     	;# 
  1254  0096                     	;# 
  1255  0097                     	;# 
  1256  0098                     	;# 
  1257  0099                     	;# 
  1258  009A                     	;# 
  1259  009B                     	;# 
  1260  009C                     	;# 
  1261  009D                     	;# 
  1262  009E                     	;# 
  1263  010C                     	;# 
  1264  010D                     	;# 
  1265  010E                     	;# 
  1266  010E                     	;# 
  1267  010F                     	;# 
  1268  0110                     	;# 
  1269  0110                     	;# 
  1270  0111                     	;# 
  1271  0112                     	;# 
  1272  0112                     	;# 
  1273  0113                     	;# 
  1274  0114                     	;# 
  1275  0114                     	;# 
  1276  0115                     	;# 
  1277  0116                     	;# 
  1278  0116                     	;# 
  1279  0117                     	;# 
  1280  0119                     	;# 
  1281  0119                     	;# 
  1282  0119                     	;# 
  1283  011A                     	;# 
  1284  011A                     	;# 
  1285  011A                     	;# 
  1286  011B                     	;# 
  1287  011B                     	;# 
  1288  011B                     	;# 
  1289  011B                     	;# 
  1290  011B                     	;# 
  1291  011C                     	;# 
  1292  011C                     	;# 
  1293  011C                     	;# 
  1294  011D                     	;# 
  1295  011D                     	;# 
  1296  011D                     	;# 
  1297  011E                     	;# 
  1298  011E                     	;# 
  1299  011E                     	;# 
  1300  011F                     	;# 
  1301  011F                     	;# 
  1302  011F                     	;# 
  1303  011F                     	;# 
  1304  011F                     	;# 
  1305  018C                     	;# 
  1306  018D                     	;# 
  1307  018E                     	;# 
  1308  018F                     	;# 
  1309  0190                     	;# 
  1310  0191                     	;# 
  1311  0192                     	;# 
  1312  0196                     	;# 
  1313  0197                     	;# 
  1314  0198                     	;# 
  1315  0199                     	;# 
  1316  019A                     	;# 
  1317  019B                     	;# 
  1318  019C                     	;# 
  1319  020C                     	;# 
  1320  020C                     	;# 
  1321  020D                     	;# 
  1322  020E                     	;# 
  1323  020F                     	;# 
  1324  020F                     	;# 
  1325  0210                     	;# 
  1326  0210                     	;# 
  1327  0211                     	;# 
  1328  0211                     	;# 
  1329  0212                     	;# 
  1330  0212                     	;# 
  1331  0213                     	;# 
  1332  0214                     	;# 
  1333  0215                     	;# 
  1334  0215                     	;# 
  1335  0216                     	;# 
  1336  0216                     	;# 
  1337  0217                     	;# 
  1338  0217                     	;# 
  1339  0218                     	;# 
  1340  0218                     	;# 
  1341  0219                     	;# 
  1342  021A                     	;# 
  1343  021B                     	;# 
  1344  021B                     	;# 
  1345  021C                     	;# 
  1346  021C                     	;# 
  1347  021D                     	;# 
  1348  021D                     	;# 
  1349  021E                     	;# 
  1350  021F                     	;# 
  1351  028C                     	;# 
  1352  028C                     	;# 
  1353  028D                     	;# 
  1354  028D                     	;# 
  1355  028E                     	;# 
  1356  028F                     	;# 
  1357  0290                     	;# 
  1358  0290                     	;# 
  1359  0291                     	;# 
  1360  0292                     	;# 
  1361  0292                     	;# 
  1362  0293                     	;# 
  1363  0293                     	;# 
  1364  0294                     	;# 
  1365  0295                     	;# 
  1366  0296                     	;# 
  1367  0296                     	;# 
  1368  0297                     	;# 
  1369  0298                     	;# 
  1370  0298                     	;# 
  1371  0299                     	;# 
  1372  0299                     	;# 
  1373  029A                     	;# 
  1374  029B                     	;# 
  1375  029C                     	;# 
  1376  029C                     	;# 
  1377  029D                     	;# 
  1378  030C                     	;# 
  1379  030C                     	;# 
  1380  030D                     	;# 
  1381  030E                     	;# 
  1382  030F                     	;# 
  1383  0310                     	;# 
  1384  0310                     	;# 
  1385  0311                     	;# 
  1386  0312                     	;# 
  1387  0313                     	;# 
  1388  0314                     	;# 
  1389  0314                     	;# 
  1390  0315                     	;# 
  1391  0316                     	;# 
  1392  0317                     	;# 
  1393  0318                     	;# 
  1394  0318                     	;# 
  1395  0319                     	;# 
  1396  031A                     	;# 
  1397  031B                     	;# 
  1398  031C                     	;# 
  1399  031C                     	;# 
  1400  031D                     	;# 
  1401  031E                     	;# 
  1402  031F                     	;# 
  1403  038C                     	;# 
  1404  038C                     	;# 
  1405  038D                     	;# 
  1406  038E                     	;# 
  1407  0390                     	;# 
  1408  0390                     	;# 
  1409  0391                     	;# 
  1410  0392                     	;# 
  1411  040C                     	;# 
  1412  040D                     	;# 
  1413  040E                     	;# 
  1414  040F                     	;# 
  1415  0410                     	;# 
  1416  0411                     	;# 
  1417  0416                     	;# 
  1418  0416                     	;# 
  1419  0417                     	;# 
  1420  0418                     	;# 
  1421  0418                     	;# 
  1422  0419                     	;# 
  1423  041A                     	;# 
  1424  041A                     	;# 
  1425  041B                     	;# 
  1426  041C                     	;# 
  1427  041C                     	;# 
  1428  041D                     	;# 
  1429  041E                     	;# 
  1430  041F                     	;# 
  1431  048C                     	;# 
  1432  048C                     	;# 
  1433  048D                     	;# 
  1434  048E                     	;# 
  1435  048F                     	;# 
  1436  048F                     	;# 
  1437  0490                     	;# 
  1438  0491                     	;# 
  1439  0492                     	;# 
  1440  0492                     	;# 
  1441  0493                     	;# 
  1442  0494                     	;# 
  1443  0495                     	;# 
  1444  0495                     	;# 
  1445  0496                     	;# 
  1446  0497                     	;# 
  1447  0498                     	;# 
  1448  0499                     	;# 
  1449  049A                     	;# 
  1450  049B                     	;# 
  1451  049C                     	;# 
  1452  049D                     	;# 
  1453  050C                     	;# 
  1454  050C                     	;# 
  1455  050D                     	;# 
  1456  050E                     	;# 
  1457  050F                     	;# 
  1458  050F                     	;# 
  1459  0510                     	;# 
  1460  0511                     	;# 
  1461  0512                     	;# 
  1462  0512                     	;# 
  1463  0513                     	;# 
  1464  0514                     	;# 
  1465  0515                     	;# 
  1466  0515                     	;# 
  1467  0516                     	;# 
  1468  0517                     	;# 
  1469  0518                     	;# 
  1470  0519                     	;# 
  1471  051A                     	;# 
  1472  051B                     	;# 
  1473  051C                     	;# 
  1474  051D                     	;# 
  1475  058C                     	;# 
  1476  058C                     	;# 
  1477  058D                     	;# 
  1478  058E                     	;# 
  1479  058F                     	;# 
  1480  058F                     	;# 
  1481  0590                     	;# 
  1482  0591                     	;# 
  1483  0592                     	;# 
  1484  0593                     	;# 
  1485  060C                     	;# 
  1486  060D                     	;# 
  1487  060E                     	;# 
  1488  060F                     	;# 
  1489  0610                     	;# 
  1490  0611                     	;# 
  1491  0612                     	;# 
  1492  0613                     	;# 
  1493  0614                     	;# 
  1494  0616                     	;# 
  1495  0617                     	;# 
  1496  0618                     	;# 
  1497  0619                     	;# 
  1498  061A                     	;# 
  1499  061B                     	;# 
  1500  061C                     	;# 
  1501  061D                     	;# 
  1502  061E                     	;# 
  1503  068C                     	;# 
  1504  068D                     	;# 
  1505  068E                     	;# 
  1506  068F                     	;# 
  1507  0690                     	;# 
  1508  0691                     	;# 
  1509  0692                     	;# 
  1510  0693                     	;# 
  1511  0694                     	;# 
  1512  070C                     	;# 
  1513  070D                     	;# 
  1514  070E                     	;# 
  1515  070F                     	;# 
  1516  0710                     	;# 
  1517  0711                     	;# 
  1518  0712                     	;# 
  1519  0713                     	;# 
  1520  0714                     	;# 
  1521  0716                     	;# 
  1522  0717                     	;# 
  1523  0718                     	;# 
  1524  0719                     	;# 
  1525  071A                     	;# 
  1526  071B                     	;# 
  1527  071C                     	;# 
  1528  071D                     	;# 
  1529  071E                     	;# 
  1530  0796                     	;# 
  1531  0797                     	;# 
  1532  0798                     	;# 
  1533  0799                     	;# 
  1534  079A                     	;# 
  1535  079B                     	;# 
  1536  080C                     	;# 
  1537  080D                     	;# 
  1538  080E                     	;# 
  1539  080F                     	;# 
  1540  0810                     	;# 
  1541  0811                     	;# 
  1542  0812                     	;# 
  1543  0813                     	;# 
  1544  0814                     	;# 
  1545  081A                     	;# 
  1546  081B                     	;# 
  1547  081C                     	;# 
  1548  081D                     	;# 
  1549  081E                     	;# 
  1550  081F                     	;# 
  1551  088C                     	;# 
  1552  088D                     	;# 
  1553  088E                     	;# 
  1554  088F                     	;# 
  1555  0890                     	;# 
  1556  0891                     	;# 
  1557  0892                     	;# 
  1558  0893                     	;# 
  1559  0895                     	;# 
  1560  0896                     	;# 
  1561  0897                     	;# 
  1562  0898                     	;# 
  1563  0899                     	;# 
  1564  089A                     	;# 
  1565  089B                     	;# 
  1566  090C                     	;# 
  1567  090E                     	;# 
  1568  090F                     	;# 
  1569  091F                     	;# 
  1570  091F                     	;# 
  1571  098F                     	;# 
  1572  098F                     	;# 
  1573  0990                     	;# 
  1574  0991                     	;# 
  1575  0992                     	;# 
  1576  0993                     	;# 
  1577  0994                     	;# 
  1578  0995                     	;# 
  1579  0996                     	;# 
  1580  0997                     	;# 
  1581  0E0F                     	;# 
  1582  0E10                     	;# 
  1583  0E11                     	;# 
  1584  0E12                     	;# 
  1585  0E13                     	;# 
  1586  0E14                     	;# 
  1587  0E15                     	;# 
  1588  0E16                     	;# 
  1589  0E17                     	;# 
  1590  0E18                     	;# 
  1591  0E19                     	;# 
  1592  0E1A                     	;# 
  1593  0E1B                     	;# 
  1594  0E1C                     	;# 
  1595  0E1D                     	;# 
  1596  0E1E                     	;# 
  1597  0E1F                     	;# 
  1598  0E20                     	;# 
  1599  0E21                     	;# 
  1600  0E22                     	;# 
  1601  0E23                     	;# 
  1602  0E24                     	;# 
  1603  0E25                     	;# 
  1604  0E26                     	;# 
  1605  0E27                     	;# 
  1606  0E28                     	;# 
  1607  0E29                     	;# 
  1608  0E2A                     	;# 
  1609  0E2B                     	;# 
  1610  0E2C                     	;# 
  1611  0E2D                     	;# 
  1612  0E2E                     	;# 
  1613  0E2F                     	;# 
  1614  0E30                     	;# 
  1615  0E31                     	;# 
  1616  0E32                     	;# 
  1617  0E33                     	;# 
  1618  0E34                     	;# 
  1619  0E35                     	;# 
  1620  0E36                     	;# 
  1621  0E37                     	;# 
  1622  0E8F                     	;# 
  1623  0E90                     	;# 
  1624  0E91                     	;# 
  1625  0E92                     	;# 
  1626  0E93                     	;# 
  1627  0E94                     	;# 
  1628  0E95                     	;# 
  1629  0E96                     	;# 
  1630  0E97                     	;# 
  1631  0E9C                     	;# 
  1632  0E9D                     	;# 
  1633  0E9E                     	;# 
  1634  0EA1                     	;# 
  1635  0EA2                     	;# 
  1636  0EA3                     	;# 
  1637  0EA4                     	;# 
  1638  0EA5                     	;# 
  1639  0EA9                     	;# 
  1640  0EAA                     	;# 
  1641  0EAB                     	;# 
  1642  0EAC                     	;# 
  1643  0EB1                     	;# 
  1644  0EB2                     	;# 
  1645  0EB3                     	;# 
  1646  0EB8                     	;# 
  1647  0EB9                     	;# 
  1648  0EBA                     	;# 
  1649  0EBB                     	;# 
  1650  0EBC                     	;# 
  1651  0EBD                     	;# 
  1652  0EBE                     	;# 
  1653  0EC3                     	;# 
  1654  0EC5                     	;# 
  1655  0EC6                     	;# 
  1656  0EC7                     	;# 
  1657  0EC8                     	;# 
  1658  0EC9                     	;# 
  1659  0ECA                     	;# 
  1660  0ECB                     	;# 
  1661  0ECC                     	;# 
  1662  0F10                     	;# 
  1663  0F11                     	;# 
  1664  0F12                     	;# 
  1665  0F13                     	;# 
  1666  0F14                     	;# 
  1667  0F15                     	;# 
  1668  0F16                     	;# 
  1669  0F17                     	;# 
  1670  0F18                     	;# 
  1671  0F19                     	;# 
  1672  0F1A                     	;# 
  1673  0F1B                     	;# 
  1674  0F1C                     	;# 
  1675  0F1D                     	;# 
  1676  0F1E                     	;# 
  1677  0F1F                     	;# 
  1678  0F20                     	;# 
  1679  0F21                     	;# 
  1680  0F22                     	;# 
  1681  0F23                     	;# 
  1682  0F24                     	;# 
  1683  0F25                     	;# 
  1684  0F26                     	;# 
  1685  0F27                     	;# 
  1686  0F28                     	;# 
  1687  0F29                     	;# 
  1688  0F2A                     	;# 
  1689  0F2B                     	;# 
  1690  0F2C                     	;# 
  1691  0F2D                     	;# 
  1692  0F2E                     	;# 
  1693  0F2F                     	;# 
  1694  0F30                     	;# 
  1695  0F31                     	;# 
  1696  0F32                     	;# 
  1697  0F38                     	;# 
  1698  0F39                     	;# 
  1699  0F3A                     	;# 
  1700  0F3B                     	;# 
  1701  0F3C                     	;# 
  1702  0F3D                     	;# 
  1703  0F3E                     	;# 
  1704  0F3F                     	;# 
  1705  0F40                     	;# 
  1706  0F41                     	;# 
  1707  0F43                     	;# 
  1708  0F44                     	;# 
  1709  0F45                     	;# 
  1710  0F46                     	;# 
  1711  0F47                     	;# 
  1712  0F48                     	;# 
  1713  0F49                     	;# 
  1714  0F4A                     	;# 
  1715  0F4B                     	;# 
  1716  0F4C                     	;# 
  1717  0F4E                     	;# 
  1718  0F4F                     	;# 
  1719  0F50                     	;# 
  1720  0F51                     	;# 
  1721  0F52                     	;# 
  1722  0F53                     	;# 
  1723  0F54                     	;# 
  1724  0F55                     	;# 
  1725  0F56                     	;# 
  1726  0F57                     	;# 
  1727  0F59                     	;# 
  1728  0F5A                     	;# 
  1729  0F5B                     	;# 
  1730  0F5C                     	;# 
  1731  0F5D                     	;# 
  1732  0F61                     	;# 
  1733  0F62                     	;# 
  1734  0F64                     	;# 
  1735  0F65                     	;# 
  1736  0F66                     	;# 
  1737  0F67                     	;# 
  1738  0F68                     	;# 
  1739  0F69                     	;# 
  1740  0F6A                     	;# 
  1741  0F6B                     	;# 
  1742  0F6C                     	;# 
  1743  0F6D                     	;# 
  1744  0FE4                     	;# 
  1745  0FE5                     	;# 
  1746  0FE6                     	;# 
  1747  0FE7                     	;# 
  1748  0FE8                     	;# 
  1749  0FE9                     	;# 
  1750  0FEA                     	;# 
  1751  0FEB                     	;# 
  1752  0FED                     	;# 
  1753  0FEE                     	;# 
  1754  0FEF                     	;# 
  1755  0000                     	;# 
  1756  0001                     	;# 
  1757  0002                     	;# 
  1758  0003                     	;# 
  1759  0004                     	;# 
  1760  0005                     	;# 
  1761  0006                     	;# 
  1762  0007                     	;# 
  1763  0008                     	;# 
  1764  0009                     	;# 
  1765  000A                     	;# 
  1766  000B                     	;# 
  1767  000C                     	;# 
  1768  000D                     	;# 
  1769  000E                     	;# 
  1770  000F                     	;# 
  1771  0010                     	;# 
  1772  0011                     	;# 
  1773  0012                     	;# 
  1774  0013                     	;# 
  1775  0014                     	;# 
  1776  0015                     	;# 
  1777  0016                     	;# 
  1778  0017                     	;# 
  1779  0018                     	;# 
  1780  0019                     	;# 
  1781  001A                     	;# 
  1782  001C                     	;# 
  1783  001C                     	;# 
  1784  001D                     	;# 
  1785  001D                     	;# 
  1786  001E                     	;# 
  1787  001F                     	;# 
  1788  008C                     	;# 
  1789  008C                     	;# 
  1790  008D                     	;# 
  1791  008E                     	;# 
  1792  008E                     	;# 
  1793  008F                     	;# 
  1794  0090                     	;# 
  1795  0090                     	;# 
  1796  0091                     	;# 
  1797  0093                     	;# 
  1798  0094                     	;# 
  1799  0095                     	;# 
  1800  0096                     	;# 
  1801  0097                     	;# 
  1802  0098                     	;# 
  1803  0099                     	;# 
  1804  009A                     	;# 
  1805  009B                     	;# 
  1806  009C                     	;# 
  1807  009D                     	;# 
  1808  009E                     	;# 
  1809  010C                     	;# 
  1810  010D                     	;# 
  1811  010E                     	;# 
  1812  010E                     	;# 
  1813  010F                     	;# 
  1814  0110                     	;# 
  1815  0110                     	;# 
  1816  0111                     	;# 
  1817  0112                     	;# 
  1818  0112                     	;# 
  1819  0113                     	;# 
  1820  0114                     	;# 
  1821  0114                     	;# 
  1822  0115                     	;# 
  1823  0116                     	;# 
  1824  0116                     	;# 
  1825  0117                     	;# 
  1826  0119                     	;# 
  1827  0119                     	;# 
  1828  0119                     	;# 
  1829  011A                     	;# 
  1830  011A                     	;# 
  1831  011A                     	;# 
  1832  011B                     	;# 
  1833  011B                     	;# 
  1834  011B                     	;# 
  1835  011B                     	;# 
  1836  011B                     	;# 
  1837  011C                     	;# 
  1838  011C                     	;# 
  1839  011C                     	;# 
  1840  011D                     	;# 
  1841  011D                     	;# 
  1842  011D                     	;# 
  1843  011E                     	;# 
  1844  011E                     	;# 
  1845  011E                     	;# 
  1846  011F                     	;# 
  1847  011F                     	;# 
  1848  011F                     	;# 
  1849  011F                     	;# 
  1850  011F                     	;# 
  1851  018C                     	;# 
  1852  018D                     	;# 
  1853  018E                     	;# 
  1854  018F                     	;# 
  1855  0190                     	;# 
  1856  0191                     	;# 
  1857  0192                     	;# 
  1858  0196                     	;# 
  1859  0197                     	;# 
  1860  0198                     	;# 
  1861  0199                     	;# 
  1862  019A                     	;# 
  1863  019B                     	;# 
  1864  019C                     	;# 
  1865  020C                     	;# 
  1866  020C                     	;# 
  1867  020D                     	;# 
  1868  020E                     	;# 
  1869  020F                     	;# 
  1870  020F                     	;# 
  1871  0210                     	;# 
  1872  0210                     	;# 
  1873  0211                     	;# 
  1874  0211                     	;# 
  1875  0212                     	;# 
  1876  0212                     	;# 
  1877  0213                     	;# 
  1878  0214                     	;# 
  1879  0215                     	;# 
  1880  0215                     	;# 
  1881  0216                     	;# 
  1882  0216                     	;# 
  1883  0217                     	;# 
  1884  0217                     	;# 
  1885  0218                     	;# 
  1886  0218                     	;# 
  1887  0219                     	;# 
  1888  021A                     	;# 
  1889  021B                     	;# 
  1890  021B                     	;# 
  1891  021C                     	;# 
  1892  021C                     	;# 
  1893  021D                     	;# 
  1894  021D                     	;# 
  1895  021E                     	;# 
  1896  021F                     	;# 
  1897  028C                     	;# 
  1898  028C                     	;# 
  1899  028D                     	;# 
  1900  028D                     	;# 
  1901  028E                     	;# 
  1902  028F                     	;# 
  1903  0290                     	;# 
  1904  0290                     	;# 
  1905  0291                     	;# 
  1906  0292                     	;# 
  1907  0292                     	;# 
  1908  0293                     	;# 
  1909  0293                     	;# 
  1910  0294                     	;# 
  1911  0295                     	;# 
  1912  0296                     	;# 
  1913  0296                     	;# 
  1914  0297                     	;# 
  1915  0298                     	;# 
  1916  0298                     	;# 
  1917  0299                     	;# 
  1918  0299                     	;# 
  1919  029A                     	;# 
  1920  029B                     	;# 
  1921  029C                     	;# 
  1922  029C                     	;# 
  1923  029D                     	;# 
  1924  030C                     	;# 
  1925  030C                     	;# 
  1926  030D                     	;# 
  1927  030E                     	;# 
  1928  030F                     	;# 
  1929  0310                     	;# 
  1930  0310                     	;# 
  1931  0311                     	;# 
  1932  0312                     	;# 
  1933  0313                     	;# 
  1934  0314                     	;# 
  1935  0314                     	;# 
  1936  0315                     	;# 
  1937  0316                     	;# 
  1938  0317                     	;# 
  1939  0318                     	;# 
  1940  0318                     	;# 
  1941  0319                     	;# 
  1942  031A                     	;# 
  1943  031B                     	;# 
  1944  031C                     	;# 
  1945  031C                     	;# 
  1946  031D                     	;# 
  1947  031E                     	;# 
  1948  031F                     	;# 
  1949  038C                     	;# 
  1950  038C                     	;# 
  1951  038D                     	;# 
  1952  038E                     	;# 
  1953  0390                     	;# 
  1954  0390                     	;# 
  1955  0391                     	;# 
  1956  0392                     	;# 
  1957  040C                     	;# 
  1958  040D                     	;# 
  1959  040E                     	;# 
  1960  040F                     	;# 
  1961  0410                     	;# 
  1962  0411                     	;# 
  1963  0416                     	;# 
  1964  0416                     	;# 
  1965  0417                     	;# 
  1966  0418                     	;# 
  1967  0418                     	;# 
  1968  0419                     	;# 
  1969  041A                     	;# 
  1970  041A                     	;# 
  1971  041B                     	;# 
  1972  041C                     	;# 
  1973  041C                     	;# 
  1974  041D                     	;# 
  1975  041E                     	;# 
  1976  041F                     	;# 
  1977  048C                     	;# 
  1978  048C                     	;# 
  1979  048D                     	;# 
  1980  048E                     	;# 
  1981  048F                     	;# 
  1982  048F                     	;# 
  1983  0490                     	;# 
  1984  0491                     	;# 
  1985  0492                     	;# 
  1986  0492                     	;# 
  1987  0493                     	;# 
  1988  0494                     	;# 
  1989  0495                     	;# 
  1990  0495                     	;# 
  1991  0496                     	;# 
  1992  0497                     	;# 
  1993  0498                     	;# 
  1994  0499                     	;# 
  1995  049A                     	;# 
  1996  049B                     	;# 
  1997  049C                     	;# 
  1998  049D                     	;# 
  1999  050C                     	;# 
  2000  050C                     	;# 
  2001  050D                     	;# 
  2002  050E                     	;# 
  2003  050F                     	;# 
  2004  050F                     	;# 
  2005  0510                     	;# 
  2006  0511                     	;# 
  2007  0512                     	;# 
  2008  0512                     	;# 
  2009  0513                     	;# 
  2010  0514                     	;# 
  2011  0515                     	;# 
  2012  0515                     	;# 
  2013  0516                     	;# 
  2014  0517                     	;# 
  2015  0518                     	;# 
  2016  0519                     	;# 
  2017  051A                     	;# 
  2018  051B                     	;# 
  2019  051C                     	;# 
  2020  051D                     	;# 
  2021  058C                     	;# 
  2022  058C                     	;# 
  2023  058D                     	;# 
  2024  058E                     	;# 
  2025  058F                     	;# 
  2026  058F                     	;# 
  2027  0590                     	;# 
  2028  0591                     	;# 
  2029  0592                     	;# 
  2030  0593                     	;# 
  2031  060C                     	;# 
  2032  060D                     	;# 
  2033  060E                     	;# 
  2034  060F                     	;# 
  2035  0610                     	;# 
  2036  0611                     	;# 
  2037  0612                     	;# 
  2038  0613                     	;# 
  2039  0614                     	;# 
  2040  0616                     	;# 
  2041  0617                     	;# 
  2042  0618                     	;# 
  2043  0619                     	;# 
  2044  061A                     	;# 
  2045  061B                     	;# 
  2046  061C                     	;# 
  2047  061D                     	;# 
  2048  061E                     	;# 
  2049  068C                     	;# 
  2050  068D                     	;# 
  2051  068E                     	;# 
  2052  068F                     	;# 
  2053  0690                     	;# 
  2054  0691                     	;# 
  2055  0692                     	;# 
  2056  0693                     	;# 
  2057  0694                     	;# 
  2058  070C                     	;# 
  2059  070D                     	;# 
  2060  070E                     	;# 
  2061  070F                     	;# 
  2062  0710                     	;# 
  2063  0711                     	;# 
  2064  0712                     	;# 
  2065  0713                     	;# 
  2066  0714                     	;# 
  2067  0716                     	;# 
  2068  0717                     	;# 
  2069  0718                     	;# 
  2070  0719                     	;# 
  2071  071A                     	;# 
  2072  071B                     	;# 
  2073  071C                     	;# 
  2074  071D                     	;# 
  2075  071E                     	;# 
  2076  0796                     	;# 
  2077  0797                     	;# 
  2078  0798                     	;# 
  2079  0799                     	;# 
  2080  079A                     	;# 
  2081  079B                     	;# 
  2082  080C                     	;# 
  2083  080D                     	;# 
  2084  080E                     	;# 
  2085  080F                     	;# 
  2086  0810                     	;# 
  2087  0811                     	;# 
  2088  0812                     	;# 
  2089  0813                     	;# 
  2090  0814                     	;# 
  2091  081A                     	;# 
  2092  081B                     	;# 
  2093  081C                     	;# 
  2094  081D                     	;# 
  2095  081E                     	;# 
  2096  081F                     	;# 
  2097  088C                     	;# 
  2098  088D                     	;# 
  2099  088E                     	;# 
  2100  088F                     	;# 
  2101  0890                     	;# 
  2102  0891                     	;# 
  2103  0892                     	;# 
  2104  0893                     	;# 
  2105  0895                     	;# 
  2106  0896                     	;# 
  2107  0897                     	;# 
  2108  0898                     	;# 
  2109  0899                     	;# 
  2110  089A                     	;# 
  2111  089B                     	;# 
  2112  090C                     	;# 
  2113  090E                     	;# 
  2114  090F                     	;# 
  2115  091F                     	;# 
  2116  091F                     	;# 
  2117  098F                     	;# 
  2118  098F                     	;# 
  2119  0990                     	;# 
  2120  0991                     	;# 
  2121  0992                     	;# 
  2122  0993                     	;# 
  2123  0994                     	;# 
  2124  0995                     	;# 
  2125  0996                     	;# 
  2126  0997                     	;# 
  2127  0E0F                     	;# 
  2128  0E10                     	;# 
  2129  0E11                     	;# 
  2130  0E12                     	;# 
  2131  0E13                     	;# 
  2132  0E14                     	;# 
  2133  0E15                     	;# 
  2134  0E16                     	;# 
  2135  0E17                     	;# 
  2136  0E18                     	;# 
  2137  0E19                     	;# 
  2138  0E1A                     	;# 
  2139  0E1B                     	;# 
  2140  0E1C                     	;# 
  2141  0E1D                     	;# 
  2142  0E1E                     	;# 
  2143  0E1F                     	;# 
  2144  0E20                     	;# 
  2145  0E21                     	;# 
  2146  0E22                     	;# 
  2147  0E23                     	;# 
  2148  0E24                     	;# 
  2149  0E25                     	;# 
  2150  0E26                     	;# 
  2151  0E27                     	;# 
  2152  0E28                     	;# 
  2153  0E29                     	;# 
  2154  0E2A                     	;# 
  2155  0E2B                     	;# 
  2156  0E2C                     	;# 
  2157  0E2D                     	;# 
  2158  0E2E                     	;# 
  2159  0E2F                     	;# 
  2160  0E30                     	;# 
  2161  0E31                     	;# 
  2162  0E32                     	;# 
  2163  0E33                     	;# 
  2164  0E34                     	;# 
  2165  0E35                     	;# 
  2166  0E36                     	;# 
  2167  0E37                     	;# 
  2168  0E8F                     	;# 
  2169  0E90                     	;# 
  2170  0E91                     	;# 
  2171  0E92                     	;# 
  2172  0E93                     	;# 
  2173  0E94                     	;# 
  2174  0E95                     	;# 
  2175  0E96                     	;# 
  2176  0E97                     	;# 
  2177  0E9C                     	;# 
  2178  0E9D                     	;# 
  2179  0E9E                     	;# 
  2180  0EA1                     	;# 
  2181  0EA2                     	;# 
  2182  0EA3                     	;# 
  2183  0EA4                     	;# 
  2184  0EA5                     	;# 
  2185  0EA9                     	;# 
  2186  0EAA                     	;# 
  2187  0EAB                     	;# 
  2188  0EAC                     	;# 
  2189  0EB1                     	;# 
  2190  0EB2                     	;# 
  2191  0EB3                     	;# 
  2192  0EB8                     	;# 
  2193  0EB9                     	;# 
  2194  0EBA                     	;# 
  2195  0EBB                     	;# 
  2196  0EBC                     	;# 
  2197  0EBD                     	;# 
  2198  0EBE                     	;# 
  2199  0EC3                     	;# 
  2200  0EC5                     	;# 
  2201  0EC6                     	;# 
  2202  0EC7                     	;# 
  2203  0EC8                     	;# 
  2204  0EC9                     	;# 
  2205  0ECA                     	;# 
  2206  0ECB                     	;# 
  2207  0ECC                     	;# 
  2208  0F10                     	;# 
  2209  0F11                     	;# 
  2210  0F12                     	;# 
  2211  0F13                     	;# 
  2212  0F14                     	;# 
  2213  0F15                     	;# 
  2214  0F16                     	;# 
  2215  0F17                     	;# 
  2216  0F18                     	;# 
  2217  0F19                     	;# 
  2218  0F1A                     	;# 
  2219  0F1B                     	;# 
  2220  0F1C                     	;# 
  2221  0F1D                     	;# 
  2222  0F1E                     	;# 
  2223  0F1F                     	;# 
  2224  0F20                     	;# 
  2225  0F21                     	;# 
  2226  0F22                     	;# 
  2227  0F23                     	;# 
  2228  0F24                     	;# 
  2229  0F25                     	;# 
  2230  0F26                     	;# 
  2231  0F27                     	;# 
  2232  0F28                     	;# 
  2233  0F29                     	;# 
  2234  0F2A                     	;# 
  2235  0F2B                     	;# 
  2236  0F2C                     	;# 
  2237  0F2D                     	;# 
  2238  0F2E                     	;# 
  2239  0F2F                     	;# 
  2240  0F30                     	;# 
  2241  0F31                     	;# 
  2242  0F32                     	;# 
  2243  0F38                     	;# 
  2244  0F39                     	;# 
  2245  0F3A                     	;# 
  2246  0F3B                     	;# 
  2247  0F3C                     	;# 
  2248  0F3D                     	;# 
  2249  0F3E                     	;# 
  2250  0F3F                     	;# 
  2251  0F40                     	;# 
  2252  0F41                     	;# 
  2253  0F43                     	;# 
  2254  0F44                     	;# 
  2255  0F45                     	;# 
  2256  0F46                     	;# 
  2257  0F47                     	;# 
  2258  0F48                     	;# 
  2259  0F49                     	;# 
  2260  0F4A                     	;# 
  2261  0F4B                     	;# 
  2262  0F4C                     	;# 
  2263  0F4E                     	;# 
  2264  0F4F                     	;# 
  2265  0F50                     	;# 
  2266  0F51                     	;# 
  2267  0F52                     	;# 
  2268  0F53                     	;# 
  2269  0F54                     	;# 
  2270  0F55                     	;# 
  2271  0F56                     	;# 
  2272  0F57                     	;# 
  2273  0F59                     	;# 
  2274  0F5A                     	;# 
  2275  0F5B                     	;# 
  2276  0F5C                     	;# 
  2277  0F5D                     	;# 
  2278  0F61                     	;# 
  2279  0F62                     	;# 
  2280  0F64                     	;# 
  2281  0F65                     	;# 
  2282  0F66                     	;# 
  2283  0F67                     	;# 
  2284  0F68                     	;# 
  2285  0F69                     	;# 
  2286  0F6A                     	;# 
  2287  0F6B                     	;# 
  2288  0F6C                     	;# 
  2289  0F6D                     	;# 
  2290  0FE4                     	;# 
  2291  0FE5                     	;# 
  2292  0FE6                     	;# 
  2293  0FE7                     	;# 
  2294  0FE8                     	;# 
  2295  0FE9                     	;# 
  2296  0FEA                     	;# 
  2297  0FEB                     	;# 
  2298  0FED                     	;# 
  2299  0FEE                     	;# 
  2300  0FEF                     	;# 
  2301  0000                     	;# 
  2302  0001                     	;# 
  2303  0002                     	;# 
  2304  0003                     	;# 
  2305  0004                     	;# 
  2306  0005                     	;# 
  2307  0006                     	;# 
  2308  0007                     	;# 
  2309  0008                     	;# 
  2310  0009                     	;# 
  2311  000A                     	;# 
  2312  000B                     	;# 
  2313  000C                     	;# 
  2314  000D                     	;# 
  2315  000E                     	;# 
  2316  000F                     	;# 
  2317  0010                     	;# 
  2318  0011                     	;# 
  2319  0012                     	;# 
  2320  0013                     	;# 
  2321  0014                     	;# 
  2322  0015                     	;# 
  2323  0016                     	;# 
  2324  0017                     	;# 
  2325  0018                     	;# 
  2326  0019                     	;# 
  2327  001A                     	;# 
  2328  001C                     	;# 
  2329  001C                     	;# 
  2330  001D                     	;# 
  2331  001D                     	;# 
  2332  001E                     	;# 
  2333  001F                     	;# 
  2334  008C                     	;# 
  2335  008C                     	;# 
  2336  008D                     	;# 
  2337  008E                     	;# 
  2338  008E                     	;# 
  2339  008F                     	;# 
  2340  0090                     	;# 
  2341  0090                     	;# 
  2342  0091                     	;# 
  2343  0093                     	;# 
  2344  0094                     	;# 
  2345  0095                     	;# 
  2346  0096                     	;# 
  2347  0097                     	;# 
  2348  0098                     	;# 
  2349  0099                     	;# 
  2350  009A                     	;# 
  2351  009B                     	;# 
  2352  009C                     	;# 
  2353  009D                     	;# 
  2354  009E                     	;# 
  2355  010C                     	;# 
  2356  010D                     	;# 
  2357  010E                     	;# 
  2358  010E                     	;# 
  2359  010F                     	;# 
  2360  0110                     	;# 
  2361  0110                     	;# 
  2362  0111                     	;# 
  2363  0112                     	;# 
  2364  0112                     	;# 
  2365  0113                     	;# 
  2366  0114                     	;# 
  2367  0114                     	;# 
  2368  0115                     	;# 
  2369  0116                     	;# 
  2370  0116                     	;# 
  2371  0117                     	;# 
  2372  0119                     	;# 
  2373  0119                     	;# 
  2374  0119                     	;# 
  2375  011A                     	;# 
  2376  011A                     	;# 
  2377  011A                     	;# 
  2378  011B                     	;# 
  2379  011B                     	;# 
  2380  011B                     	;# 
  2381  011B                     	;# 
  2382  011B                     	;# 
  2383  011C                     	;# 
  2384  011C                     	;# 
  2385  011C                     	;# 
  2386  011D                     	;# 
  2387  011D                     	;# 
  2388  011D                     	;# 
  2389  011E                     	;# 
  2390  011E                     	;# 
  2391  011E                     	;# 
  2392  011F                     	;# 
  2393  011F                     	;# 
  2394  011F                     	;# 
  2395  011F                     	;# 
  2396  011F                     	;# 
  2397  018C                     	;# 
  2398  018D                     	;# 
  2399  018E                     	;# 
  2400  018F                     	;# 
  2401  0190                     	;# 
  2402  0191                     	;# 
  2403  0192                     	;# 
  2404  0196                     	;# 
  2405  0197                     	;# 
  2406  0198                     	;# 
  2407  0199                     	;# 
  2408  019A                     	;# 
  2409  019B                     	;# 
  2410  019C                     	;# 
  2411  020C                     	;# 
  2412  020C                     	;# 
  2413  020D                     	;# 
  2414  020E                     	;# 
  2415  020F                     	;# 
  2416  020F                     	;# 
  2417  0210                     	;# 
  2418  0210                     	;# 
  2419  0211                     	;# 
  2420  0211                     	;# 
  2421  0212                     	;# 
  2422  0212                     	;# 
  2423  0213                     	;# 
  2424  0214                     	;# 
  2425  0215                     	;# 
  2426  0215                     	;# 
  2427  0216                     	;# 
  2428  0216                     	;# 
  2429  0217                     	;# 
  2430  0217                     	;# 
  2431  0218                     	;# 
  2432  0218                     	;# 
  2433  0219                     	;# 
  2434  021A                     	;# 
  2435  021B                     	;# 
  2436  021B                     	;# 
  2437  021C                     	;# 
  2438  021C                     	;# 
  2439  021D                     	;# 
  2440  021D                     	;# 
  2441  021E                     	;# 
  2442  021F                     	;# 
  2443  028C                     	;# 
  2444  028C                     	;# 
  2445  028D                     	;# 
  2446  028D                     	;# 
  2447  028E                     	;# 
  2448  028F                     	;# 
  2449  0290                     	;# 
  2450  0290                     	;# 
  2451  0291                     	;# 
  2452  0292                     	;# 
  2453  0292                     	;# 
  2454  0293                     	;# 
  2455  0293                     	;# 
  2456  0294                     	;# 
  2457  0295                     	;# 
  2458  0296                     	;# 
  2459  0296                     	;# 
  2460  0297                     	;# 
  2461  0298                     	;# 
  2462  0298                     	;# 
  2463  0299                     	;# 
  2464  0299                     	;# 
  2465  029A                     	;# 
  2466  029B                     	;# 
  2467  029C                     	;# 
  2468  029C                     	;# 
  2469  029D                     	;# 
  2470  030C                     	;# 
  2471  030C                     	;# 
  2472  030D                     	;# 
  2473  030E                     	;# 
  2474  030F                     	;# 
  2475  0310                     	;# 
  2476  0310                     	;# 
  2477  0311                     	;# 
  2478  0312                     	;# 
  2479  0313                     	;# 
  2480  0314                     	;# 
  2481  0314                     	;# 
  2482  0315                     	;# 
  2483  0316                     	;# 
  2484  0317                     	;# 
  2485  0318                     	;# 
  2486  0318                     	;# 
  2487  0319                     	;# 
  2488  031A                     	;# 
  2489  031B                     	;# 
  2490  031C                     	;# 
  2491  031C                     	;# 
  2492  031D                     	;# 
  2493  031E                     	;# 
  2494  031F                     	;# 
  2495  038C                     	;# 
  2496  038C                     	;# 
  2497  038D                     	;# 
  2498  038E                     	;# 
  2499  0390                     	;# 
  2500  0390                     	;# 
  2501  0391                     	;# 
  2502  0392                     	;# 
  2503  040C                     	;# 
  2504  040D                     	;# 
  2505  040E                     	;# 
  2506  040F                     	;# 
  2507  0410                     	;# 
  2508  0411                     	;# 
  2509  0416                     	;# 
  2510  0416                     	;# 
  2511  0417                     	;# 
  2512  0418                     	;# 
  2513  0418                     	;# 
  2514  0419                     	;# 
  2515  041A                     	;# 
  2516  041A                     	;# 
  2517  041B                     	;# 
  2518  041C                     	;# 
  2519  041C                     	;# 
  2520  041D                     	;# 
  2521  041E                     	;# 
  2522  041F                     	;# 
  2523  048C                     	;# 
  2524  048C                     	;# 
  2525  048D                     	;# 
  2526  048E                     	;# 
  2527  048F                     	;# 
  2528  048F                     	;# 
  2529  0490                     	;# 
  2530  0491                     	;# 
  2531  0492                     	;# 
  2532  0492                     	;# 
  2533  0493                     	;# 
  2534  0494                     	;# 
  2535  0495                     	;# 
  2536  0495                     	;# 
  2537  0496                     	;# 
  2538  0497                     	;# 
  2539  0498                     	;# 
  2540  0499                     	;# 
  2541  049A                     	;# 
  2542  049B                     	;# 
  2543  049C                     	;# 
  2544  049D                     	;# 
  2545  050C                     	;# 
  2546  050C                     	;# 
  2547  050D                     	;# 
  2548  050E                     	;# 
  2549  050F                     	;# 
  2550  050F                     	;# 
  2551  0510                     	;# 
  2552  0511                     	;# 
  2553  0512                     	;# 
  2554  0512                     	;# 
  2555  0513                     	;# 
  2556  0514                     	;# 
  2557  0515                     	;# 
  2558  0515                     	;# 
  2559  0516                     	;# 
  2560  0517                     	;# 
  2561  0518                     	;# 
  2562  0519                     	;# 
  2563  051A                     	;# 
  2564  051B                     	;# 
  2565  051C                     	;# 
  2566  051D                     	;# 
  2567  058C                     	;# 
  2568  058C                     	;# 
  2569  058D                     	;# 
  2570  058E                     	;# 
  2571  058F                     	;# 
  2572  058F                     	;# 
  2573  0590                     	;# 
  2574  0591                     	;# 
  2575  0592                     	;# 
  2576  0593                     	;# 
  2577  060C                     	;# 
  2578  060D                     	;# 
  2579  060E                     	;# 
  2580  060F                     	;# 
  2581  0610                     	;# 
  2582  0611                     	;# 
  2583  0612                     	;# 
  2584  0613                     	;# 
  2585  0614                     	;# 
  2586  0616                     	;# 
  2587  0617                     	;# 
  2588  0618                     	;# 
  2589  0619                     	;# 
  2590  061A                     	;# 
  2591  061B                     	;# 
  2592  061C                     	;# 
  2593  061D                     	;# 
  2594  061E                     	;# 
  2595  068C                     	;# 
  2596  068D                     	;# 
  2597  068E                     	;# 
  2598  068F                     	;# 
  2599  0690                     	;# 
  2600  0691                     	;# 
  2601  0692                     	;# 
  2602  0693                     	;# 
  2603  0694                     	;# 
  2604  070C                     	;# 
  2605  070D                     	;# 
  2606  070E                     	;# 
  2607  070F                     	;# 
  2608  0710                     	;# 
  2609  0711                     	;# 
  2610  0712                     	;# 
  2611  0713                     	;# 
  2612  0714                     	;# 
  2613  0716                     	;# 
  2614  0717                     	;# 
  2615  0718                     	;# 
  2616  0719                     	;# 
  2617  071A                     	;# 
  2618  071B                     	;# 
  2619  071C                     	;# 
  2620  071D                     	;# 
  2621  071E                     	;# 
  2622  0796                     	;# 
  2623  0797                     	;# 
  2624  0798                     	;# 
  2625  0799                     	;# 
  2626  079A                     	;# 
  2627  079B                     	;# 
  2628  080C                     	;# 
  2629  080D                     	;# 
  2630  080E                     	;# 
  2631  080F                     	;# 
  2632  0810                     	;# 
  2633  0811                     	;# 
  2634  0812                     	;# 
  2635  0813                     	;# 
  2636  0814                     	;# 
  2637  081A                     	;# 
  2638  081B                     	;# 
  2639  081C                     	;# 
  2640  081D                     	;# 
  2641  081E                     	;# 
  2642  081F                     	;# 
  2643  088C                     	;# 
  2644  088D                     	;# 
  2645  088E                     	;# 
  2646  088F                     	;# 
  2647  0890                     	;# 
  2648  0891                     	;# 
  2649  0892                     	;# 
  2650  0893                     	;# 
  2651  0895                     	;# 
  2652  0896                     	;# 
  2653  0897                     	;# 
  2654  0898                     	;# 
  2655  0899                     	;# 
  2656  089A                     	;# 
  2657  089B                     	;# 
  2658  090C                     	;# 
  2659  090E                     	;# 
  2660  090F                     	;# 
  2661  091F                     	;# 
  2662  091F                     	;# 
  2663  098F                     	;# 
  2664  098F                     	;# 
  2665  0990                     	;# 
  2666  0991                     	;# 
  2667  0992                     	;# 
  2668  0993                     	;# 
  2669  0994                     	;# 
  2670  0995                     	;# 
  2671  0996                     	;# 
  2672  0997                     	;# 
  2673  0E0F                     	;# 
  2674  0E10                     	;# 
  2675  0E11                     	;# 
  2676  0E12                     	;# 
  2677  0E13                     	;# 
  2678  0E14                     	;# 
  2679  0E15                     	;# 
  2680  0E16                     	;# 
  2681  0E17                     	;# 
  2682  0E18                     	;# 
  2683  0E19                     	;# 
  2684  0E1A                     	;# 
  2685  0E1B                     	;# 
  2686  0E1C                     	;# 
  2687  0E1D                     	;# 
  2688  0E1E                     	;# 
  2689  0E1F                     	;# 
  2690  0E20                     	;# 
  2691  0E21                     	;# 
  2692  0E22                     	;# 
  2693  0E23                     	;# 
  2694  0E24                     	;# 
  2695  0E25                     	;# 
  2696  0E26                     	;# 
  2697  0E27                     	;# 
  2698  0E28                     	;# 
  2699  0E29                     	;# 
  2700  0E2A                     	;# 
  2701  0E2B                     	;# 
  2702  0E2C                     	;# 
  2703  0E2D                     	;# 
  2704  0E2E                     	;# 
  2705  0E2F                     	;# 
  2706  0E30                     	;# 
  2707  0E31                     	;# 
  2708  0E32                     	;# 
  2709  0E33                     	;# 
  2710  0E34                     	;# 
  2711  0E35                     	;# 
  2712  0E36                     	;# 
  2713  0E37                     	;# 
  2714  0E8F                     	;# 
  2715  0E90                     	;# 
  2716  0E91                     	;# 
  2717  0E92                     	;# 
  2718  0E93                     	;# 
  2719  0E94                     	;# 
  2720  0E95                     	;# 
  2721  0E96                     	;# 
  2722  0E97                     	;# 
  2723  0E9C                     	;# 
  2724  0E9D                     	;# 
  2725  0E9E                     	;# 
  2726  0EA1                     	;# 
  2727  0EA2                     	;# 
  2728  0EA3                     	;# 
  2729  0EA4                     	;# 
  2730  0EA5                     	;# 
  2731  0EA9                     	;# 
  2732  0EAA                     	;# 
  2733  0EAB                     	;# 
  2734  0EAC                     	;# 
  2735  0EB1                     	;# 
  2736  0EB2                     	;# 
  2737  0EB3                     	;# 
  2738  0EB8                     	;# 
  2739  0EB9                     	;# 
  2740  0EBA                     	;# 
  2741  0EBB                     	;# 
  2742  0EBC                     	;# 
  2743  0EBD                     	;# 
  2744  0EBE                     	;# 
  2745  0EC3                     	;# 
  2746  0EC5                     	;# 
  2747  0EC6                     	;# 
  2748  0EC7                     	;# 
  2749  0EC8                     	;# 
  2750  0EC9                     	;# 
  2751  0ECA                     	;# 
  2752  0ECB                     	;# 
  2753  0ECC                     	;# 
  2754  0F10                     	;# 
  2755  0F11                     	;# 
  2756  0F12                     	;# 
  2757  0F13                     	;# 
  2758  0F14                     	;# 
  2759  0F15                     	;# 
  2760  0F16                     	;# 
  2761  0F17                     	;# 
  2762  0F18                     	;# 
  2763  0F19                     	;# 
  2764  0F1A                     	;# 
  2765  0F1B                     	;# 
  2766  0F1C                     	;# 
  2767  0F1D                     	;# 
  2768  0F1E                     	;# 
  2769  0F1F                     	;# 
  2770  0F20                     	;# 
  2771  0F21                     	;# 
  2772  0F22                     	;# 
  2773  0F23                     	;# 
  2774  0F24                     	;# 
  2775  0F25                     	;# 
  2776  0F26                     	;# 
  2777  0F27                     	;# 
  2778  0F28                     	;# 
  2779  0F29                     	;# 
  2780  0F2A                     	;# 
  2781  0F2B                     	;# 
  2782  0F2C                     	;# 
  2783  0F2D                     	;# 
  2784  0F2E                     	;# 
  2785  0F2F                     	;# 
  2786  0F30                     	;# 
  2787  0F31                     	;# 
  2788  0F32                     	;# 
  2789  0F38                     	;# 
  2790  0F39                     	;# 
  2791  0F3A                     	;# 
  2792  0F3B                     	;# 
  2793  0F3C                     	;# 
  2794  0F3D                     	;# 
  2795  0F3E                     	;# 
  2796  0F3F                     	;# 
  2797  0F40                     	;# 
  2798  0F41                     	;# 
  2799  0F43                     	;# 
  2800  0F44                     	;# 
  2801  0F45                     	;# 
  2802  0F46                     	;# 
  2803  0F47                     	;# 
  2804  0F48                     	;# 
  2805  0F49                     	;# 
  2806  0F4A                     	;# 
  2807  0F4B                     	;# 
  2808  0F4C                     	;# 
  2809  0F4E                     	;# 
  2810  0F4F                     	;# 
  2811  0F50                     	;# 
  2812  0F51                     	;# 
  2813  0F52                     	;# 
  2814  0F53                     	;# 
  2815  0F54                     	;# 
  2816  0F55                     	;# 
  2817  0F56                     	;# 
  2818  0F57                     	;# 
  2819  0F59                     	;# 
  2820  0F5A                     	;# 
  2821  0F5B                     	;# 
  2822  0F5C                     	;# 
  2823  0F5D                     	;# 
  2824  0F61                     	;# 
  2825  0F62                     	;# 
  2826  0F64                     	;# 
  2827  0F65                     	;# 
  2828  0F66                     	;# 
  2829  0F67                     	;# 
  2830  0F68                     	;# 
  2831  0F69                     	;# 
  2832  0F6A                     	;# 
  2833  0F6B                     	;# 
  2834  0F6C                     	;# 
  2835  0F6D                     	;# 
  2836  0FE4                     	;# 
  2837  0FE5                     	;# 
  2838  0FE6                     	;# 
  2839  0FE7                     	;# 
  2840  0FE8                     	;# 
  2841  0FE9                     	;# 
  2842  0FEA                     	;# 
  2843  0FEB                     	;# 
  2844  0FED                     	;# 
  2845  0FEE                     	;# 
  2846  0FEF                     	;# 
  2847  0000                     	;# 
  2848  0001                     	;# 
  2849  0002                     	;# 
  2850  0003                     	;# 
  2851  0004                     	;# 
  2852  0005                     	;# 
  2853  0006                     	;# 
  2854  0007                     	;# 
  2855  0008                     	;# 
  2856  0009                     	;# 
  2857  000A                     	;# 
  2858  000B                     	;# 
  2859  000C                     	;# 
  2860  000D                     	;# 
  2861  000E                     	;# 
  2862  000F                     	;# 
  2863  0010                     	;# 
  2864  0011                     	;# 
  2865  0012                     	;# 
  2866  0013                     	;# 
  2867  0014                     	;# 
  2868  0015                     	;# 
  2869  0016                     	;# 
  2870  0017                     	;# 
  2871  0018                     	;# 
  2872  0019                     	;# 
  2873  001A                     	;# 
  2874  001C                     	;# 
  2875  001C                     	;# 
  2876  001D                     	;# 
  2877  001D                     	;# 
  2878  001E                     	;# 
  2879  001F                     	;# 
  2880  008C                     	;# 
  2881  008C                     	;# 
  2882  008D                     	;# 
  2883  008E                     	;# 
  2884  008E                     	;# 
  2885  008F                     	;# 
  2886  0090                     	;# 
  2887  0090                     	;# 
  2888  0091                     	;# 
  2889  0093                     	;# 
  2890  0094                     	;# 
  2891  0095                     	;# 
  2892  0096                     	;# 
  2893  0097                     	;# 
  2894  0098                     	;# 
  2895  0099                     	;# 
  2896  009A                     	;# 
  2897  009B                     	;# 
  2898  009C                     	;# 
  2899  009D                     	;# 
  2900  009E                     	;# 
  2901  010C                     	;# 
  2902  010D                     	;# 
  2903  010E                     	;# 
  2904  010E                     	;# 
  2905  010F                     	;# 
  2906  0110                     	;# 
  2907  0110                     	;# 
  2908  0111                     	;# 
  2909  0112                     	;# 
  2910  0112                     	;# 
  2911  0113                     	;# 
  2912  0114                     	;# 
  2913  0114                     	;# 
  2914  0115                     	;# 
  2915  0116                     	;# 
  2916  0116                     	;# 
  2917  0117                     	;# 
  2918  0119                     	;# 
  2919  0119                     	;# 
  2920  0119                     	;# 
  2921  011A                     	;# 
  2922  011A                     	;# 
  2923  011A                     	;# 
  2924  011B                     	;# 
  2925  011B                     	;# 
  2926  011B                     	;# 
  2927  011B                     	;# 
  2928  011B                     	;# 
  2929  011C                     	;# 
  2930  011C                     	;# 
  2931  011C                     	;# 
  2932  011D                     	;# 
  2933  011D                     	;# 
  2934  011D                     	;# 
  2935  011E                     	;# 
  2936  011E                     	;# 
  2937  011E                     	;# 
  2938  011F                     	;# 
  2939  011F                     	;# 
  2940  011F                     	;# 
  2941  011F                     	;# 
  2942  011F                     	;# 
  2943  018C                     	;# 
  2944  018D                     	;# 
  2945  018E                     	;# 
  2946  018F                     	;# 
  2947  0190                     	;# 
  2948  0191                     	;# 
  2949  0192                     	;# 
  2950  0196                     	;# 
  2951  0197                     	;# 
  2952  0198                     	;# 
  2953  0199                     	;# 
  2954  019A                     	;# 
  2955  019B                     	;# 
  2956  019C                     	;# 
  2957  020C                     	;# 
  2958  020C                     	;# 
  2959  020D                     	;# 
  2960  020E                     	;# 
  2961  020F                     	;# 
  2962  020F                     	;# 
  2963  0210                     	;# 
  2964  0210                     	;# 
  2965  0211                     	;# 
  2966  0211                     	;# 
  2967  0212                     	;# 
  2968  0212                     	;# 
  2969  0213                     	;# 
  2970  0214                     	;# 
  2971  0215                     	;# 
  2972  0215                     	;# 
  2973  0216                     	;# 
  2974  0216                     	;# 
  2975  0217                     	;# 
  2976  0217                     	;# 
  2977  0218                     	;# 
  2978  0218                     	;# 
  2979  0219                     	;# 
  2980  021A                     	;# 
  2981  021B                     	;# 
  2982  021B                     	;# 
  2983  021C                     	;# 
  2984  021C                     	;# 
  2985  021D                     	;# 
  2986  021D                     	;# 
  2987  021E                     	;# 
  2988  021F                     	;# 
  2989  028C                     	;# 
  2990  028C                     	;# 
  2991  028D                     	;# 
  2992  028D                     	;# 
  2993  028E                     	;# 
  2994  028F                     	;# 
  2995  0290                     	;# 
  2996  0290                     	;# 
  2997  0291                     	;# 
  2998  0292                     	;# 
  2999  0292                     	;# 
  3000  0293                     	;# 
  3001  0293                     	;# 
  3002  0294                     	;# 
  3003  0295                     	;# 
  3004  0296                     	;# 
  3005  0296                     	;# 
  3006  0297                     	;# 
  3007  0298                     	;# 
  3008  0298                     	;# 
  3009  0299                     	;# 
  3010  0299                     	;# 
  3011  029A                     	;# 
  3012  029B                     	;# 
  3013  029C                     	;# 
  3014  029C                     	;# 
  3015  029D                     	;# 
  3016  030C                     	;# 
  3017  030C                     	;# 
  3018  030D                     	;# 
  3019  030E                     	;# 
  3020  030F                     	;# 
  3021  0310                     	;# 
  3022  0310                     	;# 
  3023  0311                     	;# 
  3024  0312                     	;# 
  3025  0313                     	;# 
  3026  0314                     	;# 
  3027  0314                     	;# 
  3028  0315                     	;# 
  3029  0316                     	;# 
  3030  0317                     	;# 
  3031  0318                     	;# 
  3032  0318                     	;# 
  3033  0319                     	;# 
  3034  031A                     	;# 
  3035  031B                     	;# 
  3036  031C                     	;# 
  3037  031C                     	;# 
  3038  031D                     	;# 
  3039  031E                     	;# 
  3040  031F                     	;# 
  3041  038C                     	;# 
  3042  038C                     	;# 
  3043  038D                     	;# 
  3044  038E                     	;# 
  3045  0390                     	;# 
  3046  0390                     	;# 
  3047  0391                     	;# 
  3048  0392                     	;# 
  3049  040C                     	;# 
  3050  040D                     	;# 
  3051  040E                     	;# 
  3052  040F                     	;# 
  3053  0410                     	;# 
  3054  0411                     	;# 
  3055  0416                     	;# 
  3056  0416                     	;# 
  3057  0417                     	;# 
  3058  0418                     	;# 
  3059  0418                     	;# 
  3060  0419                     	;# 
  3061  041A                     	;# 
  3062  041A                     	;# 
  3063  041B                     	;# 
  3064  041C                     	;# 
  3065  041C                     	;# 
  3066  041D                     	;# 
  3067  041E                     	;# 
  3068  041F                     	;# 
  3069  048C                     	;# 
  3070  048C                     	;# 
  3071  048D                     	;# 
  3072  048E                     	;# 
  3073  048F                     	;# 
  3074  048F                     	;# 
  3075  0490                     	;# 
  3076  0491                     	;# 
  3077  0492                     	;# 
  3078  0492                     	;# 
  3079  0493                     	;# 
  3080  0494                     	;# 
  3081  0495                     	;# 
  3082  0495                     	;# 
  3083  0496                     	;# 
  3084  0497                     	;# 
  3085  0498                     	;# 
  3086  0499                     	;# 
  3087  049A                     	;# 
  3088  049B                     	;# 
  3089  049C                     	;# 
  3090  049D                     	;# 
  3091  050C                     	;# 
  3092  050C                     	;# 
  3093  050D                     	;# 
  3094  050E                     	;# 
  3095  050F                     	;# 
  3096  050F                     	;# 
  3097  0510                     	;# 
  3098  0511                     	;# 
  3099  0512                     	;# 
  3100  0512                     	;# 
  3101  0513                     	;# 
  3102  0514                     	;# 
  3103  0515                     	;# 
  3104  0515                     	;# 
  3105  0516                     	;# 
  3106  0517                     	;# 
  3107  0518                     	;# 
  3108  0519                     	;# 
  3109  051A                     	;# 
  3110  051B                     	;# 
  3111  051C                     	;# 
  3112  051D                     	;# 
  3113  058C                     	;# 
  3114  058C                     	;# 
  3115  058D                     	;# 
  3116  058E                     	;# 
  3117  058F                     	;# 
  3118  058F                     	;# 
  3119  0590                     	;# 
  3120  0591                     	;# 
  3121  0592                     	;# 
  3122  0593                     	;# 
  3123  060C                     	;# 
  3124  060D                     	;# 
  3125  060E                     	;# 
  3126  060F                     	;# 
  3127  0610                     	;# 
  3128  0611                     	;# 
  3129  0612                     	;# 
  3130  0613                     	;# 
  3131  0614                     	;# 
  3132  0616                     	;# 
  3133  0617                     	;# 
  3134  0618                     	;# 
  3135  0619                     	;# 
  3136  061A                     	;# 
  3137  061B                     	;# 
  3138  061C                     	;# 
  3139  061D                     	;# 
  3140  061E                     	;# 
  3141  068C                     	;# 
  3142  068D                     	;# 
  3143  068E                     	;# 
  3144  068F                     	;# 
  3145  0690                     	;# 
  3146  0691                     	;# 
  3147  0692                     	;# 
  3148  0693                     	;# 
  3149  0694                     	;# 
  3150  070C                     	;# 
  3151  070D                     	;# 
  3152  070E                     	;# 
  3153  070F                     	;# 
  3154  0710                     	;# 
  3155  0711                     	;# 
  3156  0712                     	;# 
  3157  0713                     	;# 
  3158  0714                     	;# 
  3159  0716                     	;# 
  3160  0717                     	;# 
  3161  0718                     	;# 
  3162  0719                     	;# 
  3163  071A                     	;# 
  3164  071B                     	;# 
  3165  071C                     	;# 
  3166  071D                     	;# 
  3167  071E                     	;# 
  3168  0796                     	;# 
  3169  0797                     	;# 
  3170  0798                     	;# 
  3171  0799                     	;# 
  3172  079A                     	;# 
  3173  079B                     	;# 
  3174  080C                     	;# 
  3175  080D                     	;# 
  3176  080E                     	;# 
  3177  080F                     	;# 
  3178  0810                     	;# 
  3179  0811                     	;# 
  3180  0812                     	;# 
  3181  0813                     	;# 
  3182  0814                     	;# 
  3183  081A                     	;# 
  3184  081B                     	;# 
  3185  081C                     	;# 
  3186  081D                     	;# 
  3187  081E                     	;# 
  3188  081F                     	;# 
  3189  088C                     	;# 
  3190  088D                     	;# 
  3191  088E                     	;# 
  3192  088F                     	;# 
  3193  0890                     	;# 
  3194  0891                     	;# 
  3195  0892                     	;# 
  3196  0893                     	;# 
  3197  0895                     	;# 
  3198  0896                     	;# 
  3199  0897                     	;# 
  3200  0898                     	;# 
  3201  0899                     	;# 
  3202  089A                     	;# 
  3203  089B                     	;# 
  3204  090C                     	;# 
  3205  090E                     	;# 
  3206  090F                     	;# 
  3207  091F                     	;# 
  3208  091F                     	;# 
  3209  098F                     	;# 
  3210  098F                     	;# 
  3211  0990                     	;# 
  3212  0991                     	;# 
  3213  0992                     	;# 
  3214  0993                     	;# 
  3215  0994                     	;# 
  3216  0995                     	;# 
  3217  0996                     	;# 
  3218  0997                     	;# 
  3219  0E0F                     	;# 
  3220  0E10                     	;# 
  3221  0E11                     	;# 
  3222  0E12                     	;# 
  3223  0E13                     	;# 
  3224  0E14                     	;# 
  3225  0E15                     	;# 
  3226  0E16                     	;# 
  3227  0E17                     	;# 
  3228  0E18                     	;# 
  3229  0E19                     	;# 
  3230  0E1A                     	;# 
  3231  0E1B                     	;# 
  3232  0E1C                     	;# 
  3233  0E1D                     	;# 
  3234  0E1E                     	;# 
  3235  0E1F                     	;# 
  3236  0E20                     	;# 
  3237  0E21                     	;# 
  3238  0E22                     	;# 
  3239  0E23                     	;# 
  3240  0E24                     	;# 
  3241  0E25                     	;# 
  3242  0E26                     	;# 
  3243  0E27                     	;# 
  3244  0E28                     	;# 
  3245  0E29                     	;# 
  3246  0E2A                     	;# 
  3247  0E2B                     	;# 
  3248  0E2C                     	;# 
  3249  0E2D                     	;# 
  3250  0E2E                     	;# 
  3251  0E2F                     	;# 
  3252  0E30                     	;# 
  3253  0E31                     	;# 
  3254  0E32                     	;# 
  3255  0E33                     	;# 
  3256  0E34                     	;# 
  3257  0E35                     	;# 
  3258  0E36                     	;# 
  3259  0E37                     	;# 
  3260  0E8F                     	;# 
  3261  0E90                     	;# 
  3262  0E91                     	;# 
  3263  0E92                     	;# 
  3264  0E93                     	;# 
  3265  0E94                     	;# 
  3266  0E95                     	;# 
  3267  0E96                     	;# 
  3268  0E97                     	;# 
  3269  0E9C                     	;# 
  3270  0E9D                     	;# 
  3271  0E9E                     	;# 
  3272  0EA1                     	;# 
  3273  0EA2                     	;# 
  3274  0EA3                     	;# 
  3275  0EA4                     	;# 
  3276  0EA5                     	;# 
  3277  0EA9                     	;# 
  3278  0EAA                     	;# 
  3279  0EAB                     	;# 
  3280  0EAC                     	;# 
  3281  0EB1                     	;# 
  3282  0EB2                     	;# 
  3283  0EB3                     	;# 
  3284  0EB8                     	;# 
  3285  0EB9                     	;# 
  3286  0EBA                     	;# 
  3287  0EBB                     	;# 
  3288  0EBC                     	;# 
  3289  0EBD                     	;# 
  3290  0EBE                     	;# 
  3291  0EC3                     	;# 
  3292  0EC5                     	;# 
  3293  0EC6                     	;# 
  3294  0EC7                     	;# 
  3295  0EC8                     	;# 
  3296  0EC9                     	;# 
  3297  0ECA                     	;# 
  3298  0ECB                     	;# 
  3299  0ECC                     	;# 
  3300  0F10                     	;# 
  3301  0F11                     	;# 
  3302  0F12                     	;# 
  3303  0F13                     	;# 
  3304  0F14                     	;# 
  3305  0F15                     	;# 
  3306  0F16                     	;# 
  3307  0F17                     	;# 
  3308  0F18                     	;# 
  3309  0F19                     	;# 
  3310  0F1A                     	;# 
  3311  0F1B                     	;# 
  3312  0F1C                     	;# 
  3313  0F1D                     	;# 
  3314  0F1E                     	;# 
  3315  0F1F                     	;# 
  3316  0F20                     	;# 
  3317  0F21                     	;# 
  3318  0F22                     	;# 
  3319  0F23                     	;# 
  3320  0F24                     	;# 
  3321  0F25                     	;# 
  3322  0F26                     	;# 
  3323  0F27                     	;# 
  3324  0F28                     	;# 
  3325  0F29                     	;# 
  3326  0F2A                     	;# 
  3327  0F2B                     	;# 
  3328  0F2C                     	;# 
  3329  0F2D                     	;# 
  3330  0F2E                     	;# 
  3331  0F2F                     	;# 
  3332  0F30                     	;# 
  3333  0F31                     	;# 
  3334  0F32                     	;# 
  3335  0F38                     	;# 
  3336  0F39                     	;# 
  3337  0F3A                     	;# 
  3338  0F3B                     	;# 
  3339  0F3C                     	;# 
  3340  0F3D                     	;# 
  3341  0F3E                     	;# 
  3342  0F3F                     	;# 
  3343  0F40                     	;# 
  3344  0F41                     	;# 
  3345  0F43                     	;# 
  3346  0F44                     	;# 
  3347  0F45                     	;# 
  3348  0F46                     	;# 
  3349  0F47                     	;# 
  3350  0F48                     	;# 
  3351  0F49                     	;# 
  3352  0F4A                     	;# 
  3353  0F4B                     	;# 
  3354  0F4C                     	;# 
  3355  0F4E                     	;# 
  3356  0F4F                     	;# 
  3357  0F50                     	;# 
  3358  0F51                     	;# 
  3359  0F52                     	;# 
  3360  0F53                     	;# 
  3361  0F54                     	;# 
  3362  0F55                     	;# 
  3363  0F56                     	;# 
  3364  0F57                     	;# 
  3365  0F59                     	;# 
  3366  0F5A                     	;# 
  3367  0F5B                     	;# 
  3368  0F5C                     	;# 
  3369  0F5D                     	;# 
  3370  0F61                     	;# 
  3371  0F62                     	;# 
  3372  0F64                     	;# 
  3373  0F65                     	;# 
  3374  0F66                     	;# 
  3375  0F67                     	;# 
  3376  0F68                     	;# 
  3377  0F69                     	;# 
  3378  0F6A                     	;# 
  3379  0F6B                     	;# 
  3380  0F6C                     	;# 
  3381  0F6D                     	;# 
  3382  0FE4                     	;# 
  3383  0FE5                     	;# 
  3384  0FE6                     	;# 
  3385  0FE7                     	;# 
  3386  0FE8                     	;# 
  3387  0FE9                     	;# 
  3388  0FEA                     	;# 
  3389  0FEB                     	;# 
  3390  0FED                     	;# 
  3391  0FEE                     	;# 
  3392  0FEF                     	;# 
  3393  0000                     	;# 
  3394  0001                     	;# 
  3395  0002                     	;# 
  3396  0003                     	;# 
  3397  0004                     	;# 
  3398  0005                     	;# 
  3399  0006                     	;# 
  3400  0007                     	;# 
  3401  0008                     	;# 
  3402  0009                     	;# 
  3403  000A                     	;# 
  3404  000B                     	;# 
  3405  000C                     	;# 
  3406  000D                     	;# 
  3407  000E                     	;# 
  3408  000F                     	;# 
  3409  0010                     	;# 
  3410  0011                     	;# 
  3411  0012                     	;# 
  3412  0013                     	;# 
  3413  0014                     	;# 
  3414  0015                     	;# 
  3415  0016                     	;# 
  3416  0017                     	;# 
  3417  0018                     	;# 
  3418  0019                     	;# 
  3419  001A                     	;# 
  3420  001C                     	;# 
  3421  001C                     	;# 
  3422  001D                     	;# 
  3423  001D                     	;# 
  3424  001E                     	;# 
  3425  001F                     	;# 
  3426  008C                     	;# 
  3427  008C                     	;# 
  3428  008D                     	;# 
  3429  008E                     	;# 
  3430  008E                     	;# 
  3431  008F                     	;# 
  3432  0090                     	;# 
  3433  0090                     	;# 
  3434  0091                     	;# 
  3435  0093                     	;# 
  3436  0094                     	;# 
  3437  0095                     	;# 
  3438  0096                     	;# 
  3439  0097                     	;# 
  3440  0098                     	;# 
  3441  0099                     	;# 
  3442  009A                     	;# 
  3443  009B                     	;# 
  3444  009C                     	;# 
  3445  009D                     	;# 
  3446  009E                     	;# 
  3447  010C                     	;# 
  3448  010D                     	;# 
  3449  010E                     	;# 
  3450  010E                     	;# 
  3451  010F                     	;# 
  3452  0110                     	;# 
  3453  0110                     	;# 
  3454  0111                     	;# 
  3455  0112                     	;# 
  3456  0112                     	;# 
  3457  0113                     	;# 
  3458  0114                     	;# 
  3459  0114                     	;# 
  3460  0115                     	;# 
  3461  0116                     	;# 
  3462  0116                     	;# 
  3463  0117                     	;# 
  3464  0119                     	;# 
  3465  0119                     	;# 
  3466  0119                     	;# 
  3467  011A                     	;# 
  3468  011A                     	;# 
  3469  011A                     	;# 
  3470  011B                     	;# 
  3471  011B                     	;# 
  3472  011B                     	;# 
  3473  011B                     	;# 
  3474  011B                     	;# 
  3475  011C                     	;# 
  3476  011C                     	;# 
  3477  011C                     	;# 
  3478  011D                     	;# 
  3479  011D                     	;# 
  3480  011D                     	;# 
  3481  011E                     	;# 
  3482  011E                     	;# 
  3483  011E                     	;# 
  3484  011F                     	;# 
  3485  011F                     	;# 
  3486  011F                     	;# 
  3487  011F                     	;# 
  3488  011F                     	;# 
  3489  018C                     	;# 
  3490  018D                     	;# 
  3491  018E                     	;# 
  3492  018F                     	;# 
  3493  0190                     	;# 
  3494  0191                     	;# 
  3495  0192                     	;# 
  3496  0196                     	;# 
  3497  0197                     	;# 
  3498  0198                     	;# 
  3499  0199                     	;# 
  3500  019A                     	;# 
  3501  019B                     	;# 
  3502  019C                     	;# 
  3503  020C                     	;# 
  3504  020C                     	;# 
  3505  020D                     	;# 
  3506  020E                     	;# 
  3507  020F                     	;# 
  3508  020F                     	;# 
  3509  0210                     	;# 
  3510  0210                     	;# 
  3511  0211                     	;# 
  3512  0211                     	;# 
  3513  0212                     	;# 
  3514  0212                     	;# 
  3515  0213                     	;# 
  3516  0214                     	;# 
  3517  0215                     	;# 
  3518  0215                     	;# 
  3519  0216                     	;# 
  3520  0216                     	;# 
  3521  0217                     	;# 
  3522  0217                     	;# 
  3523  0218                     	;# 
  3524  0218                     	;# 
  3525  0219                     	;# 
  3526  021A                     	;# 
  3527  021B                     	;# 
  3528  021B                     	;# 
  3529  021C                     	;# 
  3530  021C                     	;# 
  3531  021D                     	;# 
  3532  021D                     	;# 
  3533  021E                     	;# 
  3534  021F                     	;# 
  3535  028C                     	;# 
  3536  028C                     	;# 
  3537  028D                     	;# 
  3538  028D                     	;# 
  3539  028E                     	;# 
  3540  028F                     	;# 
  3541  0290                     	;# 
  3542  0290                     	;# 
  3543  0291                     	;# 
  3544  0292                     	;# 
  3545  0292                     	;# 
  3546  0293                     	;# 
  3547  0293                     	;# 
  3548  0294                     	;# 
  3549  0295                     	;# 
  3550  0296                     	;# 
  3551  0296                     	;# 
  3552  0297                     	;# 
  3553  0298                     	;# 
  3554  0298                     	;# 
  3555  0299                     	;# 
  3556  0299                     	;# 
  3557  029A                     	;# 
  3558  029B                     	;# 
  3559  029C                     	;# 
  3560  029C                     	;# 
  3561  029D                     	;# 
  3562  030C                     	;# 
  3563  030C                     	;# 
  3564  030D                     	;# 
  3565  030E                     	;# 
  3566  030F                     	;# 
  3567  0310                     	;# 
  3568  0310                     	;# 
  3569  0311                     	;# 
  3570  0312                     	;# 
  3571  0313                     	;# 
  3572  0314                     	;# 
  3573  0314                     	;# 
  3574  0315                     	;# 
  3575  0316                     	;# 
  3576  0317                     	;# 
  3577  0318                     	;# 
  3578  0318                     	;# 
  3579  0319                     	;# 
  3580  031A                     	;# 
  3581  031B                     	;# 
  3582  031C                     	;# 
  3583  031C                     	;# 
  3584  031D                     	;# 
  3585  031E                     	;# 
  3586  031F                     	;# 
  3587  038C                     	;# 
  3588  038C                     	;# 
  3589  038D                     	;# 
  3590  038E                     	;# 
  3591  0390                     	;# 
  3592  0390                     	;# 
  3593  0391                     	;# 
  3594  0392                     	;# 
  3595  040C                     	;# 
  3596  040D                     	;# 
  3597  040E                     	;# 
  3598  040F                     	;# 
  3599  0410                     	;# 
  3600  0411                     	;# 
  3601  0416                     	;# 
  3602  0416                     	;# 
  3603  0417                     	;# 
  3604  0418                     	;# 
  3605  0418                     	;# 
  3606  0419                     	;# 
  3607  041A                     	;# 
  3608  041A                     	;# 
  3609  041B                     	;# 
  3610  041C                     	;# 
  3611  041C                     	;# 
  3612  041D                     	;# 
  3613  041E                     	;# 
  3614  041F                     	;# 
  3615  048C                     	;# 
  3616  048C                     	;# 
  3617  048D                     	;# 
  3618  048E                     	;# 
  3619  048F                     	;# 
  3620  048F                     	;# 
  3621  0490                     	;# 
  3622  0491                     	;# 
  3623  0492                     	;# 
  3624  0492                     	;# 
  3625  0493                     	;# 
  3626  0494                     	;# 
  3627  0495                     	;# 
  3628  0495                     	;# 
  3629  0496                     	;# 
  3630  0497                     	;# 
  3631  0498                     	;# 
  3632  0499                     	;# 
  3633  049A                     	;# 
  3634  049B                     	;# 
  3635  049C                     	;# 
  3636  049D                     	;# 
  3637  050C                     	;# 
  3638  050C                     	;# 
  3639  050D                     	;# 
  3640  050E                     	;# 
  3641  050F                     	;# 
  3642  050F                     	;# 
  3643  0510                     	;# 
  3644  0511                     	;# 
  3645  0512                     	;# 
  3646  0512                     	;# 
  3647  0513                     	;# 
  3648  0514                     	;# 
  3649  0515                     	;# 
  3650  0515                     	;# 
  3651  0516                     	;# 
  3652  0517                     	;# 
  3653  0518                     	;# 
  3654  0519                     	;# 
  3655  051A                     	;# 
  3656  051B                     	;# 
  3657  051C                     	;# 
  3658  051D                     	;# 
  3659  058C                     	;# 
  3660  058C                     	;# 
  3661  058D                     	;# 
  3662  058E                     	;# 
  3663  058F                     	;# 
  3664  058F                     	;# 
  3665  0590                     	;# 
  3666  0591                     	;# 
  3667  0592                     	;# 
  3668  0593                     	;# 
  3669  060C                     	;# 
  3670  060D                     	;# 
  3671  060E                     	;# 
  3672  060F                     	;# 
  3673  0610                     	;# 
  3674  0611                     	;# 
  3675  0612                     	;# 
  3676  0613                     	;# 
  3677  0614                     	;# 
  3678  0616                     	;# 
  3679  0617                     	;# 
  3680  0618                     	;# 
  3681  0619                     	;# 
  3682  061A                     	;# 
  3683  061B                     	;# 
  3684  061C                     	;# 
  3685  061D                     	;# 
  3686  061E                     	;# 
  3687  068C                     	;# 
  3688  068D                     	;# 
  3689  068E                     	;# 
  3690  068F                     	;# 
  3691  0690                     	;# 
  3692  0691                     	;# 
  3693  0692                     	;# 
  3694  0693                     	;# 
  3695  0694                     	;# 
  3696  070C                     	;# 
  3697  070D                     	;# 
  3698  070E                     	;# 
  3699  070F                     	;# 
  3700  0710                     	;# 
  3701  0711                     	;# 
  3702  0712                     	;# 
  3703  0713                     	;# 
  3704  0714                     	;# 
  3705  0716                     	;# 
  3706  0717                     	;# 
  3707  0718                     	;# 
  3708  0719                     	;# 
  3709  071A                     	;# 
  3710  071B                     	;# 
  3711  071C                     	;# 
  3712  071D                     	;# 
  3713  071E                     	;# 
  3714  0796                     	;# 
  3715  0797                     	;# 
  3716  0798                     	;# 
  3717  0799                     	;# 
  3718  079A                     	;# 
  3719  079B                     	;# 
  3720  080C                     	;# 
  3721  080D                     	;# 
  3722  080E                     	;# 
  3723  080F                     	;# 
  3724  0810                     	;# 
  3725  0811                     	;# 
  3726  0812                     	;# 
  3727  0813                     	;# 
  3728  0814                     	;# 
  3729  081A                     	;# 
  3730  081B                     	;# 
  3731  081C                     	;# 
  3732  081D                     	;# 
  3733  081E                     	;# 
  3734  081F                     	;# 
  3735  088C                     	;# 
  3736  088D                     	;# 
  3737  088E                     	;# 
  3738  088F                     	;# 
  3739  0890                     	;# 
  3740  0891                     	;# 
  3741  0892                     	;# 
  3742  0893                     	;# 
  3743  0895                     	;# 
  3744  0896                     	;# 
  3745  0897                     	;# 
  3746  0898                     	;# 
  3747  0899                     	;# 
  3748  089A                     	;# 
  3749  089B                     	;# 
  3750  090C                     	;# 
  3751  090E                     	;# 
  3752  090F                     	;# 
  3753  091F                     	;# 
  3754  091F                     	;# 
  3755  098F                     	;# 
  3756  098F                     	;# 
  3757  0990                     	;# 
  3758  0991                     	;# 
  3759  0992                     	;# 
  3760  0993                     	;# 
  3761  0994                     	;# 
  3762  0995                     	;# 
  3763  0996                     	;# 
  3764  0997                     	;# 
  3765  0E0F                     	;# 
  3766  0E10                     	;# 
  3767  0E11                     	;# 
  3768  0E12                     	;# 
  3769  0E13                     	;# 
  3770  0E14                     	;# 
  3771  0E15                     	;# 
  3772  0E16                     	;# 
  3773  0E17                     	;# 
  3774  0E18                     	;# 
  3775  0E19                     	;# 
  3776  0E1A                     	;# 
  3777  0E1B                     	;# 
  3778  0E1C                     	;# 
  3779  0E1D                     	;# 
  3780  0E1E                     	;# 
  3781  0E1F                     	;# 
  3782  0E20                     	;# 
  3783  0E21                     	;# 
  3784  0E22                     	;# 
  3785  0E23                     	;# 
  3786  0E24                     	;# 
  3787  0E25                     	;# 
  3788  0E26                     	;# 
  3789  0E27                     	;# 
  3790  0E28                     	;# 
  3791  0E29                     	;# 
  3792  0E2A                     	;# 
  3793  0E2B                     	;# 
  3794  0E2C                     	;# 
  3795  0E2D                     	;# 
  3796  0E2E                     	;# 
  3797  0E2F                     	;# 
  3798  0E30                     	;# 
  3799  0E31                     	;# 
  3800  0E32                     	;# 
  3801  0E33                     	;# 
  3802  0E34                     	;# 
  3803  0E35                     	;# 
  3804  0E36                     	;# 
  3805  0E37                     	;# 
  3806  0E8F                     	;# 
  3807  0E90                     	;# 
  3808  0E91                     	;# 
  3809  0E92                     	;# 
  3810  0E93                     	;# 
  3811  0E94                     	;# 
  3812  0E95                     	;# 
  3813  0E96                     	;# 
  3814  0E97                     	;# 
  3815  0E9C                     	;# 
  3816  0E9D                     	;# 
  3817  0E9E                     	;# 
  3818  0EA1                     	;# 
  3819  0EA2                     	;# 
  3820  0EA3                     	;# 
  3821  0EA4                     	;# 
  3822  0EA5                     	;# 
  3823  0EA9                     	;# 
  3824  0EAA                     	;# 
  3825  0EAB                     	;# 
  3826  0EAC                     	;# 
  3827  0EB1                     	;# 
  3828  0EB2                     	;# 
  3829  0EB3                     	;# 
  3830  0EB8                     	;# 
  3831  0EB9                     	;# 
  3832  0EBA                     	;# 
  3833  0EBB                     	;# 
  3834  0EBC                     	;# 
  3835  0EBD                     	;# 
  3836  0EBE                     	;# 
  3837  0EC3                     	;# 
  3838  0EC5                     	;# 
  3839  0EC6                     	;# 
  3840  0EC7                     	;# 
  3841  0EC8                     	;# 
  3842  0EC9                     	;# 
  3843  0ECA                     	;# 
  3844  0ECB                     	;# 
  3845  0ECC                     	;# 
  3846  0F10                     	;# 
  3847  0F11                     	;# 
  3848  0F12                     	;# 
  3849  0F13                     	;# 
  3850  0F14                     	;# 
  3851  0F15                     	;# 
  3852  0F16                     	;# 
  3853  0F17                     	;# 
  3854  0F18                     	;# 
  3855  0F19                     	;# 
  3856  0F1A                     	;# 
  3857  0F1B                     	;# 
  3858  0F1C                     	;# 
  3859  0F1D                     	;# 
  3860  0F1E                     	;# 
  3861  0F1F                     	;# 
  3862  0F20                     	;# 
  3863  0F21                     	;# 
  3864  0F22                     	;# 
  3865  0F23                     	;# 
  3866  0F24                     	;# 
  3867  0F25                     	;# 
  3868  0F26                     	;# 
  3869  0F27                     	;# 
  3870  0F28                     	;# 
  3871  0F29                     	;# 
  3872  0F2A                     	;# 
  3873  0F2B                     	;# 
  3874  0F2C                     	;# 
  3875  0F2D                     	;# 
  3876  0F2E                     	;# 
  3877  0F2F                     	;# 
  3878  0F30                     	;# 
  3879  0F31                     	;# 
  3880  0F32                     	;# 
  3881  0F38                     	;# 
  3882  0F39                     	;# 
  3883  0F3A                     	;# 
  3884  0F3B                     	;# 
  3885  0F3C                     	;# 
  3886  0F3D                     	;# 
  3887  0F3E                     	;# 
  3888  0F3F                     	;# 
  3889  0F40                     	;# 
  3890  0F41                     	;# 
  3891  0F43                     	;# 
  3892  0F44                     	;# 
  3893  0F45                     	;# 
  3894  0F46                     	;# 
  3895  0F47                     	;# 
  3896  0F48                     	;# 
  3897  0F49                     	;# 
  3898  0F4A                     	;# 
  3899  0F4B                     	;# 
  3900  0F4C                     	;# 
  3901  0F4E                     	;# 
  3902  0F4F                     	;# 
  3903  0F50                     	;# 
  3904  0F51                     	;# 
  3905  0F52                     	;# 
  3906  0F53                     	;# 
  3907  0F54                     	;# 
  3908  0F55                     	;# 
  3909  0F56                     	;# 
  3910  0F57                     	;# 
  3911  0F59                     	;# 
  3912  0F5A                     	;# 
  3913  0F5B                     	;# 
  3914  0F5C                     	;# 
  3915  0F5D                     	;# 
  3916  0F61                     	;# 
  3917  0F62                     	;# 
  3918  0F64                     	;# 
  3919  0F65                     	;# 
  3920  0F66                     	;# 
  3921  0F67                     	;# 
  3922  0F68                     	;# 
  3923  0F69                     	;# 
  3924  0F6A                     	;# 
  3925  0F6B                     	;# 
  3926  0F6C                     	;# 
  3927  0F6D                     	;# 
  3928  0FE4                     	;# 
  3929  0FE5                     	;# 
  3930  0FE6                     	;# 
  3931  0FE7                     	;# 
  3932  0FE8                     	;# 
  3933  0FE9                     	;# 
  3934  0FEA                     	;# 
  3935  0FEB                     	;# 
  3936  0FED                     	;# 
  3937  0FEE                     	;# 
  3938  0FEF                     	;# 
  3939  0000                     	;# 
  3940  0001                     	;# 
  3941  0002                     	;# 
  3942  0003                     	;# 
  3943  0004                     	;# 
  3944  0005                     	;# 
  3945  0006                     	;# 
  3946  0007                     	;# 
  3947  0008                     	;# 
  3948  0009                     	;# 
  3949  000A                     	;# 
  3950  000B                     	;# 
  3951  000C                     	;# 
  3952  000D                     	;# 
  3953  000E                     	;# 
  3954  000F                     	;# 
  3955  0010                     	;# 
  3956  0011                     	;# 
  3957  0012                     	;# 
  3958  0013                     	;# 
  3959  0014                     	;# 
  3960  0015                     	;# 
  3961  0016                     	;# 
  3962  0017                     	;# 
  3963  0018                     	;# 
  3964  0019                     	;# 
  3965  001A                     	;# 
  3966  001C                     	;# 
  3967  001C                     	;# 
  3968  001D                     	;# 
  3969  001D                     	;# 
  3970  001E                     	;# 
  3971  001F                     	;# 
  3972  008C                     	;# 
  3973  008C                     	;# 
  3974  008D                     	;# 
  3975  008E                     	;# 
  3976  008E                     	;# 
  3977  008F                     	;# 
  3978  0090                     	;# 
  3979  0090                     	;# 
  3980  0091                     	;# 
  3981  0093                     	;# 
  3982  0094                     	;# 
  3983  0095                     	;# 
  3984  0096                     	;# 
  3985  0097                     	;# 
  3986  0098                     	;# 
  3987  0099                     	;# 
  3988  009A                     	;# 
  3989  009B                     	;# 
  3990  009C                     	;# 
  3991  009D                     	;# 
  3992  009E                     	;# 
  3993  010C                     	;# 
  3994  010D                     	;# 
  3995  010E                     	;# 
  3996  010E                     	;# 
  3997  010F                     	;# 
  3998  0110                     	;# 
  3999  0110                     	;# 
  4000  0111                     	;# 
  4001  0112                     	;# 
  4002  0112                     	;# 
  4003  0113                     	;# 
  4004  0114                     	;# 
  4005  0114                     	;# 
  4006  0115                     	;# 
  4007  0116                     	;# 
  4008  0116                     	;# 
  4009  0117                     	;# 
  4010  0119                     	;# 
  4011  0119                     	;# 
  4012  0119                     	;# 
  4013  011A                     	;# 
  4014  011A                     	;# 
  4015  011A                     	;# 
  4016  011B                     	;# 
  4017  011B                     	;# 
  4018  011B                     	;# 
  4019  011B                     	;# 
  4020  011B                     	;# 
  4021  011C                     	;# 
  4022  011C                     	;# 
  4023  011C                     	;# 
  4024  011D                     	;# 
  4025  011D                     	;# 
  4026  011D                     	;# 
  4027  011E                     	;# 
  4028  011E                     	;# 
  4029  011E                     	;# 
  4030  011F                     	;# 
  4031  011F                     	;# 
  4032  011F                     	;# 
  4033  011F                     	;# 
  4034  011F                     	;# 
  4035  018C                     	;# 
  4036  018D                     	;# 
  4037  018E                     	;# 
  4038  018F                     	;# 
  4039  0190                     	;# 
  4040  0191                     	;# 
  4041  0192                     	;# 
  4042  0196                     	;# 
  4043  0197                     	;# 
  4044  0198                     	;# 
  4045  0199                     	;# 
  4046  019A                     	;# 
  4047  019B                     	;# 
  4048  019C                     	;# 
  4049  020C                     	;# 
  4050  020C                     	;# 
  4051  020D                     	;# 
  4052  020E                     	;# 
  4053  020F                     	;# 
  4054  020F                     	;# 
  4055  0210                     	;# 
  4056  0210                     	;# 
  4057  0211                     	;# 
  4058  0211                     	;# 
  4059  0212                     	;# 
  4060  0212                     	;# 
  4061  0213                     	;# 
  4062  0214                     	;# 
  4063  0215                     	;# 
  4064  0215                     	;# 
  4065  0216                     	;# 
  4066  0216                     	;# 
  4067  0217                     	;# 
  4068  0217                     	;# 
  4069  0218                     	;# 
  4070  0218                     	;# 
  4071  0219                     	;# 
  4072  021A                     	;# 
  4073  021B                     	;# 
  4074  021B                     	;# 
  4075  021C                     	;# 
  4076  021C                     	;# 
  4077  021D                     	;# 
  4078  021D                     	;# 
  4079  021E                     	;# 
  4080  021F                     	;# 
  4081  028C                     	;# 
  4082  028C                     	;# 
  4083  028D                     	;# 
  4084  028D                     	;# 
  4085  028E                     	;# 
  4086  028F                     	;# 
  4087  0290                     	;# 
  4088  0290                     	;# 
  4089  0291                     	;# 
  4090  0292                     	;# 
  4091  0292                     	;# 
  4092  0293                     	;# 
  4093  0293                     	;# 
  4094  0294                     	;# 
  4095  0295                     	;# 
  4096  0296                     	;# 
  4097  0296                     	;# 
  4098  0297                     	;# 
  4099  0298                     	;# 
  4100  0298                     	;# 
  4101  0299                     	;# 
  4102  0299                     	;# 
  4103  029A                     	;# 
  4104  029B                     	;# 
  4105  029C                     	;# 
  4106  029C                     	;# 
  4107  029D                     	;# 
  4108  030C                     	;# 
  4109  030C                     	;# 
  4110  030D                     	;# 
  4111  030E                     	;# 
  4112  030F                     	;# 
  4113  0310                     	;# 
  4114  0310                     	;# 
  4115  0311                     	;# 
  4116  0312                     	;# 
  4117  0313                     	;# 
  4118  0314                     	;# 
  4119  0314                     	;# 
  4120  0315                     	;# 
  4121  0316                     	;# 
  4122  0317                     	;# 
  4123  0318                     	;# 
  4124  0318                     	;# 
  4125  0319                     	;# 
  4126  031A                     	;# 
  4127  031B                     	;# 
  4128  031C                     	;# 
  4129  031C                     	;# 
  4130  031D                     	;# 
  4131  031E                     	;# 
  4132  031F                     	;# 
  4133  038C                     	;# 
  4134  038C                     	;# 
  4135  038D                     	;# 
  4136  038E                     	;# 
  4137  0390                     	;# 
  4138  0390                     	;# 
  4139  0391                     	;# 
  4140  0392                     	;# 
  4141  040C                     	;# 
  4142  040D                     	;# 
  4143  040E                     	;# 
  4144  040F                     	;# 
  4145  0410                     	;# 
  4146  0411                     	;# 
  4147  0416                     	;# 
  4148  0416                     	;# 
  4149  0417                     	;# 
  4150  0418                     	;# 
  4151  0418                     	;# 
  4152  0419                     	;# 
  4153  041A                     	;# 
  4154  041A                     	;# 
  4155  041B                     	;# 
  4156  041C                     	;# 
  4157  041C                     	;# 
  4158  041D                     	;# 
  4159  041E                     	;# 
  4160  041F                     	;# 
  4161  048C                     	;# 
  4162  048C                     	;# 
  4163  048D                     	;# 
  4164  048E                     	;# 
  4165  048F                     	;# 
  4166  048F                     	;# 
  4167  0490                     	;# 
  4168  0491                     	;# 
  4169  0492                     	;# 
  4170  0492                     	;# 
  4171  0493                     	;# 
  4172  0494                     	;# 
  4173  0495                     	;# 
  4174  0495                     	;# 
  4175  0496                     	;# 
  4176  0497                     	;# 
  4177  0498                     	;# 
  4178  0499                     	;# 
  4179  049A                     	;# 
  4180  049B                     	;# 
  4181  049C                     	;# 
  4182  049D                     	;# 
  4183  050C                     	;# 
  4184  050C                     	;# 
  4185  050D                     	;# 
  4186  050E                     	;# 
  4187  050F                     	;# 
  4188  050F                     	;# 
  4189  0510                     	;# 
  4190  0511                     	;# 
  4191  0512                     	;# 
  4192  0512                     	;# 
  4193  0513                     	;# 
  4194  0514                     	;# 
  4195  0515                     	;# 
  4196  0515                     	;# 
  4197  0516                     	;# 
  4198  0517                     	;# 
  4199  0518                     	;# 
  4200  0519                     	;# 
  4201  051A                     	;# 
  4202  051B                     	;# 
  4203  051C                     	;# 
  4204  051D                     	;# 
  4205  058C                     	;# 
  4206  058C                     	;# 
  4207  058D                     	;# 
  4208  058E                     	;# 
  4209  058F                     	;# 
  4210  058F                     	;# 
  4211  0590                     	;# 
  4212  0591                     	;# 
  4213  0592                     	;# 
  4214  0593                     	;# 
  4215  060C                     	;# 
  4216  060D                     	;# 
  4217  060E                     	;# 
  4218  060F                     	;# 
  4219  0610                     	;# 
  4220  0611                     	;# 
  4221  0612                     	;# 
  4222  0613                     	;# 
  4223  0614                     	;# 
  4224  0616                     	;# 
  4225  0617                     	;# 
  4226  0618                     	;# 
  4227  0619                     	;# 
  4228  061A                     	;# 
  4229  061B                     	;# 
  4230  061C                     	;# 
  4231  061D                     	;# 
  4232  061E                     	;# 
  4233  068C                     	;# 
  4234  068D                     	;# 
  4235  068E                     	;# 
  4236  068F                     	;# 
  4237  0690                     	;# 
  4238  0691                     	;# 
  4239  0692                     	;# 
  4240  0693                     	;# 
  4241  0694                     	;# 
  4242  070C                     	;# 
  4243  070D                     	;# 
  4244  070E                     	;# 
  4245  070F                     	;# 
  4246  0710                     	;# 
  4247  0711                     	;# 
  4248  0712                     	;# 
  4249  0713                     	;# 
  4250  0714                     	;# 
  4251  0716                     	;# 
  4252  0717                     	;# 
  4253  0718                     	;# 
  4254  0719                     	;# 
  4255  071A                     	;# 
  4256  071B                     	;# 
  4257  071C                     	;# 
  4258  071D                     	;# 
  4259  071E                     	;# 
  4260  0796                     	;# 
  4261  0797                     	;# 
  4262  0798                     	;# 
  4263  0799                     	;# 
  4264  079A                     	;# 
  4265  079B                     	;# 
  4266  080C                     	;# 
  4267  080D                     	;# 
  4268  080E                     	;# 
  4269  080F                     	;# 
  4270  0810                     	;# 
  4271  0811                     	;# 
  4272  0812                     	;# 
  4273  0813                     	;# 
  4274  0814                     	;# 
  4275  081A                     	;# 
  4276  081B                     	;# 
  4277  081C                     	;# 
  4278  081D                     	;# 
  4279  081E                     	;# 
  4280  081F                     	;# 
  4281  088C                     	;# 
  4282  088D                     	;# 
  4283  088E                     	;# 
  4284  088F                     	;# 
  4285  0890                     	;# 
  4286  0891                     	;# 
  4287  0892                     	;# 
  4288  0893                     	;# 
  4289  0895                     	;# 
  4290  0896                     	;# 
  4291  0897                     	;# 
  4292  0898                     	;# 
  4293  0899                     	;# 
  4294  089A                     	;# 
  4295  089B                     	;# 
  4296  090C                     	;# 
  4297  090E                     	;# 
  4298  090F                     	;# 
  4299  091F                     	;# 
  4300  091F                     	;# 
  4301  098F                     	;# 
  4302  098F                     	;# 
  4303  0990                     	;# 
  4304  0991                     	;# 
  4305  0992                     	;# 
  4306  0993                     	;# 
  4307  0994                     	;# 
  4308  0995                     	;# 
  4309  0996                     	;# 
  4310  0997                     	;# 
  4311  0E0F                     	;# 
  4312  0E10                     	;# 
  4313  0E11                     	;# 
  4314  0E12                     	;# 
  4315  0E13                     	;# 
  4316  0E14                     	;# 
  4317  0E15                     	;# 
  4318  0E16                     	;# 
  4319  0E17                     	;# 
  4320  0E18                     	;# 
  4321  0E19                     	;# 
  4322  0E1A                     	;# 
  4323  0E1B                     	;# 
  4324  0E1C                     	;# 
  4325  0E1D                     	;# 
  4326  0E1E                     	;# 
  4327  0E1F                     	;# 
  4328  0E20                     	;# 
  4329  0E21                     	;# 
  4330  0E22                     	;# 
  4331  0E23                     	;# 
  4332  0E24                     	;# 
  4333  0E25                     	;# 
  4334  0E26                     	;# 
  4335  0E27                     	;# 
  4336  0E28                     	;# 
  4337  0E29                     	;# 
  4338  0E2A                     	;# 
  4339  0E2B                     	;# 
  4340  0E2C                     	;# 
  4341  0E2D                     	;# 
  4342  0E2E                     	;# 
  4343  0E2F                     	;# 
  4344  0E30                     	;# 
  4345  0E31                     	;# 
  4346  0E32                     	;# 
  4347  0E33                     	;# 
  4348  0E34                     	;# 
  4349  0E35                     	;# 
  4350  0E36                     	;# 
  4351  0E37                     	;# 
  4352  0E8F                     	;# 
  4353  0E90                     	;# 
  4354  0E91                     	;# 
  4355  0E92                     	;# 
  4356  0E93                     	;# 
  4357  0E94                     	;# 
  4358  0E95                     	;# 
  4359  0E96                     	;# 
  4360  0E97                     	;# 
  4361  0E9C                     	;# 
  4362  0E9D                     	;# 
  4363  0E9E                     	;# 
  4364  0EA1                     	;# 
  4365  0EA2                     	;# 
  4366  0EA3                     	;# 
  4367  0EA4                     	;# 
  4368  0EA5                     	;# 
  4369  0EA9                     	;# 
  4370  0EAA                     	;# 
  4371  0EAB                     	;# 
  4372  0EAC                     	;# 
  4373  0EB1                     	;# 
  4374  0EB2                     	;# 
  4375  0EB3                     	;# 
  4376  0EB8                     	;# 
  4377  0EB9                     	;# 
  4378  0EBA                     	;# 
  4379  0EBB                     	;# 
  4380  0EBC                     	;# 
  4381  0EBD                     	;# 
  4382  0EBE                     	;# 
  4383  0EC3                     	;# 
  4384  0EC5                     	;# 
  4385  0EC6                     	;# 
  4386  0EC7                     	;# 
  4387  0EC8                     	;# 
  4388  0EC9                     	;# 
  4389  0ECA                     	;# 
  4390  0ECB                     	;# 
  4391  0ECC                     	;# 
  4392  0F10                     	;# 
  4393  0F11                     	;# 
  4394  0F12                     	;# 
  4395  0F13                     	;# 
  4396  0F14                     	;# 
  4397  0F15                     	;# 
  4398  0F16                     	;# 
  4399  0F17                     	;# 
  4400  0F18                     	;# 
  4401  0F19                     	;# 
  4402  0F1A                     	;# 
  4403  0F1B                     	;# 
  4404  0F1C                     	;# 
  4405  0F1D                     	;# 
  4406  0F1E                     	;# 
  4407  0F1F                     	;# 
  4408  0F20                     	;# 
  4409  0F21                     	;# 
  4410  0F22                     	;# 
  4411  0F23                     	;# 
  4412  0F24                     	;# 
  4413  0F25                     	;# 
  4414  0F26                     	;# 
  4415  0F27                     	;# 
  4416  0F28                     	;# 
  4417  0F29                     	;# 
  4418  0F2A                     	;# 
  4419  0F2B                     	;# 
  4420  0F2C                     	;# 
  4421  0F2D                     	;# 
  4422  0F2E                     	;# 
  4423  0F2F                     	;# 
  4424  0F30                     	;# 
  4425  0F31                     	;# 
  4426  0F32                     	;# 
  4427  0F38                     	;# 
  4428  0F39                     	;# 
  4429  0F3A                     	;# 
  4430  0F3B                     	;# 
  4431  0F3C                     	;# 
  4432  0F3D                     	;# 
  4433  0F3E                     	;# 
  4434  0F3F                     	;# 
  4435  0F40                     	;# 
  4436  0F41                     	;# 
  4437  0F43                     	;# 
  4438  0F44                     	;# 
  4439  0F45                     	;# 
  4440  0F46                     	;# 
  4441  0F47                     	;# 
  4442  0F48                     	;# 
  4443  0F49                     	;# 
  4444  0F4A                     	;# 
  4445  0F4B                     	;# 
  4446  0F4C                     	;# 
  4447  0F4E                     	;# 
  4448  0F4F                     	;# 
  4449  0F50                     	;# 
  4450  0F51                     	;# 
  4451  0F52                     	;# 
  4452  0F53                     	;# 
  4453  0F54                     	;# 
  4454  0F55                     	;# 
  4455  0F56                     	;# 
  4456  0F57                     	;# 
  4457  0F59                     	;# 
  4458  0F5A                     	;# 
  4459  0F5B                     	;# 
  4460  0F5C                     	;# 
  4461  0F5D                     	;# 
  4462  0F61                     	;# 
  4463  0F62                     	;# 
  4464  0F64                     	;# 
  4465  0F65                     	;# 
  4466  0F66                     	;# 
  4467  0F67                     	;# 
  4468  0F68                     	;# 
  4469  0F69                     	;# 
  4470  0F6A                     	;# 
  4471  0F6B                     	;# 
  4472  0F6C                     	;# 
  4473  0F6D                     	;# 
  4474  0FE4                     	;# 
  4475  0FE5                     	;# 
  4476  0FE6                     	;# 
  4477  0FE7                     	;# 
  4478  0FE8                     	;# 
  4479  0FE9                     	;# 
  4480  0FEA                     	;# 
  4481  0FEB                     	;# 
  4482  0FED                     	;# 
  4483  0FEE                     	;# 
  4484  0FEF                     	;# 
  4485  0000                     	;# 
  4486  0001                     	;# 
  4487  0002                     	;# 
  4488  0003                     	;# 
  4489  0004                     	;# 
  4490  0005                     	;# 
  4491  0006                     	;# 
  4492  0007                     	;# 
  4493  0008                     	;# 
  4494  0009                     	;# 
  4495  000A                     	;# 
  4496  000B                     	;# 
  4497  000C                     	;# 
  4498  000D                     	;# 
  4499  000E                     	;# 
  4500  000F                     	;# 
  4501  0010                     	;# 
  4502  0011                     	;# 
  4503  0012                     	;# 
  4504  0013                     	;# 
  4505  0014                     	;# 
  4506  0015                     	;# 
  4507  0016                     	;# 
  4508  0017                     	;# 
  4509  0018                     	;# 
  4510  0019                     	;# 
  4511  001A                     	;# 
  4512  001C                     	;# 
  4513  001C                     	;# 
  4514  001D                     	;# 
  4515  001D                     	;# 
  4516  001E                     	;# 
  4517  001F                     	;# 
  4518  008C                     	;# 
  4519  008C                     	;# 
  4520  008D                     	;# 
  4521  008E                     	;# 
  4522  008E                     	;# 
  4523  008F                     	;# 
  4524  0090                     	;# 
  4525  0090                     	;# 
  4526  0091                     	;# 
  4527  0093                     	;# 
  4528  0094                     	;# 
  4529  0095                     	;# 
  4530  0096                     	;# 
  4531  0097                     	;# 
  4532  0098                     	;# 
  4533  0099                     	;# 
  4534  009A                     	;# 
  4535  009B                     	;# 
  4536  009C                     	;# 
  4537  009D                     	;# 
  4538  009E                     	;# 
  4539  010C                     	;# 
  4540  010D                     	;# 
  4541  010E                     	;# 
  4542  010E                     	;# 
  4543  010F                     	;# 
  4544  0110                     	;# 
  4545  0110                     	;# 
  4546  0111                     	;# 
  4547  0112                     	;# 
  4548  0112                     	;# 
  4549  0113                     	;# 
  4550  0114                     	;# 
  4551  0114                     	;# 
  4552  0115                     	;# 
  4553  0116                     	;# 
  4554  0116                     	;# 
  4555  0117                     	;# 
  4556  0119                     	;# 
  4557  0119                     	;# 
  4558  0119                     	;# 
  4559  011A                     	;# 
  4560  011A                     	;# 
  4561  011A                     	;# 
  4562  011B                     	;# 
  4563  011B                     	;# 
  4564  011B                     	;# 
  4565  011B                     	;# 
  4566  011B                     	;# 
  4567  011C                     	;# 
  4568  011C                     	;# 
  4569  011C                     	;# 
  4570  011D                     	;# 
  4571  011D                     	;# 
  4572  011D                     	;# 
  4573  011E                     	;# 
  4574  011E                     	;# 
  4575  011E                     	;# 
  4576  011F                     	;# 
  4577  011F                     	;# 
  4578  011F                     	;# 
  4579  011F                     	;# 
  4580  011F                     	;# 
  4581  018C                     	;# 
  4582  018D                     	;# 
  4583  018E                     	;# 
  4584  018F                     	;# 
  4585  0190                     	;# 
  4586  0191                     	;# 
  4587  0192                     	;# 
  4588  0196                     	;# 
  4589  0197                     	;# 
  4590  0198                     	;# 
  4591  0199                     	;# 
  4592  019A                     	;# 
  4593  019B                     	;# 
  4594  019C                     	;# 
  4595  020C                     	;# 
  4596  020C                     	;# 
  4597  020D                     	;# 
  4598  020E                     	;# 
  4599  020F                     	;# 
  4600  020F                     	;# 
  4601  0210                     	;# 
  4602  0210                     	;# 
  4603  0211                     	;# 
  4604  0211                     	;# 
  4605  0212                     	;# 
  4606  0212                     	;# 
  4607  0213                     	;# 
  4608  0214                     	;# 
  4609  0215                     	;# 
  4610  0215                     	;# 
  4611  0216                     	;# 
  4612  0216                     	;# 
  4613  0217                     	;# 
  4614  0217                     	;# 
  4615  0218                     	;# 
  4616  0218                     	;# 
  4617  0219                     	;# 
  4618  021A                     	;# 
  4619  021B                     	;# 
  4620  021B                     	;# 
  4621  021C                     	;# 
  4622  021C                     	;# 
  4623  021D                     	;# 
  4624  021D                     	;# 
  4625  021E                     	;# 
  4626  021F                     	;# 
  4627  028C                     	;# 
  4628  028C                     	;# 
  4629  028D                     	;# 
  4630  028D                     	;# 
  4631  028E                     	;# 
  4632  028F                     	;# 
  4633  0290                     	;# 
  4634  0290                     	;# 
  4635  0291                     	;# 
  4636  0292                     	;# 
  4637  0292                     	;# 
  4638  0293                     	;# 
  4639  0293                     	;# 
  4640  0294                     	;# 
  4641  0295                     	;# 
  4642  0296                     	;# 
  4643  0296                     	;# 
  4644  0297                     	;# 
  4645  0298                     	;# 
  4646  0298                     	;# 
  4647  0299                     	;# 
  4648  0299                     	;# 
  4649  029A                     	;# 
  4650  029B                     	;# 
  4651  029C                     	;# 
  4652  029C                     	;# 
  4653  029D                     	;# 
  4654  030C                     	;# 
  4655  030C                     	;# 
  4656  030D                     	;# 
  4657  030E                     	;# 
  4658  030F                     	;# 
  4659  0310                     	;# 
  4660  0310                     	;# 
  4661  0311                     	;# 
  4662  0312                     	;# 
  4663  0313                     	;# 
  4664  0314                     	;# 
  4665  0314                     	;# 
  4666  0315                     	;# 
  4667  0316                     	;# 
  4668  0317                     	;# 
  4669  0318                     	;# 
  4670  0318                     	;# 
  4671  0319                     	;# 
  4672  031A                     	;# 
  4673  031B                     	;# 
  4674  031C                     	;# 
  4675  031C                     	;# 
  4676  031D                     	;# 
  4677  031E                     	;# 
  4678  031F                     	;# 
  4679  038C                     	;# 
  4680  038C                     	;# 
  4681  038D                     	;# 
  4682  038E                     	;# 
  4683  0390                     	;# 
  4684  0390                     	;# 
  4685  0391                     	;# 
  4686  0392                     	;# 
  4687  040C                     	;# 
  4688  040D                     	;# 
  4689  040E                     	;# 
  4690  040F                     	;# 
  4691  0410                     	;# 
  4692  0411                     	;# 
  4693  0416                     	;# 
  4694  0416                     	;# 
  4695  0417                     	;# 
  4696  0418                     	;# 
  4697  0418                     	;# 
  4698  0419                     	;# 
  4699  041A                     	;# 
  4700  041A                     	;# 
  4701  041B                     	;# 
  4702  041C                     	;# 
  4703  041C                     	;# 
  4704  041D                     	;# 
  4705  041E                     	;# 
  4706  041F                     	;# 
  4707  048C                     	;# 
  4708  048C                     	;# 
  4709  048D                     	;# 
  4710  048E                     	;# 
  4711  048F                     	;# 
  4712  048F                     	;# 
  4713  0490                     	;# 
  4714  0491                     	;# 
  4715  0492                     	;# 
  4716  0492                     	;# 
  4717  0493                     	;# 
  4718  0494                     	;# 
  4719  0495                     	;# 
  4720  0495                     	;# 
  4721  0496                     	;# 
  4722  0497                     	;# 
  4723  0498                     	;# 
  4724  0499                     	;# 
  4725  049A                     	;# 
  4726  049B                     	;# 
  4727  049C                     	;# 
  4728  049D                     	;# 
  4729  050C                     	;# 
  4730  050C                     	;# 
  4731  050D                     	;# 
  4732  050E                     	;# 
  4733  050F                     	;# 
  4734  050F                     	;# 
  4735  0510                     	;# 
  4736  0511                     	;# 
  4737  0512                     	;# 
  4738  0512                     	;# 
  4739  0513                     	;# 
  4740  0514                     	;# 
  4741  0515                     	;# 
  4742  0515                     	;# 
  4743  0516                     	;# 
  4744  0517                     	;# 
  4745  0518                     	;# 
  4746  0519                     	;# 
  4747  051A                     	;# 
  4748  051B                     	;# 
  4749  051C                     	;# 
  4750  051D                     	;# 
  4751  058C                     	;# 
  4752  058C                     	;# 
  4753  058D                     	;# 
  4754  058E                     	;# 
  4755  058F                     	;# 
  4756  058F                     	;# 
  4757  0590                     	;# 
  4758  0591                     	;# 
  4759  0592                     	;# 
  4760  0593                     	;# 
  4761  060C                     	;# 
  4762  060D                     	;# 
  4763  060E                     	;# 
  4764  060F                     	;# 
  4765  0610                     	;# 
  4766  0611                     	;# 
  4767  0612                     	;# 
  4768  0613                     	;# 
  4769  0614                     	;# 
  4770  0616                     	;# 
  4771  0617                     	;# 
  4772  0618                     	;# 
  4773  0619                     	;# 
  4774  061A                     	;# 
  4775  061B                     	;# 
  4776  061C                     	;# 
  4777  061D                     	;# 
  4778  061E                     	;# 
  4779  068C                     	;# 
  4780  068D                     	;# 
  4781  068E                     	;# 
  4782  068F                     	;# 
  4783  0690                     	;# 
  4784  0691                     	;# 
  4785  0692                     	;# 
  4786  0693                     	;# 
  4787  0694                     	;# 
  4788  070C                     	;# 
  4789  070D                     	;# 
  4790  070E                     	;# 
  4791  070F                     	;# 
  4792  0710                     	;# 
  4793  0711                     	;# 
  4794  0712                     	;# 
  4795  0713                     	;# 
  4796  0714                     	;# 
  4797  0716                     	;# 
  4798  0717                     	;# 
  4799  0718                     	;# 
  4800  0719                     	;# 
  4801  071A                     	;# 
  4802  071B                     	;# 
  4803  071C                     	;# 
  4804  071D                     	;# 
  4805  071E                     	;# 
  4806  0796                     	;# 
  4807  0797                     	;# 
  4808  0798                     	;# 
  4809  0799                     	;# 
  4810  079A                     	;# 
  4811  079B                     	;# 
  4812  080C                     	;# 
  4813  080D                     	;# 
  4814  080E                     	;# 
  4815  080F                     	;# 
  4816  0810                     	;# 
  4817  0811                     	;# 
  4818  0812                     	;# 
  4819  0813                     	;# 
  4820  0814                     	;# 
  4821  081A                     	;# 
  4822  081B                     	;# 
  4823  081C                     	;# 
  4824  081D                     	;# 
  4825  081E                     	;# 
  4826  081F                     	;# 
  4827  088C                     	;# 
  4828  088D                     	;# 
  4829  088E                     	;# 
  4830  088F                     	;# 
  4831  0890                     	;# 
  4832  0891                     	;# 
  4833  0892                     	;# 
  4834  0893                     	;# 
  4835  0895                     	;# 
  4836  0896                     	;# 
  4837  0897                     	;# 
  4838  0898                     	;# 
  4839  0899                     	;# 
  4840  089A                     	;# 
  4841  089B                     	;# 
  4842  090C                     	;# 
  4843  090E                     	;# 
  4844  090F                     	;# 
  4845  091F                     	;# 
  4846  091F                     	;# 
  4847  098F                     	;# 
  4848  098F                     	;# 
  4849  0990                     	;# 
  4850  0991                     	;# 
  4851  0992                     	;# 
  4852  0993                     	;# 
  4853  0994                     	;# 
  4854  0995                     	;# 
  4855  0996                     	;# 
  4856  0997                     	;# 
  4857  0E0F                     	;# 
  4858  0E10                     	;# 
  4859  0E11                     	;# 
  4860  0E12                     	;# 
  4861  0E13                     	;# 
  4862  0E14                     	;# 
  4863  0E15                     	;# 
  4864  0E16                     	;# 
  4865  0E17                     	;# 
  4866  0E18                     	;# 
  4867  0E19                     	;# 
  4868  0E1A                     	;# 
  4869  0E1B                     	;# 
  4870  0E1C                     	;# 
  4871  0E1D                     	;# 
  4872  0E1E                     	;# 
  4873  0E1F                     	;# 
  4874  0E20                     	;# 
  4875  0E21                     	;# 
  4876  0E22                     	;# 
  4877  0E23                     	;# 
  4878  0E24                     	;# 
  4879  0E25                     	;# 
  4880  0E26                     	;# 
  4881  0E27                     	;# 
  4882  0E28                     	;# 
  4883  0E29                     	;# 
  4884  0E2A                     	;# 
  4885  0E2B                     	;# 
  4886  0E2C                     	;# 
  4887  0E2D                     	;# 
  4888  0E2E                     	;# 
  4889  0E2F                     	;# 
  4890  0E30                     	;# 
  4891  0E31                     	;# 
  4892  0E32                     	;# 
  4893  0E33                     	;# 
  4894  0E34                     	;# 
  4895  0E35                     	;# 
  4896  0E36                     	;# 
  4897  0E37                     	;# 
  4898  0E8F                     	;# 
  4899  0E90                     	;# 
  4900  0E91                     	;# 
  4901  0E92                     	;# 
  4902  0E93                     	;# 
  4903  0E94                     	;# 
  4904  0E95                     	;# 
  4905  0E96                     	;# 
  4906  0E97                     	;# 
  4907  0E9C                     	;# 
  4908  0E9D                     	;# 
  4909  0E9E                     	;# 
  4910  0EA1                     	;# 
  4911  0EA2                     	;# 
  4912  0EA3                     	;# 
  4913  0EA4                     	;# 
  4914  0EA5                     	;# 
  4915  0EA9                     	;# 
  4916  0EAA                     	;# 
  4917  0EAB                     	;# 
  4918  0EAC                     	;# 
  4919  0EB1                     	;# 
  4920  0EB2                     	;# 
  4921  0EB3                     	;# 
  4922  0EB8                     	;# 
  4923  0EB9                     	;# 
  4924  0EBA                     	;# 
  4925  0EBB                     	;# 
  4926  0EBC                     	;# 
  4927  0EBD                     	;# 
  4928  0EBE                     	;# 
  4929  0EC3                     	;# 
  4930  0EC5                     	;# 
  4931  0EC6                     	;# 
  4932  0EC7                     	;# 
  4933  0EC8                     	;# 
  4934  0EC9                     	;# 
  4935  0ECA                     	;# 
  4936  0ECB                     	;# 
  4937  0ECC                     	;# 
  4938  0F10                     	;# 
  4939  0F11                     	;# 
  4940  0F12                     	;# 
  4941  0F13                     	;# 
  4942  0F14                     	;# 
  4943  0F15                     	;# 
  4944  0F16                     	;# 
  4945  0F17                     	;# 
  4946  0F18                     	;# 
  4947  0F19                     	;# 
  4948  0F1A                     	;# 
  4949  0F1B                     	;# 
  4950  0F1C                     	;# 
  4951  0F1D                     	;# 
  4952  0F1E                     	;# 
  4953  0F1F                     	;# 
  4954  0F20                     	;# 
  4955  0F21                     	;# 
  4956  0F22                     	;# 
  4957  0F23                     	;# 
  4958  0F24                     	;# 
  4959  0F25                     	;# 
  4960  0F26                     	;# 
  4961  0F27                     	;# 
  4962  0F28                     	;# 
  4963  0F29                     	;# 
  4964  0F2A                     	;# 
  4965  0F2B                     	;# 
  4966  0F2C                     	;# 
  4967  0F2D                     	;# 
  4968  0F2E                     	;# 
  4969  0F2F                     	;# 
  4970  0F30                     	;# 
  4971  0F31                     	;# 
  4972  0F32                     	;# 
  4973  0F38                     	;# 
  4974  0F39                     	;# 
  4975  0F3A                     	;# 
  4976  0F3B                     	;# 
  4977  0F3C                     	;# 
  4978  0F3D                     	;# 
  4979  0F3E                     	;# 
  4980  0F3F                     	;# 
  4981  0F40                     	;# 
  4982  0F41                     	;# 
  4983  0F43                     	;# 
  4984  0F44                     	;# 
  4985  0F45                     	;# 
  4986  0F46                     	;# 
  4987  0F47                     	;# 
  4988  0F48                     	;# 
  4989  0F49                     	;# 
  4990  0F4A                     	;# 
  4991  0F4B                     	;# 
  4992  0F4C                     	;# 
  4993  0F4E                     	;# 
  4994  0F4F                     	;# 
  4995  0F50                     	;# 
  4996  0F51                     	;# 
  4997  0F52                     	;# 
  4998  0F53                     	;# 
  4999  0F54                     	;# 
  5000  0F55                     	;# 
  5001  0F56                     	;# 
  5002  0F57                     	;# 
  5003  0F59                     	;# 
  5004  0F5A                     	;# 
  5005  0F5B                     	;# 
  5006  0F5C                     	;# 
  5007  0F5D                     	;# 
  5008  0F61                     	;# 
  5009  0F62                     	;# 
  5010  0F64                     	;# 
  5011  0F65                     	;# 
  5012  0F66                     	;# 
  5013  0F67                     	;# 
  5014  0F68                     	;# 
  5015  0F69                     	;# 
  5016  0F6A                     	;# 
  5017  0F6B                     	;# 
  5018  0F6C                     	;# 
  5019  0F6D                     	;# 
  5020  0FE4                     	;# 
  5021  0FE5                     	;# 
  5022  0FE6                     	;# 
  5023  0FE7                     	;# 
  5024  0FE8                     	;# 
  5025  0FE9                     	;# 
  5026  0FEA                     	;# 
  5027  0FEB                     	;# 
  5028  0FED                     	;# 
  5029  0FEE                     	;# 
  5030  0FEF                     	;# 
  5031  0000                     	;# 
  5032  0001                     	;# 
  5033  0002                     	;# 
  5034  0003                     	;# 
  5035  0004                     	;# 
  5036  0005                     	;# 
  5037  0006                     	;# 
  5038  0007                     	;# 
  5039  0008                     	;# 
  5040  0009                     	;# 
  5041  000A                     	;# 
  5042  000B                     	;# 
  5043  000C                     	;# 
  5044  000D                     	;# 
  5045  000E                     	;# 
  5046  000F                     	;# 
  5047  0010                     	;# 
  5048  0011                     	;# 
  5049  0012                     	;# 
  5050  0013                     	;# 
  5051  0014                     	;# 
  5052  0015                     	;# 
  5053  0016                     	;# 
  5054  0017                     	;# 
  5055  0018                     	;# 
  5056  0019                     	;# 
  5057  001A                     	;# 
  5058  001C                     	;# 
  5059  001C                     	;# 
  5060  001D                     	;# 
  5061  001D                     	;# 
  5062  001E                     	;# 
  5063  001F                     	;# 
  5064  008C                     	;# 
  5065  008C                     	;# 
  5066  008D                     	;# 
  5067  008E                     	;# 
  5068  008E                     	;# 
  5069  008F                     	;# 
  5070  0090                     	;# 
  5071  0090                     	;# 
  5072  0091                     	;# 
  5073  0093                     	;# 
  5074  0094                     	;# 
  5075  0095                     	;# 
  5076  0096                     	;# 
  5077  0097                     	;# 
  5078  0098                     	;# 
  5079  0099                     	;# 
  5080  009A                     	;# 
  5081  009B                     	;# 
  5082  009C                     	;# 
  5083  009D                     	;# 
  5084  009E                     	;# 
  5085  010C                     	;# 
  5086  010D                     	;# 
  5087  010E                     	;# 
  5088  010E                     	;# 
  5089  010F                     	;# 
  5090  0110                     	;# 
  5091  0110                     	;# 
  5092  0111                     	;# 
  5093  0112                     	;# 
  5094  0112                     	;# 
  5095  0113                     	;# 
  5096  0114                     	;# 
  5097  0114                     	;# 
  5098  0115                     	;# 
  5099  0116                     	;# 
  5100  0116                     	;# 
  5101  0117                     	;# 
  5102  0119                     	;# 
  5103  0119                     	;# 
  5104  0119                     	;# 
  5105  011A                     	;# 
  5106  011A                     	;# 
  5107  011A                     	;# 
  5108  011B                     	;# 
  5109  011B                     	;# 
  5110  011B                     	;# 
  5111  011B                     	;# 
  5112  011B                     	;# 
  5113  011C                     	;# 
  5114  011C                     	;# 
  5115  011C                     	;# 
  5116  011D                     	;# 
  5117  011D                     	;# 
  5118  011D                     	;# 
  5119  011E                     	;# 
  5120  011E                     	;# 
  5121  011E                     	;# 
  5122  011F                     	;# 
  5123  011F                     	;# 
  5124  011F                     	;# 
  5125  011F                     	;# 
  5126  011F                     	;# 
  5127  018C                     	;# 
  5128  018D                     	;# 
  5129  018E                     	;# 
  5130  018F                     	;# 
  5131  0190                     	;# 
  5132  0191                     	;# 
  5133  0192                     	;# 
  5134  0196                     	;# 
  5135  0197                     	;# 
  5136  0198                     	;# 
  5137  0199                     	;# 
  5138  019A                     	;# 
  5139  019B                     	;# 
  5140  019C                     	;# 
  5141  020C                     	;# 
  5142  020C                     	;# 
  5143  020D                     	;# 
  5144  020E                     	;# 
  5145  020F                     	;# 
  5146  020F                     	;# 
  5147  0210                     	;# 
  5148  0210                     	;# 
  5149  0211                     	;# 
  5150  0211                     	;# 
  5151  0212                     	;# 
  5152  0212                     	;# 
  5153  0213                     	;# 
  5154  0214                     	;# 
  5155  0215                     	;# 
  5156  0215                     	;# 
  5157  0216                     	;# 
  5158  0216                     	;# 
  5159  0217                     	;# 
  5160  0217                     	;# 
  5161  0218                     	;# 
  5162  0218                     	;# 
  5163  0219                     	;# 
  5164  021A                     	;# 
  5165  021B                     	;# 
  5166  021B                     	;# 
  5167  021C                     	;# 
  5168  021C                     	;# 
  5169  021D                     	;# 
  5170  021D                     	;# 
  5171  021E                     	;# 
  5172  021F                     	;# 
  5173  028C                     	;# 
  5174  028C                     	;# 
  5175  028D                     	;# 
  5176  028D                     	;# 
  5177  028E                     	;# 
  5178  028F                     	;# 
  5179  0290                     	;# 
  5180  0290                     	;# 
  5181  0291                     	;# 
  5182  0292                     	;# 
  5183  0292                     	;# 
  5184  0293                     	;# 
  5185  0293                     	;# 
  5186  0294                     	;# 
  5187  0295                     	;# 
  5188  0296                     	;# 
  5189  0296                     	;# 
  5190  0297                     	;# 
  5191  0298                     	;# 
  5192  0298                     	;# 
  5193  0299                     	;# 
  5194  0299                     	;# 
  5195  029A                     	;# 
  5196  029B                     	;# 
  5197  029C                     	;# 
  5198  029C                     	;# 
  5199  029D                     	;# 
  5200  030C                     	;# 
  5201  030C                     	;# 
  5202  030D                     	;# 
  5203  030E                     	;# 
  5204  030F                     	;# 
  5205  0310                     	;# 
  5206  0310                     	;# 
  5207  0311                     	;# 
  5208  0312                     	;# 
  5209  0313                     	;# 
  5210  0314                     	;# 
  5211  0314                     	;# 
  5212  0315                     	;# 
  5213  0316                     	;# 
  5214  0317                     	;# 
  5215  0318                     	;# 
  5216  0318                     	;# 
  5217  0319                     	;# 
  5218  031A                     	;# 
  5219  031B                     	;# 
  5220  031C                     	;# 
  5221  031C                     	;# 
  5222  031D                     	;# 
  5223  031E                     	;# 
  5224  031F                     	;# 
  5225  038C                     	;# 
  5226  038C                     	;# 
  5227  038D                     	;# 
  5228  038E                     	;# 
  5229  0390                     	;# 
  5230  0390                     	;# 
  5231  0391                     	;# 
  5232  0392                     	;# 
  5233  040C                     	;# 
  5234  040D                     	;# 
  5235  040E                     	;# 
  5236  040F                     	;# 
  5237  0410                     	;# 
  5238  0411                     	;# 
  5239  0416                     	;# 
  5240  0416                     	;# 
  5241  0417                     	;# 
  5242  0418                     	;# 
  5243  0418                     	;# 
  5244  0419                     	;# 
  5245  041A                     	;# 
  5246  041A                     	;# 
  5247  041B                     	;# 
  5248  041C                     	;# 
  5249  041C                     	;# 
  5250  041D                     	;# 
  5251  041E                     	;# 
  5252  041F                     	;# 
  5253  048C                     	;# 
  5254  048C                     	;# 
  5255  048D                     	;# 
  5256  048E                     	;# 
  5257  048F                     	;# 
  5258  048F                     	;# 
  5259  0490                     	;# 
  5260  0491                     	;# 
  5261  0492                     	;# 
  5262  0492                     	;# 
  5263  0493                     	;# 
  5264  0494                     	;# 
  5265  0495                     	;# 
  5266  0495                     	;# 
  5267  0496                     	;# 
  5268  0497                     	;# 
  5269  0498                     	;# 
  5270  0499                     	;# 
  5271  049A                     	;# 
  5272  049B                     	;# 
  5273  049C                     	;# 
  5274  049D                     	;# 
  5275  050C                     	;# 
  5276  050C                     	;# 
  5277  050D                     	;# 
  5278  050E                     	;# 
  5279  050F                     	;# 
  5280  050F                     	;# 
  5281  0510                     	;# 
  5282  0511                     	;# 
  5283  0512                     	;# 
  5284  0512                     	;# 
  5285  0513                     	;# 
  5286  0514                     	;# 
  5287  0515                     	;# 
  5288  0515                     	;# 
  5289  0516                     	;# 
  5290  0517                     	;# 
  5291  0518                     	;# 
  5292  0519                     	;# 
  5293  051A                     	;# 
  5294  051B                     	;# 
  5295  051C                     	;# 
  5296  051D                     	;# 
  5297  058C                     	;# 
  5298  058C                     	;# 
  5299  058D                     	;# 
  5300  058E                     	;# 
  5301  058F                     	;# 
  5302  058F                     	;# 
  5303  0590                     	;# 
  5304  0591                     	;# 
  5305  0592                     	;# 
  5306  0593                     	;# 
  5307  060C                     	;# 
  5308  060D                     	;# 
  5309  060E                     	;# 
  5310  060F                     	;# 
  5311  0610                     	;# 
  5312  0611                     	;# 
  5313  0612                     	;# 
  5314  0613                     	;# 
  5315  0614                     	;# 
  5316  0616                     	;# 
  5317  0617                     	;# 
  5318  0618                     	;# 
  5319  0619                     	;# 
  5320  061A                     	;# 
  5321  061B                     	;# 
  5322  061C                     	;# 
  5323  061D                     	;# 
  5324  061E                     	;# 
  5325  068C                     	;# 
  5326  068D                     	;# 
  5327  068E                     	;# 
  5328  068F                     	;# 
  5329  0690                     	;# 
  5330  0691                     	;# 
  5331  0692                     	;# 
  5332  0693                     	;# 
  5333  0694                     	;# 
  5334  070C                     	;# 
  5335  070D                     	;# 
  5336  070E                     	;# 
  5337  070F                     	;# 
  5338  0710                     	;# 
  5339  0711                     	;# 
  5340  0712                     	;# 
  5341  0713                     	;# 
  5342  0714                     	;# 
  5343  0716                     	;# 
  5344  0717                     	;# 
  5345  0718                     	;# 
  5346  0719                     	;# 
  5347  071A                     	;# 
  5348  071B                     	;# 
  5349  071C                     	;# 
  5350  071D                     	;# 
  5351  071E                     	;# 
  5352  0796                     	;# 
  5353  0797                     	;# 
  5354  0798                     	;# 
  5355  0799                     	;# 
  5356  079A                     	;# 
  5357  079B                     	;# 
  5358  080C                     	;# 
  5359  080D                     	;# 
  5360  080E                     	;# 
  5361  080F                     	;# 
  5362  0810                     	;# 
  5363  0811                     	;# 
  5364  0812                     	;# 
  5365  0813                     	;# 
  5366  0814                     	;# 
  5367  081A                     	;# 
  5368  081B                     	;# 
  5369  081C                     	;# 
  5370  081D                     	;# 
  5371  081E                     	;# 
  5372  081F                     	;# 
  5373  088C                     	;# 
  5374  088D                     	;# 
  5375  088E                     	;# 
  5376  088F                     	;# 
  5377  0890                     	;# 
  5378  0891                     	;# 
  5379  0892                     	;# 
  5380  0893                     	;# 
  5381  0895                     	;# 
  5382  0896                     	;# 
  5383  0897                     	;# 
  5384  0898                     	;# 
  5385  0899                     	;# 
  5386  089A                     	;# 
  5387  089B                     	;# 
  5388  090C                     	;# 
  5389  090E                     	;# 
  5390  090F                     	;# 
  5391  091F                     	;# 
  5392  091F                     	;# 
  5393  098F                     	;# 
  5394  098F                     	;# 
  5395  0990                     	;# 
  5396  0991                     	;# 
  5397  0992                     	;# 
  5398  0993                     	;# 
  5399  0994                     	;# 
  5400  0995                     	;# 
  5401  0996                     	;# 
  5402  0997                     	;# 
  5403  0E0F                     	;# 
  5404  0E10                     	;# 
  5405  0E11                     	;# 
  5406  0E12                     	;# 
  5407  0E13                     	;# 
  5408  0E14                     	;# 
  5409  0E15                     	;# 
  5410  0E16                     	;# 
  5411  0E17                     	;# 
  5412  0E18                     	;# 
  5413  0E19                     	;# 
  5414  0E1A                     	;# 
  5415  0E1B                     	;# 
  5416  0E1C                     	;# 
  5417  0E1D                     	;# 
  5418  0E1E                     	;# 
  5419  0E1F                     	;# 
  5420  0E20                     	;# 
  5421  0E21                     	;# 
  5422  0E22                     	;# 
  5423  0E23                     	;# 
  5424  0E24                     	;# 
  5425  0E25                     	;# 
  5426  0E26                     	;# 
  5427  0E27                     	;# 
  5428  0E28                     	;# 
  5429  0E29                     	;# 
  5430  0E2A                     	;# 
  5431  0E2B                     	;# 
  5432  0E2C                     	;# 
  5433  0E2D                     	;# 
  5434  0E2E                     	;# 
  5435  0E2F                     	;# 
  5436  0E30                     	;# 
  5437  0E31                     	;# 
  5438  0E32                     	;# 
  5439  0E33                     	;# 
  5440  0E34                     	;# 
  5441  0E35                     	;# 
  5442  0E36                     	;# 
  5443  0E37                     	;# 
  5444  0E8F                     	;# 
  5445  0E90                     	;# 
  5446  0E91                     	;# 
  5447  0E92                     	;# 
  5448  0E93                     	;# 
  5449  0E94                     	;# 
  5450  0E95                     	;# 
  5451  0E96                     	;# 
  5452  0E97                     	;# 
  5453  0E9C                     	;# 
  5454  0E9D                     	;# 
  5455  0E9E                     	;# 
  5456  0EA1                     	;# 
  5457  0EA2                     	;# 
  5458  0EA3                     	;# 
  5459  0EA4                     	;# 
  5460  0EA5                     	;# 
  5461  0EA9                     	;# 
  5462  0EAA                     	;# 
  5463  0EAB                     	;# 
  5464  0EAC                     	;# 
  5465  0EB1                     	;# 
  5466  0EB2                     	;# 
  5467  0EB3                     	;# 
  5468  0EB8                     	;# 
  5469  0EB9                     	;# 
  5470  0EBA                     	;# 
  5471  0EBB                     	;# 
  5472  0EBC                     	;# 
  5473  0EBD                     	;# 
  5474  0EBE                     	;# 
  5475  0EC3                     	;# 
  5476  0EC5                     	;# 
  5477  0EC6                     	;# 
  5478  0EC7                     	;# 
  5479  0EC8                     	;# 
  5480  0EC9                     	;# 
  5481  0ECA                     	;# 
  5482  0ECB                     	;# 
  5483  0ECC                     	;# 
  5484  0F10                     	;# 
  5485  0F11                     	;# 
  5486  0F12                     	;# 
  5487  0F13                     	;# 
  5488  0F14                     	;# 
  5489  0F15                     	;# 
  5490  0F16                     	;# 
  5491  0F17                     	;# 
  5492  0F18                     	;# 
  5493  0F19                     	;# 
  5494  0F1A                     	;# 
  5495  0F1B                     	;# 
  5496  0F1C                     	;# 
  5497  0F1D                     	;# 
  5498  0F1E                     	;# 
  5499  0F1F                     	;# 
  5500  0F20                     	;# 
  5501  0F21                     	;# 
  5502  0F22                     	;# 
  5503  0F23                     	;# 
  5504  0F24                     	;# 
  5505  0F25                     	;# 
  5506  0F26                     	;# 
  5507  0F27                     	;# 
  5508  0F28                     	;# 
  5509  0F29                     	;# 
  5510  0F2A                     	;# 
  5511  0F2B                     	;# 
  5512  0F2C                     	;# 
  5513  0F2D                     	;# 
  5514  0F2E                     	;# 
  5515  0F2F                     	;# 
  5516  0F30                     	;# 
  5517  0F31                     	;# 
  5518  0F32                     	;# 
  5519  0F38                     	;# 
  5520  0F39                     	;# 
  5521  0F3A                     	;# 
  5522  0F3B                     	;# 
  5523  0F3C                     	;# 
  5524  0F3D                     	;# 
  5525  0F3E                     	;# 
  5526  0F3F                     	;# 
  5527  0F40                     	;# 
  5528  0F41                     	;# 
  5529  0F43                     	;# 
  5530  0F44                     	;# 
  5531  0F45                     	;# 
  5532  0F46                     	;# 
  5533  0F47                     	;# 
  5534  0F48                     	;# 
  5535  0F49                     	;# 
  5536  0F4A                     	;# 
  5537  0F4B                     	;# 
  5538  0F4C                     	;# 
  5539  0F4E                     	;# 
  5540  0F4F                     	;# 
  5541  0F50                     	;# 
  5542  0F51                     	;# 
  5543  0F52                     	;# 
  5544  0F53                     	;# 
  5545  0F54                     	;# 
  5546  0F55                     	;# 
  5547  0F56                     	;# 
  5548  0F57                     	;# 
  5549  0F59                     	;# 
  5550  0F5A                     	;# 
  5551  0F5B                     	;# 
  5552  0F5C                     	;# 
  5553  0F5D                     	;# 
  5554  0F61                     	;# 
  5555  0F62                     	;# 
  5556  0F64                     	;# 
  5557  0F65                     	;# 
  5558  0F66                     	;# 
  5559  0F67                     	;# 
  5560  0F68                     	;# 
  5561  0F69                     	;# 
  5562  0F6A                     	;# 
  5563  0F6B                     	;# 
  5564  0F6C                     	;# 
  5565  0F6D                     	;# 
  5566  0FE4                     	;# 
  5567  0FE5                     	;# 
  5568  0FE6                     	;# 
  5569  0FE7                     	;# 
  5570  0FE8                     	;# 
  5571  0FE9                     	;# 
  5572  0FEA                     	;# 
  5573  0FEB                     	;# 
  5574  0FED                     	;# 
  5575  0FEE                     	;# 
  5576  0FEF                     	;# 
  5577  0000                     	;# 
  5578  0001                     	;# 
  5579  0002                     	;# 
  5580  0003                     	;# 
  5581  0004                     	;# 
  5582  0005                     	;# 
  5583  0006                     	;# 
  5584  0007                     	;# 
  5585  0008                     	;# 
  5586  0009                     	;# 
  5587  000A                     	;# 
  5588  000B                     	;# 
  5589  000C                     	;# 
  5590  000D                     	;# 
  5591  000E                     	;# 
  5592  000F                     	;# 
  5593  0010                     	;# 
  5594  0011                     	;# 
  5595  0012                     	;# 
  5596  0013                     	;# 
  5597  0014                     	;# 
  5598  0015                     	;# 
  5599  0016                     	;# 
  5600  0017                     	;# 
  5601  0018                     	;# 
  5602  0019                     	;# 
  5603  001A                     	;# 
  5604  001C                     	;# 
  5605  001C                     	;# 
  5606  001D                     	;# 
  5607  001D                     	;# 
  5608  001E                     	;# 
  5609  001F                     	;# 
  5610  008C                     	;# 
  5611  008C                     	;# 
  5612  008D                     	;# 
  5613  008E                     	;# 
  5614  008E                     	;# 
  5615  008F                     	;# 
  5616  0090                     	;# 
  5617  0090                     	;# 
  5618  0091                     	;# 
  5619  0093                     	;# 
  5620  0094                     	;# 
  5621  0095                     	;# 
  5622  0096                     	;# 
  5623  0097                     	;# 
  5624  0098                     	;# 
  5625  0099                     	;# 
  5626  009A                     	;# 
  5627  009B                     	;# 
  5628  009C                     	;# 
  5629  009D                     	;# 
  5630  009E                     	;# 
  5631  010C                     	;# 
  5632  010D                     	;# 
  5633  010E                     	;# 
  5634  010E                     	;# 
  5635  010F                     	;# 
  5636  0110                     	;# 
  5637  0110                     	;# 
  5638  0111                     	;# 
  5639  0112                     	;# 
  5640  0112                     	;# 
  5641  0113                     	;# 
  5642  0114                     	;# 
  5643  0114                     	;# 
  5644  0115                     	;# 
  5645  0116                     	;# 
  5646  0116                     	;# 
  5647  0117                     	;# 
  5648  0119                     	;# 
  5649  0119                     	;# 
  5650  0119                     	;# 
  5651  011A                     	;# 
  5652  011A                     	;# 
  5653  011A                     	;# 
  5654  011B                     	;# 
  5655  011B                     	;# 
  5656  011B                     	;# 
  5657  011B                     	;# 
  5658  011B                     	;# 
  5659  011C                     	;# 
  5660  011C                     	;# 
  5661  011C                     	;# 
  5662  011D                     	;# 
  5663  011D                     	;# 
  5664  011D                     	;# 
  5665  011E                     	;# 
  5666  011E                     	;# 
  5667  011E                     	;# 
  5668  011F                     	;# 
  5669  011F                     	;# 
  5670  011F                     	;# 
  5671  011F                     	;# 
  5672  011F                     	;# 
  5673  018C                     	;# 
  5674  018D                     	;# 
  5675  018E                     	;# 
  5676  018F                     	;# 
  5677  0190                     	;# 
  5678  0191                     	;# 
  5679  0192                     	;# 
  5680  0196                     	;# 
  5681  0197                     	;# 
  5682  0198                     	;# 
  5683  0199                     	;# 
  5684  019A                     	;# 
  5685  019B                     	;# 
  5686  019C                     	;# 
  5687  020C                     	;# 
  5688  020C                     	;# 
  5689  020D                     	;# 
  5690  020E                     	;# 
  5691  020F                     	;# 
  5692  020F                     	;# 
  5693  0210                     	;# 
  5694  0210                     	;# 
  5695  0211                     	;# 
  5696  0211                     	;# 
  5697  0212                     	;# 
  5698  0212                     	;# 
  5699  0213                     	;# 
  5700  0214                     	;# 
  5701  0215                     	;# 
  5702  0215                     	;# 
  5703  0216                     	;# 
  5704  0216                     	;# 
  5705  0217                     	;# 
  5706  0217                     	;# 
  5707  0218                     	;# 
  5708  0218                     	;# 
  5709  0219                     	;# 
  5710  021A                     	;# 
  5711  021B                     	;# 
  5712  021B                     	;# 
  5713  021C                     	;# 
  5714  021C                     	;# 
  5715  021D                     	;# 
  5716  021D                     	;# 
  5717  021E                     	;# 
  5718  021F                     	;# 
  5719  028C                     	;# 
  5720  028C                     	;# 
  5721  028D                     	;# 
  5722  028D                     	;# 
  5723  028E                     	;# 
  5724  028F                     	;# 
  5725  0290                     	;# 
  5726  0290                     	;# 
  5727  0291                     	;# 
  5728  0292                     	;# 
  5729  0292                     	;# 
  5730  0293                     	;# 
  5731  0293                     	;# 
  5732  0294                     	;# 
  5733  0295                     	;# 
  5734  0296                     	;# 
  5735  0296                     	;# 
  5736  0297                     	;# 
  5737  0298                     	;# 
  5738  0298                     	;# 
  5739  0299                     	;# 
  5740  0299                     	;# 
  5741  029A                     	;# 
  5742  029B                     	;# 
  5743  029C                     	;# 
  5744  029C                     	;# 
  5745  029D                     	;# 
  5746  030C                     	;# 
  5747  030C                     	;# 
  5748  030D                     	;# 
  5749  030E                     	;# 
  5750  030F                     	;# 
  5751  0310                     	;# 
  5752  0310                     	;# 
  5753  0311                     	;# 
  5754  0312                     	;# 
  5755  0313                     	;# 
  5756  0314                     	;# 
  5757  0314                     	;# 
  5758  0315                     	;# 
  5759  0316                     	;# 
  5760  0317                     	;# 
  5761  0318                     	;# 
  5762  0318                     	;# 
  5763  0319                     	;# 
  5764  031A                     	;# 
  5765  031B                     	;# 
  5766  031C                     	;# 
  5767  031C                     	;# 
  5768  031D                     	;# 
  5769  031E                     	;# 
  5770  031F                     	;# 
  5771  038C                     	;# 
  5772  038C                     	;# 
  5773  038D                     	;# 
  5774  038E                     	;# 
  5775  0390                     	;# 
  5776  0390                     	;# 
  5777  0391                     	;# 
  5778  0392                     	;# 
  5779  040C                     	;# 
  5780  040D                     	;# 
  5781  040E                     	;# 
  5782  040F                     	;# 
  5783  0410                     	;# 
  5784  0411                     	;# 
  5785  0416                     	;# 
  5786  0416                     	;# 
  5787  0417                     	;# 
  5788  0418                     	;# 
  5789  0418                     	;# 
  5790  0419                     	;# 
  5791  041A                     	;# 
  5792  041A                     	;# 
  5793  041B                     	;# 
  5794  041C                     	;# 
  5795  041C                     	;# 
  5796  041D                     	;# 
  5797  041E                     	;# 
  5798  041F                     	;# 
  5799  048C                     	;# 
  5800  048C                     	;# 
  5801  048D                     	;# 
  5802  048E                     	;# 
  5803  048F                     	;# 
  5804  048F                     	;# 
  5805  0490                     	;# 
  5806  0491                     	;# 
  5807  0492                     	;# 
  5808  0492                     	;# 
  5809  0493                     	;# 
  5810  0494                     	;# 
  5811  0495                     	;# 
  5812  0495                     	;# 
  5813  0496                     	;# 
  5814  0497                     	;# 
  5815  0498                     	;# 
  5816  0499                     	;# 
  5817  049A                     	;# 
  5818  049B                     	;# 
  5819  049C                     	;# 
  5820  049D                     	;# 
  5821  050C                     	;# 
  5822  050C                     	;# 
  5823  050D                     	;# 
  5824  050E                     	;# 
  5825  050F                     	;# 
  5826  050F                     	;# 
  5827  0510                     	;# 
  5828  0511                     	;# 
  5829  0512                     	;# 
  5830  0512                     	;# 
  5831  0513                     	;# 
  5832  0514                     	;# 
  5833  0515                     	;# 
  5834  0515                     	;# 
  5835  0516                     	;# 
  5836  0517                     	;# 
  5837  0518                     	;# 
  5838  0519                     	;# 
  5839  051A                     	;# 
  5840  051B                     	;# 
  5841  051C                     	;# 
  5842  051D                     	;# 
  5843  058C                     	;# 
  5844  058C                     	;# 
  5845  058D                     	;# 
  5846  058E                     	;# 
  5847  058F                     	;# 
  5848  058F                     	;# 
  5849  0590                     	;# 
  5850  0591                     	;# 
  5851  0592                     	;# 
  5852  0593                     	;# 
  5853  060C                     	;# 
  5854  060D                     	;# 
  5855  060E                     	;# 
  5856  060F                     	;# 
  5857  0610                     	;# 
  5858  0611                     	;# 
  5859  0612                     	;# 
  5860  0613                     	;# 
  5861  0614                     	;# 
  5862  0616                     	;# 
  5863  0617                     	;# 
  5864  0618                     	;# 
  5865  0619                     	;# 
  5866  061A                     	;# 
  5867  061B                     	;# 
  5868  061C                     	;# 
  5869  061D                     	;# 
  5870  061E                     	;# 
  5871  068C                     	;# 
  5872  068D                     	;# 
  5873  068E                     	;# 
  5874  068F                     	;# 
  5875  0690                     	;# 
  5876  0691                     	;# 
  5877  0692                     	;# 
  5878  0693                     	;# 
  5879  0694                     	;# 
  5880  070C                     	;# 
  5881  070D                     	;# 
  5882  070E                     	;# 
  5883  070F                     	;# 
  5884  0710                     	;# 
  5885  0711                     	;# 
  5886  0712                     	;# 
  5887  0713                     	;# 
  5888  0714                     	;# 
  5889  0716                     	;# 
  5890  0717                     	;# 
  5891  0718                     	;# 
  5892  0719                     	;# 
  5893  071A                     	;# 
  5894  071B                     	;# 
  5895  071C                     	;# 
  5896  071D                     	;# 
  5897  071E                     	;# 
  5898  0796                     	;# 
  5899  0797                     	;# 
  5900  0798                     	;# 
  5901  0799                     	;# 
  5902  079A                     	;# 
  5903  079B                     	;# 
  5904  080C                     	;# 
  5905  080D                     	;# 
  5906  080E                     	;# 
  5907  080F                     	;# 
  5908  0810                     	;# 
  5909  0811                     	;# 
  5910  0812                     	;# 
  5911  0813                     	;# 
  5912  0814                     	;# 
  5913  081A                     	;# 
  5914  081B                     	;# 
  5915  081C                     	;# 
  5916  081D                     	;# 
  5917  081E                     	;# 
  5918  081F                     	;# 
  5919  088C                     	;# 
  5920  088D                     	;# 
  5921  088E                     	;# 
  5922  088F                     	;# 
  5923  0890                     	;# 
  5924  0891                     	;# 
  5925  0892                     	;# 
  5926  0893                     	;# 
  5927  0895                     	;# 
  5928  0896                     	;# 
  5929  0897                     	;# 
  5930  0898                     	;# 
  5931  0899                     	;# 
  5932  089A                     	;# 
  5933  089B                     	;# 
  5934  090C                     	;# 
  5935  090E                     	;# 
  5936  090F                     	;# 
  5937  091F                     	;# 
  5938  091F                     	;# 
  5939  098F                     	;# 
  5940  098F                     	;# 
  5941  0990                     	;# 
  5942  0991                     	;# 
  5943  0992                     	;# 
  5944  0993                     	;# 
  5945  0994                     	;# 
  5946  0995                     	;# 
  5947  0996                     	;# 
  5948  0997                     	;# 
  5949  0E0F                     	;# 
  5950  0E10                     	;# 
  5951  0E11                     	;# 
  5952  0E12                     	;# 
  5953  0E13                     	;# 
  5954  0E14                     	;# 
  5955  0E15                     	;# 
  5956  0E16                     	;# 
  5957  0E17                     	;# 
  5958  0E18                     	;# 
  5959  0E19                     	;# 
  5960  0E1A                     	;# 
  5961  0E1B                     	;# 
  5962  0E1C                     	;# 
  5963  0E1D                     	;# 
  5964  0E1E                     	;# 
  5965  0E1F                     	;# 
  5966  0E20                     	;# 
  5967  0E21                     	;# 
  5968  0E22                     	;# 
  5969  0E23                     	;# 
  5970  0E24                     	;# 
  5971  0E25                     	;# 
  5972  0E26                     	;# 
  5973  0E27                     	;# 
  5974  0E28                     	;# 
  5975  0E29                     	;# 
  5976  0E2A                     	;# 
  5977  0E2B                     	;# 
  5978  0E2C                     	;# 
  5979  0E2D                     	;# 
  5980  0E2E                     	;# 
  5981  0E2F                     	;# 
  5982  0E30                     	;# 
  5983  0E31                     	;# 
  5984  0E32                     	;# 
  5985  0E33                     	;# 
  5986  0E34                     	;# 
  5987  0E35                     	;# 
  5988  0E36                     	;# 
  5989  0E37                     	;# 
  5990  0E8F                     	;# 
  5991  0E90                     	;# 
  5992  0E91                     	;# 
  5993  0E92                     	;# 
  5994  0E93                     	;# 
  5995  0E94                     	;# 
  5996  0E95                     	;# 
  5997  0E96                     	;# 
  5998  0E97                     	;# 
  5999  0E9C                     	;# 
  6000  0E9D                     	;# 
  6001  0E9E                     	;# 
  6002  0EA1                     	;# 
  6003  0EA2                     	;# 
  6004  0EA3                     	;# 
  6005  0EA4                     	;# 
  6006  0EA5                     	;# 
  6007  0EA9                     	;# 
  6008  0EAA                     	;# 
  6009  0EAB                     	;# 
  6010  0EAC                     	;# 
  6011  0EB1                     	;# 
  6012  0EB2                     	;# 
  6013  0EB3                     	;# 
  6014  0EB8                     	;# 
  6015  0EB9                     	;# 
  6016  0EBA                     	;# 
  6017  0EBB                     	;# 
  6018  0EBC                     	;# 
  6019  0EBD                     	;# 
  6020  0EBE                     	;# 
  6021  0EC3                     	;# 
  6022  0EC5                     	;# 
  6023  0EC6                     	;# 
  6024  0EC7                     	;# 
  6025  0EC8                     	;# 
  6026  0EC9                     	;# 
  6027  0ECA                     	;# 
  6028  0ECB                     	;# 
  6029  0ECC                     	;# 
  6030  0F10                     	;# 
  6031  0F11                     	;# 
  6032  0F12                     	;# 
  6033  0F13                     	;# 
  6034  0F14                     	;# 
  6035  0F15                     	;# 
  6036  0F16                     	;# 
  6037  0F17                     	;# 
  6038  0F18                     	;# 
  6039  0F19                     	;# 
  6040  0F1A                     	;# 
  6041  0F1B                     	;# 
  6042  0F1C                     	;# 
  6043  0F1D                     	;# 
  6044  0F1E                     	;# 
  6045  0F1F                     	;# 
  6046  0F20                     	;# 
  6047  0F21                     	;# 
  6048  0F22                     	;# 
  6049  0F23                     	;# 
  6050  0F24                     	;# 
  6051  0F25                     	;# 
  6052  0F26                     	;# 
  6053  0F27                     	;# 
  6054  0F28                     	;# 
  6055  0F29                     	;# 
  6056  0F2A                     	;# 
  6057  0F2B                     	;# 
  6058  0F2C                     	;# 
  6059  0F2D                     	;# 
  6060  0F2E                     	;# 
  6061  0F2F                     	;# 
  6062  0F30                     	;# 
  6063  0F31                     	;# 
  6064  0F32                     	;# 
  6065  0F38                     	;# 
  6066  0F39                     	;# 
  6067  0F3A                     	;# 
  6068  0F3B                     	;# 
  6069  0F3C                     	;# 
  6070  0F3D                     	;# 
  6071  0F3E                     	;# 
  6072  0F3F                     	;# 
  6073  0F40                     	;# 
  6074  0F41                     	;# 
  6075  0F43                     	;# 
  6076  0F44                     	;# 
  6077  0F45                     	;# 
  6078  0F46                     	;# 
  6079  0F47                     	;# 
  6080  0F48                     	;# 
  6081  0F49                     	;# 
  6082  0F4A                     	;# 
  6083  0F4B                     	;# 
  6084  0F4C                     	;# 
  6085  0F4E                     	;# 
  6086  0F4F                     	;# 
  6087  0F50                     	;# 
  6088  0F51                     	;# 
  6089  0F52                     	;# 
  6090  0F53                     	;# 
  6091  0F54                     	;# 
  6092  0F55                     	;# 
  6093  0F56                     	;# 
  6094  0F57                     	;# 
  6095  0F59                     	;# 
  6096  0F5A                     	;# 
  6097  0F5B                     	;# 
  6098  0F5C                     	;# 
  6099  0F5D                     	;# 
  6100  0F61                     	;# 
  6101  0F62                     	;# 
  6102  0F64                     	;# 
  6103  0F65                     	;# 
  6104  0F66                     	;# 
  6105  0F67                     	;# 
  6106  0F68                     	;# 
  6107  0F69                     	;# 
  6108  0F6A                     	;# 
  6109  0F6B                     	;# 
  6110  0F6C                     	;# 
  6111  0F6D                     	;# 
  6112  0FE4                     	;# 
  6113  0FE5                     	;# 
  6114  0FE6                     	;# 
  6115  0FE7                     	;# 
  6116  0FE8                     	;# 
  6117  0FE9                     	;# 
  6118  0FEA                     	;# 
  6119  0FEB                     	;# 
  6120  0FED                     	;# 
  6121  0FEE                     	;# 
  6122  0FEF                     	;_reg
  6123                           
  6124                           	psect	idataCOMMON
  6125  0003                     __pidataCOMMON:
  6126                           
  6127                           ;initializer for _PMON
  6128  0003  3403               	retlw	3
  6129                           
  6130                           	psect	idataBANK1
  6131  151C                     __pidataBANK1:
  6132                           
  6133                           ;initializer for _ALAL
  6134  151C  3404               	retlw	4
  6135                           
  6136                           ;initializer for _ALAT
  6137  151D  341C               	retlw	28
  6138                           
  6139                           ;initializer for _ALAH
  6140  151E  340C               	retlw	12
  6141                           
  6142                           ;initializer for _TALA
  6143  151F  3405               	retlw	5
  6144                           
  6145                           	psect	stringtext1
  6146  180F                     __pstringtext1:
  6147  180F                     _dpowers:
  6148  180F  3401               	retlw	1
  6149  1810  3400               	retlw	0
  6150  1811  340A               	retlw	10
  6151  1812  3400               	retlw	0
  6152  1813  3464               	retlw	100
  6153  1814  3400               	retlw	0
  6154  1815  34E8               	retlw	232
  6155  1816  3403               	retlw	3
  6156  1817  3410               	retlw	16
  6157  1818  3427               	retlw	39
  6158  1819                     __end_of_dpowers:
  6159                           
  6160                           	psect	nvBANK1
  6161  00BA                     __pnvBANK1:
  6162  00BA                     _TMR0_InterruptHandler:
  6163  00BA                     	ds	2
  6164  000E                     _PORTCbits	set	14
  6165  000D                     _PORTBbits	set	13
  6166  0013                     _TRISCbits	set	19
  6167  001E                     _T0CON0bits	set	30
  6168  001E                     _T0CON0	set	30
  6169  001C                     _TMR0L	set	28
  6170  001D                     _TMR0H	set	29
  6171  001F                     _T0CON1	set	31
  6172  000B                     _INTCONbits	set	11
  6173  0014                     _TRISD	set	20
  6174  0013                     _TRISC	set	19
  6175  0012                     _TRISB	set	18
  6176  0011                     _TRISA	set	17
  6177  0015                     _TRISE	set	21
  6178  0018                     _LATC	set	24
  6179  0017                     _LATB	set	23
  6180  0016                     _LATA	set	22
  6181  0019                     _LATD	set	25
  6182  001A                     _LATE	set	26
  6183  0094                     _ADCON1bits	set	148
  6184  008E                     _ADPREVL	set	142
  6185  008F                     _ADPREVH	set	143
  6186  0097                     _ADSTATbits	set	151
  6187  0090                     _ADACCL	set	144
  6188  0091                     _ADACCH	set	145
  6189  0095                     _ADCON2bits	set	149
  6190  009C                     _ADPRE	set	156
  6191  0096                     _ADCON3bits	set	150
  6192  008C                     _ADRESL	set	140
  6193  008D                     _ADRESH	set	141
  6194  0093                     _ADCON0bits	set	147
  6195  009D                     _ADACQ	set	157
  6196  0093                     _ADCON0	set	147
  6197  0098                     _ADCLK	set	152
  6198  0099                     _ADACT	set	153
  6199  009A                     _ADREF	set	154
  6200  0097                     _ADSTAT	set	151
  6201  0096                     _ADCON3	set	150
  6202  0095                     _ADCON2	set	149
  6203  0094                     _ADCON1	set	148
  6204  009B                     _ADCAP	set	155
  6205  009E                     _ADPCH	set	158
  6206  0116                     _ADERRL	set	278
  6207  0117                     _ADERRH	set	279
  6208  0114                     _ADFLTRL	set	276
  6209  0115                     _ADFLTRH	set	277
  6210  010C                     _ADCNT	set	268
  6211  010D                     _ADRPT	set	269
  6212  0113                     _ADSTPTH	set	275
  6213  0112                     _ADSTPTL	set	274
  6214  0111                     _ADUTHH	set	273
  6215  0110                     _ADUTHL	set	272
  6216  010F                     _ADLTHH	set	271
  6217  010E                     _ADLTHL	set	270
  6218  018E                     _SSP1MSK	set	398
  6219  018D                     _SSP1ADD	set	397
  6220  018F                     _SSP1STAT	set	399
  6221  0191                     _SSP1CON2	set	401
  6222  0190                     _SSP1CON1bits	set	400
  6223  018C                     _SSP1BUF	set	396
  6224  018F                     _SSP1STATbits	set	399
  6225  0191                     _SSP1CON2bits	set	401
  6226  0190                     _SSP1CON1	set	400
  6227  070C                     _PIR0bits	set	1804
  6228  0716                     _PIE0bits	set	1814
  6229  0719                     _PIE3bits	set	1817
  6230  070F                     _PIR3bits	set	1807
  6231  079B                     _PMD5	set	1947
  6232  079A                     _PMD4	set	1946
  6233  0799                     _PMD3	set	1945
  6234  0798                     _PMD2	set	1944
  6235  0797                     _PMD1	set	1943
  6236  0796                     _PMD0	set	1942
  6237  081F                     _NVMCON2	set	2079
  6238  081C                     _NVMDATL	set	2076
  6239  081D                     _NVMDATH	set	2077
  6240  081E                     _NVMCON1bits	set	2078
  6241  081B                     _NVMADRH	set	2075
  6242  081A                     _NVMADRL	set	2074
  6243  0892                     _OSCTUNE	set	2194
  6244  0893                     _OSCFRQ	set	2195
  6245  0891                     _OSCEN	set	2193
  6246  088F                     _OSCCON3	set	2191
  6247  088D                     _OSCCON1	set	2189
  6248  0EC6                     _SSP1DATPPS	set	3782
  6249  0EC5                     _SSP1CLKPPS	set	3781
  6250  0F24                     _RC4PPS	set	3876
  6251  0F23                     _RC3PPS	set	3875
  6252  0F67                     _SLRCONE	set	3943
  6253  0F5C                     _SLRCOND	set	3932
  6254  0F51                     _SLRCONC	set	3921
  6255  0F46                     _SLRCONB	set	3910
  6256  0F3B                     _SLRCONA	set	3899
  6257  0F5B                     _ODCOND	set	3931
  6258  0F50                     _ODCONC	set	3920
  6259  0F45                     _ODCONB	set	3909
  6260  0F3A                     _ODCONA	set	3898
  6261  0F66                     _ODCONE	set	3942
  6262  0F4F                     _WPUC	set	3919
  6263  0F39                     _WPUA	set	3897
  6264  0F44                     _WPUB	set	3908
  6265  0F65                     _WPUE	set	3941
  6266  0F5A                     _WPUD	set	3930
  6267  0F38                     _ANSELA	set	3896
  6268  0F64                     _ANSELE	set	3940
  6269  0F43                     _ANSELB	set	3907
  6270  0F4E                     _ANSELC	set	3918
  6271  0F59                     _ANSELD	set	3929
  6272  7A7C                     _WPUC4	set	31356
  6273  7A7B                     _WPUC3	set	31355
  6274                           
  6275                           	psect	stringtext2
  6276  1800                     __pstringtext2:
  6277  1800                     STR_3:
  6278  1800  3425               	retlw	37	;'%'
  6279  1801  3430               	retlw	48	;'0'
  6280  1802  3432               	retlw	50	;'2'
  6281  1803  3464               	retlw	100	;'d'
  6282  1804  343A               	retlw	58	;':'
  6283  1805  3425               	retlw	37	;'%'
  6284  1806  3430               	retlw	48	;'0'
  6285  1807  3432               	retlw	50	;'2'
  6286  1808  3464               	retlw	100	;'d'
  6287  1809  343A               	retlw	58	;':'
  6288  180A  3425               	retlw	37	;'%'
  6289  180B  3430               	retlw	48	;'0'
  6290  180C  3432               	retlw	50	;'2'
  6291  180D  3464               	retlw	100	;'d'
  6292  180E  3400               	retlw	0
  6293                           
  6294                           	psect	stringtext3
  6295  1819                     __pstringtext3:
  6296  1819                     STR_4:
  6297  1819  3425               	retlw	37	;'%'
  6298  181A  3430               	retlw	48	;'0'
  6299  181B  3432               	retlw	50	;'2'
  6300  181C  3464               	retlw	100	;'d'
  6301  181D  3420               	retlw	32	;' '
  6302  181E  3443               	retlw	67	;'C'
  6303  181F  3400               	retlw	0
  6304                           
  6305                           	psect	stringtext4
  6306  1820                     __pstringtext4:
  6307  1820                     STR_5:
  6308  1820  344C               	retlw	76	;'L'
  6309  1821  3425               	retlw	37	;'%'
  6310  1822  3430               	retlw	48	;'0'
  6311  1823  3431               	retlw	49	;'1'
  6312  1824  3464               	retlw	100	;'d'
  6313  1825  3400               	retlw	0
  6314                           
  6315                           	psect	stringtext5
  6316  1826                     __pstringtext5:
  6317  1826                     STR_10:
  6318  1826  3443               	retlw	67	;'C'
  6319  1827  3454               	retlw	84	;'T'
  6320  1828  344C               	retlw	76	;'L'
  6321  1829  3400               	retlw	0
  6322                           
  6323                           	psect	stringtext6
  6324  182A                     __pstringtext6:
  6325  182A                     STR_1:
  6326  182A  3441               	retlw	65	;'A'
  6327  182B  3400               	retlw	0
  6328                           
  6329                           	psect	stringtext7
  6330  182C                     __pstringtext7:
  6331  182C                     STR_7:
  6332  182C  3454               	retlw	84	;'T'
  6333  182D  3400               	retlw	0
  6334                           
  6335                           	psect	stringtext8
  6336  182E                     __pstringtext8:
  6337  182E                     STR_2:
  6338  182E  3461               	retlw	97	;'a'
  6339  182F  3400               	retlw	0
  6340                           
  6341                           	psect	stringtext9
  6342  0000                     __pstringtext9:
  6343  181E                     
  6344                           	psect	cinit
  6345  002A                     start_initialization:	
  6346                           ; #config settings
  6347                           
  6348  002A                     __initialization:	;BIGRAM
  6349                           
  6350                           ; Initialize objects allocated to COMMON
  6351  002A  3180  2003  3180   	fcall	__pidataCOMMON	;fetch initializer
  6352  002D  00FD               	movwf	__pdataCOMMON& (0+127)
  6353                           
  6354                           ; Initialize objects allocated to BANK1
  6355  002E  0021               	movlb	1	; select bank1
  6356  002F  3195  251C  3180   	fcall	__pidataBANK1	;fetch initializer
  6357  0032  00B6               	movwf	__pdataBANK1& (0+127)
  6358  0033  3195  251D  3180   	fcall	__pidataBANK1+1	;fetch initializer
  6359  0036  00B7               	movwf	(__pdataBANK1+1)& (0+127)
  6360  0037  3195  251E  3180   	fcall	__pidataBANK1+2	;fetch initializer
  6361  003A  00B8               	movwf	(__pdataBANK1+2)& (0+127)
  6362  003B  3195  251F  3180   	fcall	__pidataBANK1+3	;fetch initializer
  6363  003E  00B9               	movwf	(__pdataBANK1+3)& (0+127)
  6364                           
  6365                           ; Clear objects allocated to BIGRAM
  6366  003F  3073               	movlw	low (0+9075)
  6367  0040  0084               	movwf	4
  6368  0041  3023               	movlw	high (0+9075)
  6369  0042  0085               	movwf	5
  6370  0043  307D               	movlw	125
  6371  0044  00FE               	movwf	btemp
  6372  0045  3000               	movlw	0
  6373  0046  00FF               	movwf	btemp+1
  6374  0047  3195  2573  3180   	fcall	clear_ram0
  6375                           
  6376                           ; Clear objects allocated to COMMON
  6377  004A  01F9               	clrf	__pbssCOMMON& (0+127)
  6378  004B  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  6379  004C  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  6380  004D  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  6381                           
  6382                           ; Clear objects allocated to BANK0
  6383  004E  0020               	movlb	0	; select bank0
  6384  004F  01EC               	clrf	__pbssBANK0& (0+127)
  6385  0050  01ED               	clrf	(__pbssBANK0+1)& (0+127)
  6386  0051  01EE               	clrf	(__pbssBANK0+2)& (0+127)
  6387  0052  01EF               	clrf	(__pbssBANK0+3)& (0+127)
  6388                           
  6389                           ; Clear objects allocated to BANK1
  6390  0053  30AC               	movlw	low __pbssBANK1
  6391  0054  0084               	movwf	4
  6392  0055  3000               	movlw	high __pbssBANK1
  6393  0056  0085               	movwf	5
  6394  0057  300A               	movlw	10
  6395  0058  00FE               	movwf	btemp
  6396  0059  3000               	movlw	0
  6397  005A  00FF               	movwf	btemp+1
  6398  005B  3195  2573  3180   	fcall	clear_ram0
  6399  005E                     end_of_initialization:	
  6400                           ;End of C runtime variable initialization code
  6401                           
  6402  005E                     __end_of__initialization:
  6403  005E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6404  005F  0020               	movlb	0
  6405  0060  318E  2E17         	ljmp	_main	;jump to C main() function
  6406                           
  6407                           	psect	bssCOMMON
  6408  0079                     __pbssCOMMON:
  6409  0079                     save_register@n:
  6410  0079                     	ds	2
  6411  007B                     _timer_flag:
  6412  007B                     	ds	2
  6413                           
  6414                           	psect	dataCOMMON
  6415  007D                     __pdataCOMMON:
  6416  007D                     _PMON:
  6417  007D                     	ds	1
  6418                           
  6419                           	psect	bssBANK0
  6420  006C                     __pbssBANK0:
  6421  006C                     _btn2State:
  6422  006C                     	ds	1
  6423  006D                     _btn1State:
  6424  006D                     	ds	1
  6425  006E                     _CLKM:
  6426  006E                     	ds	1
  6427  006F                     _CLKH:
  6428  006F                     	ds	1
  6429                           
  6430                           	psect	bssBANK1
  6431  00AC                     __pbssBANK1:
  6432  00AC                     TMR0_ISR@CountCallBack:
  6433  00AC                     	ds	2
  6434  00AE                     _i2c1_driver_i2cISR:
  6435  00AE                     	ds	2
  6436  00B0                     _i2c1_driver_busCollisionISR:
  6437  00B0                     	ds	2
  6438  00B2                     _CSUM:
  6439  00B2                     	ds	1
  6440  00B3                     _ALAF:
  6441  00B3                     	ds	1
  6442  00B4                     _ALAS:
  6443  00B4                     	ds	1
  6444  00B5                     _ALAM:
  6445  00B5                     	ds	1
  6446                           
  6447                           	psect	dataBANK1
  6448  00B6                     __pdataBANK1:
  6449  00B6                     _ALAL:
  6450  00B6                     	ds	1
  6451  00B7                     _ALAT:
  6452  00B7                     	ds	1
  6453  00B8                     _ALAH:
  6454  00B8                     	ds	1
  6455  00B9                     _TALA:
  6456  00B9                     	ds	1
  6457                           
  6458                           	psect	clrtext
  6459  1573                     clear_ram0:	
  6460                           ;	Called with FSR0 containing the base address, and
  6461                           ;	btemp/btemp+1 has the size to clear
  6462                           
  6463  1573  0064               	clrwdt	;clear the watchdog before getting into this loop
  6464  1574                     clrloop0:
  6465  1574  0180               	clrf	0	;clear RAM location pointed to by FSR
  6466  1575  3101               	addfsr 0,1
  6467  1576  3001               	movlw	1
  6468  1577  02FE               	subwf	btemp,f
  6469  1578  3000               	movlw	0
  6470  1579  3BFF               	subwfb	btemp+1,f
  6471  157A  087F               	movf	btemp+1,w
  6472  157B  047E               	iorwf	btemp,w
  6473  157C  1D03               	skipz
  6474  157D  2D74               	goto	clrloop0	;have we reached the end yet?
  6475  157E  3400               	retlw	0	;all done for this memory range, return
  6476                           
  6477                           	psect	cstackBANK1
  6478  00A0                     __pcstackBANK1:
  6479  00A0                     ??_main:
  6480                           
  6481                           ; 1 bytes @ 0x0
  6482  00A0                     	ds	12
  6483                           
  6484                           	psect	cstackCOMMON
  6485  0070                     __pcstackCOMMON:
  6486  0070                     ?_isdigit:
  6487  0070                     ?_i2c1_driver_open:	
  6488                           ; 1 bit 
  6489                           
  6490  0070                     ?_PMD_Initialize:	
  6491                           ; 1 bit 
  6492                           
  6493  0070                     ?_OSCILLATOR_Initialize:	
  6494                           ; 1 bytes @ 0x0
  6495                           
  6496  0070                     ?_ADCC_Initialize:	
  6497                           ; 1 bytes @ 0x0
  6498                           
  6499  0070                     ?_TMR0_Initialize:	
  6500                           ; 1 bytes @ 0x0
  6501                           
  6502  0070                     ?_TMR0_ISR:	
  6503                           ; 1 bytes @ 0x0
  6504                           
  6505  0070                     ?_TMR0_DefaultInterruptHandler:	
  6506                           ; 1 bytes @ 0x0
  6507                           
  6508  0070                     ??_TMR0_DefaultInterruptHandler:	
  6509                           ; 1 bytes @ 0x0
  6510                           
  6511  0070                     ?_TMR0_CallBack:	
  6512                           ; 1 bytes @ 0x0
  6513                           
  6514  0070                     ?_TMR0_callback:	
  6515                           ; 1 bytes @ 0x0
  6516                           
  6517  0070                     ?_LCDinit:	
  6518                           ; 1 bytes @ 0x0
  6519                           
  6520  0070                     ?_check_vars:	
  6521                           ; 1 bytes @ 0x0
  6522                           
  6523  0070                     ?_tsttc:	
  6524                           ; 1 bytes @ 0x0
  6525                           
  6526  0070                     ?_lumin:	
  6527                           ; 1 bytes @ 0x0
  6528                           
  6529  0070                     ?_checkButtonS1:	
  6530                           ; 1 bytes @ 0x0
  6531                           
  6532  0070                     ?_checkButtonS2:	
  6533                           ; 1 bytes @ 0x0
  6534                           
  6535  0070                     ?_conf_clock_hh:	
  6536                           ; 1 bytes @ 0x0
  6537                           
  6538  0070                     ?_conf_clock_mm:	
  6539                           ; 1 bytes @ 0x0
  6540                           
  6541  0070                     ?_conf_clock_ss:	
  6542                           ; 1 bytes @ 0x0
  6543                           
  6544  0070                     ?_conf_alarm_hh:	
  6545                           ; 1 bytes @ 0x0
  6546                           
  6547  0070                     ?_conf_alarm_mm:	
  6548                           ; 1 bytes @ 0x0
  6549                           
  6550  0070                     ?_conf_alarm_ss:	
  6551                           ; 1 bytes @ 0x0
  6552                           
  6553  0070                     ?_conf_temp:	
  6554                           ; 1 bytes @ 0x0
  6555                           
  6556  0070                     ?_conf_lumin:	
  6557                           ; 1 bytes @ 0x0
  6558                           
  6559  0070                     ?_conf_alarm_flag:	
  6560                           ; 1 bytes @ 0x0
  6561                           
  6562  0070                     ?_save_vars:	
  6563                           ; 1 bytes @ 0x0
  6564                           
  6565  0070                     ?_ADCC_StartConversion:	
  6566                           ; 1 bytes @ 0x0
  6567                           
  6568  0070                     ?_ReadI2C:	
  6569                           ; 1 bytes @ 0x0
  6570                           
  6571  0070                     ?_WriteI2C:	
  6572                           ; 1 bytes @ 0x0
  6573                           
  6574  0070                     ?_PIN_MANAGER_Initialize:	
  6575                           ; 1 bytes @ 0x0
  6576                           
  6577  0070                     ?_SYSTEM_Initialize:	
  6578                           ; 1 bytes @ 0x0
  6579                           
  6580  0070                     ?_INTERRUPT_InterruptManager:	
  6581                           ; 1 bytes @ 0x0
  6582                           
  6583  0070                     ?_main:	
  6584                           ; 1 bytes @ 0x0
  6585                           
  6586  0070                     ?_LCDsend:	
  6587                           ; 1 bytes @ 0x0
  6588                           
  6589  0070                     ?_LCDcmd:	
  6590                           ; 1 bytes @ 0x0
  6591                           
  6592  0070                     ?_LCDchar:	
  6593                           ; 1 bytes @ 0x0
  6594                           
  6595  0070                     ?_LCDstr:	
  6596                           ; 1 bytes @ 0x0
  6597                           
  6598  0070                     ?___lbmod:	
  6599                           ; 1 bytes @ 0x0
  6600                           
  6601  0070                     ?i1_DATAEE_WriteByte:	
  6602                           ; 1 bytes @ 0x0
  6603                           
  6604  0070                     ?___awmod:	
  6605                           ; 1 bytes @ 0x0
  6606                           
  6607  0070                     ?i1___lwmod:	
  6608                           ; 2 bytes @ 0x0
  6609                           
  6610  0070                     ___lbmod@divisor:	
  6611                           ; 2 bytes @ 0x0
  6612                           
  6613  0070                     ___awmod@divisor:	
  6614                           ; 1 bytes @ 0x0
  6615                           
  6616  0070                     i1DATAEE_WriteByte@bAdd:	
  6617                           ; 2 bytes @ 0x0
  6618                           
  6619  0070                     i1___lwmod@divisor:	
  6620                           ; 2 bytes @ 0x0
  6621                           
  6622                           
  6623                           ; 2 bytes @ 0x0
  6624  0070                     	ds	1
  6625  0071                     ??___lbmod:
  6626                           
  6627                           ; 1 bytes @ 0x1
  6628  0071                     	ds	1
  6629  0072                     i1DATAEE_WriteByte@bData:
  6630  0072                     ___awmod@dividend:	
  6631                           ; 1 bytes @ 0x2
  6632                           
  6633  0072                     i1___lwmod@dividend:	
  6634                           ; 2 bytes @ 0x2
  6635                           
  6636                           
  6637                           ; 2 bytes @ 0x2
  6638  0072                     	ds	1
  6639  0073                     ??i1_DATAEE_WriteByte:
  6640  0073                     ___lbmod@dividend:	
  6641                           ; 1 bytes @ 0x3
  6642                           
  6643  0073                     i1DATAEE_WriteByte@GIEBitValue:	
  6644                           ; 1 bytes @ 0x3
  6645                           
  6646                           
  6647                           ; 1 bytes @ 0x3
  6648  0073                     	ds	1
  6649  0074                     ??___awmod:
  6650  0074                     ??i1___lwmod:	
  6651                           ; 1 bytes @ 0x4
  6652                           
  6653  0074                     ___lbmod@counter:	
  6654                           ; 1 bytes @ 0x4
  6655                           
  6656                           
  6657                           ; 1 bytes @ 0x4
  6658  0074                     	ds	1
  6659  0075                     ___awmod@counter:
  6660  0075                     ___lbmod@rem:	
  6661                           ; 1 bytes @ 0x5
  6662                           
  6663  0075                     i1___lwmod@counter:	
  6664                           ; 1 bytes @ 0x5
  6665                           
  6666                           
  6667                           ; 1 bytes @ 0x5
  6668  0075                     	ds	1
  6669  0076                     ___awmod@sign:
  6670                           
  6671                           ; 1 bytes @ 0x6
  6672  0076                     	ds	1
  6673  0077                     ??_TMR0_callback:
  6674                           
  6675                           ; 1 bytes @ 0x7
  6676  0077                     	ds	2
  6677  0079                     ??_TMR0_ISR:
  6678  0079                     ??_TMR0_CallBack:	
  6679                           ; 1 bytes @ 0x9
  6680                           
  6681  0079                     ??_INTERRUPT_InterruptManager:	
  6682                           ; 1 bytes @ 0x9
  6683                           
  6684                           
  6685                           	psect	cstackBANK0
  6686  0020                     __pcstackBANK0:	
  6687                           ; 1 bytes @ 0x9
  6688                           
  6689  0020                     ??_PMD_Initialize:
  6690  0020                     ??_OSCILLATOR_Initialize:	
  6691                           ; 1 bytes @ 0x0
  6692                           
  6693  0020                     ??_ADCC_Initialize:	
  6694                           ; 1 bytes @ 0x0
  6695                           
  6696  0020                     ?_TMR0_SetInterruptHandler:	
  6697                           ; 1 bytes @ 0x0
  6698                           
  6699  0020                     ??_checkButtonS1:	
  6700                           ; 1 bytes @ 0x0
  6701                           
  6702  0020                     ??_checkButtonS2:	
  6703                           ; 1 bytes @ 0x0
  6704                           
  6705  0020                     ??_conf_clock_mm:	
  6706                           ; 1 bytes @ 0x0
  6707                           
  6708  0020                     ??_conf_clock_ss:	
  6709                           ; 1 bytes @ 0x0
  6710                           
  6711  0020                     ??_conf_alarm_hh:	
  6712                           ; 1 bytes @ 0x0
  6713                           
  6714  0020                     ??_conf_alarm_mm:	
  6715                           ; 1 bytes @ 0x0
  6716                           
  6717  0020                     ??_conf_alarm_ss:	
  6718                           ; 1 bytes @ 0x0
  6719                           
  6720  0020                     ??_conf_temp:	
  6721                           ; 1 bytes @ 0x0
  6722                           
  6723  0020                     ??_conf_lumin:	
  6724                           ; 1 bytes @ 0x0
  6725                           
  6726  0020                     ??_conf_alarm_flag:	
  6727                           ; 1 bytes @ 0x0
  6728                           
  6729  0020                     ??_ADCC_StartConversion:	
  6730                           ; 1 bytes @ 0x0
  6731                           
  6732  0020                     ??_isdigit:	
  6733                           ; 1 bytes @ 0x0
  6734                           
  6735  0020                     ??_ReadI2C:	
  6736                           ; 1 bytes @ 0x0
  6737                           
  6738  0020                     ??_WriteI2C:	
  6739                           ; 1 bytes @ 0x0
  6740                           
  6741  0020                     ??_PIN_MANAGER_Initialize:	
  6742                           ; 1 bytes @ 0x0
  6743                           
  6744  0020                     ??_i2c1_driver_open:	
  6745                           ; 1 bytes @ 0x0
  6746                           
  6747  0020                     ?_DATAEE_WriteByte:	
  6748                           ; 1 bytes @ 0x0
  6749                           
  6750  0020                     ?_DATAEE_ReadByte:	
  6751                           ; 1 bytes @ 0x0
  6752                           
  6753  0020                     ?_ADCC_GetConversionResult:	
  6754                           ; 1 bytes @ 0x0
  6755                           
  6756  0020                     ?___wmul:	
  6757                           ; 2 bytes @ 0x0
  6758                           
  6759  0020                     ?___lwdiv:	
  6760                           ; 2 bytes @ 0x0
  6761                           
  6762  0020                     ADCC_StartConversion@channel:	
  6763                           ; 2 bytes @ 0x0
  6764                           
  6765  0020                     _isdigit$2407:	
  6766                           ; 1 bytes @ 0x0
  6767                           
  6768  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  6769                           ; 1 bytes @ 0x0
  6770                           
  6771  0020                     DATAEE_WriteByte@bAdd:	
  6772                           ; 2 bytes @ 0x0
  6773                           
  6774  0020                     DATAEE_ReadByte@bAdd:	
  6775                           ; 2 bytes @ 0x0
  6776                           
  6777  0020                     ___wmul@multiplier:	
  6778                           ; 2 bytes @ 0x0
  6779                           
  6780  0020                     ___lwdiv@divisor:	
  6781                           ; 2 bytes @ 0x0
  6782                           
  6783                           
  6784                           ; 2 bytes @ 0x0
  6785  0020                     	ds	1
  6786  0021                     WriteI2C@data_out:
  6787  0021                     isdigit@c:	
  6788                           ; 1 bytes @ 0x1
  6789                           
  6790                           
  6791                           ; 1 bytes @ 0x1
  6792  0021                     	ds	1
  6793  0022                     ??_TMR0_Initialize:
  6794  0022                     ??_TMR0_SetInterruptHandler:	
  6795                           ; 1 bytes @ 0x2
  6796                           
  6797  0022                     ??_check_vars:	
  6798                           ; 1 bytes @ 0x2
  6799                           
  6800  0022                     ??_tsttc:	
  6801                           ; 1 bytes @ 0x2
  6802                           
  6803  0022                     ??_lumin:	
  6804                           ; 1 bytes @ 0x2
  6805                           
  6806  0022                     ??_ADCC_GetConversionResult:	
  6807                           ; 1 bytes @ 0x2
  6808                           
  6809  0022                     ??_SYSTEM_Initialize:	
  6810                           ; 1 bytes @ 0x2
  6811                           
  6812  0022                     ??_DATAEE_ReadByte:	
  6813                           ; 1 bytes @ 0x2
  6814                           
  6815  0022                     ??_LCDsend:	
  6816                           ; 1 bytes @ 0x2
  6817                           
  6818  0022                     ?_LCDsend2x4:	
  6819                           ; 1 bytes @ 0x2
  6820                           
  6821  0022                     DATAEE_WriteByte@bData:	
  6822                           ; 1 bytes @ 0x2
  6823                           
  6824  0022                     LCDsend2x4@mode:	
  6825                           ; 1 bytes @ 0x2
  6826                           
  6827  0022                     ___wmul@multiplicand:	
  6828                           ; 1 bytes @ 0x2
  6829                           
  6830  0022                     ___lwdiv@dividend:	
  6831                           ; 2 bytes @ 0x2
  6832                           
  6833                           
  6834                           ; 2 bytes @ 0x2
  6835  0022                     	ds	1
  6836  0023                     ??_DATAEE_WriteByte:
  6837  0023                     ??_LCDsend2x4:	
  6838                           ; 1 bytes @ 0x3
  6839                           
  6840  0023                     DATAEE_WriteByte@GIEBitValue:	
  6841                           ; 1 bytes @ 0x3
  6842                           
  6843  0023                     check_vars@pass:	
  6844                           ; 1 bytes @ 0x3
  6845                           
  6846  0023                     tsttc@value:	
  6847                           ; 1 bytes @ 0x3
  6848                           
  6849  0023                     LCDsend@c:	
  6850                           ; 1 bytes @ 0x3
  6851                           
  6852                           
  6853                           ; 1 bytes @ 0x3
  6854  0023                     	ds	1
  6855  0024                     ??_save_vars:
  6856  0024                     ??___wmul:	
  6857                           ; 1 bytes @ 0x4
  6858                           
  6859  0024                     ??___lwdiv:	
  6860                           ; 1 bytes @ 0x4
  6861                           
  6862  0024                     lumin@luminosity:	
  6863                           ; 1 bytes @ 0x4
  6864                           
  6865  0024                     ___wmul@product:	
  6866                           ; 2 bytes @ 0x4
  6867                           
  6868                           
  6869                           ; 2 bytes @ 0x4
  6870  0024                     	ds	1
  6871  0025                     ??_conf_clock_hh:
  6872  0025                     LCDsend2x4@c:	
  6873                           ; 1 bytes @ 0x5
  6874                           
  6875  0025                     ___lwdiv@quotient:	
  6876                           ; 1 bytes @ 0x5
  6877                           
  6878                           
  6879                           ; 2 bytes @ 0x5
  6880  0025                     	ds	1
  6881  0026                     LCDsend2x4@hc:
  6882                           
  6883                           ; 1 bytes @ 0x6
  6884  0026                     	ds	1
  6885  0027                     LCDsend2x4@lc:
  6886  0027                     ___lwdiv@counter:	
  6887                           ; 1 bytes @ 0x7
  6888                           
  6889                           
  6890                           ; 1 bytes @ 0x7
  6891  0027                     	ds	1
  6892  0028                     ??_LCDinit:
  6893  0028                     ??_LCDcmd:	
  6894                           ; 1 bytes @ 0x8
  6895                           
  6896  0028                     ??_LCDchar:	
  6897                           ; 1 bytes @ 0x8
  6898                           
  6899  0028                     ?___lwmod:	
  6900                           ; 1 bytes @ 0x8
  6901                           
  6902  0028                     LCDcmd@c:	
  6903                           ; 2 bytes @ 0x8
  6904                           
  6905  0028                     LCDchar@c:	
  6906                           ; 1 bytes @ 0x8
  6907                           
  6908  0028                     ___lwmod@divisor:	
  6909                           ; 1 bytes @ 0x8
  6910                           
  6911                           
  6912                           ; 2 bytes @ 0x8
  6913  0028                     	ds	1
  6914  0029                     ??_LCDstr:
  6915                           
  6916                           ; 1 bytes @ 0x9
  6917  0029                     	ds	1
  6918  002A                     LCDstr@c:
  6919  002A                     ___lwmod@dividend:	
  6920                           ; 1 bytes @ 0xA
  6921                           
  6922                           
  6923                           ; 2 bytes @ 0xA
  6924  002A                     	ds	1
  6925  002B                     LCDstr@p:
  6926                           
  6927                           ; 1 bytes @ 0xB
  6928  002B                     	ds	1
  6929  002C                     ??___lwmod:
  6930                           
  6931                           ; 1 bytes @ 0xC
  6932  002C                     	ds	1
  6933  002D                     ___lwmod@counter:
  6934                           
  6935                           ; 1 bytes @ 0xD
  6936  002D                     	ds	1
  6937  002E                     ?_sprintf:
  6938  002E                     sprintf@f:	
  6939                           ; 2 bytes @ 0xE
  6940                           
  6941                           
  6942                           ; 2 bytes @ 0xE
  6943  002E                     	ds	8
  6944  0036                     ??_sprintf:
  6945                           
  6946                           ; 1 bytes @ 0x16
  6947  0036                     	ds	4
  6948  003A                     sprintf@ap:
  6949                           
  6950                           ; 1 bytes @ 0x1A
  6951  003A                     	ds	1
  6952  003B                     sprintf@prec:
  6953                           
  6954                           ; 1 bytes @ 0x1B
  6955  003B                     	ds	1
  6956  003C                     sprintf@val:
  6957                           
  6958                           ; 2 bytes @ 0x1C
  6959  003C                     	ds	2
  6960  003E                     sprintf@flag:
  6961                           
  6962                           ; 1 bytes @ 0x1E
  6963  003E                     	ds	1
  6964  003F                     sprintf@width:
  6965                           
  6966                           ; 2 bytes @ 0x1F
  6967  003F                     	ds	2
  6968  0041                     sprintf@c:
  6969                           
  6970                           ; 1 bytes @ 0x21
  6971  0041                     	ds	1
  6972  0042                     sprintf@sp:
  6973                           
  6974                           ; 1 bytes @ 0x22
  6975  0042                     	ds	1
  6976  0043                     ?_lcd:
  6977  0043                     lcd@luminosity:	
  6978                           ; 1 bytes @ 0x23
  6979                           
  6980                           
  6981                           ; 1 bytes @ 0x23
  6982  0043                     	ds	1
  6983  0044                     lcd@alarm:
  6984                           
  6985                           ; 1 bytes @ 0x24
  6986  0044                     	ds	1
  6987  0045                     lcd@ctl:
  6988                           
  6989                           ; 1 bytes @ 0x25
  6990  0045                     	ds	1
  6991  0046                     lcd@h:
  6992                           
  6993                           ; 1 bytes @ 0x26
  6994  0046                     	ds	1
  6995  0047                     lcd@m:
  6996                           
  6997                           ; 1 bytes @ 0x27
  6998  0047                     	ds	1
  6999  0048                     lcd@s:
  7000                           
  7001                           ; 1 bytes @ 0x28
  7002  0048                     	ds	1
  7003  0049                     lcd@state:
  7004                           
  7005                           ; 1 bytes @ 0x29
  7006  0049                     	ds	1
  7007  004A                     lcd@temperature_alarm:
  7008                           
  7009                           ; 1 bytes @ 0x2A
  7010  004A                     	ds	1
  7011  004B                     lcd@luminosity_alarm:
  7012                           
  7013                           ; 1 bytes @ 0x2B
  7014  004B                     	ds	1
  7015  004C                     lcd@alah:
  7016                           
  7017                           ; 1 bytes @ 0x2C
  7018  004C                     	ds	1
  7019  004D                     lcd@alam:
  7020                           
  7021                           ; 1 bytes @ 0x2D
  7022  004D                     	ds	1
  7023  004E                     lcd@alas:
  7024                           
  7025                           ; 1 bytes @ 0x2E
  7026  004E                     	ds	1
  7027  004F                     ??_lcd:
  7028                           
  7029                           ; 1 bytes @ 0x2F
  7030  004F                     	ds	6
  7031  0055                     lcd@buf:
  7032                           
  7033                           ; 17 bytes @ 0x35
  7034  0055                     	ds	17
  7035  0066                     lcd@temperature:
  7036                           
  7037                           ; 1 bytes @ 0x46
  7038  0066                     	ds	1
  7039  0067                     main@c:
  7040                           
  7041                           ; 1 bytes @ 0x47
  7042  0067                     	ds	1
  7043  0068                     main@l:
  7044                           
  7045                           ; 1 bytes @ 0x48
  7046  0068                     	ds	1
  7047  0069                     main@ctl:
  7048                           
  7049                           ; 1 bytes @ 0x49
  7050  0069                     	ds	1
  7051  006A                     _main$2802:
  7052                           
  7053                           ; 1 bytes @ 0x4A
  7054  006A                     	ds	1
  7055  006B                     main@state:
  7056                           
  7057                           ; 1 bytes @ 0x4B
  7058  006B                     	ds	1
  7059                           
  7060                           	psect	maintext
  7061  0E17                     __pmaintext:	
  7062 ;;
  7063 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
  7064 ;;
  7065 ;; *************** function _main *****************
  7066 ;; Defined at:
  7067 ;;		line 181 in file "main.c"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;		None
  7070 ;; Auto vars:     Size  Location     Type
  7071 ;;  buf            17    0        unsigned char [17]
  7072 ;;  state           1   75[BANK0 ] unsigned char 
  7073 ;;  ctl             1   73[BANK0 ] unsigned char 
  7074 ;;  l               1   72[BANK0 ] unsigned char 
  7075 ;;  c               1   71[BANK0 ] unsigned char 
  7076 ;;  c2              1    0        unsigned char 
  7077 ;;  c1              1    0        unsigned char 
  7078 ;;  lc              1    0        unsigned char 
  7079 ;;  hc              1    0        unsigned char 
  7080 ;; Return value:  Size  Location     Type
  7081 ;;                  1    wreg      void 
  7082 ;; Registers used:
  7083 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7084 ;; Tracked objects:
  7085 ;;		On entry : B1F/0
  7086 ;;		On exit  : 0/0
  7087 ;;		Unchanged: 0/0
  7088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7090 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7091 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  7092 ;;      Totals:         0       5      12       0       0       0       0       0       0       0       0       0       
      +0       0
  7093 ;;Total ram usage:       17 bytes
  7094 ;; Hardware stack levels required when called:   10
  7095 ;; This function calls:
  7096 ;;		_LCDinit
  7097 ;;		_SYSTEM_Initialize
  7098 ;;		_TMR0_SetInterruptHandler
  7099 ;;		___lwmod
  7100 ;;		_checkButtonS1
  7101 ;;		_checkButtonS2
  7102 ;;		_check_vars
  7103 ;;		_conf_alarm_flag
  7104 ;;		_conf_alarm_hh
  7105 ;;		_conf_alarm_mm
  7106 ;;		_conf_alarm_ss
  7107 ;;		_conf_clock_hh
  7108 ;;		_conf_clock_mm
  7109 ;;		_conf_clock_ss
  7110 ;;		_conf_lumin
  7111 ;;		_conf_temp
  7112 ;;		_i2c1_driver_open
  7113 ;;		_lcd
  7114 ;;		_lumin
  7115 ;;		_save_vars
  7116 ;;		_tsttc
  7117 ;; This function is called by:
  7118 ;;		Startup code after reset
  7119 ;; This function uses a non-reentrant model
  7120 ;;
  7121                           
  7122                           
  7123                           ;psect for function _main
  7124  0E17                     _main:
  7125  0E17                     l4812:	
  7126                           ;incstack = 0
  7127                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7128                           
  7129                           
  7130                           ;main.c: 183: unsigned char c;;main.c: 184: unsigned char l;;main.c: 185: unsigned char 
      +                          hc;;main.c: 186: unsigned char lc;;main.c: 187: unsigned char c1;;main.c: 188: unsigned 
      +                          char c2;;main.c: 189: unsigned char buf[17];;main.c: 191: uint8_t state = 0;
  7131  0E17  0020               	movlb	0	; select bank0
  7132  0E18  01EB               	clrf	main@state
  7133  0E19                     l4814:
  7134                           
  7135                           ;main.c: 206: SYSTEM_Initialize();
  7136  0E19  3195  259B  318E   	fcall	_SYSTEM_Initialize
  7137  0E1C                     l4816:
  7138                           
  7139                           ;main.c: 209: TMR0_SetInterruptHandler(TMR0_callback);
  7140  0E1C  304B               	movlw	low _TMR0_callback
  7141  0E1D  0020               	movlb	0	; select bank0
  7142  0E1E  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  7143  0E1F  3009               	movlw	high _TMR0_callback
  7144  0E20  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  7145  0E21  3195  2541  318E   	fcall	_TMR0_SetInterruptHandler
  7146  0E24                     l4818:
  7147                           
  7148                           ;main.c: 215: (INTCONbits.GIE = 1);
  7149  0E24  178B               	bsf	11,7	;volatile
  7150  0E25                     l4820:
  7151                           
  7152                           ;main.c: 218: (INTCONbits.PEIE = 1);
  7153  0E25  170B               	bsf	11,6	;volatile
  7154  0E26                     l4822:
  7155                           
  7156                           ;main.c: 226: i2c1_driver_open();
  7157  0E26  3195  2567  318E   	fcall	_i2c1_driver_open
  7158  0E29                     l4824:
  7159                           
  7160                           ;main.c: 227: TRISCbits.TRISC3 = 1;
  7161  0E29  0020               	movlb	0	; select bank0
  7162  0E2A  1593               	bsf	19,3	;volatile
  7163  0E2B                     l4826:
  7164                           
  7165                           ;main.c: 228: TRISCbits.TRISC4 = 1;
  7166  0E2B  1613               	bsf	19,4	;volatile
  7167  0E2C                     l4828:
  7168                           
  7169                           ;main.c: 229: WPUC3 = 1;
  7170  0E2C  003E               	movlb	30	; select bank30
  7171  0E2D  15CF               	bsf	79,3	;volatile
  7172  0E2E                     l4830:
  7173                           
  7174                           ;main.c: 230: WPUC4 = 1;
  7175  0E2E  164F               	bsf	79,4	;volatile
  7176  0E2F                     l4832:
  7177                           
  7178                           ;main.c: 233: unsigned char ctl=0;
  7179  0E2F  0020               	movlb	0	; select bank0
  7180  0E30  01E9               	clrf	main@ctl
  7181                           
  7182                           ;main.c: 234: LCDinit();
  7183  0E31  3189  21A9  318E   	fcall	_LCDinit
  7184                           
  7185                           ;main.c: 236: check_vars();
  7186  0E34  318B  23A4  318E   	fcall	_check_vars
  7187  0E37                     l4834:
  7188                           
  7189                           ;main.c: 239: {;main.c: 241: if (PMON != 0 && (timer_flag%PMON) == 0){
  7190  0E37  087D               	movf	_PMON,w
  7191  0E38  1903               	btfsc	3,2
  7192  0E39  2E3B               	goto	u4121
  7193  0E3A  2E3C               	goto	u4120
  7194  0E3B                     u4121:
  7195  0E3B  2E65               	goto	l551
  7196  0E3C                     u4120:
  7197  0E3C                     l4836:
  7198  0E3C  087D               	movf	_PMON,w
  7199  0E3D  0021               	movlb	1	; select bank1
  7200  0E3E  00A0               	movwf	??_main^(0+128)
  7201  0E3F  01A1               	clrf	(??_main^(0+128)+1)
  7202  0E40  0820               	movf	??_main^(0+128),w
  7203  0E41  0020               	movlb	0	; select bank0
  7204  0E42  00A8               	movwf	___lwmod@divisor
  7205  0E43  0021               	movlb	1	; select bank1
  7206  0E44  0821               	movf	(??_main+1)^(0+128),w
  7207  0E45  0020               	movlb	0	; select bank0
  7208  0E46  00A9               	movwf	___lwmod@divisor+1
  7209  0E47  087C               	movf	_timer_flag+1,w	;volatile
  7210  0E48  00AB               	movwf	___lwmod@dividend+1
  7211  0E49  087B               	movf	_timer_flag,w	;volatile
  7212  0E4A  00AA               	movwf	___lwmod@dividend
  7213  0E4B  3197  2790  318E   	fcall	___lwmod
  7214  0E4E  0020               	movlb	0	; select bank0
  7215  0E4F  0828               	movf	?___lwmod,w
  7216  0E50  0429               	iorwf	?___lwmod+1,w
  7217  0E51  1D03               	btfss	3,2
  7218  0E52  2E54               	goto	u4131
  7219  0E53  2E55               	goto	u4130
  7220  0E54                     u4131:
  7221  0E54  2E65               	goto	l551
  7222  0E55                     u4130:
  7223  0E55                     l4838:
  7224                           
  7225                           ;main.c: 242: c = tsttc();
  7226  0E55  318C  24C7  318E   	fcall	_tsttc
  7227  0E58  0021               	movlb	1	; select bank1
  7228  0E59  00A0               	movwf	??_main^(0+128)
  7229  0E5A  0820               	movf	??_main^(0+128),w
  7230  0E5B  0020               	movlb	0	; select bank0
  7231  0E5C  00E7               	movwf	main@c
  7232                           
  7233                           ;main.c: 243: l = lumin();
  7234  0E5D  3197  2731  318E   	fcall	_lumin
  7235  0E60  0021               	movlb	1	; select bank1
  7236  0E61  00A0               	movwf	??_main^(0+128)
  7237  0E62  0820               	movf	??_main^(0+128),w
  7238  0E63  0020               	movlb	0	; select bank0
  7239  0E64  00E8               	movwf	main@l
  7240  0E65                     l551:
  7241                           
  7242                           ;main.c: 245: };main.c: 246: checkButtonS1();
  7243  0E65  3196  2677  318E   	fcall	_checkButtonS1
  7244                           
  7245                           ;main.c: 247: checkButtonS2();
  7246  0E68  3196  2694  318E   	fcall	_checkButtonS2
  7247                           
  7248                           ;main.c: 249: switch(state){
  7249  0E6B  2F62               	goto	l4942
  7250  0E6C                     l4840:
  7251                           
  7252                           ;main.c: 252: if(btn1State == 1){
  7253  0E6C  036D               	decf	_btn1State,w
  7254  0E6D  1D03               	btfss	3,2
  7255  0E6E  2E70               	goto	u4141
  7256  0E6F  2E71               	goto	u4140
  7257  0E70                     u4141:
  7258  0E70  2F8C               	goto	l4944
  7259  0E71                     u4140:
  7260  0E71                     l4842:
  7261                           
  7262                           ;main.c: 254: state = 1;
  7263  0E71  01EB               	clrf	main@state
  7264  0E72  0AEB               	incf	main@state,f
  7265  0E73  2F8C               	goto	l4944
  7266  0E74                     l4844:
  7267                           
  7268                           ;main.c: 259: if(btn2State == 1){
  7269  0E74  036C               	decf	_btn2State,w
  7270  0E75  1D03               	btfss	3,2
  7271  0E76  2E78               	goto	u4151
  7272  0E77  2E79               	goto	u4150
  7273  0E78                     u4151:
  7274  0E78  2E7D               	goto	l4848
  7275  0E79                     u4150:
  7276  0E79                     l4846:
  7277                           
  7278                           ;main.c: 261: conf_clock_hh();
  7279  0E79  3195  25FB  318E   	fcall	_conf_clock_hh
  7280                           
  7281                           ;main.c: 262: }else if(btn1State == 1){
  7282  0E7C  2F8C               	goto	l4944
  7283  0E7D                     l4848:
  7284  0E7D  036D               	decf	_btn1State,w
  7285  0E7E  1D03               	btfss	3,2
  7286  0E7F  2E81               	goto	u4161
  7287  0E80  2E82               	goto	u4160
  7288  0E81                     u4161:
  7289  0E81  2F8C               	goto	l4944
  7290  0E82                     u4160:
  7291  0E82                     l4850:
  7292                           
  7293                           ;main.c: 264: state = 2;
  7294  0E82  3002               	movlw	2
  7295  0E83  0021               	movlb	1	; select bank1
  7296  0E84  00A0               	movwf	??_main^(0+128)
  7297  0E85  0820               	movf	??_main^(0+128),w
  7298  0E86  0020               	movlb	0	; select bank0
  7299  0E87  00EB               	movwf	main@state
  7300  0E88  2F8C               	goto	l4944
  7301  0E89                     l4852:
  7302                           
  7303                           ;main.c: 268: if(btn2State == 1){
  7304  0E89  036C               	decf	_btn2State,w
  7305  0E8A  1D03               	btfss	3,2
  7306  0E8B  2E8D               	goto	u4171
  7307  0E8C  2E8E               	goto	u4170
  7308  0E8D                     u4171:
  7309  0E8D  2E92               	goto	l4856
  7310  0E8E                     u4170:
  7311  0E8E                     l4854:
  7312                           
  7313                           ;main.c: 270: conf_clock_mm();
  7314  0E8E  3188  2000  318E   	fcall	_conf_clock_mm
  7315                           
  7316                           ;main.c: 271: }else if(btn1State == 1){
  7317  0E91  2F8C               	goto	l4944
  7318  0E92                     l4856:
  7319  0E92  036D               	decf	_btn1State,w
  7320  0E93  1D03               	btfss	3,2
  7321  0E94  2E96               	goto	u4181
  7322  0E95  2E97               	goto	u4180
  7323  0E96                     u4181:
  7324  0E96  2F8C               	goto	l4944
  7325  0E97                     u4180:
  7326  0E97                     l4858:
  7327                           
  7328                           ;main.c: 273: state = 3;
  7329  0E97  3003               	movlw	3
  7330  0E98  0021               	movlb	1	; select bank1
  7331  0E99  00A0               	movwf	??_main^(0+128)
  7332  0E9A  0820               	movf	??_main^(0+128),w
  7333  0E9B  0020               	movlb	0	; select bank0
  7334  0E9C  00EB               	movwf	main@state
  7335  0E9D  2F8C               	goto	l4944
  7336  0E9E                     l4860:
  7337                           
  7338                           ;main.c: 277: if(btn2State == 1){
  7339  0E9E  036C               	decf	_btn2State,w
  7340  0E9F  1D03               	btfss	3,2
  7341  0EA0  2EA2               	goto	u4191
  7342  0EA1  2EA3               	goto	u4190
  7343  0EA2                     u4191:
  7344  0EA2  2EA7               	goto	l4864
  7345  0EA3                     u4190:
  7346  0EA3                     l4862:
  7347                           
  7348                           ;main.c: 279: conf_clock_ss();
  7349  0EA3  3187  27FB  318E   	fcall	_conf_clock_ss
  7350                           
  7351                           ;main.c: 280: }else if(btn1State == 1){
  7352  0EA6  2F8C               	goto	l4944
  7353  0EA7                     l4864:
  7354  0EA7  036D               	decf	_btn1State,w
  7355  0EA8  1D03               	btfss	3,2
  7356  0EA9  2EAB               	goto	u4201
  7357  0EAA  2EAC               	goto	u4200
  7358  0EAB                     u4201:
  7359  0EAB  2F8C               	goto	l4944
  7360  0EAC                     u4200:
  7361  0EAC                     l4866:
  7362                           
  7363                           ;main.c: 282: state = 4;
  7364  0EAC  3004               	movlw	4
  7365  0EAD  0021               	movlb	1	; select bank1
  7366  0EAE  00A0               	movwf	??_main^(0+128)
  7367  0EAF  0820               	movf	??_main^(0+128),w
  7368  0EB0  0020               	movlb	0	; select bank0
  7369  0EB1  00EB               	movwf	main@state
  7370  0EB2  2F8C               	goto	l4944
  7371  0EB3                     l4868:
  7372                           
  7373                           ;main.c: 286: if(btn2State == 1){
  7374  0EB3  036C               	decf	_btn2State,w
  7375  0EB4  1D03               	btfss	3,2
  7376  0EB5  2EB7               	goto	u4211
  7377  0EB6  2EB8               	goto	u4210
  7378  0EB7                     u4211:
  7379  0EB7  2EBF               	goto	l4872
  7380  0EB8                     u4210:
  7381  0EB8                     l4870:
  7382                           
  7383                           ;main.c: 288: state = 5;
  7384  0EB8  3005               	movlw	5
  7385  0EB9  0021               	movlb	1	; select bank1
  7386  0EBA  00A0               	movwf	??_main^(0+128)
  7387  0EBB  0820               	movf	??_main^(0+128),w
  7388  0EBC  0020               	movlb	0	; select bank0
  7389  0EBD  00EB               	movwf	main@state
  7390                           
  7391                           ;main.c: 289: }else if(btn1State == 1){
  7392  0EBE  2F8C               	goto	l4944
  7393  0EBF                     l4872:
  7394  0EBF  036D               	decf	_btn1State,w
  7395  0EC0  1D03               	btfss	3,2
  7396  0EC1  2EC3               	goto	u4221
  7397  0EC2  2EC4               	goto	u4220
  7398  0EC3                     u4221:
  7399  0EC3  2F8C               	goto	l4944
  7400  0EC4                     u4220:
  7401  0EC4                     l4874:
  7402                           
  7403                           ;main.c: 291: state = 8;
  7404  0EC4  3008               	movlw	8
  7405  0EC5  0021               	movlb	1	; select bank1
  7406  0EC6  00A0               	movwf	??_main^(0+128)
  7407  0EC7  0820               	movf	??_main^(0+128),w
  7408  0EC8  0020               	movlb	0	; select bank0
  7409  0EC9  00EB               	movwf	main@state
  7410  0ECA  2F8C               	goto	l4944
  7411  0ECB                     l4876:
  7412                           
  7413                           ;main.c: 295: if(btn2State == 1){
  7414  0ECB  036C               	decf	_btn2State,w
  7415  0ECC  1D03               	btfss	3,2
  7416  0ECD  2ECF               	goto	u4231
  7417  0ECE  2ED0               	goto	u4230
  7418  0ECF                     u4231:
  7419  0ECF  2ED4               	goto	l4880
  7420  0ED0                     u4230:
  7421  0ED0                     l4878:
  7422                           
  7423                           ;main.c: 297: conf_alarm_hh();
  7424  0ED0  3195  25AB  318E   	fcall	_conf_alarm_hh
  7425                           
  7426                           ;main.c: 298: }else if(btn1State == 1){
  7427  0ED3  2F8C               	goto	l4944
  7428  0ED4                     l4880:
  7429  0ED4  036D               	decf	_btn1State,w
  7430  0ED5  1D03               	btfss	3,2
  7431  0ED6  2ED8               	goto	u4241
  7432  0ED7  2ED9               	goto	u4240
  7433  0ED8                     u4241:
  7434  0ED8  2F8C               	goto	l4944
  7435  0ED9                     u4240:
  7436  0ED9                     l4882:
  7437                           
  7438                           ;main.c: 300: state = 6;
  7439  0ED9  3006               	movlw	6
  7440  0EDA  0021               	movlb	1	; select bank1
  7441  0EDB  00A0               	movwf	??_main^(0+128)
  7442  0EDC  0820               	movf	??_main^(0+128),w
  7443  0EDD  0020               	movlb	0	; select bank0
  7444  0EDE  00EB               	movwf	main@state
  7445  0EDF  2F8C               	goto	l4944
  7446  0EE0                     l4884:
  7447                           
  7448                           ;main.c: 304: if(btn2State == 1){
  7449  0EE0  036C               	decf	_btn2State,w
  7450  0EE1  1D03               	btfss	3,2
  7451  0EE2  2EE4               	goto	u4251
  7452  0EE3  2EE5               	goto	u4250
  7453  0EE4                     u4251:
  7454  0EE4  2EE9               	goto	l4888
  7455  0EE5                     u4250:
  7456  0EE5                     l4886:
  7457                           
  7458                           ;main.c: 306: conf_alarm_mm();
  7459  0EE5  3195  25BB  318E   	fcall	_conf_alarm_mm
  7460                           
  7461                           ;main.c: 307: }else if(btn1State == 1){
  7462  0EE8  2F8C               	goto	l4944
  7463  0EE9                     l4888:
  7464  0EE9  036D               	decf	_btn1State,w
  7465  0EEA  1D03               	btfss	3,2
  7466  0EEB  2EED               	goto	u4261
  7467  0EEC  2EEE               	goto	u4260
  7468  0EED                     u4261:
  7469  0EED  2F8C               	goto	l4944
  7470  0EEE                     u4260:
  7471  0EEE                     l4890:
  7472                           
  7473                           ;main.c: 309: state = 7;
  7474  0EEE  3007               	movlw	7
  7475  0EEF  0021               	movlb	1	; select bank1
  7476  0EF0  00A0               	movwf	??_main^(0+128)
  7477  0EF1  0820               	movf	??_main^(0+128),w
  7478  0EF2  0020               	movlb	0	; select bank0
  7479  0EF3  00EB               	movwf	main@state
  7480  0EF4  2F8C               	goto	l4944
  7481  0EF5                     l4892:
  7482                           
  7483                           ;main.c: 313: if(btn2State == 1){
  7484  0EF5  036C               	decf	_btn2State,w
  7485  0EF6  1D03               	btfss	3,2
  7486  0EF7  2EF9               	goto	u4271
  7487  0EF8  2EFA               	goto	u4270
  7488  0EF9                     u4271:
  7489  0EF9  2EFE               	goto	l4896
  7490  0EFA                     u4270:
  7491  0EFA                     l4894:
  7492                           
  7493                           ;main.c: 315: conf_alarm_ss();
  7494  0EFA  3195  25CB  318E   	fcall	_conf_alarm_ss
  7495                           
  7496                           ;main.c: 316: }else if(btn1State == 1){
  7497  0EFD  2F8C               	goto	l4944
  7498  0EFE                     l4896:
  7499  0EFE  036D               	decf	_btn1State,w
  7500  0EFF  1D03               	btfss	3,2
  7501  0F00  2F02               	goto	u4281
  7502  0F01  2F03               	goto	u4280
  7503  0F02                     u4281:
  7504  0F02  2F8C               	goto	l4944
  7505  0F03                     u4280:
  7506  0F03  2EC4               	goto	l4874
  7507  0F04                     l4900:
  7508                           
  7509                           ;main.c: 322: if(btn2State == 1){
  7510  0F04  036C               	decf	_btn2State,w
  7511  0F05  1D03               	btfss	3,2
  7512  0F06  2F08               	goto	u4291
  7513  0F07  2F09               	goto	u4290
  7514  0F08                     u4291:
  7515  0F08  2F10               	goto	l4904
  7516  0F09                     u4290:
  7517  0F09                     l4902:
  7518                           
  7519                           ;main.c: 324: state = 9;
  7520  0F09  3009               	movlw	9
  7521  0F0A  0021               	movlb	1	; select bank1
  7522  0F0B  00A0               	movwf	??_main^(0+128)
  7523  0F0C  0820               	movf	??_main^(0+128),w
  7524  0F0D  0020               	movlb	0	; select bank0
  7525  0F0E  00EB               	movwf	main@state
  7526                           
  7527                           ;main.c: 325: }else if(btn1State == 1){
  7528  0F0F  2F8C               	goto	l4944
  7529  0F10                     l4904:
  7530  0F10  036D               	decf	_btn1State,w
  7531  0F11  1D03               	btfss	3,2
  7532  0F12  2F14               	goto	u4301
  7533  0F13  2F15               	goto	u4300
  7534  0F14                     u4301:
  7535  0F14  2F8C               	goto	l4944
  7536  0F15                     u4300:
  7537  0F15                     l4906:
  7538                           
  7539                           ;main.c: 327: state = 10;
  7540  0F15  300A               	movlw	10
  7541  0F16  0021               	movlb	1	; select bank1
  7542  0F17  00A0               	movwf	??_main^(0+128)
  7543  0F18  0820               	movf	??_main^(0+128),w
  7544  0F19  0020               	movlb	0	; select bank0
  7545  0F1A  00EB               	movwf	main@state
  7546  0F1B  2F8C               	goto	l4944
  7547  0F1C                     l4908:
  7548                           
  7549                           ;main.c: 331: if(btn2State == 1){
  7550  0F1C  036C               	decf	_btn2State,w
  7551  0F1D  1D03               	btfss	3,2
  7552  0F1E  2F20               	goto	u4311
  7553  0F1F  2F21               	goto	u4310
  7554  0F20                     u4311:
  7555  0F20  2F25               	goto	l4912
  7556  0F21                     u4310:
  7557  0F21                     l4910:
  7558                           
  7559                           ;main.c: 333: conf_temp();
  7560  0F21  3195  25EB  318E   	fcall	_conf_temp
  7561                           
  7562                           ;main.c: 334: }else if(btn1State == 1){
  7563  0F24  2F8C               	goto	l4944
  7564  0F25                     l4912:
  7565  0F25  036D               	decf	_btn1State,w
  7566  0F26  1D03               	btfss	3,2
  7567  0F27  2F29               	goto	u4321
  7568  0F28  2F2A               	goto	u4320
  7569  0F29                     u4321:
  7570  0F29  2F8C               	goto	l4944
  7571  0F2A                     u4320:
  7572  0F2A  2F15               	goto	l4906
  7573  0F2B                     l4916:
  7574                           
  7575                           ;main.c: 340: if(btn2State == 1){
  7576  0F2B  036C               	decf	_btn2State,w
  7577  0F2C  1D03               	btfss	3,2
  7578  0F2D  2F2F               	goto	u4331
  7579  0F2E  2F30               	goto	u4330
  7580  0F2F                     u4331:
  7581  0F2F  2F37               	goto	l4920
  7582  0F30                     u4330:
  7583  0F30                     l4918:
  7584                           
  7585                           ;main.c: 342: state = 11;
  7586  0F30  300B               	movlw	11
  7587  0F31  0021               	movlb	1	; select bank1
  7588  0F32  00A0               	movwf	??_main^(0+128)
  7589  0F33  0820               	movf	??_main^(0+128),w
  7590  0F34  0020               	movlb	0	; select bank0
  7591  0F35  00EB               	movwf	main@state
  7592                           
  7593                           ;main.c: 343: }else if(btn1State == 1){
  7594  0F36  2F8C               	goto	l4944
  7595  0F37                     l4920:
  7596  0F37  036D               	decf	_btn1State,w
  7597  0F38  1D03               	btfss	3,2
  7598  0F39  2F3B               	goto	u4341
  7599  0F3A  2F3C               	goto	u4340
  7600  0F3B                     u4341:
  7601  0F3B  2F8C               	goto	l4944
  7602  0F3C                     u4340:
  7603  0F3C                     l4922:
  7604                           
  7605                           ;main.c: 345: state = 12;
  7606  0F3C  300C               	movlw	12
  7607  0F3D  0021               	movlb	1	; select bank1
  7608  0F3E  00A0               	movwf	??_main^(0+128)
  7609  0F3F  0820               	movf	??_main^(0+128),w
  7610  0F40  0020               	movlb	0	; select bank0
  7611  0F41  00EB               	movwf	main@state
  7612  0F42  2F8C               	goto	l4944
  7613  0F43                     l4924:
  7614                           
  7615                           ;main.c: 349: if(btn2State == 1){
  7616  0F43  036C               	decf	_btn2State,w
  7617  0F44  1D03               	btfss	3,2
  7618  0F45  2F47               	goto	u4351
  7619  0F46  2F48               	goto	u4350
  7620  0F47                     u4351:
  7621  0F47  2F4C               	goto	l4928
  7622  0F48                     u4350:
  7623  0F48                     l4926:
  7624                           
  7625                           ;main.c: 351: conf_lumin();
  7626  0F48  3195  25DB  318E   	fcall	_conf_lumin
  7627                           
  7628                           ;main.c: 352: }else if(btn1State == 1){
  7629  0F4B  2F8C               	goto	l4944
  7630  0F4C                     l4928:
  7631  0F4C  036D               	decf	_btn1State,w
  7632  0F4D  1D03               	btfss	3,2
  7633  0F4E  2F50               	goto	u4361
  7634  0F4F  2F51               	goto	u4360
  7635  0F50                     u4361:
  7636  0F50  2F8C               	goto	l4944
  7637  0F51                     u4360:
  7638  0F51  2F3C               	goto	l4922
  7639  0F52                     l4932:
  7640                           
  7641                           ;main.c: 358: if(btn2State == 1){
  7642  0F52  036C               	decf	_btn2State,w
  7643  0F53  1D03               	btfss	3,2
  7644  0F54  2F56               	goto	u4371
  7645  0F55  2F57               	goto	u4370
  7646  0F56                     u4371:
  7647  0F56  2F5B               	goto	l4936
  7648  0F57                     u4370:
  7649  0F57                     l4934:
  7650                           
  7651                           ;main.c: 360: conf_alarm_flag();
  7652  0F57  3195  255C  318E   	fcall	_conf_alarm_flag
  7653                           
  7654                           ;main.c: 361: }else if(btn1State == 1){
  7655  0F5A  2F8C               	goto	l4944
  7656  0F5B                     l4936:
  7657  0F5B  036D               	decf	_btn1State,w
  7658  0F5C  1D03               	btfss	3,2
  7659  0F5D  2F5F               	goto	u4381
  7660  0F5E  2F60               	goto	u4380
  7661  0F5F                     u4381:
  7662  0F5F  2F8C               	goto	l4944
  7663  0F60                     u4380:
  7664  0F60                     l4938:
  7665                           
  7666                           ;main.c: 363: state = 0;
  7667  0F60  01EB               	clrf	main@state
  7668  0F61  2F8C               	goto	l4944
  7669  0F62                     l4942:
  7670  0F62  0020               	movlb	0	; select bank0
  7671  0F63  086B               	movf	main@state,w
  7672                           
  7673                           ; Switch size 1, requested type "simple"
  7674                           ; Number of cases is 13, Range of values is 0 to 12
  7675                           ; switch strategies available:
  7676                           ; Name         Instructions Cycles
  7677                           ; direct_byte           32     6 (fixed)
  7678                           ; simple_byte           40    21 (average)
  7679                           ; jumptable            260     6 (fixed)
  7680                           ;	Chosen strategy is simple_byte
  7681  0F64  3A00               	xorlw	0	; case 0
  7682  0F65  1903               	skipnz
  7683  0F66  2E6C               	goto	l4840
  7684  0F67  3A01               	xorlw	1	; case 1
  7685  0F68  1903               	skipnz
  7686  0F69  2E74               	goto	l4844
  7687  0F6A  3A03               	xorlw	3	; case 2
  7688  0F6B  1903               	skipnz
  7689  0F6C  2E89               	goto	l4852
  7690  0F6D  3A01               	xorlw	1	; case 3
  7691  0F6E  1903               	skipnz
  7692  0F6F  2E9E               	goto	l4860
  7693  0F70  3A07               	xorlw	7	; case 4
  7694  0F71  1903               	skipnz
  7695  0F72  2EB3               	goto	l4868
  7696  0F73  3A01               	xorlw	1	; case 5
  7697  0F74  1903               	skipnz
  7698  0F75  2ECB               	goto	l4876
  7699  0F76  3A03               	xorlw	3	; case 6
  7700  0F77  1903               	skipnz
  7701  0F78  2EE0               	goto	l4884
  7702  0F79  3A01               	xorlw	1	; case 7
  7703  0F7A  1903               	skipnz
  7704  0F7B  2EF5               	goto	l4892
  7705  0F7C  3A0F               	xorlw	15	; case 8
  7706  0F7D  1903               	skipnz
  7707  0F7E  2F04               	goto	l4900
  7708  0F7F  3A01               	xorlw	1	; case 9
  7709  0F80  1903               	skipnz
  7710  0F81  2F1C               	goto	l4908
  7711  0F82  3A03               	xorlw	3	; case 10
  7712  0F83  1903               	skipnz
  7713  0F84  2F2B               	goto	l4916
  7714  0F85  3A01               	xorlw	1	; case 11
  7715  0F86  1903               	skipnz
  7716  0F87  2F43               	goto	l4924
  7717  0F88  3A07               	xorlw	7	; case 12
  7718  0F89  1903               	skipnz
  7719  0F8A  2F52               	goto	l4932
  7720  0F8B  2F8C               	goto	l4944
  7721  0F8C                     l4944:
  7722                           
  7723                           ;main.c: 368: if (state != 0){
  7724  0F8C  0020               	movlb	0	; select bank0
  7725  0F8D  086B               	movf	main@state,w
  7726  0F8E  1903               	btfsc	3,2
  7727  0F8F  2F91               	goto	u4391
  7728  0F90  2F92               	goto	u4390
  7729  0F91                     u4391:
  7730  0F91  2F95               	goto	l604
  7731  0F92                     u4390:
  7732  0F92                     l4946:
  7733                           
  7734                           ;main.c: 369: save_vars();
  7735  0F92  318A  221F  318E   	fcall	_save_vars
  7736  0F95                     l604:
  7737                           
  7738                           ;main.c: 370: };main.c: 372: lcd(c, l, ALAF, ctl, CLKH, CLKM, (timer_flag%60), state, AL
      +                          AT, ALAL, ALAH, ALAM, ALAS);
  7739  0F95  303C               	movlw	60
  7740  0F96  0020               	movlb	0	; select bank0
  7741  0F97  00A8               	movwf	___lwmod@divisor
  7742  0F98  3000               	movlw	0
  7743  0F99  00A9               	movwf	___lwmod@divisor+1
  7744  0F9A  087C               	movf	_timer_flag+1,w	;volatile
  7745  0F9B  00AB               	movwf	___lwmod@dividend+1
  7746  0F9C  087B               	movf	_timer_flag,w	;volatile
  7747  0F9D  00AA               	movwf	___lwmod@dividend
  7748  0F9E  3197  2790  318E   	fcall	___lwmod
  7749  0FA1  0020               	movlb	0	; select bank0
  7750  0FA2  0828               	movf	?___lwmod,w
  7751  0FA3  0021               	movlb	1	; select bank1
  7752  0FA4  00A0               	movwf	??_main^(0+128)
  7753  0FA5  0820               	movf	??_main^(0+128),w
  7754  0FA6  0020               	movlb	0	; select bank0
  7755  0FA7  00EA               	movwf	_main$2802
  7756  0FA8                     l4948:
  7757                           
  7758                           ;main.c: 370: };main.c: 372: lcd(c, l, ALAF, ctl, CLKH, CLKM, (timer_flag%60), state, AL
      +                          AT, ALAL, ALAH, ALAM, ALAS);
  7759  0FA8  0868               	movf	main@l,w
  7760  0FA9  0021               	movlb	1	; select bank1
  7761  0FAA  00A0               	movwf	??_main^(0+128)
  7762  0FAB  0820               	movf	??_main^(0+128),w
  7763  0FAC  0020               	movlb	0	; select bank0
  7764  0FAD  00C3               	movwf	lcd@luminosity
  7765  0FAE  0021               	movlb	1	; select bank1
  7766  0FAF  0833               	movf	_ALAF^(0+128),w
  7767  0FB0  00A1               	movwf	(??_main+1)^(0+128)
  7768  0FB1  0821               	movf	(??_main+1)^(0+128),w
  7769  0FB2  0020               	movlb	0	; select bank0
  7770  0FB3  00C4               	movwf	lcd@alarm
  7771  0FB4  0869               	movf	main@ctl,w
  7772  0FB5  0021               	movlb	1	; select bank1
  7773  0FB6  00A2               	movwf	(??_main+2)^(0+128)
  7774  0FB7  0822               	movf	(??_main+2)^(0+128),w
  7775  0FB8  0020               	movlb	0	; select bank0
  7776  0FB9  00C5               	movwf	lcd@ctl
  7777  0FBA  086F               	movf	_CLKH,w
  7778  0FBB  0021               	movlb	1	; select bank1
  7779  0FBC  00A3               	movwf	(??_main+3)^(0+128)
  7780  0FBD  0823               	movf	(??_main+3)^(0+128),w
  7781  0FBE  0020               	movlb	0	; select bank0
  7782  0FBF  00C6               	movwf	lcd@h
  7783  0FC0  086E               	movf	_CLKM,w
  7784  0FC1  0021               	movlb	1	; select bank1
  7785  0FC2  00A4               	movwf	(??_main+4)^(0+128)
  7786  0FC3  0824               	movf	(??_main+4)^(0+128),w
  7787  0FC4  0020               	movlb	0	; select bank0
  7788  0FC5  00C7               	movwf	lcd@m
  7789  0FC6  086A               	movf	_main$2802,w
  7790  0FC7  0021               	movlb	1	; select bank1
  7791  0FC8  00A5               	movwf	(??_main+5)^(0+128)
  7792  0FC9  0825               	movf	(??_main+5)^(0+128),w
  7793  0FCA  0020               	movlb	0	; select bank0
  7794  0FCB  00C8               	movwf	lcd@s
  7795  0FCC  086B               	movf	main@state,w
  7796  0FCD  0021               	movlb	1	; select bank1
  7797  0FCE  00A6               	movwf	(??_main+6)^(0+128)
  7798  0FCF  0826               	movf	(??_main+6)^(0+128),w
  7799  0FD0  0020               	movlb	0	; select bank0
  7800  0FD1  00C9               	movwf	lcd@state
  7801  0FD2  0021               	movlb	1	; select bank1
  7802  0FD3  0837               	movf	_ALAT^(0+128),w
  7803  0FD4  00A7               	movwf	(??_main+7)^(0+128)
  7804  0FD5  0827               	movf	(??_main+7)^(0+128),w
  7805  0FD6  0020               	movlb	0	; select bank0
  7806  0FD7  00CA               	movwf	lcd@temperature_alarm
  7807  0FD8  0021               	movlb	1	; select bank1
  7808  0FD9  0836               	movf	_ALAL^(0+128),w
  7809  0FDA  00A8               	movwf	(??_main+8)^(0+128)
  7810  0FDB  0828               	movf	(??_main+8)^(0+128),w
  7811  0FDC  0020               	movlb	0	; select bank0
  7812  0FDD  00CB               	movwf	lcd@luminosity_alarm
  7813  0FDE  0021               	movlb	1	; select bank1
  7814  0FDF  0838               	movf	_ALAH^(0+128),w
  7815  0FE0  00A9               	movwf	(??_main+9)^(0+128)
  7816  0FE1  0829               	movf	(??_main+9)^(0+128),w
  7817  0FE2  0020               	movlb	0	; select bank0
  7818  0FE3  00CC               	movwf	lcd@alah
  7819  0FE4  0021               	movlb	1	; select bank1
  7820  0FE5  0835               	movf	_ALAM^(0+128),w
  7821  0FE6  00AA               	movwf	(??_main+10)^(0+128)
  7822  0FE7  082A               	movf	(??_main+10)^(0+128),w
  7823  0FE8  0020               	movlb	0	; select bank0
  7824  0FE9  00CD               	movwf	lcd@alam
  7825  0FEA  0021               	movlb	1	; select bank1
  7826  0FEB  0834               	movf	_ALAS^(0+128),w
  7827  0FEC  00AB               	movwf	(??_main+11)^(0+128)
  7828  0FED  082B               	movf	(??_main+11)^(0+128),w
  7829  0FEE  0020               	movlb	0	; select bank0
  7830  0FEF  00CE               	movwf	lcd@alas
  7831  0FF0  0867               	movf	main@c,w
  7832  0FF1  3180  2062  318E   	fcall	_lcd
  7833  0FF4                     l4950:
  7834                           
  7835                           ;main.c: 373: _delay((unsigned long)((100)*(1000000/4000.0)));
  7836  0FF4  3021               	movlw	33
  7837  0FF5  0021               	movlb	1	; select bank1
  7838  0FF6  00A0               	movwf	??_main^(0+128)
  7839  0FF7  3076               	movlw	118
  7840  0FF8                     u4417:
  7841  0FF8  0B89               	decfsz	9,f
  7842  0FF9  2FF8               	goto	u4417
  7843  0FFA  0BA0               	decfsz	??_main^(0+128),f
  7844  0FFB  2FF8               	goto	u4417
  7845  0FFC  0000               	nop
  7846  0FFD  2E37               	goto	l4834
  7847  0FFE  3180  2828         	ljmp	start
  7848  1000                     __end_of_main:
  7849                           
  7850                           	psect	text1
  7851  0CC7                     __ptext1:	
  7852 ;; *************** function _tsttc *****************
  7853 ;; Defined at:
  7854 ;;		line 495 in file "main.c"
  7855 ;; Parameters:    Size  Location     Type
  7856 ;;		None
  7857 ;; Auto vars:     Size  Location     Type
  7858 ;;  value           1    3[BANK0 ] unsigned char 
  7859 ;; Return value:  Size  Location     Type
  7860 ;;                  1    wreg      unsigned char 
  7861 ;; Registers used:
  7862 ;;		wreg, status,2, status,0, pclath, cstack
  7863 ;; Tracked objects:
  7864 ;;		On entry : 0/0
  7865 ;;		On exit  : 0/0
  7866 ;;		Unchanged: 0/0
  7867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7869 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7870 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7871 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7872 ;;Total ram usage:        2 bytes
  7873 ;; Hardware stack levels used:    1
  7874 ;; Hardware stack levels required when called:    6
  7875 ;; This function calls:
  7876 ;;		_ReadI2C
  7877 ;;		_WriteI2C
  7878 ;; This function is called by:
  7879 ;;		_main
  7880 ;; This function uses a non-reentrant model
  7881 ;;
  7882                           
  7883                           
  7884                           ;psect for function _tsttc
  7885  0CC7                     _tsttc:
  7886  0CC7                     l642:	
  7887                           ;incstack = 0
  7888                           ; Regs used in _tsttc: [wreg+status,2+status,0+pclath+cstack]
  7889                           ;main.c: 496: unsigned char value;;main.c: 497: do{
  7890                           
  7891  0CC7                     l4226:	
  7892                           ;main.c: 498: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7893                           
  7894  0CC7  0023               	movlb	3	; select bank3
  7895  0CC8  0C0F               	rrf	15,w	;volatile
  7896  0CC9  0C89               	rrf	9,f
  7897  0CCA  3901               	andlw	1
  7898  0CCB  0020               	movlb	0	; select bank0
  7899  0CCC  00A2               	movwf	??_tsttc
  7900  0CCD  0023               	movlb	3	; select bank3
  7901  0CCE  0811               	movf	17,w	;volatile
  7902  0CCF  391F               	andlw	31
  7903  0CD0  0020               	movlb	0	; select bank0
  7904  0CD1  0422               	iorwf	??_tsttc,w
  7905  0CD2  1D03               	btfss	3,2
  7906  0CD3  2CD5               	goto	u3211
  7907  0CD4  2CD6               	goto	u3210
  7908  0CD5                     u3211:
  7909  0CD5  2CC7               	goto	l4226
  7910  0CD6                     u3210:
  7911  0CD6                     l645:
  7912                           
  7913                           ;main.c: 499: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
  7914  0CD6  0023               	movlb	3	; select bank3
  7915  0CD7  1411               	bsf	17,0	;volatile
  7916  0CD8                     l646:
  7917  0CD8  1811               	btfsc	17,0	;volatile
  7918  0CD9  2CDB               	goto	u3221
  7919  0CDA  2CDC               	goto	u3220
  7920  0CDB                     u3221:
  7921  0CDB  2CD8               	goto	l646
  7922  0CDC                     u3220:
  7923  0CDC                     l4228:
  7924  0CDC  0023               	movlb	3	; select bank3
  7925  0CDD  0C0F               	rrf	15,w	;volatile
  7926  0CDE  0C89               	rrf	9,f
  7927  0CDF  3901               	andlw	1
  7928  0CE0  0020               	movlb	0	; select bank0
  7929  0CE1  00A2               	movwf	??_tsttc
  7930  0CE2  0023               	movlb	3	; select bank3
  7931  0CE3  0811               	movf	17,w	;volatile
  7932  0CE4  391F               	andlw	31
  7933  0CE5  0020               	movlb	0	; select bank0
  7934  0CE6  0422               	iorwf	??_tsttc,w
  7935  0CE7  1D03               	btfss	3,2
  7936  0CE8  2CEA               	goto	u3231
  7937  0CE9  2CEB               	goto	u3230
  7938  0CEA                     u3231:
  7939  0CEA  2CDC               	goto	l4228
  7940  0CEB                     u3230:
  7941  0CEB                     l4230:
  7942                           
  7943                           ;main.c: 501: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7944  0CEB  309A               	movlw	154
  7945  0CEC  3188  20F1  318C   	fcall	_WriteI2C
  7946  0CEF                     l4232:
  7947  0CEF  0023               	movlb	3	; select bank3
  7948  0CF0  0C0F               	rrf	15,w	;volatile
  7949  0CF1  0C89               	rrf	9,f
  7950  0CF2  3901               	andlw	1
  7951  0CF3  0020               	movlb	0	; select bank0
  7952  0CF4  00A2               	movwf	??_tsttc
  7953  0CF5  0023               	movlb	3	; select bank3
  7954  0CF6  0811               	movf	17,w	;volatile
  7955  0CF7  391F               	andlw	31
  7956  0CF8  0020               	movlb	0	; select bank0
  7957  0CF9  0422               	iorwf	??_tsttc,w
  7958  0CFA  1D03               	btfss	3,2
  7959  0CFB  2CFD               	goto	u3241
  7960  0CFC  2CFE               	goto	u3240
  7961  0CFD                     u3241:
  7962  0CFD  2CEF               	goto	l4232
  7963  0CFE                     u3240:
  7964  0CFE                     l4234:
  7965                           
  7966                           ;main.c: 502: WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  7967  0CFE  3001               	movlw	1
  7968  0CFF  3188  20F1  318C   	fcall	_WriteI2C
  7969  0D02                     l4236:
  7970  0D02  0023               	movlb	3	; select bank3
  7971  0D03  0C0F               	rrf	15,w	;volatile
  7972  0D04  0C89               	rrf	9,f
  7973  0D05  3901               	andlw	1
  7974  0D06  0020               	movlb	0	; select bank0
  7975  0D07  00A2               	movwf	??_tsttc
  7976  0D08  0023               	movlb	3	; select bank3
  7977  0D09  0811               	movf	17,w	;volatile
  7978  0D0A  391F               	andlw	31
  7979  0D0B  0020               	movlb	0	; select bank0
  7980  0D0C  0422               	iorwf	??_tsttc,w
  7981  0D0D  1D03               	btfss	3,2
  7982  0D0E  2D10               	goto	u3251
  7983  0D0F  2D11               	goto	u3250
  7984  0D10                     u3251:
  7985  0D10  2D02               	goto	l4236
  7986  0D11                     u3250:
  7987  0D11                     l657:
  7988                           
  7989                           ;main.c: 503: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
  7990  0D11  0023               	movlb	3	; select bank3
  7991  0D12  1491               	bsf	17,1	;volatile
  7992  0D13                     l658:
  7993  0D13  1891               	btfsc	17,1	;volatile
  7994  0D14  2D16               	goto	u3261
  7995  0D15  2D17               	goto	u3260
  7996  0D16                     u3261:
  7997  0D16  2D13               	goto	l658
  7998  0D17                     u3260:
  7999  0D17                     l4238:
  8000  0D17  0023               	movlb	3	; select bank3
  8001  0D18  0C0F               	rrf	15,w	;volatile
  8002  0D19  0C89               	rrf	9,f
  8003  0D1A  3901               	andlw	1
  8004  0D1B  0020               	movlb	0	; select bank0
  8005  0D1C  00A2               	movwf	??_tsttc
  8006  0D1D  0023               	movlb	3	; select bank3
  8007  0D1E  0811               	movf	17,w	;volatile
  8008  0D1F  391F               	andlw	31
  8009  0D20  0020               	movlb	0	; select bank0
  8010  0D21  0422               	iorwf	??_tsttc,w
  8011  0D22  1D03               	btfss	3,2
  8012  0D23  2D25               	goto	u3271
  8013  0D24  2D26               	goto	u3270
  8014  0D25                     u3271:
  8015  0D25  2D17               	goto	l4238
  8016  0D26                     u3270:
  8017  0D26                     l4240:
  8018                           
  8019                           ;main.c: 504: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8020  0D26  309B               	movlw	155
  8021  0D27  3188  20F1  318C   	fcall	_WriteI2C
  8022  0D2A                     l4242:
  8023  0D2A  0023               	movlb	3	; select bank3
  8024  0D2B  0C0F               	rrf	15,w	;volatile
  8025  0D2C  0C89               	rrf	9,f
  8026  0D2D  3901               	andlw	1
  8027  0D2E  0020               	movlb	0	; select bank0
  8028  0D2F  00A2               	movwf	??_tsttc
  8029  0D30  0023               	movlb	3	; select bank3
  8030  0D31  0811               	movf	17,w	;volatile
  8031  0D32  391F               	andlw	31
  8032  0D33  0020               	movlb	0	; select bank0
  8033  0D34  0422               	iorwf	??_tsttc,w
  8034  0D35  1D03               	btfss	3,2
  8035  0D36  2D38               	goto	u3281
  8036  0D37  2D39               	goto	u3280
  8037  0D38                     u3281:
  8038  0D38  2D2A               	goto	l4242
  8039  0D39                     u3280:
  8040  0D39                     l4244:
  8041                           
  8042                           ;main.c: 505: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8043  0D39  3196  26CF  318C   	fcall	_ReadI2C
  8044  0D3C  0020               	movlb	0	; select bank0
  8045  0D3D  00A2               	movwf	??_tsttc
  8046  0D3E  0822               	movf	??_tsttc,w
  8047  0D3F  00A3               	movwf	tsttc@value
  8048  0D40                     l4246:
  8049  0D40  0023               	movlb	3	; select bank3
  8050  0D41  0C0F               	rrf	15,w	;volatile
  8051  0D42  0C89               	rrf	9,f
  8052  0D43  3901               	andlw	1
  8053  0D44  0020               	movlb	0	; select bank0
  8054  0D45  00A2               	movwf	??_tsttc
  8055  0D46  0023               	movlb	3	; select bank3
  8056  0D47  0811               	movf	17,w	;volatile
  8057  0D48  391F               	andlw	31
  8058  0D49  0020               	movlb	0	; select bank0
  8059  0D4A  0422               	iorwf	??_tsttc,w
  8060  0D4B  1D03               	btfss	3,2
  8061  0D4C  2D4E               	goto	u3291
  8062  0D4D  2D4F               	goto	u3290
  8063  0D4E                     u3291:
  8064  0D4E  2D40               	goto	l4246
  8065  0D4F                     u3290:
  8066  0D4F                     l669:
  8067                           
  8068                           ;main.c: 506: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while
      +                           ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8069  0D4F  0023               	movlb	3	; select bank3
  8070  0D50  1691               	bsf	17,5	;volatile
  8071  0D51  1611               	bsf	17,4	;volatile
  8072  0D52                     l670:
  8073  0D52  1A11               	btfsc	17,4	;volatile
  8074  0D53  2D55               	goto	u3301
  8075  0D54  2D56               	goto	u3300
  8076  0D55                     u3301:
  8077  0D55  2D52               	goto	l670
  8078  0D56                     u3300:
  8079  0D56                     l4248:
  8080  0D56  0023               	movlb	3	; select bank3
  8081  0D57  0C0F               	rrf	15,w	;volatile
  8082  0D58  0C89               	rrf	9,f
  8083  0D59  3901               	andlw	1
  8084  0D5A  0020               	movlb	0	; select bank0
  8085  0D5B  00A2               	movwf	??_tsttc
  8086  0D5C  0023               	movlb	3	; select bank3
  8087  0D5D  0811               	movf	17,w	;volatile
  8088  0D5E  391F               	andlw	31
  8089  0D5F  0020               	movlb	0	; select bank0
  8090  0D60  0422               	iorwf	??_tsttc,w
  8091  0D61  1D03               	btfss	3,2
  8092  0D62  2D64               	goto	u3311
  8093  0D63  2D65               	goto	u3310
  8094  0D64                     u3311:
  8095  0D64  2D56               	goto	l4248
  8096  0D65                     u3310:
  8097  0D65                     l675:
  8098                           
  8099                           ;main.c: 507: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  8100  0D65  0023               	movlb	3	; select bank3
  8101  0D66  1511               	bsf	17,2	;volatile
  8102  0D67                     l676:
  8103  0D67  1911               	btfsc	17,2	;volatile
  8104  0D68  2D6A               	goto	u3321
  8105  0D69  2D6B               	goto	u3320
  8106  0D6A                     u3321:
  8107  0D6A  2D67               	goto	l676
  8108  0D6B                     u3320:
  8109  0D6B                     l678:
  8110                           
  8111                           ;main.c: 508: } while (!(value & 0x40));
  8112  0D6B  0020               	movlb	0	; select bank0
  8113  0D6C  1F23               	btfss	tsttc@value,6
  8114  0D6D  2D6F               	goto	u3331
  8115  0D6E  2D70               	goto	u3330
  8116  0D6F                     u3331:
  8117  0D6F  2CC7               	goto	l642
  8118  0D70                     u3330:
  8119  0D70                     l4250:
  8120  0D70  0023               	movlb	3	; select bank3
  8121  0D71  0C0F               	rrf	15,w	;volatile
  8122  0D72  0C89               	rrf	9,f
  8123  0D73  3901               	andlw	1
  8124  0D74  0020               	movlb	0	; select bank0
  8125  0D75  00A2               	movwf	??_tsttc
  8126  0D76  0023               	movlb	3	; select bank3
  8127  0D77  0811               	movf	17,w	;volatile
  8128  0D78  391F               	andlw	31
  8129  0D79  0020               	movlb	0	; select bank0
  8130  0D7A  0422               	iorwf	??_tsttc,w
  8131  0D7B  1D03               	btfss	3,2
  8132  0D7C  2D7E               	goto	u3341
  8133  0D7D  2D7F               	goto	u3340
  8134  0D7E                     u3341:
  8135  0D7E  2D70               	goto	l4250
  8136  0D7F                     u3340:
  8137  0D7F                     l682:
  8138                           
  8139                           ;main.c: 511: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SS
      +                          P1STATbits.R_W));
  8140  0D7F  0023               	movlb	3	; select bank3
  8141  0D80  1411               	bsf	17,0	;volatile
  8142  0D81                     l683:
  8143  0D81  1811               	btfsc	17,0	;volatile
  8144  0D82  2D84               	goto	u3351
  8145  0D83  2D85               	goto	u3350
  8146  0D84                     u3351:
  8147  0D84  2D81               	goto	l683
  8148  0D85                     u3350:
  8149  0D85                     l4252:
  8150  0D85  0023               	movlb	3	; select bank3
  8151  0D86  0C0F               	rrf	15,w	;volatile
  8152  0D87  0C89               	rrf	9,f
  8153  0D88  3901               	andlw	1
  8154  0D89  0020               	movlb	0	; select bank0
  8155  0D8A  00A2               	movwf	??_tsttc
  8156  0D8B  0023               	movlb	3	; select bank3
  8157  0D8C  0811               	movf	17,w	;volatile
  8158  0D8D  391F               	andlw	31
  8159  0D8E  0020               	movlb	0	; select bank0
  8160  0D8F  0422               	iorwf	??_tsttc,w
  8161  0D90  1D03               	btfss	3,2
  8162  0D91  2D93               	goto	u3361
  8163  0D92  2D94               	goto	u3360
  8164  0D93                     u3361:
  8165  0D93  2D85               	goto	l4252
  8166  0D94                     u3360:
  8167  0D94                     l4254:
  8168                           
  8169                           ;main.c: 512: WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8170  0D94  309A               	movlw	154
  8171  0D95  3188  20F1  318C   	fcall	_WriteI2C
  8172  0D98                     l4256:
  8173  0D98  0023               	movlb	3	; select bank3
  8174  0D99  0C0F               	rrf	15,w	;volatile
  8175  0D9A  0C89               	rrf	9,f
  8176  0D9B  3901               	andlw	1
  8177  0D9C  0020               	movlb	0	; select bank0
  8178  0D9D  00A2               	movwf	??_tsttc
  8179  0D9E  0023               	movlb	3	; select bank3
  8180  0D9F  0811               	movf	17,w	;volatile
  8181  0DA0  391F               	andlw	31
  8182  0DA1  0020               	movlb	0	; select bank0
  8183  0DA2  0422               	iorwf	??_tsttc,w
  8184  0DA3  1D03               	btfss	3,2
  8185  0DA4  2DA6               	goto	u3371
  8186  0DA5  2DA7               	goto	u3370
  8187  0DA6                     u3371:
  8188  0DA6  2D98               	goto	l4256
  8189  0DA7                     u3370:
  8190  0DA7                     l4258:
  8191                           
  8192                           ;main.c: 513: WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8193  0DA7  3000               	movlw	0
  8194  0DA8  3188  20F1  318C   	fcall	_WriteI2C
  8195  0DAB                     l4260:
  8196  0DAB  0023               	movlb	3	; select bank3
  8197  0DAC  0C0F               	rrf	15,w	;volatile
  8198  0DAD  0C89               	rrf	9,f
  8199  0DAE  3901               	andlw	1
  8200  0DAF  0020               	movlb	0	; select bank0
  8201  0DB0  00A2               	movwf	??_tsttc
  8202  0DB1  0023               	movlb	3	; select bank3
  8203  0DB2  0811               	movf	17,w	;volatile
  8204  0DB3  391F               	andlw	31
  8205  0DB4  0020               	movlb	0	; select bank0
  8206  0DB5  0422               	iorwf	??_tsttc,w
  8207  0DB6  1D03               	btfss	3,2
  8208  0DB7  2DB9               	goto	u3381
  8209  0DB8  2DBA               	goto	u3380
  8210  0DB9                     u3381:
  8211  0DB9  2DAB               	goto	l4260
  8212  0DBA                     u3380:
  8213  0DBA                     l694:
  8214                           
  8215                           ;main.c: 514: SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); while ((SSP1CON2 & 0x1F) | (
      +                          SSP1STATbits.R_W));
  8216  0DBA  0023               	movlb	3	; select bank3
  8217  0DBB  1491               	bsf	17,1	;volatile
  8218  0DBC                     l695:
  8219  0DBC  1891               	btfsc	17,1	;volatile
  8220  0DBD  2DBF               	goto	u3391
  8221  0DBE  2DC0               	goto	u3390
  8222  0DBF                     u3391:
  8223  0DBF  2DBC               	goto	l695
  8224  0DC0                     u3390:
  8225  0DC0                     l4262:
  8226  0DC0  0023               	movlb	3	; select bank3
  8227  0DC1  0C0F               	rrf	15,w	;volatile
  8228  0DC2  0C89               	rrf	9,f
  8229  0DC3  3901               	andlw	1
  8230  0DC4  0020               	movlb	0	; select bank0
  8231  0DC5  00A2               	movwf	??_tsttc
  8232  0DC6  0023               	movlb	3	; select bank3
  8233  0DC7  0811               	movf	17,w	;volatile
  8234  0DC8  391F               	andlw	31
  8235  0DC9  0020               	movlb	0	; select bank0
  8236  0DCA  0422               	iorwf	??_tsttc,w
  8237  0DCB  1D03               	btfss	3,2
  8238  0DCC  2DCE               	goto	u3401
  8239  0DCD  2DCF               	goto	u3400
  8240  0DCE                     u3401:
  8241  0DCE  2DC0               	goto	l4262
  8242  0DCF                     u3400:
  8243  0DCF                     l4264:
  8244                           
  8245                           ;main.c: 515: WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8246  0DCF  309B               	movlw	155
  8247  0DD0  3188  20F1  318C   	fcall	_WriteI2C
  8248  0DD3                     l4266:
  8249  0DD3  0023               	movlb	3	; select bank3
  8250  0DD4  0C0F               	rrf	15,w	;volatile
  8251  0DD5  0C89               	rrf	9,f
  8252  0DD6  3901               	andlw	1
  8253  0DD7  0020               	movlb	0	; select bank0
  8254  0DD8  00A2               	movwf	??_tsttc
  8255  0DD9  0023               	movlb	3	; select bank3
  8256  0DDA  0811               	movf	17,w	;volatile
  8257  0DDB  391F               	andlw	31
  8258  0DDC  0020               	movlb	0	; select bank0
  8259  0DDD  0422               	iorwf	??_tsttc,w
  8260  0DDE  1D03               	btfss	3,2
  8261  0DDF  2DE1               	goto	u3411
  8262  0DE0  2DE2               	goto	u3410
  8263  0DE1                     u3411:
  8264  0DE1  2DD3               	goto	l4266
  8265  0DE2                     u3410:
  8266  0DE2                     l4268:
  8267                           
  8268                           ;main.c: 516: value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8269  0DE2  3196  26CF  318C   	fcall	_ReadI2C
  8270  0DE5  0020               	movlb	0	; select bank0
  8271  0DE6  00A2               	movwf	??_tsttc
  8272  0DE7  0822               	movf	??_tsttc,w
  8273  0DE8  00A3               	movwf	tsttc@value
  8274  0DE9                     l4270:
  8275  0DE9  0023               	movlb	3	; select bank3
  8276  0DEA  0C0F               	rrf	15,w	;volatile
  8277  0DEB  0C89               	rrf	9,f
  8278  0DEC  3901               	andlw	1
  8279  0DED  0020               	movlb	0	; select bank0
  8280  0DEE  00A2               	movwf	??_tsttc
  8281  0DEF  0023               	movlb	3	; select bank3
  8282  0DF0  0811               	movf	17,w	;volatile
  8283  0DF1  391F               	andlw	31
  8284  0DF2  0020               	movlb	0	; select bank0
  8285  0DF3  0422               	iorwf	??_tsttc,w
  8286  0DF4  1D03               	btfss	3,2
  8287  0DF5  2DF7               	goto	u3421
  8288  0DF6  2DF8               	goto	u3420
  8289  0DF7                     u3421:
  8290  0DF7  2DE9               	goto	l4270
  8291  0DF8                     u3420:
  8292  0DF8                     l706:
  8293                           
  8294                           ;main.c: 517: SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); while
      +                           ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
  8295  0DF8  0023               	movlb	3	; select bank3
  8296  0DF9  1691               	bsf	17,5	;volatile
  8297  0DFA  1611               	bsf	17,4	;volatile
  8298  0DFB                     l707:
  8299  0DFB  1A11               	btfsc	17,4	;volatile
  8300  0DFC  2DFE               	goto	u3431
  8301  0DFD  2DFF               	goto	u3430
  8302  0DFE                     u3431:
  8303  0DFE  2DFB               	goto	l707
  8304  0DFF                     u3430:
  8305  0DFF                     l4272:
  8306  0DFF  0023               	movlb	3	; select bank3
  8307  0E00  0C0F               	rrf	15,w	;volatile
  8308  0E01  0C89               	rrf	9,f
  8309  0E02  3901               	andlw	1
  8310  0E03  0020               	movlb	0	; select bank0
  8311  0E04  00A2               	movwf	??_tsttc
  8312  0E05  0023               	movlb	3	; select bank3
  8313  0E06  0811               	movf	17,w	;volatile
  8314  0E07  391F               	andlw	31
  8315  0E08  0020               	movlb	0	; select bank0
  8316  0E09  0422               	iorwf	??_tsttc,w
  8317  0E0A  1D03               	btfss	3,2
  8318  0E0B  2E0D               	goto	u3441
  8319  0E0C  2E0E               	goto	u3440
  8320  0E0D                     u3441:
  8321  0E0D  2DFF               	goto	l4272
  8322  0E0E                     u3440:
  8323  0E0E                     l712:
  8324                           
  8325                           ;main.c: 518: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
  8326  0E0E  0023               	movlb	3	; select bank3
  8327  0E0F  1511               	bsf	17,2	;volatile
  8328  0E10                     l713:
  8329  0E10  1911               	btfsc	17,2	;volatile
  8330  0E11  2E13               	goto	u3451
  8331  0E12  2E14               	goto	u3450
  8332  0E13                     u3451:
  8333  0E13  2E10               	goto	l713
  8334  0E14                     u3450:
  8335  0E14                     l4274:
  8336                           
  8337                           ;main.c: 520: return value;
  8338  0E14  0020               	movlb	0	; select bank0
  8339  0E15  0823               	movf	tsttc@value,w
  8340  0E16                     l716:
  8341  0E16  0008               	return
  8342  0E17                     __end_of_tsttc:
  8343                           
  8344                           	psect	text2
  8345  16CF                     __ptext2:	
  8346 ;; *************** function _ReadI2C *****************
  8347 ;; Defined at:
  8348 ;;		line 32 in file "I2C/i2c.c"
  8349 ;; Parameters:    Size  Location     Type
  8350 ;;		None
  8351 ;; Auto vars:     Size  Location     Type
  8352 ;;		None
  8353 ;; Return value:  Size  Location     Type
  8354 ;;                  1    wreg      unsigned char 
  8355 ;; Registers used:
  8356 ;;		wreg, status,2, status,0
  8357 ;; Tracked objects:
  8358 ;;		On entry : 0/0
  8359 ;;		On exit  : 0/0
  8360 ;;		Unchanged: 0/0
  8361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8364 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8365 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8366 ;;Total ram usage:        1 bytes
  8367 ;; Hardware stack levels used:    1
  8368 ;; Hardware stack levels required when called:    5
  8369 ;; This function calls:
  8370 ;;		Nothing
  8371 ;; This function is called by:
  8372 ;;		_tsttc
  8373 ;;		_LCDrecv
  8374 ;; This function uses a non-reentrant model
  8375 ;;
  8376                           
  8377                           
  8378                           ;psect for function _ReadI2C
  8379  16CF                     _ReadI2C:
  8380  16CF                     l3866:	
  8381                           ;incstack = 0
  8382                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
  8383                           
  8384                           
  8385                           ;i2c.c: 34: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
  8386  16CF  300F               	movlw	15
  8387  16D0  0023               	movlb	3	; select bank3
  8388  16D1  0510               	andwf	16,w	;volatile
  8389  16D2  0020               	movlb	0	; select bank0
  8390  16D3  00A0               	movwf	??_ReadI2C
  8391  16D4  3008               	movlw	8
  8392  16D5  0620               	xorwf	??_ReadI2C,w
  8393  16D6  1903               	btfsc	3,2
  8394  16D7  2ED9               	goto	u2881
  8395  16D8  2EDA               	goto	u2880
  8396  16D9                     u2881:
  8397  16D9  2EE5               	goto	l22
  8398  16DA                     u2880:
  8399  16DA                     l3868:
  8400  16DA  300F               	movlw	15
  8401  16DB  0023               	movlb	3	; select bank3
  8402  16DC  0510               	andwf	16,w	;volatile
  8403  16DD  0020               	movlb	0	; select bank0
  8404  16DE  00A0               	movwf	??_ReadI2C
  8405  16DF  300B               	movlw	11
  8406  16E0  0620               	xorwf	??_ReadI2C,w
  8407  16E1  1D03               	btfss	3,2
  8408  16E2  2EE4               	goto	u2891
  8409  16E3  2EE5               	goto	u2890
  8410  16E4                     u2891:
  8411  16E4  2EE7               	goto	l23
  8412  16E5                     u2890:
  8413  16E5                     l22:
  8414                           
  8415                           ;i2c.c: 35: SSP1CON2bits.RCEN = 1;
  8416  16E5  0023               	movlb	3	; select bank3
  8417  16E6  1591               	bsf	17,3	;volatile
  8418  16E7                     l23:
  8419  16E7  0023               	movlb	3	; select bank3
  8420  16E8  1C0F               	btfss	15,0	;volatile
  8421  16E9  2EEB               	goto	u2901
  8422  16EA  2EEC               	goto	u2900
  8423  16EB                     u2901:
  8424  16EB  2EE7               	goto	l23
  8425  16EC                     u2900:
  8426  16EC                     l3870:
  8427                           
  8428                           ;i2c.c: 37: return ( SSP1BUF );
  8429  16EC  080C               	movf	12,w	;volatile
  8430  16ED                     l26:
  8431  16ED  0008               	return
  8432  16EE                     __end_of_ReadI2C:
  8433                           
  8434                           	psect	text3
  8435  1731                     __ptext3:	
  8436 ;; *************** function _lumin *****************
  8437 ;; Defined at:
  8438 ;;		line 425 in file "LCD.c"
  8439 ;; Parameters:    Size  Location     Type
  8440 ;;		None
  8441 ;; Auto vars:     Size  Location     Type
  8442 ;;  luminosity      2    4[BANK0 ] unsigned short 
  8443 ;; Return value:  Size  Location     Type
  8444 ;;                  1    wreg      unsigned char 
  8445 ;; Registers used:
  8446 ;;		wreg, status,2, status,0, pclath, cstack
  8447 ;; Tracked objects:
  8448 ;;		On entry : 0/0
  8449 ;;		On exit  : 0/0
  8450 ;;		Unchanged: 0/0
  8451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8453 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8454 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8455 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8456 ;;Total ram usage:        4 bytes
  8457 ;; Hardware stack levels used:    1
  8458 ;; Hardware stack levels required when called:    6
  8459 ;; This function calls:
  8460 ;;		_ADCC_GetConversionResult
  8461 ;;		_ADCC_Initialize
  8462 ;;		_ADCC_StartConversion
  8463 ;; This function is called by:
  8464 ;;		_main
  8465 ;; This function uses a non-reentrant model
  8466 ;;
  8467                           
  8468                           
  8469                           ;psect for function _lumin
  8470  1731                     _lumin:
  8471  1731                     l4278:	
  8472                           ;incstack = 0
  8473                           ; Regs used in _lumin: [wreg+status,2+status,0+pclath+cstack]
  8474                           
  8475                           
  8476                           ;LCD.c: 427: unsigned short luminosity;;LCD.c: 428: ADCC_Initialize();
  8477  1731  3196  2634  3197   	fcall	_ADCC_Initialize
  8478                           
  8479                           ;LCD.c: 429: ADCC_StartConversion(CH_0);
  8480  1734  3000               	movlw	0
  8481  1735  3195  2530  3197   	fcall	_ADCC_StartConversion
  8482  1738                     l4280:
  8483  1738                     l4282:
  8484                           
  8485                           ;LCD.c: 431: luminosity = ADCC_GetConversionResult();
  8486  1738  3195  2553  3197   	fcall	_ADCC_GetConversionResult
  8487  173B  0020               	movlb	0	; select bank0
  8488  173C  0821               	movf	?_ADCC_GetConversionResult+1,w
  8489  173D  00A5               	movwf	lumin@luminosity+1
  8490  173E  0820               	movf	?_ADCC_GetConversionResult,w
  8491  173F  00A4               	movwf	lumin@luminosity
  8492  1740                     l4284:
  8493                           
  8494                           ;LCD.c: 432: luminosity = luminosity << 6;
  8495  1740  0825               	movf	lumin@luminosity+1,w
  8496  1741  00A3               	movwf	??_lumin+1
  8497  1742  0824               	movf	lumin@luminosity,w
  8498  1743  00A2               	movwf	??_lumin
  8499  1744  3006               	movlw	6
  8500  1745                     u3465:
  8501  1745  35A2               	lslf	??_lumin,f
  8502  1746  0DA3               	rlf	??_lumin+1,f
  8503  1747  0B89               	decfsz	9,f
  8504  1748  2F45               	goto	u3465
  8505  1749  0822               	movf	??_lumin,w
  8506  174A  00A4               	movwf	lumin@luminosity
  8507  174B  0823               	movf	??_lumin+1,w
  8508  174C  00A5               	movwf	lumin@luminosity+1
  8509  174D                     l4286:
  8510                           
  8511                           ;LCD.c: 433: luminosity = luminosity >>13;
  8512  174D  0825               	movf	lumin@luminosity+1,w
  8513  174E  00A3               	movwf	??_lumin+1
  8514  174F  0824               	movf	lumin@luminosity,w
  8515  1750  00A2               	movwf	??_lumin
  8516  1751  300D               	movlw	13
  8517  1752                     u3475:
  8518  1752  36A3               	lsrf	??_lumin+1,f
  8519  1753  0CA2               	rrf	??_lumin,f
  8520  1754  0B89               	decfsz	9,f
  8521  1755  2F52               	goto	u3475
  8522  1756  0822               	movf	??_lumin,w
  8523  1757  00A4               	movwf	lumin@luminosity
  8524  1758  0823               	movf	??_lumin+1,w
  8525  1759  00A5               	movwf	lumin@luminosity+1
  8526  175A                     l4288:
  8527                           
  8528                           ;LCD.c: 434: return(luminosity);
  8529  175A  0824               	movf	lumin@luminosity,w
  8530  175B                     l968:
  8531  175B  0008               	return
  8532  175C                     __end_of_lumin:
  8533                           
  8534                           	psect	text4
  8535  1530                     __ptext4:	
  8536 ;; *************** function _ADCC_StartConversion *****************
  8537 ;; Defined at:
  8538 ;;		line 106 in file "mcc_generated_files/adcc.c"
  8539 ;; Parameters:    Size  Location     Type
  8540 ;;  channel         1    wreg     enum E12086
  8541 ;; Auto vars:     Size  Location     Type
  8542 ;;  channel         1    0[BANK0 ] enum E12086
  8543 ;; Return value:  Size  Location     Type
  8544 ;;                  1    wreg      void 
  8545 ;; Registers used:
  8546 ;;		wreg
  8547 ;; Tracked objects:
  8548 ;;		On entry : 0/0
  8549 ;;		On exit  : 0/0
  8550 ;;		Unchanged: 0/0
  8551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8553 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8555 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8556 ;;Total ram usage:        1 bytes
  8557 ;; Hardware stack levels used:    1
  8558 ;; Hardware stack levels required when called:    5
  8559 ;; This function calls:
  8560 ;;		Nothing
  8561 ;; This function is called by:
  8562 ;;		_lumin
  8563 ;; This function uses a non-reentrant model
  8564 ;;
  8565                           
  8566                           
  8567                           ;psect for function _ADCC_StartConversion
  8568  1530                     _ADCC_StartConversion:
  8569                           
  8570                           ;incstack = 0
  8571                           ; Regs used in _ADCC_StartConversion: [wreg]
  8572                           ;ADCC_StartConversion@channel stored from wreg
  8573  1530  0020               	movlb	0	; select bank0
  8574  1531  00A0               	movwf	ADCC_StartConversion@channel
  8575  1532                     l4120:
  8576                           
  8577                           ;adcc.c: 109: ADPCH = channel;
  8578  1532  0820               	movf	ADCC_StartConversion@channel,w
  8579  1533  0021               	movlb	1	; select bank1
  8580  1534  009E               	movwf	30	;volatile
  8581  1535                     l4122:
  8582                           
  8583                           ;adcc.c: 112: ADCON0bits.ADON = 1;
  8584  1535  1793               	bsf	19,7	;volatile
  8585  1536                     l4124:
  8586                           
  8587                           ;adcc.c: 115: ADCON0bits.ADGO = 1;
  8588  1536  1413               	bsf	19,0	;volatile
  8589  1537                     l1050:
  8590  1537  0008               	return
  8591  1538                     __end_of_ADCC_StartConversion:
  8592                           
  8593                           	psect	text5
  8594  1553                     __ptext5:	
  8595 ;; *************** function _ADCC_GetConversionResult *****************
  8596 ;; Defined at:
  8597 ;;		line 124 in file "mcc_generated_files/adcc.c"
  8598 ;; Parameters:    Size  Location     Type
  8599 ;;		None
  8600 ;; Auto vars:     Size  Location     Type
  8601 ;;		None
  8602 ;; Return value:  Size  Location     Type
  8603 ;;                  2    0[BANK0 ] unsigned int 
  8604 ;; Registers used:
  8605 ;;		wreg
  8606 ;; Tracked objects:
  8607 ;;		On entry : 0/0
  8608 ;;		On exit  : 0/0
  8609 ;;		Unchanged: 0/0
  8610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8611 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8614 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8615 ;;Total ram usage:        2 bytes
  8616 ;; Hardware stack levels used:    1
  8617 ;; Hardware stack levels required when called:    5
  8618 ;; This function calls:
  8619 ;;		Nothing
  8620 ;; This function is called by:
  8621 ;;		_lumin
  8622 ;; This function uses a non-reentrant model
  8623 ;;
  8624                           
  8625                           
  8626                           ;psect for function _ADCC_GetConversionResult
  8627  1553                     _ADCC_GetConversionResult:
  8628  1553                     l4126:	
  8629                           ;incstack = 0
  8630                           ; Regs used in _ADCC_GetConversionResult: [wreg]
  8631                           
  8632                           
  8633                           ;adcc.c: 127: return ((adc_result_t)((ADRESH << 8) + ADRESL));
  8634  1553  0021               	movlb	1	; select bank1
  8635  1554  080D               	movf	13,w	;volatile
  8636  1555  0020               	movlb	0	; select bank0
  8637  1556  00A1               	movwf	?_ADCC_GetConversionResult+1
  8638  1557  0021               	movlb	1	; select bank1
  8639  1558  080C               	movf	12,w	;volatile
  8640  1559  0020               	movlb	0	; select bank0
  8641  155A  00A0               	movwf	?_ADCC_GetConversionResult
  8642  155B                     l1056:
  8643  155B  0008               	return
  8644  155C                     __end_of_ADCC_GetConversionResult:
  8645                           
  8646                           	psect	text6
  8647  0062                     __ptext6:	
  8648 ;; *************** function _lcd *****************
  8649 ;; Defined at:
  8650 ;;		line 127 in file "LCD.c"
  8651 ;; Parameters:    Size  Location     Type
  8652 ;;  temperature     1    wreg     unsigned char 
  8653 ;;  luminosity      1   35[BANK0 ] unsigned char 
  8654 ;;  alarm           1   36[BANK0 ] unsigned char 
  8655 ;;  ctl             1   37[BANK0 ] unsigned char 
  8656 ;;  h               1   38[BANK0 ] unsigned char 
  8657 ;;  m               1   39[BANK0 ] unsigned char 
  8658 ;;  s               1   40[BANK0 ] unsigned char 
  8659 ;;  state           1   41[BANK0 ] unsigned char 
  8660 ;;  temperature_    1   42[BANK0 ] unsigned char 
  8661 ;;  luminosity_a    1   43[BANK0 ] unsigned char 
  8662 ;;  alah            1   44[BANK0 ] unsigned char 
  8663 ;;  alam            1   45[BANK0 ] unsigned char 
  8664 ;;  alas            1   46[BANK0 ] unsigned char 
  8665 ;; Auto vars:     Size  Location     Type
  8666 ;;  temperature     1   70[BANK0 ] unsigned char 
  8667 ;;  buf            17   53[BANK0 ] unsigned char [17]
  8668 ;; Return value:  Size  Location     Type
  8669 ;;                  1    wreg      unsigned char 
  8670 ;; Registers used:
  8671 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8672 ;; Tracked objects:
  8673 ;;		On entry : 0/0
  8674 ;;		On exit  : 0/0
  8675 ;;		Unchanged: 0/0
  8676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8677 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8678 ;;      Locals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8679 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8680 ;;      Totals:         0      36       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8681 ;;Total ram usage:       36 bytes
  8682 ;; Hardware stack levels used:    1
  8683 ;; Hardware stack levels required when called:    9
  8684 ;; This function calls:
  8685 ;;		_LCDcmd
  8686 ;;		_LCDstr
  8687 ;;		_sprintf
  8688 ;; This function is called by:
  8689 ;;		_main
  8690 ;; This function uses a non-reentrant model
  8691 ;;
  8692                           
  8693                           
  8694                           ;psect for function _lcd
  8695  0062                     _lcd:
  8696                           
  8697                           ;incstack = 0
  8698                           ; Regs used in _lcd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8699                           ;lcd@temperature stored from wreg
  8700  0062  0020               	movlb	0	; select bank0
  8701  0063  00E6               	movwf	lcd@temperature
  8702  0064                     l4382:
  8703                           
  8704                           ;LCD.c: 129: unsigned char buf[17];;LCD.c: 131: if (alarm)
  8705  0064  0844               	movf	lcd@alarm,w
  8706  0065  1903               	btfsc	3,2
  8707  0066  2868               	goto	u3621
  8708  0067  2869               	goto	u3620
  8709  0068                     u3621:
  8710  0068  287B               	goto	l4390
  8711  0069                     u3620:
  8712  0069                     l4384:
  8713                           
  8714                           ;LCD.c: 132: {;LCD.c: 133: LCDcmd(0x8F);
  8715  0069  308F               	movlw	143
  8716  006A  3195  2528  3180   	fcall	_LCDcmd
  8717  006D                     l4386:
  8718                           
  8719                           ;LCD.c: 134: sprintf(buf, "A");
  8720  006D  302A               	movlw	low (STR_1| (0+32768))
  8721  006E  0020               	movlb	0	; select bank0
  8722  006F  00AE               	movwf	sprintf@f
  8723  0070  3098               	movlw	high (STR_1| (0+32768))
  8724  0071  00AF               	movwf	sprintf@f+1
  8725  0072  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8726  0073  3186  2639  3180   	fcall	_sprintf
  8727  0076                     l4388:
  8728                           
  8729                           ;LCD.c: 135: LCDstr(buf);
  8730  0076  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8731  0077  3196  264A  3180   	fcall	_LCDstr
  8732                           
  8733                           ;LCD.c: 136: }
  8734  007A  288C               	goto	l4396
  8735  007B                     l4390:
  8736                           
  8737                           ;LCD.c: 137: else;LCD.c: 138: {;LCD.c: 139: LCDcmd(0x8F);
  8738  007B  308F               	movlw	143
  8739  007C  3195  2528  3180   	fcall	_LCDcmd
  8740  007F                     l4392:
  8741                           
  8742                           ;LCD.c: 140: sprintf(buf, "a");
  8743  007F  302E               	movlw	low (STR_2| (0+32768))
  8744  0080  0020               	movlb	0	; select bank0
  8745  0081  00AE               	movwf	sprintf@f
  8746  0082  3098               	movlw	high (STR_2| (0+32768))
  8747  0083  00AF               	movwf	sprintf@f+1
  8748  0084  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8749  0085  3186  2639  3180   	fcall	_sprintf
  8750  0088                     l4394:
  8751                           
  8752                           ;LCD.c: 141: LCDstr(buf);
  8753  0088  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8754  0089  3196  264A  3180   	fcall	_LCDstr
  8755  008C                     l4396:
  8756                           
  8757                           ;LCD.c: 142: };LCD.c: 143: if(state==0)
  8758  008C  0020               	movlb	0	; select bank0
  8759  008D  0849               	movf	lcd@state,w
  8760  008E  1D03               	btfss	3,2
  8761  008F  2891               	goto	u3631
  8762  0090  2892               	goto	u3630
  8763  0091                     u3631:
  8764  0091  293D               	goto	l4444
  8765  0092                     u3630:
  8766  0092                     l4398:
  8767                           
  8768                           ;LCD.c: 144: {;LCD.c: 145: LCDcmd(0x80);
  8769  0092  3080               	movlw	128
  8770  0093  3195  2528  3180   	fcall	_LCDcmd
  8771  0096                     l4400:
  8772                           
  8773                           ;LCD.c: 146: sprintf(buf, "%02d:%02d:%02d", h,m,s);
  8774  0096  3000               	movlw	low (STR_3| (0+32768))
  8775  0097  0020               	movlb	0	; select bank0
  8776  0098  00AE               	movwf	sprintf@f
  8777  0099  3098               	movlw	high (STR_3| (0+32768))
  8778  009A  00AF               	movwf	sprintf@f+1
  8779  009B  0846               	movf	lcd@h,w
  8780  009C  00CF               	movwf	??_lcd
  8781  009D  01D0               	clrf	??_lcd+1
  8782  009E  084F               	movf	??_lcd,w
  8783  009F  00B0               	movwf	?_sprintf+2
  8784  00A0  0850               	movf	??_lcd+1,w
  8785  00A1  00B1               	movwf	?_sprintf+3
  8786  00A2  0847               	movf	lcd@m,w
  8787  00A3  00D1               	movwf	??_lcd+2
  8788  00A4  01D2               	clrf	??_lcd+3
  8789  00A5  0851               	movf	??_lcd+2,w
  8790  00A6  00B2               	movwf	?_sprintf+4
  8791  00A7  0852               	movf	??_lcd+3,w
  8792  00A8  00B3               	movwf	?_sprintf+5
  8793  00A9  0848               	movf	lcd@s,w
  8794  00AA  00D3               	movwf	??_lcd+4
  8795  00AB  01D4               	clrf	??_lcd+5
  8796  00AC  0853               	movf	??_lcd+4,w
  8797  00AD  00B4               	movwf	?_sprintf+6
  8798  00AE  0854               	movf	??_lcd+5,w
  8799  00AF  00B5               	movwf	?_sprintf+7
  8800  00B0  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8801  00B1  3186  2639  3180   	fcall	_sprintf
  8802  00B4                     l4402:
  8803                           
  8804                           ;LCD.c: 147: LCDstr(buf);
  8805  00B4  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8806  00B5  3196  264A  3180   	fcall	_LCDstr
  8807  00B8                     l4404:
  8808                           
  8809                           ;LCD.c: 149: LCDcmd(0xc0);
  8810  00B8  30C0               	movlw	192
  8811  00B9  3195  2528  3180   	fcall	_LCDcmd
  8812  00BC                     l4406:
  8813                           
  8814                           ;LCD.c: 150: sprintf(buf, "%02d C", temperature);
  8815  00BC  3019               	movlw	low (STR_4| (0+32768))
  8816  00BD  0020               	movlb	0	; select bank0
  8817  00BE  00AE               	movwf	sprintf@f
  8818  00BF  3098               	movlw	high (STR_4| (0+32768))
  8819  00C0  00AF               	movwf	sprintf@f+1
  8820  00C1  0866               	movf	lcd@temperature,w
  8821  00C2  00CF               	movwf	??_lcd
  8822  00C3  01D0               	clrf	??_lcd+1
  8823  00C4  084F               	movf	??_lcd,w
  8824  00C5  00B0               	movwf	?_sprintf+2
  8825  00C6  0850               	movf	??_lcd+1,w
  8826  00C7  00B1               	movwf	?_sprintf+3
  8827  00C8  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8828  00C9  3186  2639  3180   	fcall	_sprintf
  8829                           
  8830                           ;LCD.c: 151: LCDstr(buf);
  8831  00CC  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8832  00CD  3196  264A  3180   	fcall	_LCDstr
  8833  00D0                     l4408:
  8834                           
  8835                           ;LCD.c: 153: LCDcmd(0xce);
  8836  00D0  30CE               	movlw	206
  8837  00D1  3195  2528  3180   	fcall	_LCDcmd
  8838  00D4                     l4410:
  8839                           
  8840                           ;LCD.c: 154: sprintf(buf, "L%01d", luminosity);
  8841  00D4  3020               	movlw	low (STR_5| (0+32768))
  8842  00D5  0020               	movlb	0	; select bank0
  8843  00D6  00AE               	movwf	sprintf@f
  8844  00D7  3098               	movlw	high (STR_5| (0+32768))
  8845  00D8  00AF               	movwf	sprintf@f+1
  8846  00D9  0843               	movf	lcd@luminosity,w
  8847  00DA  00CF               	movwf	??_lcd
  8848  00DB  01D0               	clrf	??_lcd+1
  8849  00DC  084F               	movf	??_lcd,w
  8850  00DD  00B0               	movwf	?_sprintf+2
  8851  00DE  0850               	movf	??_lcd+1,w
  8852  00DF  00B1               	movwf	?_sprintf+3
  8853  00E0  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8854  00E1  3186  2639  3180   	fcall	_sprintf
  8855  00E4                     l4412:
  8856                           
  8857                           ;LCD.c: 155: LCDstr(buf);
  8858  00E4  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8859  00E5  3196  264A  3180   	fcall	_LCDstr
  8860  00E8                     l4414:
  8861                           
  8862                           ;LCD.c: 157: if (ctl==1)
  8863  00E8  0020               	movlb	0	; select bank0
  8864  00E9  0345               	decf	lcd@ctl,w
  8865  00EA  1D03               	btfss	3,2
  8866  00EB  28ED               	goto	u3641
  8867  00EC  28EE               	goto	u3640
  8868  00ED                     u3641:
  8869  00ED  2904               	goto	l4424
  8870  00EE                     u3640:
  8871  00EE                     l4416:
  8872                           
  8873                           ;LCD.c: 158: {;LCD.c: 159: LCDcmd(0x8A);
  8874  00EE  308A               	movlw	138
  8875  00EF  3195  2528  3180   	fcall	_LCDcmd
  8876  00F2                     l4418:
  8877                           
  8878                           ;LCD.c: 160: sprintf(buf, "C");
  8879  00F2  301E               	movlw	low ((STR_4+5)| (0+32768))
  8880  00F3  0020               	movlb	0	; select bank0
  8881  00F4  00AE               	movwf	sprintf@f
  8882  00F5  3098               	movlw	high ((STR_4+5)| (0+32768))
  8883  00F6  00AF               	movwf	sprintf@f+1
  8884  00F7  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8885  00F8  3186  2639  3180   	fcall	_sprintf
  8886  00FB                     l4420:
  8887                           
  8888                           ;LCD.c: 161: LCDstr(buf);
  8889  00FB  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8890  00FC  3196  264A  3180   	fcall	_LCDstr
  8891  00FF                     l4422:
  8892                           
  8893                           ;LCD.c: 162: LCDcmd(0x9A);
  8894  00FF  309A               	movlw	154
  8895  0100  3195  2528  3180   	fcall	_LCDcmd
  8896                           
  8897                           ;LCD.c: 163: }
  8898  0103  2E38               	goto	l965
  8899  0104                     l4424:
  8900                           
  8901                           ;LCD.c: 164: else if (ctl==2)
  8902  0104  3002               	movlw	2
  8903  0105  0645               	xorwf	lcd@ctl,w
  8904  0106  1D03               	btfss	3,2
  8905  0107  2909               	goto	u3651
  8906  0108  290A               	goto	u3650
  8907  0109                     u3651:
  8908  0109  2920               	goto	l4434
  8909  010A                     u3650:
  8910  010A                     l4426:
  8911                           
  8912                           ;LCD.c: 165: {;LCD.c: 166: LCDcmd(0x8A);
  8913  010A  308A               	movlw	138
  8914  010B  3195  2528  3180   	fcall	_LCDcmd
  8915  010E                     l4428:
  8916                           
  8917                           ;LCD.c: 167: sprintf(buf, "T");
  8918  010E  302C               	movlw	low (STR_7| (0+32768))
  8919  010F  0020               	movlb	0	; select bank0
  8920  0110  00AE               	movwf	sprintf@f
  8921  0111  3098               	movlw	high (STR_7| (0+32768))
  8922  0112  00AF               	movwf	sprintf@f+1
  8923  0113  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8924  0114  3186  2639  3180   	fcall	_sprintf
  8925  0117                     l4430:
  8926                           
  8927                           ;LCD.c: 168: LCDstr(buf);
  8928  0117  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8929  0118  3196  264A  3180   	fcall	_LCDstr
  8930  011B                     l4432:
  8931                           
  8932                           ;LCD.c: 169: LCDcmd(0x9A);
  8933  011B  309A               	movlw	154
  8934  011C  3195  2528  3180   	fcall	_LCDcmd
  8935                           
  8936                           ;LCD.c: 170: }
  8937  011F  2E38               	goto	l965
  8938  0120                     l4434:
  8939                           
  8940                           ;LCD.c: 171: else if (ctl== 3)
  8941  0120  3003               	movlw	3
  8942  0121  0645               	xorwf	lcd@ctl,w
  8943  0122  1D03               	btfss	3,2
  8944  0123  2925               	goto	u3661
  8945  0124  2926               	goto	u3660
  8946  0125                     u3661:
  8947  0125  293C               	goto	l947
  8948  0126                     u3660:
  8949  0126                     l4436:
  8950                           
  8951                           ;LCD.c: 172: {;LCD.c: 173: LCDcmd(0x8A);
  8952  0126  308A               	movlw	138
  8953  0127  3195  2528  3180   	fcall	_LCDcmd
  8954  012A                     l4438:
  8955                           
  8956                           ;LCD.c: 174: sprintf(buf, "L");
  8957  012A  3028               	movlw	low ((STR_10+2)| (0+32768))
  8958  012B  0020               	movlb	0	; select bank0
  8959  012C  00AE               	movwf	sprintf@f
  8960  012D  3098               	movlw	high ((STR_10+2)| (0+32768))
  8961  012E  00AF               	movwf	sprintf@f+1
  8962  012F  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8963  0130  3186  2639  3180   	fcall	_sprintf
  8964  0133                     l4440:
  8965                           
  8966                           ;LCD.c: 175: LCDstr(buf);
  8967  0133  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  8968  0134  3196  264A  3180   	fcall	_LCDstr
  8969  0137                     l4442:
  8970                           
  8971                           ;LCD.c: 176: LCDcmd(0x9A);
  8972  0137  309A               	movlw	154
  8973  0138  3195  2528  3180   	fcall	_LCDcmd
  8974                           
  8975                           ;LCD.c: 177: }
  8976  013B  2E38               	goto	l965
  8977  013C                     l947:
  8978                           
  8979                           ;LCD.c: 181: };LCD.c: 183: }
  8980  013C  2E38               	goto	l965
  8981  013D                     l4444:
  8982                           
  8983                           ;LCD.c: 184: else;LCD.c: 185: {;LCD.c: 188: if (state ==1)
  8984  013D  0349               	decf	lcd@state,w
  8985  013E  1D03               	btfss	3,2
  8986  013F  2941               	goto	u3671
  8987  0140  2942               	goto	u3670
  8988  0141                     u3671:
  8989  0141  29AD               	goto	l4468
  8990  0142                     u3670:
  8991  0142                     l4446:
  8992                           
  8993                           ;LCD.c: 189: {;LCD.c: 190: LCDcmd(0x80);
  8994  0142  3080               	movlw	128
  8995  0143  3195  2528  3180   	fcall	_LCDcmd
  8996  0146                     l4448:
  8997                           
  8998                           ;LCD.c: 191: sprintf(buf, "%02d:%02d:%02d", h,m,s);
  8999  0146  3000               	movlw	low (STR_3| (0+32768))
  9000  0147  0020               	movlb	0	; select bank0
  9001  0148  00AE               	movwf	sprintf@f
  9002  0149  3098               	movlw	high (STR_3| (0+32768))
  9003  014A  00AF               	movwf	sprintf@f+1
  9004  014B  0846               	movf	lcd@h,w
  9005  014C  00CF               	movwf	??_lcd
  9006  014D  01D0               	clrf	??_lcd+1
  9007  014E  084F               	movf	??_lcd,w
  9008  014F  00B0               	movwf	?_sprintf+2
  9009  0150  0850               	movf	??_lcd+1,w
  9010  0151  00B1               	movwf	?_sprintf+3
  9011  0152  0847               	movf	lcd@m,w
  9012  0153  00D1               	movwf	??_lcd+2
  9013  0154  01D2               	clrf	??_lcd+3
  9014  0155  0851               	movf	??_lcd+2,w
  9015  0156  00B2               	movwf	?_sprintf+4
  9016  0157  0852               	movf	??_lcd+3,w
  9017  0158  00B3               	movwf	?_sprintf+5
  9018  0159  0848               	movf	lcd@s,w
  9019  015A  00D3               	movwf	??_lcd+4
  9020  015B  01D4               	clrf	??_lcd+5
  9021  015C  0853               	movf	??_lcd+4,w
  9022  015D  00B4               	movwf	?_sprintf+6
  9023  015E  0854               	movf	??_lcd+5,w
  9024  015F  00B5               	movwf	?_sprintf+7
  9025  0160  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9026  0161  3186  2639  3180   	fcall	_sprintf
  9027  0164                     l4450:
  9028                           
  9029                           ;LCD.c: 192: LCDstr(buf);
  9030  0164  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9031  0165  3196  264A  3180   	fcall	_LCDstr
  9032  0168                     l4452:
  9033                           
  9034                           ;LCD.c: 194: LCDcmd(0x8A);
  9035  0168  308A               	movlw	138
  9036  0169  3195  2528  3180   	fcall	_LCDcmd
  9037  016C                     l4454:
  9038                           
  9039                           ;LCD.c: 195: sprintf(buf, "CTL");
  9040  016C  3026               	movlw	low (STR_10| (0+32768))
  9041  016D  0020               	movlb	0	; select bank0
  9042  016E  00AE               	movwf	sprintf@f
  9043  016F  3098               	movlw	high (STR_10| (0+32768))
  9044  0170  00AF               	movwf	sprintf@f+1
  9045  0171  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9046  0172  3186  2639  3180   	fcall	_sprintf
  9047                           
  9048                           ;LCD.c: 196: LCDstr(buf);
  9049  0175  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9050  0176  3196  264A  3180   	fcall	_LCDstr
  9051  0179                     l4456:
  9052                           
  9053                           ;LCD.c: 198: LCDcmd(0xc0);
  9054  0179  30C0               	movlw	192
  9055  017A  3195  2528  3180   	fcall	_LCDcmd
  9056  017D                     l4458:
  9057                           
  9058                           ;LCD.c: 199: sprintf(buf, "%02d C", temperature);
  9059  017D  3019               	movlw	low (STR_4| (0+32768))
  9060  017E  0020               	movlb	0	; select bank0
  9061  017F  00AE               	movwf	sprintf@f
  9062  0180  3098               	movlw	high (STR_4| (0+32768))
  9063  0181  00AF               	movwf	sprintf@f+1
  9064  0182  0866               	movf	lcd@temperature,w
  9065  0183  00CF               	movwf	??_lcd
  9066  0184  01D0               	clrf	??_lcd+1
  9067  0185  084F               	movf	??_lcd,w
  9068  0186  00B0               	movwf	?_sprintf+2
  9069  0187  0850               	movf	??_lcd+1,w
  9070  0188  00B1               	movwf	?_sprintf+3
  9071  0189  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9072  018A  3186  2639  3180   	fcall	_sprintf
  9073  018D                     l4460:
  9074                           
  9075                           ;LCD.c: 200: LCDstr(buf);
  9076  018D  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9077  018E  3196  264A  3180   	fcall	_LCDstr
  9078  0191                     l4462:
  9079                           
  9080                           ;LCD.c: 202: LCDcmd(0xce);
  9081  0191  30CE               	movlw	206
  9082  0192  3195  2528  3180   	fcall	_LCDcmd
  9083                           
  9084                           ;LCD.c: 203: sprintf(buf, "L%01d", luminosity);
  9085  0195  3020               	movlw	low (STR_5| (0+32768))
  9086  0196  0020               	movlb	0	; select bank0
  9087  0197  00AE               	movwf	sprintf@f
  9088  0198  3098               	movlw	high (STR_5| (0+32768))
  9089  0199  00AF               	movwf	sprintf@f+1
  9090  019A  0843               	movf	lcd@luminosity,w
  9091  019B  00CF               	movwf	??_lcd
  9092  019C  01D0               	clrf	??_lcd+1
  9093  019D  084F               	movf	??_lcd,w
  9094  019E  00B0               	movwf	?_sprintf+2
  9095  019F  0850               	movf	??_lcd+1,w
  9096  01A0  00B1               	movwf	?_sprintf+3
  9097  01A1  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9098  01A2  3186  2639  3180   	fcall	_sprintf
  9099  01A5                     l4464:
  9100                           
  9101                           ;LCD.c: 204: LCDstr(buf);
  9102  01A5  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9103  01A6  3196  264A  3180   	fcall	_LCDstr
  9104  01A9                     l4466:
  9105                           
  9106                           ;LCD.c: 205: LCDcmd(0x81);
  9107  01A9  3081               	movlw	129
  9108  01AA  3195  2528  3180   	fcall	_LCDcmd
  9109  01AD                     l4468:
  9110                           
  9111                           ;LCD.c: 207: };LCD.c: 208: if (state ==2)
  9112  01AD  3002               	movlw	2
  9113  01AE  0020               	movlb	0	; select bank0
  9114  01AF  0649               	xorwf	lcd@state,w
  9115  01B0  1D03               	btfss	3,2
  9116  01B1  29B3               	goto	u3681
  9117  01B2  29B4               	goto	u3680
  9118  01B3                     u3681:
  9119  01B3  2A1F               	goto	l4492
  9120  01B4                     u3680:
  9121  01B4                     l4470:
  9122                           
  9123                           ;LCD.c: 209: {;LCD.c: 210: LCDcmd(0x80);
  9124  01B4  3080               	movlw	128
  9125  01B5  3195  2528  3180   	fcall	_LCDcmd
  9126  01B8                     l4472:
  9127                           
  9128                           ;LCD.c: 211: sprintf(buf, "%02d:%02d:%02d", h,m,s);
  9129  01B8  3000               	movlw	low (STR_3| (0+32768))
  9130  01B9  0020               	movlb	0	; select bank0
  9131  01BA  00AE               	movwf	sprintf@f
  9132  01BB  3098               	movlw	high (STR_3| (0+32768))
  9133  01BC  00AF               	movwf	sprintf@f+1
  9134  01BD  0846               	movf	lcd@h,w
  9135  01BE  00CF               	movwf	??_lcd
  9136  01BF  01D0               	clrf	??_lcd+1
  9137  01C0  084F               	movf	??_lcd,w
  9138  01C1  00B0               	movwf	?_sprintf+2
  9139  01C2  0850               	movf	??_lcd+1,w
  9140  01C3  00B1               	movwf	?_sprintf+3
  9141  01C4  0847               	movf	lcd@m,w
  9142  01C5  00D1               	movwf	??_lcd+2
  9143  01C6  01D2               	clrf	??_lcd+3
  9144  01C7  0851               	movf	??_lcd+2,w
  9145  01C8  00B2               	movwf	?_sprintf+4
  9146  01C9  0852               	movf	??_lcd+3,w
  9147  01CA  00B3               	movwf	?_sprintf+5
  9148  01CB  0848               	movf	lcd@s,w
  9149  01CC  00D3               	movwf	??_lcd+4
  9150  01CD  01D4               	clrf	??_lcd+5
  9151  01CE  0853               	movf	??_lcd+4,w
  9152  01CF  00B4               	movwf	?_sprintf+6
  9153  01D0  0854               	movf	??_lcd+5,w
  9154  01D1  00B5               	movwf	?_sprintf+7
  9155  01D2  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9156  01D3  3186  2639  3180   	fcall	_sprintf
  9157  01D6                     l4474:
  9158                           
  9159                           ;LCD.c: 212: LCDstr(buf);
  9160  01D6  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9161  01D7  3196  264A  3180   	fcall	_LCDstr
  9162  01DA                     l4476:
  9163                           
  9164                           ;LCD.c: 214: LCDcmd(0x8A);
  9165  01DA  308A               	movlw	138
  9166  01DB  3195  2528  3180   	fcall	_LCDcmd
  9167  01DE                     l4478:
  9168                           
  9169                           ;LCD.c: 215: sprintf(buf, "CTL");
  9170  01DE  3026               	movlw	low (STR_10| (0+32768))
  9171  01DF  0020               	movlb	0	; select bank0
  9172  01E0  00AE               	movwf	sprintf@f
  9173  01E1  3098               	movlw	high (STR_10| (0+32768))
  9174  01E2  00AF               	movwf	sprintf@f+1
  9175  01E3  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9176  01E4  3186  2639  3180   	fcall	_sprintf
  9177                           
  9178                           ;LCD.c: 216: LCDstr(buf);
  9179  01E7  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9180  01E8  3196  264A  3180   	fcall	_LCDstr
  9181  01EB                     l4480:
  9182                           
  9183                           ;LCD.c: 218: LCDcmd(0xc0);
  9184  01EB  30C0               	movlw	192
  9185  01EC  3195  2528  3180   	fcall	_LCDcmd
  9186  01EF                     l4482:
  9187                           
  9188                           ;LCD.c: 219: sprintf(buf, "%02d C", temperature);
  9189  01EF  3019               	movlw	low (STR_4| (0+32768))
  9190  01F0  0020               	movlb	0	; select bank0
  9191  01F1  00AE               	movwf	sprintf@f
  9192  01F2  3098               	movlw	high (STR_4| (0+32768))
  9193  01F3  00AF               	movwf	sprintf@f+1
  9194  01F4  0866               	movf	lcd@temperature,w
  9195  01F5  00CF               	movwf	??_lcd
  9196  01F6  01D0               	clrf	??_lcd+1
  9197  01F7  084F               	movf	??_lcd,w
  9198  01F8  00B0               	movwf	?_sprintf+2
  9199  01F9  0850               	movf	??_lcd+1,w
  9200  01FA  00B1               	movwf	?_sprintf+3
  9201  01FB  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9202  01FC  3186  2639  3180   	fcall	_sprintf
  9203  01FF                     l4484:
  9204                           
  9205                           ;LCD.c: 220: LCDstr(buf);
  9206  01FF  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9207  0200  3196  264A  3180   	fcall	_LCDstr
  9208  0203                     l4486:
  9209                           
  9210                           ;LCD.c: 222: LCDcmd(0xce);
  9211  0203  30CE               	movlw	206
  9212  0204  3195  2528  3180   	fcall	_LCDcmd
  9213                           
  9214                           ;LCD.c: 223: sprintf(buf, "L%01d", luminosity);
  9215  0207  3020               	movlw	low (STR_5| (0+32768))
  9216  0208  0020               	movlb	0	; select bank0
  9217  0209  00AE               	movwf	sprintf@f
  9218  020A  3098               	movlw	high (STR_5| (0+32768))
  9219  020B  00AF               	movwf	sprintf@f+1
  9220  020C  0843               	movf	lcd@luminosity,w
  9221  020D  00CF               	movwf	??_lcd
  9222  020E  01D0               	clrf	??_lcd+1
  9223  020F  084F               	movf	??_lcd,w
  9224  0210  00B0               	movwf	?_sprintf+2
  9225  0211  0850               	movf	??_lcd+1,w
  9226  0212  00B1               	movwf	?_sprintf+3
  9227  0213  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9228  0214  3186  2639  3180   	fcall	_sprintf
  9229  0217                     l4488:
  9230                           
  9231                           ;LCD.c: 224: LCDstr(buf);
  9232  0217  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9233  0218  3196  264A  3180   	fcall	_LCDstr
  9234  021B                     l4490:
  9235                           
  9236                           ;LCD.c: 225: LCDcmd(0x84);
  9237  021B  3084               	movlw	132
  9238  021C  3195  2528  3180   	fcall	_LCDcmd
  9239  021F                     l4492:
  9240                           
  9241                           ;LCD.c: 226: };LCD.c: 227: if (state ==3)
  9242  021F  3003               	movlw	3
  9243  0220  0020               	movlb	0	; select bank0
  9244  0221  0649               	xorwf	lcd@state,w
  9245  0222  1D03               	btfss	3,2
  9246  0223  2A25               	goto	u3691
  9247  0224  2A26               	goto	u3690
  9248  0225                     u3691:
  9249  0225  2A91               	goto	l4516
  9250  0226                     u3690:
  9251  0226                     l4494:
  9252                           
  9253                           ;LCD.c: 228: {;LCD.c: 229: LCDcmd(0x80);
  9254  0226  3080               	movlw	128
  9255  0227  3195  2528  3180   	fcall	_LCDcmd
  9256  022A                     l4496:
  9257                           
  9258                           ;LCD.c: 230: sprintf(buf, "%02d:%02d:%02d", h,m,s);
  9259  022A  3000               	movlw	low (STR_3| (0+32768))
  9260  022B  0020               	movlb	0	; select bank0
  9261  022C  00AE               	movwf	sprintf@f
  9262  022D  3098               	movlw	high (STR_3| (0+32768))
  9263  022E  00AF               	movwf	sprintf@f+1
  9264  022F  0846               	movf	lcd@h,w
  9265  0230  00CF               	movwf	??_lcd
  9266  0231  01D0               	clrf	??_lcd+1
  9267  0232  084F               	movf	??_lcd,w
  9268  0233  00B0               	movwf	?_sprintf+2
  9269  0234  0850               	movf	??_lcd+1,w
  9270  0235  00B1               	movwf	?_sprintf+3
  9271  0236  0847               	movf	lcd@m,w
  9272  0237  00D1               	movwf	??_lcd+2
  9273  0238  01D2               	clrf	??_lcd+3
  9274  0239  0851               	movf	??_lcd+2,w
  9275  023A  00B2               	movwf	?_sprintf+4
  9276  023B  0852               	movf	??_lcd+3,w
  9277  023C  00B3               	movwf	?_sprintf+5
  9278  023D  0848               	movf	lcd@s,w
  9279  023E  00D3               	movwf	??_lcd+4
  9280  023F  01D4               	clrf	??_lcd+5
  9281  0240  0853               	movf	??_lcd+4,w
  9282  0241  00B4               	movwf	?_sprintf+6
  9283  0242  0854               	movf	??_lcd+5,w
  9284  0243  00B5               	movwf	?_sprintf+7
  9285  0244  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9286  0245  3186  2639  3180   	fcall	_sprintf
  9287  0248                     l4498:
  9288                           
  9289                           ;LCD.c: 231: LCDstr(buf);
  9290  0248  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9291  0249  3196  264A  3180   	fcall	_LCDstr
  9292  024C                     l4500:
  9293                           
  9294                           ;LCD.c: 233: LCDcmd(0x8A);
  9295  024C  308A               	movlw	138
  9296  024D  3195  2528  3180   	fcall	_LCDcmd
  9297  0250                     l4502:
  9298                           
  9299                           ;LCD.c: 234: sprintf(buf, "CTL");
  9300  0250  3026               	movlw	low (STR_10| (0+32768))
  9301  0251  0020               	movlb	0	; select bank0
  9302  0252  00AE               	movwf	sprintf@f
  9303  0253  3098               	movlw	high (STR_10| (0+32768))
  9304  0254  00AF               	movwf	sprintf@f+1
  9305  0255  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9306  0256  3186  2639  3180   	fcall	_sprintf
  9307                           
  9308                           ;LCD.c: 235: LCDstr(buf);
  9309  0259  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9310  025A  3196  264A  3180   	fcall	_LCDstr
  9311  025D                     l4504:
  9312                           
  9313                           ;LCD.c: 237: LCDcmd(0xc0);
  9314  025D  30C0               	movlw	192
  9315  025E  3195  2528  3180   	fcall	_LCDcmd
  9316  0261                     l4506:
  9317                           
  9318                           ;LCD.c: 238: sprintf(buf, "%02d C", temperature);
  9319  0261  3019               	movlw	low (STR_4| (0+32768))
  9320  0262  0020               	movlb	0	; select bank0
  9321  0263  00AE               	movwf	sprintf@f
  9322  0264  3098               	movlw	high (STR_4| (0+32768))
  9323  0265  00AF               	movwf	sprintf@f+1
  9324  0266  0866               	movf	lcd@temperature,w
  9325  0267  00CF               	movwf	??_lcd
  9326  0268  01D0               	clrf	??_lcd+1
  9327  0269  084F               	movf	??_lcd,w
  9328  026A  00B0               	movwf	?_sprintf+2
  9329  026B  0850               	movf	??_lcd+1,w
  9330  026C  00B1               	movwf	?_sprintf+3
  9331  026D  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9332  026E  3186  2639  3180   	fcall	_sprintf
  9333  0271                     l4508:
  9334                           
  9335                           ;LCD.c: 239: LCDstr(buf);
  9336  0271  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9337  0272  3196  264A  3180   	fcall	_LCDstr
  9338  0275                     l4510:
  9339                           
  9340                           ;LCD.c: 241: LCDcmd(0xce);
  9341  0275  30CE               	movlw	206
  9342  0276  3195  2528  3180   	fcall	_LCDcmd
  9343                           
  9344                           ;LCD.c: 242: sprintf(buf, "L%01d", luminosity);
  9345  0279  3020               	movlw	low (STR_5| (0+32768))
  9346  027A  0020               	movlb	0	; select bank0
  9347  027B  00AE               	movwf	sprintf@f
  9348  027C  3098               	movlw	high (STR_5| (0+32768))
  9349  027D  00AF               	movwf	sprintf@f+1
  9350  027E  0843               	movf	lcd@luminosity,w
  9351  027F  00CF               	movwf	??_lcd
  9352  0280  01D0               	clrf	??_lcd+1
  9353  0281  084F               	movf	??_lcd,w
  9354  0282  00B0               	movwf	?_sprintf+2
  9355  0283  0850               	movf	??_lcd+1,w
  9356  0284  00B1               	movwf	?_sprintf+3
  9357  0285  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9358  0286  3186  2639  3180   	fcall	_sprintf
  9359  0289                     l4512:
  9360                           
  9361                           ;LCD.c: 243: LCDstr(buf);
  9362  0289  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9363  028A  3196  264A  3180   	fcall	_LCDstr
  9364  028D                     l4514:
  9365                           
  9366                           ;LCD.c: 244: LCDcmd(0x87);
  9367  028D  3087               	movlw	135
  9368  028E  3195  2528  3180   	fcall	_LCDcmd
  9369  0291                     l4516:
  9370                           
  9371                           ;LCD.c: 245: };LCD.c: 248: if (state ==4)
  9372  0291  3004               	movlw	4
  9373  0292  0020               	movlb	0	; select bank0
  9374  0293  0649               	xorwf	lcd@state,w
  9375  0294  1D03               	btfss	3,2
  9376  0295  2A97               	goto	u3701
  9377  0296  2A98               	goto	u3700
  9378  0297                     u3701:
  9379  0297  2B03               	goto	l4540
  9380  0298                     u3700:
  9381  0298                     l4518:
  9382                           
  9383                           ;LCD.c: 249: {;LCD.c: 250: LCDcmd(0x8A);
  9384  0298  308A               	movlw	138
  9385  0299  3195  2528  3180   	fcall	_LCDcmd
  9386  029C                     l4520:
  9387                           
  9388                           ;LCD.c: 251: sprintf(buf, "CTL");
  9389  029C  3026               	movlw	low (STR_10| (0+32768))
  9390  029D  0020               	movlb	0	; select bank0
  9391  029E  00AE               	movwf	sprintf@f
  9392  029F  3098               	movlw	high (STR_10| (0+32768))
  9393  02A0  00AF               	movwf	sprintf@f+1
  9394  02A1  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9395  02A2  3186  2639  3180   	fcall	_sprintf
  9396  02A5                     l4522:
  9397                           
  9398                           ;LCD.c: 252: LCDstr(buf);
  9399  02A5  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9400  02A6  3196  264A  3180   	fcall	_LCDstr
  9401  02A9                     l4524:
  9402                           
  9403                           ;LCD.c: 254: LCDcmd(0xc0);
  9404  02A9  30C0               	movlw	192
  9405  02AA  3195  2528  3180   	fcall	_LCDcmd
  9406  02AD                     l4526:
  9407                           
  9408                           ;LCD.c: 255: sprintf(buf, "%02d C", temperature);
  9409  02AD  3019               	movlw	low (STR_4| (0+32768))
  9410  02AE  0020               	movlb	0	; select bank0
  9411  02AF  00AE               	movwf	sprintf@f
  9412  02B0  3098               	movlw	high (STR_4| (0+32768))
  9413  02B1  00AF               	movwf	sprintf@f+1
  9414  02B2  0866               	movf	lcd@temperature,w
  9415  02B3  00CF               	movwf	??_lcd
  9416  02B4  01D0               	clrf	??_lcd+1
  9417  02B5  084F               	movf	??_lcd,w
  9418  02B6  00B0               	movwf	?_sprintf+2
  9419  02B7  0850               	movf	??_lcd+1,w
  9420  02B8  00B1               	movwf	?_sprintf+3
  9421  02B9  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9422  02BA  3186  2639  3180   	fcall	_sprintf
  9423                           
  9424                           ;LCD.c: 256: LCDstr(buf);
  9425  02BD  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9426  02BE  3196  264A  3180   	fcall	_LCDstr
  9427  02C1                     l4528:
  9428                           
  9429                           ;LCD.c: 258: LCDcmd(0xce);
  9430  02C1  30CE               	movlw	206
  9431  02C2  3195  2528  3180   	fcall	_LCDcmd
  9432  02C5                     l4530:
  9433                           
  9434                           ;LCD.c: 259: sprintf(buf, "L%01d", luminosity);
  9435  02C5  3020               	movlw	low (STR_5| (0+32768))
  9436  02C6  0020               	movlb	0	; select bank0
  9437  02C7  00AE               	movwf	sprintf@f
  9438  02C8  3098               	movlw	high (STR_5| (0+32768))
  9439  02C9  00AF               	movwf	sprintf@f+1
  9440  02CA  0843               	movf	lcd@luminosity,w
  9441  02CB  00CF               	movwf	??_lcd
  9442  02CC  01D0               	clrf	??_lcd+1
  9443  02CD  084F               	movf	??_lcd,w
  9444  02CE  00B0               	movwf	?_sprintf+2
  9445  02CF  0850               	movf	??_lcd+1,w
  9446  02D0  00B1               	movwf	?_sprintf+3
  9447  02D1  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9448  02D2  3186  2639  3180   	fcall	_sprintf
  9449  02D5                     l4532:
  9450                           
  9451                           ;LCD.c: 260: LCDstr(buf);
  9452  02D5  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9453  02D6  3196  264A  3180   	fcall	_LCDstr
  9454  02D9                     l4534:
  9455                           
  9456                           ;LCD.c: 261: LCDcmd(0x80);
  9457  02D9  3080               	movlw	128
  9458  02DA  3195  2528  3180   	fcall	_LCDcmd
  9459                           
  9460                           ;LCD.c: 262: sprintf(buf, "%02d:%02d:%02d", alah, alam, alas);
  9461  02DD  3000               	movlw	low (STR_3| (0+32768))
  9462  02DE  0020               	movlb	0	; select bank0
  9463  02DF  00AE               	movwf	sprintf@f
  9464  02E0  3098               	movlw	high (STR_3| (0+32768))
  9465  02E1  00AF               	movwf	sprintf@f+1
  9466  02E2  084C               	movf	lcd@alah,w
  9467  02E3  00CF               	movwf	??_lcd
  9468  02E4  01D0               	clrf	??_lcd+1
  9469  02E5  084F               	movf	??_lcd,w
  9470  02E6  00B0               	movwf	?_sprintf+2
  9471  02E7  0850               	movf	??_lcd+1,w
  9472  02E8  00B1               	movwf	?_sprintf+3
  9473  02E9  084D               	movf	lcd@alam,w
  9474  02EA  00D1               	movwf	??_lcd+2
  9475  02EB  01D2               	clrf	??_lcd+3
  9476  02EC  0851               	movf	??_lcd+2,w
  9477  02ED  00B2               	movwf	?_sprintf+4
  9478  02EE  0852               	movf	??_lcd+3,w
  9479  02EF  00B3               	movwf	?_sprintf+5
  9480  02F0  084E               	movf	lcd@alas,w
  9481  02F1  00D3               	movwf	??_lcd+4
  9482  02F2  01D4               	clrf	??_lcd+5
  9483  02F3  0853               	movf	??_lcd+4,w
  9484  02F4  00B4               	movwf	?_sprintf+6
  9485  02F5  0854               	movf	??_lcd+5,w
  9486  02F6  00B5               	movwf	?_sprintf+7
  9487  02F7  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9488  02F8  3186  2639  3180   	fcall	_sprintf
  9489  02FB                     l4536:
  9490                           
  9491                           ;LCD.c: 263: LCDstr(buf);
  9492  02FB  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9493  02FC  3196  264A  3180   	fcall	_LCDstr
  9494  02FF                     l4538:
  9495                           
  9496                           ;LCD.c: 264: LCDcmd(0x8a);
  9497  02FF  308A               	movlw	138
  9498  0300  3195  2528  3180   	fcall	_LCDcmd
  9499  0303                     l4540:
  9500                           
  9501                           ;LCD.c: 265: };LCD.c: 267: if (state ==5)
  9502  0303  3005               	movlw	5
  9503  0304  0020               	movlb	0	; select bank0
  9504  0305  0649               	xorwf	lcd@state,w
  9505  0306  1D03               	btfss	3,2
  9506  0307  2B09               	goto	u3711
  9507  0308  2B0A               	goto	u3710
  9508  0309                     u3711:
  9509  0309  2B75               	goto	l4564
  9510  030A                     u3710:
  9511  030A                     l4542:
  9512                           
  9513                           ;LCD.c: 268: {;LCD.c: 269: LCDcmd(0x8A);
  9514  030A  308A               	movlw	138
  9515  030B  3195  2528  3180   	fcall	_LCDcmd
  9516  030E                     l4544:
  9517                           
  9518                           ;LCD.c: 270: sprintf(buf, "CTL");
  9519  030E  3026               	movlw	low (STR_10| (0+32768))
  9520  030F  0020               	movlb	0	; select bank0
  9521  0310  00AE               	movwf	sprintf@f
  9522  0311  3098               	movlw	high (STR_10| (0+32768))
  9523  0312  00AF               	movwf	sprintf@f+1
  9524  0313  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9525  0314  3186  2639  3180   	fcall	_sprintf
  9526  0317                     l4546:
  9527                           
  9528                           ;LCD.c: 271: LCDstr(buf);
  9529  0317  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9530  0318  3196  264A  3180   	fcall	_LCDstr
  9531  031B                     l4548:
  9532                           
  9533                           ;LCD.c: 273: LCDcmd(0xc0);
  9534  031B  30C0               	movlw	192
  9535  031C  3195  2528  3180   	fcall	_LCDcmd
  9536  031F                     l4550:
  9537                           
  9538                           ;LCD.c: 274: sprintf(buf, "%02d C", temperature);
  9539  031F  3019               	movlw	low (STR_4| (0+32768))
  9540  0320  0020               	movlb	0	; select bank0
  9541  0321  00AE               	movwf	sprintf@f
  9542  0322  3098               	movlw	high (STR_4| (0+32768))
  9543  0323  00AF               	movwf	sprintf@f+1
  9544  0324  0866               	movf	lcd@temperature,w
  9545  0325  00CF               	movwf	??_lcd
  9546  0326  01D0               	clrf	??_lcd+1
  9547  0327  084F               	movf	??_lcd,w
  9548  0328  00B0               	movwf	?_sprintf+2
  9549  0329  0850               	movf	??_lcd+1,w
  9550  032A  00B1               	movwf	?_sprintf+3
  9551  032B  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9552  032C  3186  2639  3180   	fcall	_sprintf
  9553                           
  9554                           ;LCD.c: 275: LCDstr(buf);
  9555  032F  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9556  0330  3196  264A  3180   	fcall	_LCDstr
  9557  0333                     l4552:
  9558                           
  9559                           ;LCD.c: 277: LCDcmd(0xce);
  9560  0333  30CE               	movlw	206
  9561  0334  3195  2528  3180   	fcall	_LCDcmd
  9562  0337                     l4554:
  9563                           
  9564                           ;LCD.c: 278: sprintf(buf, "L%01d", luminosity);
  9565  0337  3020               	movlw	low (STR_5| (0+32768))
  9566  0338  0020               	movlb	0	; select bank0
  9567  0339  00AE               	movwf	sprintf@f
  9568  033A  3098               	movlw	high (STR_5| (0+32768))
  9569  033B  00AF               	movwf	sprintf@f+1
  9570  033C  0843               	movf	lcd@luminosity,w
  9571  033D  00CF               	movwf	??_lcd
  9572  033E  01D0               	clrf	??_lcd+1
  9573  033F  084F               	movf	??_lcd,w
  9574  0340  00B0               	movwf	?_sprintf+2
  9575  0341  0850               	movf	??_lcd+1,w
  9576  0342  00B1               	movwf	?_sprintf+3
  9577  0343  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9578  0344  3186  2639  3180   	fcall	_sprintf
  9579  0347                     l4556:
  9580                           
  9581                           ;LCD.c: 279: LCDstr(buf);
  9582  0347  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9583  0348  3196  264A  3180   	fcall	_LCDstr
  9584  034B                     l4558:
  9585                           
  9586                           ;LCD.c: 280: LCDcmd(0x80);
  9587  034B  3080               	movlw	128
  9588  034C  3195  2528  3180   	fcall	_LCDcmd
  9589                           
  9590                           ;LCD.c: 281: sprintf(buf, "%02d:%02d:%02d", alah, alam, alas);
  9591  034F  3000               	movlw	low (STR_3| (0+32768))
  9592  0350  0020               	movlb	0	; select bank0
  9593  0351  00AE               	movwf	sprintf@f
  9594  0352  3098               	movlw	high (STR_3| (0+32768))
  9595  0353  00AF               	movwf	sprintf@f+1
  9596  0354  084C               	movf	lcd@alah,w
  9597  0355  00CF               	movwf	??_lcd
  9598  0356  01D0               	clrf	??_lcd+1
  9599  0357  084F               	movf	??_lcd,w
  9600  0358  00B0               	movwf	?_sprintf+2
  9601  0359  0850               	movf	??_lcd+1,w
  9602  035A  00B1               	movwf	?_sprintf+3
  9603  035B  084D               	movf	lcd@alam,w
  9604  035C  00D1               	movwf	??_lcd+2
  9605  035D  01D2               	clrf	??_lcd+3
  9606  035E  0851               	movf	??_lcd+2,w
  9607  035F  00B2               	movwf	?_sprintf+4
  9608  0360  0852               	movf	??_lcd+3,w
  9609  0361  00B3               	movwf	?_sprintf+5
  9610  0362  084E               	movf	lcd@alas,w
  9611  0363  00D3               	movwf	??_lcd+4
  9612  0364  01D4               	clrf	??_lcd+5
  9613  0365  0853               	movf	??_lcd+4,w
  9614  0366  00B4               	movwf	?_sprintf+6
  9615  0367  0854               	movf	??_lcd+5,w
  9616  0368  00B5               	movwf	?_sprintf+7
  9617  0369  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9618  036A  3186  2639  3180   	fcall	_sprintf
  9619  036D                     l4560:
  9620                           
  9621                           ;LCD.c: 282: LCDstr(buf);
  9622  036D  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9623  036E  3196  264A  3180   	fcall	_LCDstr
  9624  0371                     l4562:
  9625                           
  9626                           ;LCD.c: 283: LCDcmd(0x81);
  9627  0371  3081               	movlw	129
  9628  0372  3195  2528  3180   	fcall	_LCDcmd
  9629  0375                     l4564:
  9630                           
  9631                           ;LCD.c: 285: };LCD.c: 287: if (state ==6)
  9632  0375  3006               	movlw	6
  9633  0376  0020               	movlb	0	; select bank0
  9634  0377  0649               	xorwf	lcd@state,w
  9635  0378  1D03               	btfss	3,2
  9636  0379  2B7B               	goto	u3721
  9637  037A  2B7C               	goto	u3720
  9638  037B                     u3721:
  9639  037B  2BE7               	goto	l4588
  9640  037C                     u3720:
  9641  037C                     l4566:
  9642                           
  9643                           ;LCD.c: 288: {;LCD.c: 289: LCDcmd(0x8A);
  9644  037C  308A               	movlw	138
  9645  037D  3195  2528  3180   	fcall	_LCDcmd
  9646  0380                     l4568:
  9647                           
  9648                           ;LCD.c: 290: sprintf(buf, "CTL");
  9649  0380  3026               	movlw	low (STR_10| (0+32768))
  9650  0381  0020               	movlb	0	; select bank0
  9651  0382  00AE               	movwf	sprintf@f
  9652  0383  3098               	movlw	high (STR_10| (0+32768))
  9653  0384  00AF               	movwf	sprintf@f+1
  9654  0385  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9655  0386  3186  2639  3180   	fcall	_sprintf
  9656  0389                     l4570:
  9657                           
  9658                           ;LCD.c: 291: LCDstr(buf);
  9659  0389  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9660  038A  3196  264A  3180   	fcall	_LCDstr
  9661  038D                     l4572:
  9662                           
  9663                           ;LCD.c: 293: LCDcmd(0xc0);
  9664  038D  30C0               	movlw	192
  9665  038E  3195  2528  3180   	fcall	_LCDcmd
  9666  0391                     l4574:
  9667                           
  9668                           ;LCD.c: 294: sprintf(buf, "%02d C", temperature);
  9669  0391  3019               	movlw	low (STR_4| (0+32768))
  9670  0392  0020               	movlb	0	; select bank0
  9671  0393  00AE               	movwf	sprintf@f
  9672  0394  3098               	movlw	high (STR_4| (0+32768))
  9673  0395  00AF               	movwf	sprintf@f+1
  9674  0396  0866               	movf	lcd@temperature,w
  9675  0397  00CF               	movwf	??_lcd
  9676  0398  01D0               	clrf	??_lcd+1
  9677  0399  084F               	movf	??_lcd,w
  9678  039A  00B0               	movwf	?_sprintf+2
  9679  039B  0850               	movf	??_lcd+1,w
  9680  039C  00B1               	movwf	?_sprintf+3
  9681  039D  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9682  039E  3186  2639  3180   	fcall	_sprintf
  9683                           
  9684                           ;LCD.c: 295: LCDstr(buf);
  9685  03A1  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9686  03A2  3196  264A  3180   	fcall	_LCDstr
  9687  03A5                     l4576:
  9688                           
  9689                           ;LCD.c: 297: LCDcmd(0xce);
  9690  03A5  30CE               	movlw	206
  9691  03A6  3195  2528  3180   	fcall	_LCDcmd
  9692  03A9                     l4578:
  9693                           
  9694                           ;LCD.c: 298: sprintf(buf, "L%01d", luminosity);
  9695  03A9  3020               	movlw	low (STR_5| (0+32768))
  9696  03AA  0020               	movlb	0	; select bank0
  9697  03AB  00AE               	movwf	sprintf@f
  9698  03AC  3098               	movlw	high (STR_5| (0+32768))
  9699  03AD  00AF               	movwf	sprintf@f+1
  9700  03AE  0843               	movf	lcd@luminosity,w
  9701  03AF  00CF               	movwf	??_lcd
  9702  03B0  01D0               	clrf	??_lcd+1
  9703  03B1  084F               	movf	??_lcd,w
  9704  03B2  00B0               	movwf	?_sprintf+2
  9705  03B3  0850               	movf	??_lcd+1,w
  9706  03B4  00B1               	movwf	?_sprintf+3
  9707  03B5  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9708  03B6  3186  2639  3180   	fcall	_sprintf
  9709  03B9                     l4580:
  9710                           
  9711                           ;LCD.c: 299: LCDstr(buf);
  9712  03B9  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9713  03BA  3196  264A  3180   	fcall	_LCDstr
  9714  03BD                     l4582:
  9715                           
  9716                           ;LCD.c: 300: LCDcmd(0x80);
  9717  03BD  3080               	movlw	128
  9718  03BE  3195  2528  3180   	fcall	_LCDcmd
  9719                           
  9720                           ;LCD.c: 301: sprintf(buf, "%02d:%02d:%02d", alah, alam, alas);
  9721  03C1  3000               	movlw	low (STR_3| (0+32768))
  9722  03C2  0020               	movlb	0	; select bank0
  9723  03C3  00AE               	movwf	sprintf@f
  9724  03C4  3098               	movlw	high (STR_3| (0+32768))
  9725  03C5  00AF               	movwf	sprintf@f+1
  9726  03C6  084C               	movf	lcd@alah,w
  9727  03C7  00CF               	movwf	??_lcd
  9728  03C8  01D0               	clrf	??_lcd+1
  9729  03C9  084F               	movf	??_lcd,w
  9730  03CA  00B0               	movwf	?_sprintf+2
  9731  03CB  0850               	movf	??_lcd+1,w
  9732  03CC  00B1               	movwf	?_sprintf+3
  9733  03CD  084D               	movf	lcd@alam,w
  9734  03CE  00D1               	movwf	??_lcd+2
  9735  03CF  01D2               	clrf	??_lcd+3
  9736  03D0  0851               	movf	??_lcd+2,w
  9737  03D1  00B2               	movwf	?_sprintf+4
  9738  03D2  0852               	movf	??_lcd+3,w
  9739  03D3  00B3               	movwf	?_sprintf+5
  9740  03D4  084E               	movf	lcd@alas,w
  9741  03D5  00D3               	movwf	??_lcd+4
  9742  03D6  01D4               	clrf	??_lcd+5
  9743  03D7  0853               	movf	??_lcd+4,w
  9744  03D8  00B4               	movwf	?_sprintf+6
  9745  03D9  0854               	movf	??_lcd+5,w
  9746  03DA  00B5               	movwf	?_sprintf+7
  9747  03DB  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9748  03DC  3186  2639  3180   	fcall	_sprintf
  9749  03DF                     l4584:
  9750                           
  9751                           ;LCD.c: 302: LCDstr(buf);
  9752  03DF  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9753  03E0  3196  264A  3180   	fcall	_LCDstr
  9754  03E3                     l4586:
  9755                           
  9756                           ;LCD.c: 303: LCDcmd(0x84);
  9757  03E3  3084               	movlw	132
  9758  03E4  3195  2528  3180   	fcall	_LCDcmd
  9759  03E7                     l4588:
  9760                           
  9761                           ;LCD.c: 305: };LCD.c: 307: if (state ==7)
  9762  03E7  3007               	movlw	7
  9763  03E8  0020               	movlb	0	; select bank0
  9764  03E9  0649               	xorwf	lcd@state,w
  9765  03EA  1D03               	btfss	3,2
  9766  03EB  2BED               	goto	u3731
  9767  03EC  2BEE               	goto	u3730
  9768  03ED                     u3731:
  9769  03ED  2C5D               	goto	l4616
  9770  03EE                     u3730:
  9771  03EE                     l4590:
  9772                           
  9773                           ;LCD.c: 308: {;LCD.c: 309: LCDcmd(0x8A);
  9774  03EE  308A               	movlw	138
  9775  03EF  3195  2528  3180   	fcall	_LCDcmd
  9776  03F2                     l4592:
  9777                           
  9778                           ;LCD.c: 310: sprintf(buf, "CTL");
  9779  03F2  3026               	movlw	low (STR_10| (0+32768))
  9780  03F3  0020               	movlb	0	; select bank0
  9781  03F4  00AE               	movwf	sprintf@f
  9782  03F5  3098               	movlw	high (STR_10| (0+32768))
  9783  03F6  00AF               	movwf	sprintf@f+1
  9784  03F7  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9785  03F8  3186  2639  3180   	fcall	_sprintf
  9786  03FB                     l4594:
  9787                           
  9788                           ;LCD.c: 311: LCDstr(buf);
  9789  03FB  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9790  03FC  3196  264A  3180   	fcall	_LCDstr
  9791  03FF                     l4596:
  9792                           
  9793                           ;LCD.c: 313: LCDcmd(0xc0);
  9794  03FF  30C0               	movlw	192
  9795  0400  3195  2528  3180   	fcall	_LCDcmd
  9796  0403                     l4598:
  9797                           
  9798                           ;LCD.c: 314: sprintf(buf, "%02d C", temperature);
  9799  0403  3019               	movlw	low (STR_4| (0+32768))
  9800  0404  0020               	movlb	0	; select bank0
  9801  0405  00AE               	movwf	sprintf@f
  9802  0406  3098               	movlw	high (STR_4| (0+32768))
  9803  0407  00AF               	movwf	sprintf@f+1
  9804  0408  0866               	movf	lcd@temperature,w
  9805  0409  00CF               	movwf	??_lcd
  9806  040A  01D0               	clrf	??_lcd+1
  9807  040B  084F               	movf	??_lcd,w
  9808  040C  00B0               	movwf	?_sprintf+2
  9809  040D  0850               	movf	??_lcd+1,w
  9810  040E  00B1               	movwf	?_sprintf+3
  9811  040F  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9812  0410  3186  2639  3180   	fcall	_sprintf
  9813                           
  9814                           ;LCD.c: 315: LCDstr(buf);
  9815  0413  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9816  0414  3196  264A  3180   	fcall	_LCDstr
  9817  0417                     l4600:
  9818                           
  9819                           ;LCD.c: 317: LCDcmd(0xce);
  9820  0417  30CE               	movlw	206
  9821  0418  3195  2528  3180   	fcall	_LCDcmd
  9822  041B                     l4602:
  9823                           
  9824                           ;LCD.c: 318: sprintf(buf, "L%01d", luminosity);
  9825  041B  3020               	movlw	low (STR_5| (0+32768))
  9826  041C  0020               	movlb	0	; select bank0
  9827  041D  00AE               	movwf	sprintf@f
  9828  041E  3098               	movlw	high (STR_5| (0+32768))
  9829  041F  00AF               	movwf	sprintf@f+1
  9830  0420  0843               	movf	lcd@luminosity,w
  9831  0421  00CF               	movwf	??_lcd
  9832  0422  01D0               	clrf	??_lcd+1
  9833  0423  084F               	movf	??_lcd,w
  9834  0424  00B0               	movwf	?_sprintf+2
  9835  0425  0850               	movf	??_lcd+1,w
  9836  0426  00B1               	movwf	?_sprintf+3
  9837  0427  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9838  0428  3186  2639  3180   	fcall	_sprintf
  9839  042B                     l4604:
  9840                           
  9841                           ;LCD.c: 319: LCDstr(buf);
  9842  042B  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9843  042C  3196  264A  3180   	fcall	_LCDstr
  9844  042F                     l4606:
  9845                           
  9846                           ;LCD.c: 320: LCDcmd(0x81);
  9847  042F  3081               	movlw	129
  9848  0430  3195  2528  3180   	fcall	_LCDcmd
  9849  0433                     l4608:
  9850                           
  9851                           ;LCD.c: 321: LCDcmd(0x80);
  9852  0433  3080               	movlw	128
  9853  0434  3195  2528  3180   	fcall	_LCDcmd
  9854  0437                     l4610:
  9855                           
  9856                           ;LCD.c: 322: sprintf(buf, "%02d:%02d:%02d", alah, alam, alas);
  9857  0437  3000               	movlw	low (STR_3| (0+32768))
  9858  0438  0020               	movlb	0	; select bank0
  9859  0439  00AE               	movwf	sprintf@f
  9860  043A  3098               	movlw	high (STR_3| (0+32768))
  9861  043B  00AF               	movwf	sprintf@f+1
  9862  043C  084C               	movf	lcd@alah,w
  9863  043D  00CF               	movwf	??_lcd
  9864  043E  01D0               	clrf	??_lcd+1
  9865  043F  084F               	movf	??_lcd,w
  9866  0440  00B0               	movwf	?_sprintf+2
  9867  0441  0850               	movf	??_lcd+1,w
  9868  0442  00B1               	movwf	?_sprintf+3
  9869  0443  084D               	movf	lcd@alam,w
  9870  0444  00D1               	movwf	??_lcd+2
  9871  0445  01D2               	clrf	??_lcd+3
  9872  0446  0851               	movf	??_lcd+2,w
  9873  0447  00B2               	movwf	?_sprintf+4
  9874  0448  0852               	movf	??_lcd+3,w
  9875  0449  00B3               	movwf	?_sprintf+5
  9876  044A  084E               	movf	lcd@alas,w
  9877  044B  00D3               	movwf	??_lcd+4
  9878  044C  01D4               	clrf	??_lcd+5
  9879  044D  0853               	movf	??_lcd+4,w
  9880  044E  00B4               	movwf	?_sprintf+6
  9881  044F  0854               	movf	??_lcd+5,w
  9882  0450  00B5               	movwf	?_sprintf+7
  9883  0451  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9884  0452  3186  2639  3180   	fcall	_sprintf
  9885  0455                     l4612:
  9886                           
  9887                           ;LCD.c: 323: LCDstr(buf);
  9888  0455  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9889  0456  3196  264A  3180   	fcall	_LCDstr
  9890  0459                     l4614:
  9891                           
  9892                           ;LCD.c: 324: LCDcmd(0x87);
  9893  0459  3087               	movlw	135
  9894  045A  3195  2528  3180   	fcall	_LCDcmd
  9895  045D                     l4616:
  9896                           
  9897                           ;LCD.c: 326: };LCD.c: 329: if (state ==8)
  9898  045D  3008               	movlw	8
  9899  045E  0020               	movlb	0	; select bank0
  9900  045F  0649               	xorwf	lcd@state,w
  9901  0460  1D03               	btfss	3,2
  9902  0461  2C63               	goto	u3741
  9903  0462  2C64               	goto	u3740
  9904  0463                     u3741:
  9905  0463  2CD3               	goto	l4644
  9906  0464                     u3740:
  9907  0464                     l4618:
  9908                           
  9909                           ;LCD.c: 330: {;LCD.c: 331: LCDcmd(0x80);
  9910  0464  3080               	movlw	128
  9911  0465  3195  2528  3180   	fcall	_LCDcmd
  9912  0468                     l4620:
  9913                           
  9914                           ;LCD.c: 332: sprintf(buf, "%02d:%02d:%02d", h,m,s);
  9915  0468  3000               	movlw	low (STR_3| (0+32768))
  9916  0469  0020               	movlb	0	; select bank0
  9917  046A  00AE               	movwf	sprintf@f
  9918  046B  3098               	movlw	high (STR_3| (0+32768))
  9919  046C  00AF               	movwf	sprintf@f+1
  9920  046D  0846               	movf	lcd@h,w
  9921  046E  00CF               	movwf	??_lcd
  9922  046F  01D0               	clrf	??_lcd+1
  9923  0470  084F               	movf	??_lcd,w
  9924  0471  00B0               	movwf	?_sprintf+2
  9925  0472  0850               	movf	??_lcd+1,w
  9926  0473  00B1               	movwf	?_sprintf+3
  9927  0474  0847               	movf	lcd@m,w
  9928  0475  00D1               	movwf	??_lcd+2
  9929  0476  01D2               	clrf	??_lcd+3
  9930  0477  0851               	movf	??_lcd+2,w
  9931  0478  00B2               	movwf	?_sprintf+4
  9932  0479  0852               	movf	??_lcd+3,w
  9933  047A  00B3               	movwf	?_sprintf+5
  9934  047B  0848               	movf	lcd@s,w
  9935  047C  00D3               	movwf	??_lcd+4
  9936  047D  01D4               	clrf	??_lcd+5
  9937  047E  0853               	movf	??_lcd+4,w
  9938  047F  00B4               	movwf	?_sprintf+6
  9939  0480  0854               	movf	??_lcd+5,w
  9940  0481  00B5               	movwf	?_sprintf+7
  9941  0482  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9942  0483  3186  2639  3180   	fcall	_sprintf
  9943  0486                     l4622:
  9944                           
  9945                           ;LCD.c: 333: LCDstr(buf);
  9946  0486  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9947  0487  3196  264A  3180   	fcall	_LCDstr
  9948  048A                     l4624:
  9949                           
  9950                           ;LCD.c: 335: LCDcmd(0x8A);
  9951  048A  308A               	movlw	138
  9952  048B  3195  2528  3180   	fcall	_LCDcmd
  9953  048E                     l4626:
  9954                           
  9955                           ;LCD.c: 336: sprintf(buf, "CTL");
  9956  048E  3026               	movlw	low (STR_10| (0+32768))
  9957  048F  0020               	movlb	0	; select bank0
  9958  0490  00AE               	movwf	sprintf@f
  9959  0491  3098               	movlw	high (STR_10| (0+32768))
  9960  0492  00AF               	movwf	sprintf@f+1
  9961  0493  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9962  0494  3186  2639  3180   	fcall	_sprintf
  9963                           
  9964                           ;LCD.c: 337: LCDstr(buf);
  9965  0497  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9966  0498  3196  264A  3180   	fcall	_LCDstr
  9967  049B                     l4628:
  9968                           
  9969                           ;LCD.c: 339: LCDcmd(0xce);
  9970  049B  30CE               	movlw	206
  9971  049C  3195  2528  3180   	fcall	_LCDcmd
  9972  049F                     l4630:
  9973                           
  9974                           ;LCD.c: 340: sprintf(buf, "L%01d", luminosity);
  9975  049F  3020               	movlw	low (STR_5| (0+32768))
  9976  04A0  0020               	movlb	0	; select bank0
  9977  04A1  00AE               	movwf	sprintf@f
  9978  04A2  3098               	movlw	high (STR_5| (0+32768))
  9979  04A3  00AF               	movwf	sprintf@f+1
  9980  04A4  0843               	movf	lcd@luminosity,w
  9981  04A5  00CF               	movwf	??_lcd
  9982  04A6  01D0               	clrf	??_lcd+1
  9983  04A7  084F               	movf	??_lcd,w
  9984  04A8  00B0               	movwf	?_sprintf+2
  9985  04A9  0850               	movf	??_lcd+1,w
  9986  04AA  00B1               	movwf	?_sprintf+3
  9987  04AB  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9988  04AC  3186  2639  3180   	fcall	_sprintf
  9989  04AF                     l4632:
  9990                           
  9991                           ;LCD.c: 341: LCDstr(buf);
  9992  04AF  3055               	movlw	(low (lcd@buf| 0))& (0+255)
  9993  04B0  3196  264A  3180   	fcall	_LCDstr
  9994  04B3                     l4634:
  9995                           
  9996                           ;LCD.c: 342: LCDcmd(0x81);
  9997  04B3  3081               	movlw	129
  9998  04B4  3195  2528  3180   	fcall	_LCDcmd
  9999  04B7                     l4636:
 10000                           
 10001                           ;LCD.c: 344: LCDcmd(0xc0);
 10002  04B7  30C0               	movlw	192
 10003  04B8  3195  2528  3180   	fcall	_LCDcmd
 10004  04BB                     l4638:
 10005                           
 10006                           ;LCD.c: 345: sprintf(buf, "%02d C", temperature_alarm);
 10007  04BB  3019               	movlw	low (STR_4| (0+32768))
 10008  04BC  0020               	movlb	0	; select bank0
 10009  04BD  00AE               	movwf	sprintf@f
 10010  04BE  3098               	movlw	high (STR_4| (0+32768))
 10011  04BF  00AF               	movwf	sprintf@f+1
 10012  04C0  084A               	movf	lcd@temperature_alarm,w
 10013  04C1  00CF               	movwf	??_lcd
 10014  04C2  01D0               	clrf	??_lcd+1
 10015  04C3  084F               	movf	??_lcd,w
 10016  04C4  00B0               	movwf	?_sprintf+2
 10017  04C5  0850               	movf	??_lcd+1,w
 10018  04C6  00B1               	movwf	?_sprintf+3
 10019  04C7  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10020  04C8  3186  2639  3180   	fcall	_sprintf
 10021  04CB                     l4640:
 10022                           
 10023                           ;LCD.c: 346: LCDstr(buf);
 10024  04CB  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10025  04CC  3196  264A  3180   	fcall	_LCDstr
 10026  04CF                     l4642:
 10027                           
 10028                           ;LCD.c: 347: LCDcmd(0x8b);
 10029  04CF  308B               	movlw	139
 10030  04D0  3195  2528  3180   	fcall	_LCDcmd
 10031  04D3                     l4644:
 10032                           
 10033                           ;LCD.c: 348: };LCD.c: 352: if (state ==9)
 10034  04D3  3009               	movlw	9
 10035  04D4  0020               	movlb	0	; select bank0
 10036  04D5  0649               	xorwf	lcd@state,w
 10037  04D6  1D03               	btfss	3,2
 10038  04D7  2CD9               	goto	u3751
 10039  04D8  2CDA               	goto	u3750
 10040  04D9                     u3751:
 10041  04D9  2D49               	goto	l4672
 10042  04DA                     u3750:
 10043  04DA                     l4646:
 10044                           
 10045                           ;LCD.c: 353: {;LCD.c: 354: LCDcmd(0x80);
 10046  04DA  3080               	movlw	128
 10047  04DB  3195  2528  3180   	fcall	_LCDcmd
 10048  04DE                     l4648:
 10049                           
 10050                           ;LCD.c: 355: sprintf(buf, "%02d:%02d:%02d", h,m,s);
 10051  04DE  3000               	movlw	low (STR_3| (0+32768))
 10052  04DF  0020               	movlb	0	; select bank0
 10053  04E0  00AE               	movwf	sprintf@f
 10054  04E1  3098               	movlw	high (STR_3| (0+32768))
 10055  04E2  00AF               	movwf	sprintf@f+1
 10056  04E3  0846               	movf	lcd@h,w
 10057  04E4  00CF               	movwf	??_lcd
 10058  04E5  01D0               	clrf	??_lcd+1
 10059  04E6  084F               	movf	??_lcd,w
 10060  04E7  00B0               	movwf	?_sprintf+2
 10061  04E8  0850               	movf	??_lcd+1,w
 10062  04E9  00B1               	movwf	?_sprintf+3
 10063  04EA  0847               	movf	lcd@m,w
 10064  04EB  00D1               	movwf	??_lcd+2
 10065  04EC  01D2               	clrf	??_lcd+3
 10066  04ED  0851               	movf	??_lcd+2,w
 10067  04EE  00B2               	movwf	?_sprintf+4
 10068  04EF  0852               	movf	??_lcd+3,w
 10069  04F0  00B3               	movwf	?_sprintf+5
 10070  04F1  0848               	movf	lcd@s,w
 10071  04F2  00D3               	movwf	??_lcd+4
 10072  04F3  01D4               	clrf	??_lcd+5
 10073  04F4  0853               	movf	??_lcd+4,w
 10074  04F5  00B4               	movwf	?_sprintf+6
 10075  04F6  0854               	movf	??_lcd+5,w
 10076  04F7  00B5               	movwf	?_sprintf+7
 10077  04F8  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10078  04F9  3186  2639  3180   	fcall	_sprintf
 10079  04FC                     l4650:
 10080                           
 10081                           ;LCD.c: 356: LCDstr(buf);
 10082  04FC  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10083  04FD  3196  264A  3180   	fcall	_LCDstr
 10084  0500                     l4652:
 10085                           
 10086                           ;LCD.c: 358: LCDcmd(0x8A);
 10087  0500  308A               	movlw	138
 10088  0501  3195  2528  3180   	fcall	_LCDcmd
 10089  0504                     l4654:
 10090                           
 10091                           ;LCD.c: 359: sprintf(buf, "CTL");
 10092  0504  3026               	movlw	low (STR_10| (0+32768))
 10093  0505  0020               	movlb	0	; select bank0
 10094  0506  00AE               	movwf	sprintf@f
 10095  0507  3098               	movlw	high (STR_10| (0+32768))
 10096  0508  00AF               	movwf	sprintf@f+1
 10097  0509  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10098  050A  3186  2639  3180   	fcall	_sprintf
 10099                           
 10100                           ;LCD.c: 360: LCDstr(buf);
 10101  050D  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10102  050E  3196  264A  3180   	fcall	_LCDstr
 10103  0511                     l4656:
 10104                           
 10105                           ;LCD.c: 362: LCDcmd(0xce);
 10106  0511  30CE               	movlw	206
 10107  0512  3195  2528  3180   	fcall	_LCDcmd
 10108  0515                     l4658:
 10109                           
 10110                           ;LCD.c: 363: sprintf(buf, "L%01d", luminosity);
 10111  0515  3020               	movlw	low (STR_5| (0+32768))
 10112  0516  0020               	movlb	0	; select bank0
 10113  0517  00AE               	movwf	sprintf@f
 10114  0518  3098               	movlw	high (STR_5| (0+32768))
 10115  0519  00AF               	movwf	sprintf@f+1
 10116  051A  0843               	movf	lcd@luminosity,w
 10117  051B  00CF               	movwf	??_lcd
 10118  051C  01D0               	clrf	??_lcd+1
 10119  051D  084F               	movf	??_lcd,w
 10120  051E  00B0               	movwf	?_sprintf+2
 10121  051F  0850               	movf	??_lcd+1,w
 10122  0520  00B1               	movwf	?_sprintf+3
 10123  0521  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10124  0522  3186  2639  3180   	fcall	_sprintf
 10125  0525                     l4660:
 10126                           
 10127                           ;LCD.c: 364: LCDstr(buf);
 10128  0525  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10129  0526  3196  264A  3180   	fcall	_LCDstr
 10130  0529                     l4662:
 10131                           
 10132                           ;LCD.c: 365: LCDcmd(0x81);
 10133  0529  3081               	movlw	129
 10134  052A  3195  2528  3180   	fcall	_LCDcmd
 10135  052D                     l4664:
 10136                           
 10137                           ;LCD.c: 367: LCDcmd(0xc0);
 10138  052D  30C0               	movlw	192
 10139  052E  3195  2528  3180   	fcall	_LCDcmd
 10140  0531                     l4666:
 10141                           
 10142                           ;LCD.c: 368: sprintf(buf, "%02d C", temperature_alarm);
 10143  0531  3019               	movlw	low (STR_4| (0+32768))
 10144  0532  0020               	movlb	0	; select bank0
 10145  0533  00AE               	movwf	sprintf@f
 10146  0534  3098               	movlw	high (STR_4| (0+32768))
 10147  0535  00AF               	movwf	sprintf@f+1
 10148  0536  084A               	movf	lcd@temperature_alarm,w
 10149  0537  00CF               	movwf	??_lcd
 10150  0538  01D0               	clrf	??_lcd+1
 10151  0539  084F               	movf	??_lcd,w
 10152  053A  00B0               	movwf	?_sprintf+2
 10153  053B  0850               	movf	??_lcd+1,w
 10154  053C  00B1               	movwf	?_sprintf+3
 10155  053D  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10156  053E  3186  2639  3180   	fcall	_sprintf
 10157  0541                     l4668:
 10158                           
 10159                           ;LCD.c: 369: LCDstr(buf);
 10160  0541  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10161  0542  3196  264A  3180   	fcall	_LCDstr
 10162  0545                     l4670:
 10163                           
 10164                           ;LCD.c: 370: LCDcmd(0xc1);
 10165  0545  30C1               	movlw	193
 10166  0546  3195  2528  3180   	fcall	_LCDcmd
 10167  0549                     l4672:
 10168                           
 10169                           ;LCD.c: 371: };LCD.c: 375: if (state ==10)
 10170  0549  300A               	movlw	10
 10171  054A  0020               	movlb	0	; select bank0
 10172  054B  0649               	xorwf	lcd@state,w
 10173  054C  1D03               	btfss	3,2
 10174  054D  2D4F               	goto	u3761
 10175  054E  2D50               	goto	u3760
 10176  054F                     u3761:
 10177  054F  2DBB               	goto	l4696
 10178  0550                     u3760:
 10179  0550                     l4674:
 10180                           
 10181                           ;LCD.c: 376: {;LCD.c: 377: LCDcmd(0x80);
 10182  0550  3080               	movlw	128
 10183  0551  3195  2528  3180   	fcall	_LCDcmd
 10184  0554                     l4676:
 10185                           
 10186                           ;LCD.c: 378: sprintf(buf, "%02d:%02d:%02d", h,m,s);
 10187  0554  3000               	movlw	low (STR_3| (0+32768))
 10188  0555  0020               	movlb	0	; select bank0
 10189  0556  00AE               	movwf	sprintf@f
 10190  0557  3098               	movlw	high (STR_3| (0+32768))
 10191  0558  00AF               	movwf	sprintf@f+1
 10192  0559  0846               	movf	lcd@h,w
 10193  055A  00CF               	movwf	??_lcd
 10194  055B  01D0               	clrf	??_lcd+1
 10195  055C  084F               	movf	??_lcd,w
 10196  055D  00B0               	movwf	?_sprintf+2
 10197  055E  0850               	movf	??_lcd+1,w
 10198  055F  00B1               	movwf	?_sprintf+3
 10199  0560  0847               	movf	lcd@m,w
 10200  0561  00D1               	movwf	??_lcd+2
 10201  0562  01D2               	clrf	??_lcd+3
 10202  0563  0851               	movf	??_lcd+2,w
 10203  0564  00B2               	movwf	?_sprintf+4
 10204  0565  0852               	movf	??_lcd+3,w
 10205  0566  00B3               	movwf	?_sprintf+5
 10206  0567  0848               	movf	lcd@s,w
 10207  0568  00D3               	movwf	??_lcd+4
 10208  0569  01D4               	clrf	??_lcd+5
 10209  056A  0853               	movf	??_lcd+4,w
 10210  056B  00B4               	movwf	?_sprintf+6
 10211  056C  0854               	movf	??_lcd+5,w
 10212  056D  00B5               	movwf	?_sprintf+7
 10213  056E  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10214  056F  3186  2639  3180   	fcall	_sprintf
 10215  0572                     l4678:
 10216                           
 10217                           ;LCD.c: 379: LCDstr(buf);
 10218  0572  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10219  0573  3196  264A  3180   	fcall	_LCDstr
 10220  0576                     l4680:
 10221                           
 10222                           ;LCD.c: 381: LCDcmd(0x8A);
 10223  0576  308A               	movlw	138
 10224  0577  3195  2528  3180   	fcall	_LCDcmd
 10225  057A                     l4682:
 10226                           
 10227                           ;LCD.c: 382: sprintf(buf, "CTL");
 10228  057A  3026               	movlw	low (STR_10| (0+32768))
 10229  057B  0020               	movlb	0	; select bank0
 10230  057C  00AE               	movwf	sprintf@f
 10231  057D  3098               	movlw	high (STR_10| (0+32768))
 10232  057E  00AF               	movwf	sprintf@f+1
 10233  057F  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10234  0580  3186  2639  3180   	fcall	_sprintf
 10235                           
 10236                           ;LCD.c: 383: LCDstr(buf);
 10237  0583  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10238  0584  3196  264A  3180   	fcall	_LCDstr
 10239  0587                     l4684:
 10240                           
 10241                           ;LCD.c: 385: LCDcmd(0xc0);
 10242  0587  30C0               	movlw	192
 10243  0588  3195  2528  3180   	fcall	_LCDcmd
 10244  058B                     l4686:
 10245                           
 10246                           ;LCD.c: 386: sprintf(buf, "%02d C", temperature);
 10247  058B  3019               	movlw	low (STR_4| (0+32768))
 10248  058C  0020               	movlb	0	; select bank0
 10249  058D  00AE               	movwf	sprintf@f
 10250  058E  3098               	movlw	high (STR_4| (0+32768))
 10251  058F  00AF               	movwf	sprintf@f+1
 10252  0590  0866               	movf	lcd@temperature,w
 10253  0591  00CF               	movwf	??_lcd
 10254  0592  01D0               	clrf	??_lcd+1
 10255  0593  084F               	movf	??_lcd,w
 10256  0594  00B0               	movwf	?_sprintf+2
 10257  0595  0850               	movf	??_lcd+1,w
 10258  0596  00B1               	movwf	?_sprintf+3
 10259  0597  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10260  0598  3186  2639  3180   	fcall	_sprintf
 10261  059B                     l4688:
 10262                           
 10263                           ;LCD.c: 387: LCDstr(buf);
 10264  059B  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10265  059C  3196  264A  3180   	fcall	_LCDstr
 10266  059F                     l4690:
 10267                           
 10268                           ;LCD.c: 389: LCDcmd(0xce);
 10269  059F  30CE               	movlw	206
 10270  05A0  3195  2528  3180   	fcall	_LCDcmd
 10271                           
 10272                           ;LCD.c: 390: sprintf(buf, "L%01d", luminosity_alarm);
 10273  05A3  3020               	movlw	low (STR_5| (0+32768))
 10274  05A4  0020               	movlb	0	; select bank0
 10275  05A5  00AE               	movwf	sprintf@f
 10276  05A6  3098               	movlw	high (STR_5| (0+32768))
 10277  05A7  00AF               	movwf	sprintf@f+1
 10278  05A8  084B               	movf	lcd@luminosity_alarm,w
 10279  05A9  00CF               	movwf	??_lcd
 10280  05AA  01D0               	clrf	??_lcd+1
 10281  05AB  084F               	movf	??_lcd,w
 10282  05AC  00B0               	movwf	?_sprintf+2
 10283  05AD  0850               	movf	??_lcd+1,w
 10284  05AE  00B1               	movwf	?_sprintf+3
 10285  05AF  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10286  05B0  3186  2639  3180   	fcall	_sprintf
 10287  05B3                     l4692:
 10288                           
 10289                           ;LCD.c: 391: LCDstr(buf);
 10290  05B3  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10291  05B4  3196  264A  3180   	fcall	_LCDstr
 10292  05B7                     l4694:
 10293                           
 10294                           ;LCD.c: 392: LCDcmd(0x8c);
 10295  05B7  308C               	movlw	140
 10296  05B8  3195  2528  3180   	fcall	_LCDcmd
 10297  05BB                     l4696:
 10298                           
 10299                           ;LCD.c: 393: };LCD.c: 396: if (state ==11)
 10300  05BB  300B               	movlw	11
 10301  05BC  0020               	movlb	0	; select bank0
 10302  05BD  0649               	xorwf	lcd@state,w
 10303  05BE  1D03               	btfss	3,2
 10304  05BF  2DC1               	goto	u3771
 10305  05C0  2DC2               	goto	u3770
 10306  05C1                     u3771:
 10307  05C1  2E2D               	goto	l4720
 10308  05C2                     u3770:
 10309  05C2                     l4698:
 10310                           
 10311                           ;LCD.c: 397: {;LCD.c: 398: LCDcmd(0x80);
 10312  05C2  3080               	movlw	128
 10313  05C3  3195  2528  3180   	fcall	_LCDcmd
 10314  05C6                     l4700:
 10315                           
 10316                           ;LCD.c: 399: sprintf(buf, "%02d:%02d:%02d", h,m,s);
 10317  05C6  3000               	movlw	low (STR_3| (0+32768))
 10318  05C7  0020               	movlb	0	; select bank0
 10319  05C8  00AE               	movwf	sprintf@f
 10320  05C9  3098               	movlw	high (STR_3| (0+32768))
 10321  05CA  00AF               	movwf	sprintf@f+1
 10322  05CB  0846               	movf	lcd@h,w
 10323  05CC  00CF               	movwf	??_lcd
 10324  05CD  01D0               	clrf	??_lcd+1
 10325  05CE  084F               	movf	??_lcd,w
 10326  05CF  00B0               	movwf	?_sprintf+2
 10327  05D0  0850               	movf	??_lcd+1,w
 10328  05D1  00B1               	movwf	?_sprintf+3
 10329  05D2  0847               	movf	lcd@m,w
 10330  05D3  00D1               	movwf	??_lcd+2
 10331  05D4  01D2               	clrf	??_lcd+3
 10332  05D5  0851               	movf	??_lcd+2,w
 10333  05D6  00B2               	movwf	?_sprintf+4
 10334  05D7  0852               	movf	??_lcd+3,w
 10335  05D8  00B3               	movwf	?_sprintf+5
 10336  05D9  0848               	movf	lcd@s,w
 10337  05DA  00D3               	movwf	??_lcd+4
 10338  05DB  01D4               	clrf	??_lcd+5
 10339  05DC  0853               	movf	??_lcd+4,w
 10340  05DD  00B4               	movwf	?_sprintf+6
 10341  05DE  0854               	movf	??_lcd+5,w
 10342  05DF  00B5               	movwf	?_sprintf+7
 10343  05E0  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10344  05E1  3186  2639  3180   	fcall	_sprintf
 10345  05E4                     l4702:
 10346                           
 10347                           ;LCD.c: 400: LCDstr(buf);
 10348  05E4  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10349  05E5  3196  264A  3180   	fcall	_LCDstr
 10350  05E8                     l4704:
 10351                           
 10352                           ;LCD.c: 402: LCDcmd(0x8A);
 10353  05E8  308A               	movlw	138
 10354  05E9  3195  2528  3180   	fcall	_LCDcmd
 10355  05EC                     l4706:
 10356                           
 10357                           ;LCD.c: 403: sprintf(buf, "CTL");
 10358  05EC  3026               	movlw	low (STR_10| (0+32768))
 10359  05ED  0020               	movlb	0	; select bank0
 10360  05EE  00AE               	movwf	sprintf@f
 10361  05EF  3098               	movlw	high (STR_10| (0+32768))
 10362  05F0  00AF               	movwf	sprintf@f+1
 10363  05F1  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10364  05F2  3186  2639  3180   	fcall	_sprintf
 10365                           
 10366                           ;LCD.c: 404: LCDstr(buf);
 10367  05F5  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10368  05F6  3196  264A  3180   	fcall	_LCDstr
 10369  05F9                     l4708:
 10370                           
 10371                           ;LCD.c: 406: LCDcmd(0xc0);
 10372  05F9  30C0               	movlw	192
 10373  05FA  3195  2528  3180   	fcall	_LCDcmd
 10374  05FD                     l4710:
 10375                           
 10376                           ;LCD.c: 407: sprintf(buf, "%02d C", temperature);
 10377  05FD  3019               	movlw	low (STR_4| (0+32768))
 10378  05FE  0020               	movlb	0	; select bank0
 10379  05FF  00AE               	movwf	sprintf@f
 10380  0600  3098               	movlw	high (STR_4| (0+32768))
 10381  0601  00AF               	movwf	sprintf@f+1
 10382  0602  0866               	movf	lcd@temperature,w
 10383  0603  00CF               	movwf	??_lcd
 10384  0604  01D0               	clrf	??_lcd+1
 10385  0605  084F               	movf	??_lcd,w
 10386  0606  00B0               	movwf	?_sprintf+2
 10387  0607  0850               	movf	??_lcd+1,w
 10388  0608  00B1               	movwf	?_sprintf+3
 10389  0609  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10390  060A  3186  2639  3180   	fcall	_sprintf
 10391  060D                     l4712:
 10392                           
 10393                           ;LCD.c: 408: LCDstr(buf);
 10394  060D  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10395  060E  3196  264A  3180   	fcall	_LCDstr
 10396  0611                     l4714:
 10397                           
 10398                           ;LCD.c: 410: LCDcmd(0xce);
 10399  0611  30CE               	movlw	206
 10400  0612  3195  2528  3180   	fcall	_LCDcmd
 10401                           
 10402                           ;LCD.c: 411: sprintf(buf, "L%01d", luminosity_alarm);
 10403  0615  3020               	movlw	low (STR_5| (0+32768))
 10404  0616  0020               	movlb	0	; select bank0
 10405  0617  00AE               	movwf	sprintf@f
 10406  0618  3098               	movlw	high (STR_5| (0+32768))
 10407  0619  00AF               	movwf	sprintf@f+1
 10408  061A  084B               	movf	lcd@luminosity_alarm,w
 10409  061B  00CF               	movwf	??_lcd
 10410  061C  01D0               	clrf	??_lcd+1
 10411  061D  084F               	movf	??_lcd,w
 10412  061E  00B0               	movwf	?_sprintf+2
 10413  061F  0850               	movf	??_lcd+1,w
 10414  0620  00B1               	movwf	?_sprintf+3
 10415  0621  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10416  0622  3186  2639  3180   	fcall	_sprintf
 10417  0625                     l4716:
 10418                           
 10419                           ;LCD.c: 412: LCDstr(buf);
 10420  0625  3055               	movlw	(low (lcd@buf| 0))& (0+255)
 10421  0626  3196  264A  3180   	fcall	_LCDstr
 10422  0629                     l4718:
 10423                           
 10424                           ;LCD.c: 413: LCDcmd(0xcf);
 10425  0629  30CF               	movlw	207
 10426  062A  3195  2528  3180   	fcall	_LCDcmd
 10427  062D                     l4720:
 10428                           
 10429                           ;LCD.c: 414: };LCD.c: 416: if (state ==12)
 10430  062D  300C               	movlw	12
 10431  062E  0020               	movlb	0	; select bank0
 10432  062F  0649               	xorwf	lcd@state,w
 10433  0630  1D03               	btfss	3,2
 10434  0631  2E33               	goto	u3781
 10435  0632  2E34               	goto	u3780
 10436  0633                     u3781:
 10437  0633  2E38               	goto	l965
 10438  0634                     u3780:
 10439  0634                     l4722:
 10440                           
 10441                           ;LCD.c: 417: {;LCD.c: 418: LCDcmd(0x8f);
 10442  0634  308F               	movlw	143
 10443  0635  3195  2528  3180   	fcall	_LCDcmd
 10444  0638                     l965:
 10445  0638  0008               	return
 10446  0639                     __end_of_lcd:
 10447                           
 10448                           	psect	text7
 10449  0639                     __ptext7:	
 10450 ;; *************** function _sprintf *****************
 10451 ;; Defined at:
 10452 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\doprnt.c"
 10453 ;; Parameters:    Size  Location     Type
 10454 ;;  sp              1    wreg     PTR unsigned char 
 10455 ;;		 -> lcd@buf(17), 
 10456 ;;  f               2   14[BANK0 ] PTR const unsigned char 
 10457 ;;		 -> STR_52(6), STR_51(7), STR_50(4), STR_49(15), 
 10458 ;;		 -> STR_48(6), STR_47(7), STR_46(4), STR_45(15), 
 10459 ;;		 -> STR_44(7), STR_43(6), STR_42(4), STR_41(15), 
 10460 ;;		 -> STR_40(7), STR_39(6), STR_38(4), STR_37(15), 
 10461 ;;		 -> STR_36(15), STR_35(6), STR_34(7), STR_33(4), 
 10462 ;;		 -> STR_32(15), STR_31(6), STR_30(7), STR_29(4), 
 10463 ;;		 -> STR_28(15), STR_27(6), STR_26(7), STR_25(4), 
 10464 ;;		 -> STR_24(15), STR_23(6), STR_22(7), STR_21(4), 
 10465 ;;		 -> STR_20(6), STR_19(7), STR_18(4), STR_17(15), 
 10466 ;;		 -> STR_16(6), STR_15(7), STR_14(4), STR_13(15), 
 10467 ;;		 -> STR_12(6), STR_11(7), STR_10(4), STR_9(15), 
 10468 ;;		 -> STR_8(2), STR_7(2), STR_6(2), STR_5(6), 
 10469 ;;		 -> STR_4(7), STR_3(15), STR_2(2), STR_1(2), 
 10470 ;; Auto vars:     Size  Location     Type
 10471 ;;  sp              1   34[BANK0 ] PTR unsigned char 
 10472 ;;		 -> lcd@buf(17), 
 10473 ;;  tmpval          4    0        struct .
 10474 ;;  width           2   31[BANK0 ] int 
 10475 ;;  val             2   28[BANK0 ] unsigned int 
 10476 ;;  cp              2    0        PTR const unsigned char 
 10477 ;;  len             2    0        unsigned int 
 10478 ;;  c               1   33[BANK0 ] unsigned char 
 10479 ;;  flag            1   30[BANK0 ] unsigned char 
 10480 ;;  prec            1   27[BANK0 ] char 
 10481 ;;  ap              1   26[BANK0 ] PTR void [1]
 10482 ;;		 -> ?_sprintf(2), 
 10483 ;; Return value:  Size  Location     Type
 10484 ;;                  2   14[BANK0 ] int 
 10485 ;; Registers used:
 10486 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10487 ;; Tracked objects:
 10488 ;;		On entry : 0/0
 10489 ;;		On exit  : 0/0
 10490 ;;		Unchanged: 0/0
 10491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10492 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10493 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10494 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10495 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10496 ;;Total ram usage:       21 bytes
 10497 ;; Hardware stack levels used:    1
 10498 ;; Hardware stack levels required when called:    6
 10499 ;; This function calls:
 10500 ;;		___lwdiv
 10501 ;;		___lwmod
 10502 ;;		___wmul
 10503 ;;		_isdigit
 10504 ;; This function is called by:
 10505 ;;		_lcd
 10506 ;; This function uses a non-reentrant model
 10507 ;;
 10508                           
 10509                           
 10510                           ;psect for function _sprintf
 10511  0639                     _sprintf:
 10512                           
 10513                           ;incstack = 0
 10514                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10515                           ;sprintf@sp stored from wreg
 10516  0639  0020               	movlb	0	; select bank0
 10517  063A  00C2               	movwf	sprintf@sp
 10518  063B                     l4010:
 10519                           
 10520                           ;doprnt.c: 507: va_list ap;;doprnt.c: 512: char c;;doprnt.c: 514: int width;;doprnt.c: 5
      +                          21: signed char prec;;doprnt.c: 525: unsigned char flag;;doprnt.c: 540: union {;doprnt.c
      +                          : 541: unsigned long vd;;doprnt.c: 542: double integ;;doprnt.c: 543: } tmpval;;doprnt.c:
      +                           545: unsigned int val;;doprnt.c: 546: unsigned len;;doprnt.c: 547: const char * cp;;dop
      +                          rnt.c: 550: *ap = __va_start();
 10521  063B  3030               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 10522  063C  00B6               	movwf	??_sprintf
 10523  063D  0836               	movf	??_sprintf,w
 10524  063E  00BA               	movwf	sprintf@ap
 10525                           
 10526                           ;doprnt.c: 553: while((c = *f++)) {
 10527  063F  2FBE               	goto	l4114
 10528  0640                     l4012:
 10529                           
 10530                           ;doprnt.c: 555: if(c != '%')
 10531  0640  3025               	movlw	37
 10532  0641  0641               	xorwf	sprintf@c,w
 10533  0642  1903               	btfsc	3,2
 10534  0643  2E45               	goto	u2991
 10535  0644  2E46               	goto	u2990
 10536  0645                     u2991:
 10537  0645  2E52               	goto	l4018
 10538  0646                     u2990:
 10539  0646                     l4014:
 10540                           
 10541                           ;doprnt.c: 557: {;doprnt.c: 558: ((*sp++ = (c)));
 10542  0646  0841               	movf	sprintf@c,w
 10543  0647  00B6               	movwf	??_sprintf
 10544  0648  0842               	movf	sprintf@sp,w
 10545  0649  0086               	movwf	6
 10546  064A  0187               	clrf	7
 10547  064B  0836               	movf	??_sprintf,w
 10548  064C  0081               	movwf	1
 10549  064D                     l4016:
 10550  064D  3001               	movlw	1
 10551  064E  00B6               	movwf	??_sprintf
 10552  064F  0836               	movf	??_sprintf,w
 10553  0650  07C2               	addwf	sprintf@sp,f
 10554                           
 10555                           ;doprnt.c: 559: continue;
 10556  0651  2FBE               	goto	l4114
 10557  0652                     l4018:
 10558                           
 10559                           ;doprnt.c: 560: };doprnt.c: 563: width = 0;
 10560  0652  01BF               	clrf	sprintf@width
 10561  0653  01C0               	clrf	sprintf@width+1
 10562                           
 10563                           ;doprnt.c: 565: flag = 0;
 10564  0654  01BE               	clrf	sprintf@flag
 10565  0655  2E5B               	goto	l4024
 10566  0656                     l1292:	
 10567                           ;doprnt.c: 596: case '0':
 10568                           
 10569                           
 10570                           ;doprnt.c: 597: flag |= 0x04;
 10571  0656  153E               	bsf	sprintf@flag,2
 10572  0657                     l4020:
 10573                           
 10574                           ;doprnt.c: 598: f++;
 10575  0657  3001               	movlw	1
 10576  0658  07AE               	addwf	sprintf@f,f
 10577  0659  3000               	movlw	0
 10578  065A  3DAF               	addwfc	sprintf@f+1,f
 10579  065B                     l4024:	
 10580                           ;doprnt.c: 599: continue;
 10581                           
 10582  065B  082E               	movf	sprintf@f,w
 10583  065C  0084               	movwf	4
 10584  065D  082F               	movf	sprintf@f+1,w
 10585  065E  0085               	movwf	5
 10586  065F  0800               	movf	0,w	;code access
 10587                           
 10588                           ; Switch size 1, requested type "simple"
 10589                           ; Number of cases is 1, Range of values is 48 to 48
 10590                           ; switch strategies available:
 10591                           ; Name         Instructions Cycles
 10592                           ; simple_byte            4     3 (average)
 10593                           ; direct_byte           11     9 (fixed)
 10594                           ; jumptable            263     9 (fixed)
 10595                           ;	Chosen strategy is simple_byte
 10596  0660  3A30               	xorlw	48	; case 48
 10597  0661  1903               	skipnz
 10598  0662  2E56               	goto	l1292
 10599  0663  2E64               	goto	l4026
 10600  0664                     l4026:
 10601                           
 10602                           ;doprnt.c: 614: if(isdigit((unsigned)*f)) {
 10603  0664  082E               	movf	sprintf@f,w
 10604  0665  0084               	movwf	4
 10605  0666  082F               	movf	sprintf@f+1,w
 10606  0667  0085               	movwf	5
 10607  0668  0800               	movf	0,w	;code access
 10608  0669  3196  260C  3186   	fcall	_isdigit
 10609  066C  1C03               	btfss	3,0
 10610  066D  2E6F               	goto	u3001
 10611  066E  2E70               	goto	u3000
 10612  066F                     u3001:
 10613  066F  2EA3               	goto	l4040
 10614  0670                     u3000:
 10615  0670                     l4028:
 10616                           
 10617                           ;doprnt.c: 615: width = 0;
 10618  0670  0020               	movlb	0	; select bank0
 10619  0671  01BF               	clrf	sprintf@width
 10620  0672  01C0               	clrf	sprintf@width+1
 10621  0673                     l4030:
 10622                           
 10623                           ;doprnt.c: 617: width *= 10;
 10624  0673  300A               	movlw	10
 10625  0674  0020               	movlb	0	; select bank0
 10626  0675  00A0               	movwf	___wmul@multiplier
 10627  0676  3000               	movlw	0
 10628  0677  00A1               	movwf	___wmul@multiplier+1
 10629  0678  0840               	movf	sprintf@width+1,w
 10630  0679  00A3               	movwf	___wmul@multiplicand+1
 10631  067A  083F               	movf	sprintf@width,w
 10632  067B  00A2               	movwf	___wmul@multiplicand
 10633  067C  3196  26EE  3186   	fcall	___wmul
 10634  067F  0020               	movlb	0	; select bank0
 10635  0680  0821               	movf	?___wmul+1,w
 10636  0681  00C0               	movwf	sprintf@width+1
 10637  0682  0820               	movf	?___wmul,w
 10638  0683  00BF               	movwf	sprintf@width
 10639  0684                     l4032:
 10640                           
 10641                           ;doprnt.c: 618: width += *f++ - '0';
 10642  0684  082E               	movf	sprintf@f,w
 10643  0685  0084               	movwf	4
 10644  0686  082F               	movf	sprintf@f+1,w
 10645  0687  0085               	movwf	5
 10646  0688  0800               	movf	0,w	;code access
 10647  0689  3ED0               	addlw	208
 10648  068A  00B6               	movwf	??_sprintf
 10649  068B  30FF               	movlw	255
 10650  068C  1803               	skipnc
 10651  068D  3000               	movlw	0
 10652  068E  00B7               	movwf	??_sprintf+1
 10653  068F  0836               	movf	??_sprintf,w
 10654  0690  07BF               	addwf	sprintf@width,f
 10655  0691  0837               	movf	??_sprintf+1,w
 10656  0692  3DC0               	addwfc	sprintf@width+1,f
 10657  0693                     l4034:
 10658  0693  3001               	movlw	1
 10659  0694  07AE               	addwf	sprintf@f,f
 10660  0695  3000               	movlw	0
 10661  0696  3DAF               	addwfc	sprintf@f+1,f
 10662  0697                     l4036:
 10663                           
 10664                           ;doprnt.c: 619: } while(isdigit((unsigned)*f));
 10665  0697  082E               	movf	sprintf@f,w
 10666  0698  0084               	movwf	4
 10667  0699  082F               	movf	sprintf@f+1,w
 10668  069A  0085               	movwf	5
 10669  069B  0800               	movf	0,w	;code access
 10670  069C  3196  260C  3186   	fcall	_isdigit
 10671  069F  1803               	btfsc	3,0
 10672  06A0  2EA2               	goto	u3011
 10673  06A1  2EA3               	goto	u3010
 10674  06A2                     u3011:
 10675  06A2  2E73               	goto	l4030
 10676  06A3                     u3010:
 10677  06A3                     l4040:
 10678  06A3  0020               	movlb	0	; select bank0
 10679  06A4  082F               	movf	sprintf@f+1,w
 10680  06A5  00B7               	movwf	??_sprintf+1
 10681  06A6  082E               	movf	sprintf@f,w
 10682  06A7  00B6               	movwf	??_sprintf
 10683  06A8  0AAE               	incf	sprintf@f,f
 10684  06A9  1903               	skipnz
 10685  06AA  0AAF               	incf	sprintf@f+1,f
 10686  06AB  0836               	movf	??_sprintf,w
 10687  06AC  0084               	movwf	4
 10688  06AD  0837               	movf	??_sprintf+1,w
 10689  06AE  0085               	movwf	5
 10690  06AF  0800               	movf	0,w	;code access
 10691  06B0  00C1               	movwf	sprintf@c
 10692                           
 10693                           ; Switch size 1, requested type "simple"
 10694                           ; Number of cases is 3, Range of values is 0 to 105
 10695                           ; switch strategies available:
 10696                           ; Name         Instructions Cycles
 10697                           ; simple_byte           10     6 (average)
 10698                           ; direct_byte          218     6 (fixed)
 10699                           ; jumptable            260     6 (fixed)
 10700                           ;	Chosen strategy is simple_byte
 10701  06B1  3A00               	xorlw	0	; case 0
 10702  06B2  1903               	skipnz
 10703  06B3  2FD2               	goto	l4116
 10704  06B4  3A64               	xorlw	100	; case 100
 10705  06B5  1903               	skipnz
 10706  06B6  2EBB               	goto	l4042
 10707  06B7  3A0D               	xorlw	13	; case 105
 10708  06B8  1903               	skipnz
 10709  06B9  2EBB               	goto	l4042
 10710  06BA  2FBE               	goto	l4114
 10711  06BB                     l4042:
 10712                           
 10713                           ;doprnt.c: 1279: {;doprnt.c: 1285: val = (unsigned int)(*(int *)__va_arg((*(int **)ap), 
      +                          (int)0));
 10714  06BB  083A               	movf	sprintf@ap,w
 10715  06BC  0086               	movwf	6
 10716  06BD  0187               	clrf	7
 10717  06BE  3F40               	moviw [0]fsr1
 10718  06BF  00BC               	movwf	sprintf@val
 10719  06C0  3F41               	moviw [1]fsr1
 10720  06C1  00BD               	movwf	sprintf@val+1
 10721  06C2                     l4044:
 10722  06C2  3002               	movlw	2
 10723  06C3  00B6               	movwf	??_sprintf
 10724  06C4  0836               	movf	??_sprintf,w
 10725  06C5  07BA               	addwf	sprintf@ap,f
 10726  06C6                     l4046:
 10727                           
 10728                           ;doprnt.c: 1287: if((int)val < 0) {
 10729  06C6  1FBD               	btfss	sprintf@val+1,7
 10730  06C7  2EC9               	goto	u3021
 10731  06C8  2ECA               	goto	u3020
 10732  06C9                     u3021:
 10733  06C9  2ED3               	goto	l4052
 10734  06CA                     u3020:
 10735  06CA                     l4048:
 10736                           
 10737                           ;doprnt.c: 1288: flag |= 0x03;
 10738  06CA  3003               	movlw	3
 10739  06CB  00B6               	movwf	??_sprintf
 10740  06CC  0836               	movf	??_sprintf,w
 10741  06CD  04BE               	iorwf	sprintf@flag,f
 10742  06CE                     l4050:
 10743                           
 10744                           ;doprnt.c: 1289: val = -val;
 10745  06CE  09BC               	comf	sprintf@val,f
 10746  06CF  09BD               	comf	sprintf@val+1,f
 10747  06D0  0ABC               	incf	sprintf@val,f
 10748  06D1  1903               	skipnz
 10749  06D2  0ABD               	incf	sprintf@val+1,f
 10750  06D3                     l4052:
 10751                           
 10752                           ;doprnt.c: 1290: };doprnt.c: 1292: };doprnt.c: 1331: for(c = 1 ; c != sizeof dpowers/siz
      +                          eof dpowers[0] ; c++)
 10753  06D3  01C1               	clrf	sprintf@c
 10754  06D4  0AC1               	incf	sprintf@c,f
 10755  06D5                     l4058:
 10756                           
 10757                           ;doprnt.c: 1332: if(val < dpowers[c])
 10758  06D5  0841               	movf	sprintf@c,w
 10759  06D6  00B6               	movwf	??_sprintf
 10760  06D7  01B7               	clrf	??_sprintf+1
 10761  06D8  35B6               	lslf	??_sprintf,f
 10762  06D9  0DB7               	rlf	??_sprintf+1,f
 10763  06DA  300F               	movlw	low (_dpowers| (0+32768))
 10764  06DB  0736               	addwf	??_sprintf,w
 10765  06DC  0084               	movwf	4
 10766  06DD  3098               	movlw	high (_dpowers| (0+32768))
 10767  06DE  3D37               	addwfc	??_sprintf+1,w
 10768  06DF  0085               	movwf	5
 10769  06E0  3F00               	moviw [0]fsr0
 10770  06E1  00B8               	movwf	??_sprintf+2
 10771  06E2  3F01               	moviw [1]fsr0
 10772  06E3  00B9               	movwf	??_sprintf+3
 10773  06E4  0839               	movf	??_sprintf+3,w
 10774  06E5  023D               	subwf	sprintf@val+1,w
 10775  06E6  1D03               	skipz
 10776  06E7  2EEA               	goto	u3035
 10777  06E8  0838               	movf	??_sprintf+2,w
 10778  06E9  023C               	subwf	sprintf@val,w
 10779  06EA                     u3035:
 10780  06EA  1803               	skipnc
 10781  06EB  2EED               	goto	u3031
 10782  06EC  2EEE               	goto	u3030
 10783  06ED                     u3031:
 10784  06ED  2EEF               	goto	l4062
 10785  06EE                     u3030:
 10786  06EE  2EF9               	goto	l4064
 10787  06EF                     l4062:
 10788  06EF  3001               	movlw	1
 10789  06F0  00B6               	movwf	??_sprintf
 10790  06F1  0836               	movf	??_sprintf,w
 10791  06F2  07C1               	addwf	sprintf@c,f
 10792  06F3  3005               	movlw	5
 10793  06F4  0641               	xorwf	sprintf@c,w
 10794  06F5  1D03               	btfss	3,2
 10795  06F6  2EF8               	goto	u3041
 10796  06F7  2EF9               	goto	u3040
 10797  06F8                     u3041:
 10798  06F8  2ED5               	goto	l4058
 10799  06F9                     u3040:
 10800  06F9                     l4064:
 10801                           
 10802                           ;doprnt.c: 1371: if(width && flag & 0x03)
 10803  06F9  083F               	movf	sprintf@width,w
 10804  06FA  0440               	iorwf	sprintf@width+1,w
 10805  06FB  1903               	btfsc	3,2
 10806  06FC  2EFE               	goto	u3051
 10807  06FD  2EFF               	goto	u3050
 10808  06FE                     u3051:
 10809  06FE  2F09               	goto	l1310
 10810  06FF                     u3050:
 10811  06FF                     l4066:
 10812  06FF  083E               	movf	sprintf@flag,w
 10813  0700  3903               	andlw	3
 10814  0701  1903               	btfsc	3,2
 10815  0702  2F04               	goto	u3061
 10816  0703  2F05               	goto	u3060
 10817  0704                     u3061:
 10818  0704  2F09               	goto	l1310
 10819  0705                     u3060:
 10820  0705                     l4068:
 10821                           
 10822                           ;doprnt.c: 1372: width--;
 10823  0705  30FF               	movlw	255
 10824  0706  07BF               	addwf	sprintf@width,f
 10825  0707  30FF               	movlw	255
 10826  0708  3DC0               	addwfc	sprintf@width+1,f
 10827  0709                     l1310:
 10828                           
 10829                           ;doprnt.c: 1407: if(width > c)
 10830  0709  0840               	movf	sprintf@width+1,w
 10831  070A  3A80               	xorlw	128
 10832  070B  3C80               	sublw	128
 10833  070C  1D03               	skipz
 10834  070D  2F10               	goto	u3075
 10835  070E  083F               	movf	sprintf@width,w
 10836  070F  0241               	subwf	sprintf@c,w
 10837  0710                     u3075:
 10838  0710  1803               	skipnc
 10839  0711  2F13               	goto	u3071
 10840  0712  2F14               	goto	u3070
 10841  0713                     u3071:
 10842  0713  2F1D               	goto	l4072
 10843  0714                     u3070:
 10844  0714                     l4070:
 10845                           
 10846                           ;doprnt.c: 1408: width -= c;
 10847  0714  0020               	movlb	0	; select bank0
 10848  0715  0841               	movf	sprintf@c,w
 10849  0716  00B6               	movwf	??_sprintf
 10850  0717  01B7               	clrf	??_sprintf+1
 10851  0718  0836               	movf	??_sprintf,w
 10852  0719  02BF               	subwf	sprintf@width,f
 10853  071A  0837               	movf	??_sprintf+1,w
 10854  071B  3BC0               	subwfb	sprintf@width+1,f
 10855  071C  2F20               	goto	l4074
 10856  071D                     l4072:
 10857                           
 10858                           ;doprnt.c: 1409: else;doprnt.c: 1410: width = 0;
 10859  071D  0020               	movlb	0	; select bank0
 10860  071E  01BF               	clrf	sprintf@width
 10861  071F  01C0               	clrf	sprintf@width+1
 10862  0720                     l4074:
 10863                           
 10864                           ;doprnt.c: 1413: if(flag & 0x04) {
 10865  0720  1D3E               	btfss	sprintf@flag,2
 10866  0721  2F23               	goto	u3081
 10867  0722  2F24               	goto	u3080
 10868  0723                     u3081:
 10869  0723  2F51               	goto	l4090
 10870  0724                     u3080:
 10871  0724                     l4076:
 10872                           
 10873                           ;doprnt.c: 1418: if(flag & 0x03)
 10874  0724  083E               	movf	sprintf@flag,w
 10875  0725  3903               	andlw	3
 10876  0726  1903               	btfsc	3,2
 10877  0727  2F29               	goto	u3091
 10878  0728  2F2A               	goto	u3090
 10879  0729                     u3091:
 10880  0729  2F35               	goto	l4082
 10881  072A                     u3090:
 10882  072A                     l4078:
 10883                           
 10884                           ;doprnt.c: 1419: ((*sp++ = ('-')));
 10885  072A  302D               	movlw	45
 10886  072B  00B6               	movwf	??_sprintf
 10887  072C  0842               	movf	sprintf@sp,w
 10888  072D  0086               	movwf	6
 10889  072E  0187               	clrf	7
 10890  072F  0836               	movf	??_sprintf,w
 10891  0730  0081               	movwf	1
 10892  0731                     l4080:
 10893  0731  3001               	movlw	1
 10894  0732  00B6               	movwf	??_sprintf
 10895  0733  0836               	movf	??_sprintf,w
 10896  0734  07C2               	addwf	sprintf@sp,f
 10897  0735                     l4082:
 10898                           
 10899                           ;doprnt.c: 1441: if(width)
 10900  0735  083F               	movf	sprintf@width,w
 10901  0736  0440               	iorwf	sprintf@width+1,w
 10902  0737  1903               	btfsc	3,2
 10903  0738  2F3A               	goto	u3101
 10904  0739  2F3B               	goto	u3100
 10905  073A                     u3101:
 10906  073A  2F7D               	goto	l4104
 10907  073B                     u3100:
 10908  073B                     l4084:
 10909                           
 10910                           ;doprnt.c: 1443: ((*sp++ = ('0')));
 10911  073B  3030               	movlw	48
 10912  073C  00B6               	movwf	??_sprintf
 10913  073D  0842               	movf	sprintf@sp,w
 10914  073E  0086               	movwf	6
 10915  073F  0187               	clrf	7
 10916  0740  0836               	movf	??_sprintf,w
 10917  0741  0081               	movwf	1
 10918  0742                     l4086:
 10919  0742  3001               	movlw	1
 10920  0743  00B6               	movwf	??_sprintf
 10921  0744  0836               	movf	??_sprintf,w
 10922  0745  07C2               	addwf	sprintf@sp,f
 10923  0746                     l4088:
 10924                           
 10925                           ;doprnt.c: 1444: while(--width);
 10926  0746  30FF               	movlw	255
 10927  0747  07BF               	addwf	sprintf@width,f
 10928  0748  30FF               	movlw	255
 10929  0749  3DC0               	addwfc	sprintf@width+1,f
 10930  074A  083F               	movf	sprintf@width,w
 10931  074B  0440               	iorwf	sprintf@width+1,w
 10932  074C  1D03               	btfss	3,2
 10933  074D  2F4F               	goto	u3111
 10934  074E  2F50               	goto	u3110
 10935  074F                     u3111:
 10936  074F  2F3B               	goto	l4084
 10937  0750                     u3110:
 10938  0750  2F7D               	goto	l4104
 10939  0751                     l4090:
 10940                           
 10941                           ;doprnt.c: 1448: {;doprnt.c: 1450: if(width;doprnt.c: 1454: )
 10942  0751  083F               	movf	sprintf@width,w
 10943  0752  0440               	iorwf	sprintf@width+1,w
 10944  0753  1903               	btfsc	3,2
 10945  0754  2F56               	goto	u3121
 10946  0755  2F57               	goto	u3120
 10947  0756                     u3121:
 10948  0756  2F6C               	goto	l4098
 10949  0757                     u3120:
 10950  0757                     l4092:
 10951                           
 10952                           ;doprnt.c: 1456: ((*sp++ = (' ')));
 10953  0757  3020               	movlw	32
 10954  0758  00B6               	movwf	??_sprintf
 10955  0759  0842               	movf	sprintf@sp,w
 10956  075A  0086               	movwf	6
 10957  075B  0187               	clrf	7
 10958  075C  0836               	movf	??_sprintf,w
 10959  075D  0081               	movwf	1
 10960  075E                     l4094:
 10961  075E  3001               	movlw	1
 10962  075F  00B6               	movwf	??_sprintf
 10963  0760  0836               	movf	??_sprintf,w
 10964  0761  07C2               	addwf	sprintf@sp,f
 10965  0762                     l4096:
 10966                           
 10967                           ;doprnt.c: 1457: while(--width);
 10968  0762  30FF               	movlw	255
 10969  0763  07BF               	addwf	sprintf@width,f
 10970  0764  30FF               	movlw	255
 10971  0765  3DC0               	addwfc	sprintf@width+1,f
 10972  0766  083F               	movf	sprintf@width,w
 10973  0767  0440               	iorwf	sprintf@width+1,w
 10974  0768  1D03               	btfss	3,2
 10975  0769  2F6B               	goto	u3131
 10976  076A  2F6C               	goto	u3130
 10977  076B                     u3131:
 10978  076B  2F57               	goto	l4092
 10979  076C                     u3130:
 10980  076C                     l4098:
 10981                           
 10982                           ;doprnt.c: 1464: if(flag & 0x03)
 10983  076C  083E               	movf	sprintf@flag,w
 10984  076D  3903               	andlw	3
 10985  076E  1903               	btfsc	3,2
 10986  076F  2F71               	goto	u3141
 10987  0770  2F72               	goto	u3140
 10988  0771                     u3141:
 10989  0771  2F7D               	goto	l4104
 10990  0772                     u3140:
 10991  0772                     l4100:
 10992                           
 10993                           ;doprnt.c: 1465: ((*sp++ = ('-')));
 10994  0772  302D               	movlw	45
 10995  0773  00B6               	movwf	??_sprintf
 10996  0774  0842               	movf	sprintf@sp,w
 10997  0775  0086               	movwf	6
 10998  0776  0187               	clrf	7
 10999  0777  0836               	movf	??_sprintf,w
 11000  0778  0081               	movwf	1
 11001  0779                     l4102:
 11002  0779  3001               	movlw	1
 11003  077A  00B6               	movwf	??_sprintf
 11004  077B  0836               	movf	??_sprintf,w
 11005  077C  07C2               	addwf	sprintf@sp,f
 11006  077D                     l4104:
 11007                           
 11008                           ;doprnt.c: 1495: };doprnt.c: 1498: prec = c;
 11009  077D  0841               	movf	sprintf@c,w
 11010  077E  00B6               	movwf	??_sprintf
 11011  077F  0836               	movf	??_sprintf,w
 11012  0780  00BB               	movwf	sprintf@prec
 11013                           
 11014                           ;doprnt.c: 1500: while(prec--) {
 11015  0781  2FB5               	goto	l4112
 11016  0782                     l4106:
 11017                           
 11018                           ;doprnt.c: 1504: {;doprnt.c: 1515: c = (val / dpowers[(unsigned char)prec]) % 10 + '0';
 11019  0782  300A               	movlw	10
 11020  0783  00A8               	movwf	___lwmod@divisor
 11021  0784  3000               	movlw	0
 11022  0785  00A9               	movwf	___lwmod@divisor+1
 11023  0786  083B               	movf	sprintf@prec,w
 11024  0787  00B6               	movwf	??_sprintf
 11025  0788  01B7               	clrf	??_sprintf+1
 11026  0789  35B6               	lslf	??_sprintf,f
 11027  078A  0DB7               	rlf	??_sprintf+1,f
 11028  078B  300F               	movlw	low (_dpowers| (0+32768))
 11029  078C  0736               	addwf	??_sprintf,w
 11030  078D  0084               	movwf	4
 11031  078E  3098               	movlw	high (_dpowers| (0+32768))
 11032  078F  3D37               	addwfc	??_sprintf+1,w
 11033  0790  0085               	movwf	5
 11034  0791  3F00               	moviw [0]fsr0
 11035  0792  00A0               	movwf	___lwdiv@divisor
 11036  0793  3F01               	moviw [1]fsr0
 11037  0794  00A1               	movwf	___lwdiv@divisor+1
 11038  0795  083D               	movf	sprintf@val+1,w
 11039  0796  00A3               	movwf	___lwdiv@dividend+1
 11040  0797  083C               	movf	sprintf@val,w
 11041  0798  00A2               	movwf	___lwdiv@dividend
 11042  0799  3188  200E  3186   	fcall	___lwdiv
 11043  079C  0020               	movlb	0	; select bank0
 11044  079D  0821               	movf	?___lwdiv+1,w
 11045  079E  00AB               	movwf	___lwmod@dividend+1
 11046  079F  0820               	movf	?___lwdiv,w
 11047  07A0  00AA               	movwf	___lwmod@dividend
 11048  07A1  3197  2790  3186   	fcall	___lwmod
 11049  07A4  0020               	movlb	0	; select bank0
 11050  07A5  0828               	movf	?___lwmod,w
 11051  07A6  3E30               	addlw	48
 11052  07A7  00B8               	movwf	??_sprintf+2
 11053  07A8  0838               	movf	??_sprintf+2,w
 11054  07A9  00C1               	movwf	sprintf@c
 11055  07AA                     l4108:
 11056                           
 11057                           ;doprnt.c: 1549: };doprnt.c: 1550: ((*sp++ = (c)));
 11058  07AA  0841               	movf	sprintf@c,w
 11059  07AB  00B6               	movwf	??_sprintf
 11060  07AC  0842               	movf	sprintf@sp,w
 11061  07AD  0086               	movwf	6
 11062  07AE  0187               	clrf	7
 11063  07AF  0836               	movf	??_sprintf,w
 11064  07B0  0081               	movwf	1
 11065  07B1                     l4110:
 11066  07B1  3001               	movlw	1
 11067  07B2  00B6               	movwf	??_sprintf
 11068  07B3  0836               	movf	??_sprintf,w
 11069  07B4  07C2               	addwf	sprintf@sp,f
 11070  07B5                     l4112:
 11071  07B5  30FF               	movlw	255
 11072  07B6  00B6               	movwf	??_sprintf
 11073  07B7  0836               	movf	??_sprintf,w
 11074  07B8  07BB               	addwf	sprintf@prec,f
 11075  07B9  0A3B               	incf	sprintf@prec,w
 11076  07BA  1D03               	btfss	3,2
 11077  07BB  2FBD               	goto	u3151
 11078  07BC  2FBE               	goto	u3150
 11079  07BD                     u3151:
 11080  07BD  2F82               	goto	l4106
 11081  07BE                     u3150:
 11082  07BE                     l4114:
 11083  07BE  082F               	movf	sprintf@f+1,w
 11084  07BF  00B7               	movwf	??_sprintf+1
 11085  07C0  082E               	movf	sprintf@f,w
 11086  07C1  00B6               	movwf	??_sprintf
 11087  07C2  0AAE               	incf	sprintf@f,f
 11088  07C3  1903               	skipnz
 11089  07C4  0AAF               	incf	sprintf@f+1,f
 11090  07C5  0836               	movf	??_sprintf,w
 11091  07C6  0084               	movwf	4
 11092  07C7  0837               	movf	??_sprintf+1,w
 11093  07C8  0085               	movwf	5
 11094  07C9  0800               	movf	0,w	;code access
 11095  07CA  00B8               	movwf	??_sprintf+2
 11096  07CB  0838               	movf	??_sprintf+2,w
 11097  07CC  00C1               	movwf	sprintf@c
 11098  07CD  0841               	movf	sprintf@c,w
 11099  07CE  1D03               	btfss	3,2
 11100  07CF  2FD1               	goto	u3161
 11101  07D0  2FD2               	goto	u3160
 11102  07D1                     u3161:
 11103  07D1  2E40               	goto	l4012
 11104  07D2                     u3160:
 11105  07D2                     l4116:
 11106                           
 11107                           ;doprnt.c: 1564: *sp = 0;
 11108  07D2  0842               	movf	sprintf@sp,w
 11109  07D3  0086               	movwf	6
 11110  07D4  0187               	clrf	7
 11111  07D5  0181               	clrf	1
 11112  07D6                     l1327:
 11113  07D6  0008               	return
 11114  07D7                     __end_of_sprintf:
 11115                           
 11116                           	psect	text8
 11117  160C                     __ptext8:	
 11118 ;; *************** function _isdigit *****************
 11119 ;; Defined at:
 11120 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\isdigit.c"
 11121 ;; Parameters:    Size  Location     Type
 11122 ;;  c               1    wreg     unsigned char 
 11123 ;; Auto vars:     Size  Location     Type
 11124 ;;  c               1    1[BANK0 ] unsigned char 
 11125 ;; Return value:  Size  Location     Type
 11126 ;;		None               void
 11127 ;; Registers used:
 11128 ;;		wreg, status,2, status,0
 11129 ;; Tracked objects:
 11130 ;;		On entry : 0/0
 11131 ;;		On exit  : 0/0
 11132 ;;		Unchanged: 0/0
 11133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11135 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11137 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11138 ;;Total ram usage:        2 bytes
 11139 ;; Hardware stack levels used:    1
 11140 ;; Hardware stack levels required when called:    5
 11141 ;; This function calls:
 11142 ;;		Nothing
 11143 ;; This function is called by:
 11144 ;;		_sprintf
 11145 ;; This function uses a non-reentrant model
 11146 ;;
 11147                           
 11148                           
 11149                           ;psect for function _isdigit
 11150  160C                     _isdigit:
 11151                           
 11152                           ;incstack = 0
 11153                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 11154                           ;isdigit@c stored from wreg
 11155  160C  0020               	movlb	0	; select bank0
 11156  160D  00A1               	movwf	isdigit@c
 11157  160E                     l3792:
 11158  160E  01A0               	clrf	_isdigit$2407
 11159  160F                     l3794:
 11160  160F  303A               	movlw	58
 11161  1610  0221               	subwf	isdigit@c,w
 11162  1611  1803               	skipnc
 11163  1612  2E14               	goto	u2691
 11164  1613  2E15               	goto	u2690
 11165  1614                     u2691:
 11166  1614  2E1D               	goto	l3800
 11167  1615                     u2690:
 11168  1615                     l3796:
 11169  1615  3030               	movlw	48
 11170  1616  0221               	subwf	isdigit@c,w
 11171  1617  1C03               	skipc
 11172  1618  2E1A               	goto	u2701
 11173  1619  2E1B               	goto	u2700
 11174  161A                     u2701:
 11175  161A  2E1D               	goto	l3800
 11176  161B                     u2700:
 11177  161B                     l3798:
 11178  161B  01A0               	clrf	_isdigit$2407
 11179  161C  0AA0               	incf	_isdigit$2407,f
 11180  161D                     l3800:
 11181  161D  0C20               	rrf	_isdigit$2407,w
 11182  161E                     l1784:
 11183  161E  0008               	return
 11184  161F                     __end_of_isdigit:
 11185                           
 11186                           	psect	text9
 11187  16EE                     __ptext9:	
 11188 ;; *************** function ___wmul *****************
 11189 ;; Defined at:
 11190 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 11191 ;; Parameters:    Size  Location     Type
 11192 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11193 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11194 ;; Auto vars:     Size  Location     Type
 11195 ;;  product         2    4[BANK0 ] unsigned int 
 11196 ;; Return value:  Size  Location     Type
 11197 ;;                  2    0[BANK0 ] unsigned int 
 11198 ;; Registers used:
 11199 ;;		wreg, status,2, status,0
 11200 ;; Tracked objects:
 11201 ;;		On entry : 0/0
 11202 ;;		On exit  : 0/0
 11203 ;;		Unchanged: 0/0
 11204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11205 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11206 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11208 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11209 ;;Total ram usage:        6 bytes
 11210 ;; Hardware stack levels used:    1
 11211 ;; Hardware stack levels required when called:    5
 11212 ;; This function calls:
 11213 ;;		Nothing
 11214 ;; This function is called by:
 11215 ;;		_sprintf
 11216 ;;		_save_register
 11217 ;; This function uses a non-reentrant model
 11218 ;;
 11219                           
 11220                           
 11221                           ;psect for function ___wmul
 11222  16EE                     ___wmul:
 11223  16EE                     l3804:	
 11224                           ;incstack = 0
 11225                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11226                           
 11227  16EE  0020               	movlb	0	; select bank0
 11228  16EF  01A4               	clrf	___wmul@product
 11229  16F0  01A5               	clrf	___wmul@product+1
 11230  16F1                     l3806:
 11231  16F1  1C20               	btfss	___wmul@multiplier,0
 11232  16F2  2EF4               	goto	u2711
 11233  16F3  2EF5               	goto	u2710
 11234  16F4                     u2711:
 11235  16F4  2EF9               	goto	l1331
 11236  16F5                     u2710:
 11237  16F5                     l3808:
 11238  16F5  0822               	movf	___wmul@multiplicand,w
 11239  16F6  07A4               	addwf	___wmul@product,f
 11240  16F7  0823               	movf	___wmul@multiplicand+1,w
 11241  16F8  3DA5               	addwfc	___wmul@product+1,f
 11242  16F9                     l1331:
 11243  16F9  3001               	movlw	1
 11244  16FA                     u2725:
 11245  16FA  35A2               	lslf	___wmul@multiplicand,f
 11246  16FB  0DA3               	rlf	___wmul@multiplicand+1,f
 11247  16FC  0B89               	decfsz	9,f
 11248  16FD  2EFA               	goto	u2725
 11249  16FE                     l3810:
 11250  16FE  3001               	movlw	1
 11251  16FF                     u2735:
 11252  16FF  36A1               	lsrf	___wmul@multiplier+1,f
 11253  1700  0CA0               	rrf	___wmul@multiplier,f
 11254  1701  0B89               	decfsz	9,f
 11255  1702  2EFF               	goto	u2735
 11256  1703                     l3812:
 11257  1703  0820               	movf	___wmul@multiplier,w
 11258  1704  0421               	iorwf	___wmul@multiplier+1,w
 11259  1705  1D03               	btfss	3,2
 11260  1706  2F08               	goto	u2741
 11261  1707  2F09               	goto	u2740
 11262  1708                     u2741:
 11263  1708  2EF1               	goto	l3806
 11264  1709                     u2740:
 11265  1709                     l3814:
 11266  1709  0825               	movf	___wmul@product+1,w
 11267  170A  00A1               	movwf	?___wmul+1
 11268  170B  0824               	movf	___wmul@product,w
 11269  170C  00A0               	movwf	?___wmul
 11270  170D                     l1333:
 11271  170D  0008               	return
 11272  170E                     __end_of___wmul:
 11273                           
 11274                           	psect	text10
 11275  1790                     __ptext10:	
 11276 ;; *************** function ___lwmod *****************
 11277 ;; Defined at:
 11278 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
 11279 ;; Parameters:    Size  Location     Type
 11280 ;;  divisor         2    8[BANK0 ] unsigned int 
 11281 ;;  dividend        2   10[BANK0 ] unsigned int 
 11282 ;; Auto vars:     Size  Location     Type
 11283 ;;  counter         1   13[BANK0 ] unsigned char 
 11284 ;; Return value:  Size  Location     Type
 11285 ;;                  2    8[BANK0 ] unsigned int 
 11286 ;; Registers used:
 11287 ;;		wreg, status,2, status,0
 11288 ;; Tracked objects:
 11289 ;;		On entry : 0/0
 11290 ;;		On exit  : 0/0
 11291 ;;		Unchanged: 0/0
 11292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11293 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11294 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11295 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11296 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11297 ;;Total ram usage:        6 bytes
 11298 ;; Hardware stack levels used:    1
 11299 ;; Hardware stack levels required when called:    5
 11300 ;; This function calls:
 11301 ;;		Nothing
 11302 ;; This function is called by:
 11303 ;;		_main
 11304 ;;		_sprintf
 11305 ;;		_save_register
 11306 ;; This function uses a non-reentrant model
 11307 ;;
 11308                           
 11309                           
 11310                           ;psect for function ___lwmod
 11311  1790                     ___lwmod:
 11312  1790                     l3844:	
 11313                           ;incstack = 0
 11314                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 11315                           
 11316  1790  0020               	movlb	0	; select bank0
 11317  1791  0828               	movf	___lwmod@divisor,w
 11318  1792  0429               	iorwf	___lwmod@divisor+1,w
 11319  1793  1903               	btfsc	3,2
 11320  1794  2F96               	goto	u2821
 11321  1795  2F97               	goto	u2820
 11322  1796                     u2821:
 11323  1796  2FC0               	goto	l3862
 11324  1797                     u2820:
 11325  1797                     l3846:
 11326  1797  01AD               	clrf	___lwmod@counter
 11327  1798  0AAD               	incf	___lwmod@counter,f
 11328  1799  2FA3               	goto	l3852
 11329  179A                     l3848:
 11330  179A  3001               	movlw	1
 11331  179B                     u2835:
 11332  179B  35A8               	lslf	___lwmod@divisor,f
 11333  179C  0DA9               	rlf	___lwmod@divisor+1,f
 11334  179D  0B89               	decfsz	9,f
 11335  179E  2F9B               	goto	u2835
 11336  179F                     l3850:
 11337  179F  3001               	movlw	1
 11338  17A0  00AC               	movwf	??___lwmod
 11339  17A1  082C               	movf	??___lwmod,w
 11340  17A2  07AD               	addwf	___lwmod@counter,f
 11341  17A3                     l3852:
 11342  17A3  1FA9               	btfss	___lwmod@divisor+1,7
 11343  17A4  2FA6               	goto	u2841
 11344  17A5  2FA7               	goto	u2840
 11345  17A6                     u2841:
 11346  17A6  2F9A               	goto	l3848
 11347  17A7                     u2840:
 11348  17A7                     l3854:
 11349  17A7  0829               	movf	___lwmod@divisor+1,w
 11350  17A8  022B               	subwf	___lwmod@dividend+1,w
 11351  17A9  1D03               	skipz
 11352  17AA  2FAD               	goto	u2855
 11353  17AB  0828               	movf	___lwmod@divisor,w
 11354  17AC  022A               	subwf	___lwmod@dividend,w
 11355  17AD                     u2855:
 11356  17AD  1C03               	skipc
 11357  17AE  2FB0               	goto	u2851
 11358  17AF  2FB1               	goto	u2850
 11359  17B0                     u2851:
 11360  17B0  2FB5               	goto	l3858
 11361  17B1                     u2850:
 11362  17B1                     l3856:
 11363  17B1  0828               	movf	___lwmod@divisor,w
 11364  17B2  02AA               	subwf	___lwmod@dividend,f
 11365  17B3  0829               	movf	___lwmod@divisor+1,w
 11366  17B4  3BAB               	subwfb	___lwmod@dividend+1,f
 11367  17B5                     l3858:
 11368  17B5  3001               	movlw	1
 11369  17B6                     u2865:
 11370  17B6  36A9               	lsrf	___lwmod@divisor+1,f
 11371  17B7  0CA8               	rrf	___lwmod@divisor,f
 11372  17B8  0B89               	decfsz	9,f
 11373  17B9  2FB6               	goto	u2865
 11374  17BA                     l3860:
 11375  17BA  3001               	movlw	1
 11376  17BB  02AD               	subwf	___lwmod@counter,f
 11377  17BC  1D03               	btfss	3,2
 11378  17BD  2FBF               	goto	u2871
 11379  17BE  2FC0               	goto	u2870
 11380  17BF                     u2871:
 11381  17BF  2FA7               	goto	l3854
 11382  17C0                     u2870:
 11383  17C0                     l3862:
 11384  17C0  082B               	movf	___lwmod@dividend+1,w
 11385  17C1  00A9               	movwf	?___lwmod+1
 11386  17C2  082A               	movf	___lwmod@dividend,w
 11387  17C3  00A8               	movwf	?___lwmod
 11388  17C4                     l1613:
 11389  17C4  0008               	return
 11390  17C5                     __end_of___lwmod:
 11391                           
 11392                           	psect	text11
 11393  080E                     __ptext11:	
 11394 ;; *************** function ___lwdiv *****************
 11395 ;; Defined at:
 11396 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
 11397 ;; Parameters:    Size  Location     Type
 11398 ;;  divisor         2    0[BANK0 ] unsigned int 
 11399 ;;  dividend        2    2[BANK0 ] unsigned int 
 11400 ;; Auto vars:     Size  Location     Type
 11401 ;;  quotient        2    5[BANK0 ] unsigned int 
 11402 ;;  counter         1    7[BANK0 ] unsigned char 
 11403 ;; Return value:  Size  Location     Type
 11404 ;;                  2    0[BANK0 ] unsigned int 
 11405 ;; Registers used:
 11406 ;;		wreg, status,2, status,0
 11407 ;; Tracked objects:
 11408 ;;		On entry : 0/0
 11409 ;;		On exit  : 0/0
 11410 ;;		Unchanged: 0/0
 11411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11412 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11413 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11414 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11415 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11416 ;;Total ram usage:        8 bytes
 11417 ;; Hardware stack levels used:    1
 11418 ;; Hardware stack levels required when called:    5
 11419 ;; This function calls:
 11420 ;;		Nothing
 11421 ;; This function is called by:
 11422 ;;		_sprintf
 11423 ;; This function uses a non-reentrant model
 11424 ;;
 11425                           
 11426                           
 11427                           ;psect for function ___lwdiv
 11428  080E                     ___lwdiv:
 11429  080E                     l3818:	
 11430                           ;incstack = 0
 11431                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 11432                           
 11433  080E  0020               	movlb	0	; select bank0
 11434  080F  01A5               	clrf	___lwdiv@quotient
 11435  0810  01A6               	clrf	___lwdiv@quotient+1
 11436  0811                     l3820:
 11437  0811  0820               	movf	___lwdiv@divisor,w
 11438  0812  0421               	iorwf	___lwdiv@divisor+1,w
 11439  0813  1903               	btfsc	3,2
 11440  0814  2816               	goto	u2751
 11441  0815  2817               	goto	u2750
 11442  0816                     u2751:
 11443  0816  2846               	goto	l3840
 11444  0817                     u2750:
 11445  0817                     l3822:
 11446  0817  01A7               	clrf	___lwdiv@counter
 11447  0818  0AA7               	incf	___lwdiv@counter,f
 11448  0819  2823               	goto	l3828
 11449  081A                     l3824:
 11450  081A  3001               	movlw	1
 11451  081B                     u2765:
 11452  081B  35A0               	lslf	___lwdiv@divisor,f
 11453  081C  0DA1               	rlf	___lwdiv@divisor+1,f
 11454  081D  0B89               	decfsz	9,f
 11455  081E  281B               	goto	u2765
 11456  081F                     l3826:
 11457  081F  3001               	movlw	1
 11458  0820  00A4               	movwf	??___lwdiv
 11459  0821  0824               	movf	??___lwdiv,w
 11460  0822  07A7               	addwf	___lwdiv@counter,f
 11461  0823                     l3828:
 11462  0823  1FA1               	btfss	___lwdiv@divisor+1,7
 11463  0824  2826               	goto	u2771
 11464  0825  2827               	goto	u2770
 11465  0826                     u2771:
 11466  0826  281A               	goto	l3824
 11467  0827                     u2770:
 11468  0827                     l3830:
 11469  0827  3001               	movlw	1
 11470  0828                     u2785:
 11471  0828  35A5               	lslf	___lwdiv@quotient,f
 11472  0829  0DA6               	rlf	___lwdiv@quotient+1,f
 11473  082A  0B89               	decfsz	9,f
 11474  082B  2828               	goto	u2785
 11475  082C  0821               	movf	___lwdiv@divisor+1,w
 11476  082D  0223               	subwf	___lwdiv@dividend+1,w
 11477  082E  1D03               	skipz
 11478  082F  2832               	goto	u2795
 11479  0830  0820               	movf	___lwdiv@divisor,w
 11480  0831  0222               	subwf	___lwdiv@dividend,w
 11481  0832                     u2795:
 11482  0832  1C03               	skipc
 11483  0833  2835               	goto	u2791
 11484  0834  2836               	goto	u2790
 11485  0835                     u2791:
 11486  0835  283B               	goto	l3836
 11487  0836                     u2790:
 11488  0836                     l3832:
 11489  0836  0820               	movf	___lwdiv@divisor,w
 11490  0837  02A2               	subwf	___lwdiv@dividend,f
 11491  0838  0821               	movf	___lwdiv@divisor+1,w
 11492  0839  3BA3               	subwfb	___lwdiv@dividend+1,f
 11493  083A                     l3834:
 11494  083A  1425               	bsf	___lwdiv@quotient,0
 11495  083B                     l3836:
 11496  083B  3001               	movlw	1
 11497  083C                     u2805:
 11498  083C  36A1               	lsrf	___lwdiv@divisor+1,f
 11499  083D  0CA0               	rrf	___lwdiv@divisor,f
 11500  083E  0B89               	decfsz	9,f
 11501  083F  283C               	goto	u2805
 11502  0840                     l3838:
 11503  0840  3001               	movlw	1
 11504  0841  02A7               	subwf	___lwdiv@counter,f
 11505  0842  1D03               	btfss	3,2
 11506  0843  2845               	goto	u2811
 11507  0844  2846               	goto	u2810
 11508  0845                     u2811:
 11509  0845  2827               	goto	l3830
 11510  0846                     u2810:
 11511  0846                     l3840:
 11512  0846  0826               	movf	___lwdiv@quotient+1,w
 11513  0847  00A1               	movwf	?___lwdiv+1
 11514  0848  0825               	movf	___lwdiv@quotient,w
 11515  0849  00A0               	movwf	?___lwdiv
 11516  084A                     l1603:
 11517  084A  0008               	return
 11518  084B                     __end_of___lwdiv:
 11519                           
 11520                           	psect	text12
 11521  164A                     __ptext12:	
 11522 ;; *************** function _LCDstr *****************
 11523 ;; Defined at:
 11524 ;;		line 113 in file "LCD.c"
 11525 ;; Parameters:    Size  Location     Type
 11526 ;;  p               1    wreg     PTR unsigned char 
 11527 ;;		 -> lcd@buf(17), 
 11528 ;; Auto vars:     Size  Location     Type
 11529 ;;  p               1   11[BANK0 ] PTR unsigned char 
 11530 ;;		 -> lcd@buf(17), 
 11531 ;;  c               1   10[BANK0 ] unsigned char 
 11532 ;; Return value:  Size  Location     Type
 11533 ;;                  1    wreg      void 
 11534 ;; Registers used:
 11535 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11536 ;; Tracked objects:
 11537 ;;		On entry : 0/0
 11538 ;;		On exit  : 0/0
 11539 ;;		Unchanged: 0/0
 11540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11542 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11543 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11544 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11545 ;;Total ram usage:        3 bytes
 11546 ;; Hardware stack levels used:    1
 11547 ;; Hardware stack levels required when called:    8
 11548 ;; This function calls:
 11549 ;;		_LCDchar
 11550 ;; This function is called by:
 11551 ;;		_lcd
 11552 ;; This function uses a non-reentrant model
 11553 ;;
 11554                           
 11555                           
 11556                           ;psect for function _LCDstr
 11557  164A                     _LCDstr:
 11558                           
 11559                           ;incstack = 0
 11560                           ; Regs used in _LCDstr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11561                           ;LCDstr@p stored from wreg
 11562  164A  0020               	movlb	0	; select bank0
 11563  164B  00AB               	movwf	LCDstr@p
 11564  164C                     l4004:
 11565                           
 11566                           ;LCD.c: 115: unsigned char c;;LCD.c: 117: while((c = *p++)) LCDchar(c);
 11567  164C  2E51               	goto	l4008
 11568  164D                     l4006:
 11569  164D  082A               	movf	LCDstr@c,w
 11570  164E  3195  254A  3196   	fcall	_LCDchar
 11571  1651                     l4008:
 11572  1651  0020               	movlb	0	; select bank0
 11573  1652  082B               	movf	LCDstr@p,w
 11574  1653  0086               	movwf	6
 11575  1654  0187               	clrf	7
 11576  1655  0AAB               	incf	LCDstr@p,f
 11577  1656  0801               	movf	1,w
 11578  1657  00A9               	movwf	??_LCDstr
 11579  1658  0829               	movf	??_LCDstr,w
 11580  1659  00AA               	movwf	LCDstr@c
 11581  165A  082A               	movf	LCDstr@c,w
 11582  165B  1D03               	btfss	3,2
 11583  165C  2E5E               	goto	u2981
 11584  165D  2E5F               	goto	u2980
 11585  165E                     u2981:
 11586  165E  2E4D               	goto	l4006
 11587  165F                     u2980:
 11588  165F                     l936:
 11589  165F  0008               	return
 11590  1660                     __end_of_LCDstr:
 11591                           
 11592                           	psect	text13
 11593  154A                     __ptext13:	
 11594 ;; *************** function _LCDchar *****************
 11595 ;; Defined at:
 11596 ;;		line 108 in file "LCD.c"
 11597 ;; Parameters:    Size  Location     Type
 11598 ;;  c               1    wreg     unsigned char 
 11599 ;; Auto vars:     Size  Location     Type
 11600 ;;  c               1    8[BANK0 ] unsigned char 
 11601 ;; Return value:  Size  Location     Type
 11602 ;;                  1    wreg      void 
 11603 ;; Registers used:
 11604 ;;		wreg, status,2, status,0, pclath, cstack
 11605 ;; Tracked objects:
 11606 ;;		On entry : 0/0
 11607 ;;		On exit  : 0/0
 11608 ;;		Unchanged: 0/0
 11609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11611 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11613 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11614 ;;Total ram usage:        1 bytes
 11615 ;; Hardware stack levels used:    1
 11616 ;; Hardware stack levels required when called:    7
 11617 ;; This function calls:
 11618 ;;		_LCDsend2x4
 11619 ;; This function is called by:
 11620 ;;		_LCDstr
 11621 ;; This function uses a non-reentrant model
 11622 ;;
 11623                           
 11624                           
 11625                           ;psect for function _LCDchar
 11626  154A                     _LCDchar:
 11627                           
 11628                           ;incstack = 0
 11629                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 11630                           ;LCDchar@c stored from wreg
 11631  154A  0020               	movlb	0	; select bank0
 11632  154B  00A8               	movwf	LCDchar@c
 11633  154C                     l3790:
 11634                           
 11635                           ;LCD.c: 110: LCDsend2x4(c, 0x01);
 11636  154C  01A2               	clrf	LCDsend2x4@mode
 11637  154D  0AA2               	incf	LCDsend2x4@mode,f
 11638  154E  0828               	movf	LCDchar@c,w
 11639  154F  318A  22D0  3195   	fcall	_LCDsend2x4
 11640  1552                     l930:
 11641  1552  0008               	return
 11642  1553                     __end_of_LCDchar:
 11643                           
 11644                           	psect	text14
 11645  1528                     __ptext14:	
 11646 ;; *************** function _LCDcmd *****************
 11647 ;; Defined at:
 11648 ;;		line 103 in file "LCD.c"
 11649 ;; Parameters:    Size  Location     Type
 11650 ;;  c               1    wreg     unsigned char 
 11651 ;; Auto vars:     Size  Location     Type
 11652 ;;  c               1    8[BANK0 ] unsigned char 
 11653 ;; Return value:  Size  Location     Type
 11654 ;;                  1    wreg      void 
 11655 ;; Registers used:
 11656 ;;		wreg, status,2, status,0, pclath, cstack
 11657 ;; Tracked objects:
 11658 ;;		On entry : 0/0
 11659 ;;		On exit  : 0/0
 11660 ;;		Unchanged: 0/0
 11661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11663 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11665 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11666 ;;Total ram usage:        1 bytes
 11667 ;; Hardware stack levels used:    1
 11668 ;; Hardware stack levels required when called:    7
 11669 ;; This function calls:
 11670 ;;		_LCDsend2x4
 11671 ;; This function is called by:
 11672 ;;		_lcd
 11673 ;; This function uses a non-reentrant model
 11674 ;;
 11675                           
 11676                           
 11677                           ;psect for function _LCDcmd
 11678  1528                     _LCDcmd:
 11679                           
 11680                           ;incstack = 0
 11681                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 11682                           ;LCDcmd@c stored from wreg
 11683  1528  0020               	movlb	0	; select bank0
 11684  1529  00A8               	movwf	LCDcmd@c
 11685  152A                     l4002:
 11686                           
 11687                           ;LCD.c: 105: LCDsend2x4(c, 0);
 11688  152A  01A2               	clrf	LCDsend2x4@mode
 11689  152B  0828               	movf	LCDcmd@c,w
 11690  152C  318A  22D0  3195   	fcall	_LCDsend2x4
 11691  152F                     l927:
 11692  152F  0008               	return
 11693  1530                     __end_of_LCDcmd:
 11694                           
 11695                           	psect	text15
 11696  1567                     __ptext15:	
 11697 ;; *************** function _i2c1_driver_open *****************
 11698 ;; Defined at:
 11699 ;;		line 83 in file "mcc_generated_files/i2c1_driver.c"
 11700 ;; Parameters:    Size  Location     Type
 11701 ;;		None
 11702 ;; Auto vars:     Size  Location     Type
 11703 ;;		None
 11704 ;; Return value:  Size  Location     Type
 11705 ;;		None               void
 11706 ;; Registers used:
 11707 ;;		wreg, status,2
 11708 ;; Tracked objects:
 11709 ;;		On entry : 0/0
 11710 ;;		On exit  : 0/0
 11711 ;;		Unchanged: 0/0
 11712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11717 ;;Total ram usage:        0 bytes
 11718 ;; Hardware stack levels used:    1
 11719 ;; Hardware stack levels required when called:    5
 11720 ;; This function calls:
 11721 ;;		Nothing
 11722 ;; This function is called by:
 11723 ;;		_main
 11724 ;; This function uses a non-reentrant model
 11725 ;;
 11726                           
 11727                           
 11728                           ;psect for function _i2c1_driver_open
 11729  1567                     _i2c1_driver_open:
 11730  1567                     l4140:	
 11731                           ;incstack = 0
 11732                           ; Regs used in _i2c1_driver_open: [wreg+status,2]
 11733                           
 11734                           
 11735                           ;i2c1_driver.c: 85: if(!SSP1CON1bits.SSPEN)
 11736  1567  0023               	movlb	3	; select bank3
 11737  1568  1A90               	btfsc	16,5	;volatile
 11738  1569  2D6B               	goto	u3171
 11739  156A  2D6C               	goto	u3170
 11740  156B                     u3171:
 11741  156B  2D72               	goto	l229
 11742  156C                     u3170:
 11743  156C                     l4142:
 11744                           
 11745                           ;i2c1_driver.c: 86: {;i2c1_driver.c: 87: SSP1STAT = 0x00;
 11746  156C  018F               	clrf	15	;volatile
 11747  156D                     l4144:
 11748                           
 11749                           ;i2c1_driver.c: 88: SSP1CON1 = 0x28;
 11750  156D  3028               	movlw	40
 11751  156E  0090               	movwf	16	;volatile
 11752  156F                     l4146:
 11753                           
 11754                           ;i2c1_driver.c: 89: SSP1CON2 = 0x00;
 11755  156F  0191               	clrf	17	;volatile
 11756                           
 11757                           ;i2c1_driver.c: 90: SSP1ADD = 0x3;
 11758  1570  3003               	movlw	3
 11759  1571  008D               	movwf	13	;volatile
 11760  1572                     l229:
 11761  1572  0008               	return
 11762  1573                     __end_of_i2c1_driver_open:
 11763                           
 11764                           	psect	text16
 11765  15EB                     __ptext16:	
 11766 ;; *************** function _conf_temp *****************
 11767 ;; Defined at:
 11768 ;;		line 582 in file "main.c"
 11769 ;; Parameters:    Size  Location     Type
 11770 ;;		None
 11771 ;; Auto vars:     Size  Location     Type
 11772 ;;		None
 11773 ;; Return value:  Size  Location     Type
 11774 ;;                  1    wreg      void 
 11775 ;; Registers used:
 11776 ;;		wreg, status,2, status,0
 11777 ;; Tracked objects:
 11778 ;;		On entry : 0/0
 11779 ;;		On exit  : 0/0
 11780 ;;		Unchanged: 0/0
 11781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11784 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11785 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11786 ;;Total ram usage:        1 bytes
 11787 ;; Hardware stack levels used:    1
 11788 ;; Hardware stack levels required when called:    5
 11789 ;; This function calls:
 11790 ;;		Nothing
 11791 ;; This function is called by:
 11792 ;;		_main
 11793 ;; This function uses a non-reentrant model
 11794 ;;
 11795                           
 11796                           
 11797                           ;psect for function _conf_temp
 11798  15EB                     _conf_temp:
 11799  15EB                     l4358:	
 11800                           ;incstack = 0
 11801                           ; Regs used in _conf_temp: [wreg+status,2+status,0]
 11802                           
 11803                           
 11804                           ;main.c: 584: if(ALAT == 50){
 11805  15EB  3032               	movlw	50
 11806  15EC  0021               	movlb	1	; select bank1
 11807  15ED  0637               	xorwf	_ALAT^(0+128),w
 11808  15EE  1D03               	btfss	3,2
 11809  15EF  2DF1               	goto	u3591
 11810  15F0  2DF2               	goto	u3590
 11811  15F1                     u3591:
 11812  15F1  2DF4               	goto	l4362
 11813  15F2                     u3590:
 11814  15F2                     l4360:
 11815                           
 11816                           ;main.c: 585: ALAT = 0;
 11817  15F2  01B7               	clrf	_ALAT^(0+128)
 11818                           
 11819                           ;main.c: 586: }else{
 11820  15F3  2DFA               	goto	l749
 11821  15F4                     l4362:
 11822                           
 11823                           ;main.c: 587: ALAT++;
 11824  15F4  3001               	movlw	1
 11825  15F5  0020               	movlb	0	; select bank0
 11826  15F6  00A0               	movwf	??_conf_temp
 11827  15F7  0820               	movf	??_conf_temp,w
 11828  15F8  0021               	movlb	1	; select bank1
 11829  15F9  07B7               	addwf	_ALAT^(0+128),f
 11830  15FA                     l749:
 11831  15FA  0008               	return
 11832  15FB                     __end_of_conf_temp:
 11833                           
 11834                           	psect	text17
 11835  15DB                     __ptext17:	
 11836 ;; *************** function _conf_lumin *****************
 11837 ;; Defined at:
 11838 ;;		line 593 in file "main.c"
 11839 ;; Parameters:    Size  Location     Type
 11840 ;;		None
 11841 ;; Auto vars:     Size  Location     Type
 11842 ;;		None
 11843 ;; Return value:  Size  Location     Type
 11844 ;;                  1    wreg      void 
 11845 ;; Registers used:
 11846 ;;		wreg, status,2, status,0
 11847 ;; Tracked objects:
 11848 ;;		On entry : 0/0
 11849 ;;		On exit  : 0/0
 11850 ;;		Unchanged: 0/0
 11851 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11854 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11855 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11856 ;;Total ram usage:        1 bytes
 11857 ;; Hardware stack levels used:    1
 11858 ;; Hardware stack levels required when called:    5
 11859 ;; This function calls:
 11860 ;;		Nothing
 11861 ;; This function is called by:
 11862 ;;		_main
 11863 ;; This function uses a non-reentrant model
 11864 ;;
 11865                           
 11866                           
 11867                           ;psect for function _conf_lumin
 11868  15DB                     _conf_lumin:
 11869  15DB                     l4366:	
 11870                           ;incstack = 0
 11871                           ; Regs used in _conf_lumin: [wreg+status,2+status,0]
 11872                           
 11873                           
 11874                           ;main.c: 595: if(ALAL == 7){
 11875  15DB  3007               	movlw	7
 11876  15DC  0021               	movlb	1	; select bank1
 11877  15DD  0636               	xorwf	_ALAL^(0+128),w
 11878  15DE  1D03               	btfss	3,2
 11879  15DF  2DE1               	goto	u3601
 11880  15E0  2DE2               	goto	u3600
 11881  15E1                     u3601:
 11882  15E1  2DE4               	goto	l4370
 11883  15E2                     u3600:
 11884  15E2                     l4368:
 11885                           
 11886                           ;main.c: 596: ALAL = 0;
 11887  15E2  01B6               	clrf	_ALAL^(0+128)
 11888                           
 11889                           ;main.c: 597: }else{
 11890  15E3  2DEA               	goto	l754
 11891  15E4                     l4370:
 11892                           
 11893                           ;main.c: 598: ALAL++;
 11894  15E4  3001               	movlw	1
 11895  15E5  0020               	movlb	0	; select bank0
 11896  15E6  00A0               	movwf	??_conf_lumin
 11897  15E7  0820               	movf	??_conf_lumin,w
 11898  15E8  0021               	movlb	1	; select bank1
 11899  15E9  07B6               	addwf	_ALAL^(0+128),f
 11900  15EA                     l754:
 11901  15EA  0008               	return
 11902  15EB                     __end_of_conf_lumin:
 11903                           
 11904                           	psect	text18
 11905  07FB                     __ptext18:	
 11906 ;; *************** function _conf_clock_ss *****************
 11907 ;; Defined at:
 11908 ;;		line 547 in file "main.c"
 11909 ;; Parameters:    Size  Location     Type
 11910 ;;		None
 11911 ;; Auto vars:     Size  Location     Type
 11912 ;;		None
 11913 ;; Return value:  Size  Location     Type
 11914 ;;                  1    wreg      void 
 11915 ;; Registers used:
 11916 ;;		wreg
 11917 ;; Tracked objects:
 11918 ;;		On entry : 0/0
 11919 ;;		On exit  : 0/0
 11920 ;;		Unchanged: 0/0
 11921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11926 ;;Total ram usage:        0 bytes
 11927 ;; Hardware stack levels used:    1
 11928 ;; Hardware stack levels required when called:    5
 11929 ;; This function calls:
 11930 ;;		Nothing
 11931 ;; This function is called by:
 11932 ;;		_main
 11933 ;; This function uses a non-reentrant model
 11934 ;;
 11935                           
 11936                           
 11937                           ;psect for function _conf_clock_ss
 11938  07FB                     _conf_clock_ss:
 11939  07FB                     l4330:	
 11940                           ;incstack = 0
 11941                           ; Regs used in _conf_clock_ss: [wreg]
 11942                           
 11943                           
 11944                           ;main.c: 548: timer_flag++;
 11945  07FB  3001               	movlw	1
 11946  07FC  07FB               	addwf	_timer_flag,f	;volatile
 11947  07FD  3000               	movlw	0
 11948  07FE  3DFC               	addwfc	_timer_flag+1,f	;volatile
 11949  07FF                     l729:
 11950  07FF  0008               	return
 11951  0800                     __end_of_conf_clock_ss:
 11952                           
 11953                           	psect	text19
 11954  0800                     __ptext19:	
 11955 ;; *************** function _conf_clock_mm *****************
 11956 ;; Defined at:
 11957 ;;		line 537 in file "main.c"
 11958 ;; Parameters:    Size  Location     Type
 11959 ;;		None
 11960 ;; Auto vars:     Size  Location     Type
 11961 ;;		None
 11962 ;; Return value:  Size  Location     Type
 11963 ;;                  1    wreg      void 
 11964 ;; Registers used:
 11965 ;;		wreg, status,2, status,0
 11966 ;; Tracked objects:
 11967 ;;		On entry : 0/0
 11968 ;;		On exit  : 0/0
 11969 ;;		Unchanged: 0/0
 11970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11973 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11974 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11975 ;;Total ram usage:        1 bytes
 11976 ;; Hardware stack levels used:    1
 11977 ;; Hardware stack levels required when called:    5
 11978 ;; This function calls:
 11979 ;;		Nothing
 11980 ;; This function is called by:
 11981 ;;		_main
 11982 ;; This function uses a non-reentrant model
 11983 ;;
 11984                           
 11985                           
 11986                           ;psect for function _conf_clock_mm
 11987  0800                     _conf_clock_mm:
 11988  0800                     l4322:	
 11989                           ;incstack = 0
 11990                           ; Regs used in _conf_clock_mm: [wreg+status,2+status,0]
 11991                           
 11992                           
 11993                           ;main.c: 538: if (CLKM == 59){
 11994  0800  303B               	movlw	59
 11995  0801  0020               	movlb	0	; select bank0
 11996  0802  066E               	xorwf	_CLKM,w
 11997  0803  1D03               	btfss	3,2
 11998  0804  2806               	goto	u3551
 11999  0805  2807               	goto	u3550
 12000  0806                     u3551:
 12001  0806  2809               	goto	l4326
 12002  0807                     u3550:
 12003  0807                     l4324:
 12004                           
 12005                           ;main.c: 539: CLKM = 0;
 12006  0807  01EE               	clrf	_CLKM
 12007                           
 12008                           ;main.c: 540: }else{
 12009  0808  280D               	goto	l726
 12010  0809                     l4326:
 12011                           
 12012                           ;main.c: 541: CLKM++;
 12013  0809  3001               	movlw	1
 12014  080A  00A0               	movwf	??_conf_clock_mm
 12015  080B  0820               	movf	??_conf_clock_mm,w
 12016  080C  07EE               	addwf	_CLKM,f
 12017  080D                     l726:
 12018  080D  0008               	return
 12019  080E                     __end_of_conf_clock_mm:
 12020                           
 12021                           	psect	text20
 12022  15FB                     __ptext20:	
 12023 ;; *************** function _conf_clock_hh *****************
 12024 ;; Defined at:
 12025 ;;		line 526 in file "main.c"
 12026 ;; Parameters:    Size  Location     Type
 12027 ;;		None
 12028 ;; Auto vars:     Size  Location     Type
 12029 ;;		None
 12030 ;; Return value:  Size  Location     Type
 12031 ;;                  1    wreg      void 
 12032 ;; Registers used:
 12033 ;;		wreg, status,2, status,0, pclath, cstack
 12034 ;; Tracked objects:
 12035 ;;		On entry : 0/0
 12036 ;;		On exit  : 0/0
 12037 ;;		Unchanged: 0/0
 12038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12041 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12042 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12043 ;;Total ram usage:        1 bytes
 12044 ;; Hardware stack levels used:    1
 12045 ;; Hardware stack levels required when called:    7
 12046 ;; This function calls:
 12047 ;;		_save_vars
 12048 ;; This function is called by:
 12049 ;;		_main
 12050 ;; This function uses a non-reentrant model
 12051 ;;
 12052                           
 12053                           
 12054                           ;psect for function _conf_clock_hh
 12055  15FB                     _conf_clock_hh:
 12056  15FB                     l4312:	
 12057                           ;incstack = 0
 12058                           ; Regs used in _conf_clock_hh: [wreg+status,2+status,0+pclath+cstack]
 12059                           
 12060                           
 12061                           ;main.c: 527: if (CLKH == 23){
 12062  15FB  3017               	movlw	23
 12063  15FC  0020               	movlb	0	; select bank0
 12064  15FD  066F               	xorwf	_CLKH,w
 12065  15FE  1D03               	btfss	3,2
 12066  15FF  2E01               	goto	u3541
 12067  1600  2E02               	goto	u3540
 12068  1601                     u3541:
 12069  1601  2E04               	goto	l4316
 12070  1602                     u3540:
 12071  1602                     l4314:
 12072                           
 12073                           ;main.c: 528: CLKH = 0;
 12074  1602  01EF               	clrf	_CLKH
 12075                           
 12076                           ;main.c: 529: }else{
 12077  1603  2E08               	goto	l4318
 12078  1604                     l4316:
 12079                           
 12080                           ;main.c: 530: CLKH++;
 12081  1604  3001               	movlw	1
 12082  1605  00A5               	movwf	??_conf_clock_hh
 12083  1606  0825               	movf	??_conf_clock_hh,w
 12084  1607  07EF               	addwf	_CLKH,f
 12085  1608                     l4318:
 12086                           
 12087                           ;main.c: 531: };main.c: 532: save_vars();
 12088  1608  318A  221F  3195   	fcall	_save_vars
 12089  160B                     l721:
 12090  160B  0008               	return
 12091  160C                     __end_of_conf_clock_hh:
 12092                           
 12093                           	psect	text21
 12094  0A1F                     __ptext21:	
 12095 ;; *************** function _save_vars *****************
 12096 ;; Defined at:
 12097 ;;		line 396 in file "main.c"
 12098 ;; Parameters:    Size  Location     Type
 12099 ;;		None
 12100 ;; Auto vars:     Size  Location     Type
 12101 ;;		None
 12102 ;; Return value:  Size  Location     Type
 12103 ;;                  1    wreg      void 
 12104 ;; Registers used:
 12105 ;;		wreg, status,2, status,0, pclath, cstack
 12106 ;; Tracked objects:
 12107 ;;		On entry : 0/0
 12108 ;;		On exit  : 0/0
 12109 ;;		Unchanged: 0/0
 12110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12113 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12114 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12115 ;;Total ram usage:        1 bytes
 12116 ;; Hardware stack levels used:    1
 12117 ;; Hardware stack levels required when called:    6
 12118 ;; This function calls:
 12119 ;;		_DATAEE_WriteByte
 12120 ;; This function is called by:
 12121 ;;		_main
 12122 ;;		_conf_clock_hh
 12123 ;; This function uses a non-reentrant model
 12124 ;;
 12125                           
 12126                           
 12127                           ;psect for function _save_vars
 12128  0A1F                     _save_vars:
 12129  0A1F                     l3962:	
 12130                           ;incstack = 0
 12131                           ; Regs used in _save_vars: [wreg+status,2+status,0+pclath+cstack]
 12132                           
 12133                           
 12134                           ;main.c: 398: CSUM = PMON + TALA + ALAH + ALAM + ALAS + ALAT + ALAL + ALAF + CLKH + CLKM
      +                          ;
 12135  0A1F  087D               	movf	_PMON,w
 12136  0A20  0021               	movlb	1	; select bank1
 12137  0A21  0739               	addwf	_TALA^(0+128),w
 12138  0A22  0738               	addwf	_ALAH^(0+128),w
 12139  0A23  0735               	addwf	_ALAM^(0+128),w
 12140  0A24  0734               	addwf	_ALAS^(0+128),w
 12141  0A25  0737               	addwf	_ALAT^(0+128),w
 12142  0A26  0736               	addwf	_ALAL^(0+128),w
 12143  0A27  0733               	addwf	_ALAF^(0+128),w
 12144  0A28  0020               	movlb	0	; select bank0
 12145  0A29  076F               	addwf	_CLKH,w
 12146  0A2A  076E               	addwf	_CLKM,w
 12147  0A2B  00A4               	movwf	??_save_vars
 12148  0A2C  0824               	movf	??_save_vars,w
 12149  0A2D  0021               	movlb	1	; select bank1
 12150  0A2E  00B2               	movwf	_CSUM^(0+128)
 12151  0A2F                     l3964:
 12152                           
 12153                           ;main.c: 400: DATAEE_WriteByte(150,0xaa);
 12154  0A2F  3096               	movlw	150
 12155  0A30  0020               	movlb	0	; select bank0
 12156  0A31  00A0               	movwf	DATAEE_WriteByte@bAdd
 12157  0A32  3000               	movlw	0
 12158  0A33  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12159  0A34  30AA               	movlw	170
 12160  0A35  00A4               	movwf	??_save_vars
 12161  0A36  0824               	movf	??_save_vars,w
 12162  0A37  00A2               	movwf	DATAEE_WriteByte@bData
 12163  0A38  3187  27D7  318A   	fcall	_DATAEE_WriteByte
 12164  0A3B                     l3966:
 12165                           
 12166                           ;main.c: 401: DATAEE_WriteByte(151,PMON);
 12167  0A3B  3097               	movlw	151
 12168  0A3C  0020               	movlb	0	; select bank0
 12169  0A3D  00A0               	movwf	DATAEE_WriteByte@bAdd
 12170  0A3E  3000               	movlw	0
 12171  0A3F  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12172  0A40  087D               	movf	_PMON,w
 12173  0A41  00A4               	movwf	??_save_vars
 12174  0A42  0824               	movf	??_save_vars,w
 12175  0A43  00A2               	movwf	DATAEE_WriteByte@bData
 12176  0A44  3187  27D7  318A   	fcall	_DATAEE_WriteByte
 12177  0A47                     l3968:
 12178                           
 12179                           ;main.c: 402: DATAEE_WriteByte(152,TALA);
 12180  0A47  3098               	movlw	152
 12181  0A48  0020               	movlb	0	; select bank0
 12182  0A49  00A0               	movwf	DATAEE_WriteByte@bAdd
 12183  0A4A  3000               	movlw	0
 12184  0A4B  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12185  0A4C  0021               	movlb	1	; select bank1
 12186  0A4D  0839               	movf	_TALA^(0+128),w
 12187  0A4E  0020               	movlb	0	; select bank0
 12188  0A4F  00A4               	movwf	??_save_vars
 12189  0A50  0824               	movf	??_save_vars,w
 12190  0A51  00A2               	movwf	DATAEE_WriteByte@bData
 12191  0A52  3187  27D7  318A   	fcall	_DATAEE_WriteByte
 12192  0A55                     l3970:
 12193                           
 12194                           ;main.c: 403: DATAEE_WriteByte(153,ALAH);
 12195  0A55  3099               	movlw	153
 12196  0A56  0020               	movlb	0	; select bank0
 12197  0A57  00A0               	movwf	DATAEE_WriteByte@bAdd
 12198  0A58  3000               	movlw	0
 12199  0A59  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12200  0A5A  0021               	movlb	1	; select bank1
 12201  0A5B  0838               	movf	_ALAH^(0+128),w
 12202  0A5C  0020               	movlb	0	; select bank0
 12203  0A5D  00A4               	movwf	??_save_vars
 12204  0A5E  0824               	movf	??_save_vars,w
 12205  0A5F  00A2               	movwf	DATAEE_WriteByte@bData
 12206  0A60  3187  27D7  318A   	fcall	_DATAEE_WriteByte
 12207  0A63                     l3972:
 12208                           
 12209                           ;main.c: 404: DATAEE_WriteByte(154,ALAM);
 12210  0A63  309A               	movlw	154
 12211  0A64  0020               	movlb	0	; select bank0
 12212  0A65  00A0               	movwf	DATAEE_WriteByte@bAdd
 12213  0A66  3000               	movlw	0
 12214  0A67  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12215  0A68  0021               	movlb	1	; select bank1
 12216  0A69  0835               	movf	_ALAM^(0+128),w
 12217  0A6A  0020               	movlb	0	; select bank0
 12218  0A6B  00A4               	movwf	??_save_vars
 12219  0A6C  0824               	movf	??_save_vars,w
 12220  0A6D  00A2               	movwf	DATAEE_WriteByte@bData
 12221  0A6E  3187  27D7  318A   	fcall	_DATAEE_WriteByte
 12222  0A71                     l3974:
 12223                           
 12224                           ;main.c: 405: DATAEE_WriteByte(155,ALAS);
 12225  0A71  309B               	movlw	155
 12226  0A72  0020               	movlb	0	; select bank0
 12227  0A73  00A0               	movwf	DATAEE_WriteByte@bAdd
 12228  0A74  3000               	movlw	0
 12229  0A75  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12230  0A76  0021               	movlb	1	; select bank1
 12231  0A77  0834               	movf	_ALAS^(0+128),w
 12232  0A78  0020               	movlb	0	; select bank0
 12233  0A79  00A4               	movwf	??_save_vars
 12234  0A7A  0824               	movf	??_save_vars,w
 12235  0A7B  00A2               	movwf	DATAEE_WriteByte@bData
 12236  0A7C  3187  27D7  318A   	fcall	_DATAEE_WriteByte
 12237  0A7F                     l3976:
 12238                           
 12239                           ;main.c: 406: DATAEE_WriteByte(156,ALAT);
 12240  0A7F  309C               	movlw	156
 12241  0A80  0020               	movlb	0	; select bank0
 12242  0A81  00A0               	movwf	DATAEE_WriteByte@bAdd
 12243  0A82  3000               	movlw	0
 12244  0A83  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12245  0A84  0021               	movlb	1	; select bank1
 12246  0A85  0837               	movf	_ALAT^(0+128),w
 12247  0A86  0020               	movlb	0	; select bank0
 12248  0A87  00A4               	movwf	??_save_vars
 12249  0A88  0824               	movf	??_save_vars,w
 12250  0A89  00A2               	movwf	DATAEE_WriteByte@bData
 12251  0A8A  3187  27D7  318A   	fcall	_DATAEE_WriteByte
 12252  0A8D                     l3978:
 12253                           
 12254                           ;main.c: 407: DATAEE_WriteByte(157,ALAL);
 12255  0A8D  309D               	movlw	157
 12256  0A8E  0020               	movlb	0	; select bank0
 12257  0A8F  00A0               	movwf	DATAEE_WriteByte@bAdd
 12258  0A90  3000               	movlw	0
 12259  0A91  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12260  0A92  0021               	movlb	1	; select bank1
 12261  0A93  0836               	movf	_ALAL^(0+128),w
 12262  0A94  0020               	movlb	0	; select bank0
 12263  0A95  00A4               	movwf	??_save_vars
 12264  0A96  0824               	movf	??_save_vars,w
 12265  0A97  00A2               	movwf	DATAEE_WriteByte@bData
 12266  0A98  3187  27D7  318A   	fcall	_DATAEE_WriteByte
 12267  0A9B                     l3980:
 12268                           
 12269                           ;main.c: 408: DATAEE_WriteByte(158,ALAF);
 12270  0A9B  309E               	movlw	158
 12271  0A9C  0020               	movlb	0	; select bank0
 12272  0A9D  00A0               	movwf	DATAEE_WriteByte@bAdd
 12273  0A9E  3000               	movlw	0
 12274  0A9F  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12275  0AA0  0021               	movlb	1	; select bank1
 12276  0AA1  0833               	movf	_ALAF^(0+128),w
 12277  0AA2  0020               	movlb	0	; select bank0
 12278  0AA3  00A4               	movwf	??_save_vars
 12279  0AA4  0824               	movf	??_save_vars,w
 12280  0AA5  00A2               	movwf	DATAEE_WriteByte@bData
 12281  0AA6  3187  27D7  318A   	fcall	_DATAEE_WriteByte
 12282  0AA9                     l3982:
 12283                           
 12284                           ;main.c: 409: DATAEE_WriteByte(159,CLKH);
 12285  0AA9  309F               	movlw	159
 12286  0AAA  0020               	movlb	0	; select bank0
 12287  0AAB  00A0               	movwf	DATAEE_WriteByte@bAdd
 12288  0AAC  3000               	movlw	0
 12289  0AAD  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12290  0AAE  086F               	movf	_CLKH,w
 12291  0AAF  00A4               	movwf	??_save_vars
 12292  0AB0  0824               	movf	??_save_vars,w
 12293  0AB1  00A2               	movwf	DATAEE_WriteByte@bData
 12294  0AB2  3187  27D7  318A   	fcall	_DATAEE_WriteByte
 12295  0AB5                     l3984:
 12296                           
 12297                           ;main.c: 410: DATAEE_WriteByte(160,CLKM);
 12298  0AB5  30A0               	movlw	160
 12299  0AB6  0020               	movlb	0	; select bank0
 12300  0AB7  00A0               	movwf	DATAEE_WriteByte@bAdd
 12301  0AB8  3000               	movlw	0
 12302  0AB9  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12303  0ABA  086E               	movf	_CLKM,w
 12304  0ABB  00A4               	movwf	??_save_vars
 12305  0ABC  0824               	movf	??_save_vars,w
 12306  0ABD  00A2               	movwf	DATAEE_WriteByte@bData
 12307  0ABE  3187  27D7  318A   	fcall	_DATAEE_WriteByte
 12308  0AC1                     l3986:
 12309                           
 12310                           ;main.c: 411: DATAEE_WriteByte(161,CSUM);
 12311  0AC1  30A1               	movlw	161
 12312  0AC2  0020               	movlb	0	; select bank0
 12313  0AC3  00A0               	movwf	DATAEE_WriteByte@bAdd
 12314  0AC4  3000               	movlw	0
 12315  0AC5  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12316  0AC6  0021               	movlb	1	; select bank1
 12317  0AC7  0832               	movf	_CSUM^(0+128),w
 12318  0AC8  0020               	movlb	0	; select bank0
 12319  0AC9  00A4               	movwf	??_save_vars
 12320  0ACA  0824               	movf	??_save_vars,w
 12321  0ACB  00A2               	movwf	DATAEE_WriteByte@bData
 12322  0ACC  3187  27D7  318A   	fcall	_DATAEE_WriteByte
 12323  0ACF                     l615:
 12324  0ACF  0008               	return
 12325  0AD0                     __end_of_save_vars:
 12326                           
 12327                           	psect	text22
 12328  07D7                     __ptext22:	
 12329 ;; *************** function _DATAEE_WriteByte *****************
 12330 ;; Defined at:
 12331 ;;		line 180 in file "mcc_generated_files/memory.c"
 12332 ;; Parameters:    Size  Location     Type
 12333 ;;  bAdd            2    0[BANK0 ] unsigned int 
 12334 ;;  bData           1    2[BANK0 ] unsigned char 
 12335 ;; Auto vars:     Size  Location     Type
 12336 ;;  GIEBitValue     1    3[BANK0 ] unsigned char 
 12337 ;; Return value:  Size  Location     Type
 12338 ;;                  1    wreg      void 
 12339 ;; Registers used:
 12340 ;;		wreg, status,2, status,0
 12341 ;; Tracked objects:
 12342 ;;		On entry : 0/0
 12343 ;;		On exit  : 0/0
 12344 ;;		Unchanged: 0/0
 12345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12346 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12347 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12349 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12350 ;;Total ram usage:        4 bytes
 12351 ;; Hardware stack levels used:    1
 12352 ;; Hardware stack levels required when called:    5
 12353 ;; This function calls:
 12354 ;;		Nothing
 12355 ;; This function is called by:
 12356 ;;		_save_vars
 12357 ;;		_save_register
 12358 ;; This function uses a non-reentrant model
 12359 ;;
 12360                           
 12361                           
 12362                           ;psect for function _DATAEE_WriteByte
 12363  07D7                     _DATAEE_WriteByte:
 12364  07D7                     l3750:	
 12365                           ;incstack = 0
 12366                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 12367                           
 12368                           
 12369                           ;memory.c: 182: uint8_t GIEBitValue = INTCONbits.GIE;
 12370  07D7  3000               	movlw	0
 12371  07D8  1B8B               	btfsc	11,7	;volatile
 12372  07D9  3001               	movlw	1
 12373  07DA  0020               	movlb	0	; select bank0
 12374  07DB  00A3               	movwf	DATAEE_WriteByte@GIEBitValue
 12375                           
 12376                           ;memory.c: 184: NVMADRH = ((bAdd >> 8) & 0xFF);
 12377  07DC  0821               	movf	DATAEE_WriteByte@bAdd+1,w
 12378  07DD  0030               	movlb	16	; select bank16
 12379  07DE  009B               	movwf	27	;volatile
 12380  07DF                     l3752:
 12381                           
 12382                           ;memory.c: 185: NVMADRL = (bAdd & 0xFF);
 12383  07DF  0020               	movlb	0	; select bank0
 12384  07E0  0820               	movf	DATAEE_WriteByte@bAdd,w
 12385  07E1  0030               	movlb	16	; select bank16
 12386  07E2  009A               	movwf	26	;volatile
 12387  07E3                     l3754:
 12388                           
 12389                           ;memory.c: 186: NVMDATL = bData;
 12390  07E3  0020               	movlb	0	; select bank0
 12391  07E4  0822               	movf	DATAEE_WriteByte@bData,w
 12392  07E5  0030               	movlb	16	; select bank16
 12393  07E6  009C               	movwf	28	;volatile
 12394  07E7                     l3756:
 12395                           
 12396                           ;memory.c: 187: NVMCON1bits.NVMREGS = 1;
 12397  07E7  171E               	bsf	30,6	;volsfr
 12398  07E8                     l3758:
 12399                           
 12400                           ;memory.c: 188: NVMCON1bits.WREN = 1;
 12401  07E8  151E               	bsf	30,2	;volsfr
 12402  07E9                     l3760:
 12403                           
 12404                           ;memory.c: 189: INTCONbits.GIE = 0;
 12405  07E9  138B               	bcf	11,7	;volatile
 12406  07EA                     l3762:
 12407                           
 12408                           ;memory.c: 190: NVMCON2 = 0x55;
 12409  07EA  3055               	movlw	85
 12410  07EB  009F               	movwf	31	;volsfr
 12411  07EC                     l3764:
 12412                           
 12413                           ;memory.c: 191: NVMCON2 = 0xAA;
 12414  07EC  30AA               	movlw	170
 12415  07ED  009F               	movwf	31	;volsfr
 12416  07EE                     l3766:
 12417                           
 12418                           ;memory.c: 192: NVMCON1bits.WR = 1;
 12419  07EE  149E               	bsf	30,1	;volsfr
 12420  07EF                     l435:	
 12421                           ;memory.c: 195: {
 12422                           
 12423  07EF  189E               	btfsc	30,1	;volsfr
 12424  07F0  2FF2               	goto	u2651
 12425  07F1  2FF3               	goto	u2650
 12426  07F2                     u2651:
 12427  07F2  2FEF               	goto	l435
 12428  07F3                     u2650:
 12429  07F3                     l437:
 12430                           
 12431                           ;memory.c: 196: };memory.c: 198: NVMCON1bits.WREN = 0;
 12432  07F3  111E               	bcf	30,2	;volsfr
 12433  07F4                     l3768:
 12434                           
 12435                           ;memory.c: 199: INTCONbits.GIE = GIEBitValue;
 12436  07F4  0020               	movlb	0	; select bank0
 12437  07F5  0C23               	rrf	DATAEE_WriteByte@GIEBitValue,w
 12438  07F6  1C03               	skipc
 12439  07F7  138B               	bcf	11,7	;volatile
 12440  07F8  1803               	skipnc
 12441  07F9  178B               	bsf	11,7	;volatile
 12442  07FA                     l438:
 12443  07FA  0008               	return
 12444  07FB                     __end_of_DATAEE_WriteByte:
 12445                           
 12446                           	psect	text23
 12447  15CB                     __ptext23:	
 12448 ;; *************** function _conf_alarm_ss *****************
 12449 ;; Defined at:
 12450 ;;		line 572 in file "main.c"
 12451 ;; Parameters:    Size  Location     Type
 12452 ;;		None
 12453 ;; Auto vars:     Size  Location     Type
 12454 ;;		None
 12455 ;; Return value:  Size  Location     Type
 12456 ;;                  1    wreg      void 
 12457 ;; Registers used:
 12458 ;;		wreg, status,2, status,0
 12459 ;; Tracked objects:
 12460 ;;		On entry : 0/0
 12461 ;;		On exit  : 0/0
 12462 ;;		Unchanged: 0/0
 12463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12466 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12467 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12468 ;;Total ram usage:        1 bytes
 12469 ;; Hardware stack levels used:    1
 12470 ;; Hardware stack levels required when called:    5
 12471 ;; This function calls:
 12472 ;;		Nothing
 12473 ;; This function is called by:
 12474 ;;		_main
 12475 ;; This function uses a non-reentrant model
 12476 ;;
 12477                           
 12478                           
 12479                           ;psect for function _conf_alarm_ss
 12480  15CB                     _conf_alarm_ss:
 12481  15CB                     l4350:	
 12482                           ;incstack = 0
 12483                           ; Regs used in _conf_alarm_ss: [wreg+status,2+status,0]
 12484                           
 12485                           
 12486                           ;main.c: 573: if (ALAS == 59){
 12487  15CB  303B               	movlw	59
 12488  15CC  0021               	movlb	1	; select bank1
 12489  15CD  0634               	xorwf	_ALAS^(0+128),w
 12490  15CE  1D03               	btfss	3,2
 12491  15CF  2DD1               	goto	u3581
 12492  15D0  2DD2               	goto	u3580
 12493  15D1                     u3581:
 12494  15D1  2DD4               	goto	l4354
 12495  15D2                     u3580:
 12496  15D2                     l4352:
 12497                           
 12498                           ;main.c: 574: ALAS = 0;
 12499  15D2  01B4               	clrf	_ALAS^(0+128)
 12500                           
 12501                           ;main.c: 575: }else{
 12502  15D3  2DDA               	goto	l744
 12503  15D4                     l4354:
 12504                           
 12505                           ;main.c: 576: ALAS++;
 12506  15D4  3001               	movlw	1
 12507  15D5  0020               	movlb	0	; select bank0
 12508  15D6  00A0               	movwf	??_conf_alarm_ss
 12509  15D7  0820               	movf	??_conf_alarm_ss,w
 12510  15D8  0021               	movlb	1	; select bank1
 12511  15D9  07B4               	addwf	_ALAS^(0+128),f
 12512  15DA                     l744:
 12513  15DA  0008               	return
 12514  15DB                     __end_of_conf_alarm_ss:
 12515                           
 12516                           	psect	text24
 12517  15BB                     __ptext24:	
 12518 ;; *************** function _conf_alarm_mm *****************
 12519 ;; Defined at:
 12520 ;;		line 562 in file "main.c"
 12521 ;; Parameters:    Size  Location     Type
 12522 ;;		None
 12523 ;; Auto vars:     Size  Location     Type
 12524 ;;		None
 12525 ;; Return value:  Size  Location     Type
 12526 ;;                  1    wreg      void 
 12527 ;; Registers used:
 12528 ;;		wreg, status,2, status,0
 12529 ;; Tracked objects:
 12530 ;;		On entry : 0/0
 12531 ;;		On exit  : 0/0
 12532 ;;		Unchanged: 0/0
 12533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12536 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12537 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12538 ;;Total ram usage:        1 bytes
 12539 ;; Hardware stack levels used:    1
 12540 ;; Hardware stack levels required when called:    5
 12541 ;; This function calls:
 12542 ;;		Nothing
 12543 ;; This function is called by:
 12544 ;;		_main
 12545 ;; This function uses a non-reentrant model
 12546 ;;
 12547                           
 12548                           
 12549                           ;psect for function _conf_alarm_mm
 12550  15BB                     _conf_alarm_mm:
 12551  15BB                     l4342:	
 12552                           ;incstack = 0
 12553                           ; Regs used in _conf_alarm_mm: [wreg+status,2+status,0]
 12554                           
 12555                           
 12556                           ;main.c: 563: if (ALAM == 59){
 12557  15BB  303B               	movlw	59
 12558  15BC  0021               	movlb	1	; select bank1
 12559  15BD  0635               	xorwf	_ALAM^(0+128),w
 12560  15BE  1D03               	btfss	3,2
 12561  15BF  2DC1               	goto	u3571
 12562  15C0  2DC2               	goto	u3570
 12563  15C1                     u3571:
 12564  15C1  2DC4               	goto	l4346
 12565  15C2                     u3570:
 12566  15C2                     l4344:
 12567                           
 12568                           ;main.c: 564: ALAM = 0;
 12569  15C2  01B5               	clrf	_ALAM^(0+128)
 12570                           
 12571                           ;main.c: 565: }else{
 12572  15C3  2DCA               	goto	l739
 12573  15C4                     l4346:
 12574                           
 12575                           ;main.c: 566: ALAM++;
 12576  15C4  3001               	movlw	1
 12577  15C5  0020               	movlb	0	; select bank0
 12578  15C6  00A0               	movwf	??_conf_alarm_mm
 12579  15C7  0820               	movf	??_conf_alarm_mm,w
 12580  15C8  0021               	movlb	1	; select bank1
 12581  15C9  07B5               	addwf	_ALAM^(0+128),f
 12582  15CA                     l739:
 12583  15CA  0008               	return
 12584  15CB                     __end_of_conf_alarm_mm:
 12585                           
 12586                           	psect	text25
 12587  15AB                     __ptext25:	
 12588 ;; *************** function _conf_alarm_hh *****************
 12589 ;; Defined at:
 12590 ;;		line 552 in file "main.c"
 12591 ;; Parameters:    Size  Location     Type
 12592 ;;		None
 12593 ;; Auto vars:     Size  Location     Type
 12594 ;;		None
 12595 ;; Return value:  Size  Location     Type
 12596 ;;                  1    wreg      void 
 12597 ;; Registers used:
 12598 ;;		wreg, status,2, status,0
 12599 ;; Tracked objects:
 12600 ;;		On entry : 0/0
 12601 ;;		On exit  : 0/0
 12602 ;;		Unchanged: 0/0
 12603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12606 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12607 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12608 ;;Total ram usage:        1 bytes
 12609 ;; Hardware stack levels used:    1
 12610 ;; Hardware stack levels required when called:    5
 12611 ;; This function calls:
 12612 ;;		Nothing
 12613 ;; This function is called by:
 12614 ;;		_main
 12615 ;; This function uses a non-reentrant model
 12616 ;;
 12617                           
 12618                           
 12619                           ;psect for function _conf_alarm_hh
 12620  15AB                     _conf_alarm_hh:
 12621  15AB                     l4334:	
 12622                           ;incstack = 0
 12623                           ; Regs used in _conf_alarm_hh: [wreg+status,2+status,0]
 12624                           
 12625                           
 12626                           ;main.c: 553: if (ALAH == 23){
 12627  15AB  3017               	movlw	23
 12628  15AC  0021               	movlb	1	; select bank1
 12629  15AD  0638               	xorwf	_ALAH^(0+128),w
 12630  15AE  1D03               	btfss	3,2
 12631  15AF  2DB1               	goto	u3561
 12632  15B0  2DB2               	goto	u3560
 12633  15B1                     u3561:
 12634  15B1  2DB4               	goto	l4338
 12635  15B2                     u3560:
 12636  15B2                     l4336:
 12637                           
 12638                           ;main.c: 554: ALAH = 0;
 12639  15B2  01B8               	clrf	_ALAH^(0+128)
 12640                           
 12641                           ;main.c: 555: }else{
 12642  15B3  2DBA               	goto	l734
 12643  15B4                     l4338:
 12644                           
 12645                           ;main.c: 556: ALAH++;
 12646  15B4  3001               	movlw	1
 12647  15B5  0020               	movlb	0	; select bank0
 12648  15B6  00A0               	movwf	??_conf_alarm_hh
 12649  15B7  0820               	movf	??_conf_alarm_hh,w
 12650  15B8  0021               	movlb	1	; select bank1
 12651  15B9  07B8               	addwf	_ALAH^(0+128),f
 12652  15BA                     l734:
 12653  15BA  0008               	return
 12654  15BB                     __end_of_conf_alarm_hh:
 12655                           
 12656                           	psect	text26
 12657  155C                     __ptext26:	
 12658 ;; *************** function _conf_alarm_flag *****************
 12659 ;; Defined at:
 12660 ;;		line 604 in file "main.c"
 12661 ;; Parameters:    Size  Location     Type
 12662 ;;		None
 12663 ;; Auto vars:     Size  Location     Type
 12664 ;;		None
 12665 ;; Return value:  Size  Location     Type
 12666 ;;                  1    wreg      void 
 12667 ;; Registers used:
 12668 ;;		wreg, status,2, status,0
 12669 ;; Tracked objects:
 12670 ;;		On entry : 0/0
 12671 ;;		On exit  : 0/0
 12672 ;;		Unchanged: 0/0
 12673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12678 ;;Total ram usage:        0 bytes
 12679 ;; Hardware stack levels used:    1
 12680 ;; Hardware stack levels required when called:    5
 12681 ;; This function calls:
 12682 ;;		Nothing
 12683 ;; This function is called by:
 12684 ;;		_main
 12685 ;; This function uses a non-reentrant model
 12686 ;;
 12687                           
 12688                           
 12689                           ;psect for function _conf_alarm_flag
 12690  155C                     _conf_alarm_flag:
 12691  155C                     l4374:	
 12692                           ;incstack = 0
 12693                           ; Regs used in _conf_alarm_flag: [wreg+status,2+status,0]
 12694                           
 12695                           
 12696                           ;main.c: 606: if(ALAF == 0){
 12697  155C  0021               	movlb	1	; select bank1
 12698  155D  0833               	movf	_ALAF^(0+128),w
 12699  155E  1D03               	btfss	3,2
 12700  155F  2D61               	goto	u3611
 12701  1560  2D62               	goto	u3610
 12702  1561                     u3611:
 12703  1561  2D65               	goto	l4378
 12704  1562                     u3610:
 12705  1562                     l4376:
 12706                           
 12707                           ;main.c: 607: ALAF = 1;
 12708  1562  01B3               	clrf	_ALAF^(0+128)
 12709  1563  0AB3               	incf	_ALAF^(0+128),f
 12710                           
 12711                           ;main.c: 608: }else{
 12712  1564  2D66               	goto	l759
 12713  1565                     l4378:
 12714                           
 12715                           ;main.c: 609: ALAF = 0;
 12716  1565  01B3               	clrf	_ALAF^(0+128)
 12717  1566                     l759:
 12718  1566  0008               	return
 12719  1567                     __end_of_conf_alarm_flag:
 12720                           
 12721                           	psect	text27
 12722  0BA4                     __ptext27:	
 12723 ;; *************** function _check_vars *****************
 12724 ;; Defined at:
 12725 ;;		line 415 in file "main.c"
 12726 ;; Parameters:    Size  Location     Type
 12727 ;;		None
 12728 ;; Auto vars:     Size  Location     Type
 12729 ;;  pass            1    3[BANK0 ] unsigned char 
 12730 ;; Return value:  Size  Location     Type
 12731 ;;                  1    wreg      void 
 12732 ;; Registers used:
 12733 ;;		wreg, status,2, status,0, pclath, cstack
 12734 ;; Tracked objects:
 12735 ;;		On entry : 0/0
 12736 ;;		On exit  : 0/0
 12737 ;;		Unchanged: 0/0
 12738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12740 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12741 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12742 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12743 ;;Total ram usage:        2 bytes
 12744 ;; Hardware stack levels used:    1
 12745 ;; Hardware stack levels required when called:    6
 12746 ;; This function calls:
 12747 ;;		_DATAEE_ReadByte
 12748 ;; This function is called by:
 12749 ;;		_main
 12750 ;; This function uses a non-reentrant model
 12751 ;;
 12752                           
 12753                           
 12754                           ;psect for function _check_vars
 12755  0BA4                     _check_vars:
 12756  0BA4                     l4194:	
 12757                           ;incstack = 0
 12758                           ; Regs used in _check_vars: [wreg+status,2+status,0+pclath+cstack]
 12759                           
 12760                           
 12761                           ;main.c: 416: uint8_t pass = DATAEE_ReadByte(150);
 12762  0BA4  3096               	movlw	150
 12763  0BA5  0020               	movlb	0	; select bank0
 12764  0BA6  00A0               	movwf	DATAEE_ReadByte@bAdd
 12765  0BA7  3000               	movlw	0
 12766  0BA8  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12767  0BA9  3195  258C  318B   	fcall	_DATAEE_ReadByte
 12768  0BAC  0020               	movlb	0	; select bank0
 12769  0BAD  00A2               	movwf	??_check_vars
 12770  0BAE  0822               	movf	??_check_vars,w
 12771  0BAF  00A3               	movwf	check_vars@pass
 12772  0BB0                     l4196:
 12773                           
 12774                           ;main.c: 418: if (pass == 0xaa){
 12775  0BB0  30AA               	movlw	170
 12776  0BB1  0623               	xorwf	check_vars@pass,w
 12777  0BB2  1D03               	btfss	3,2
 12778  0BB3  2BB5               	goto	u3191
 12779  0BB4  2BB6               	goto	u3190
 12780  0BB5                     u3191:
 12781  0BB5  2CC6               	goto	l620
 12782  0BB6                     u3190:
 12783  0BB6                     l4198:
 12784                           
 12785                           ;main.c: 419: CSUM = DATAEE_ReadByte(161);
 12786  0BB6  30A1               	movlw	161
 12787  0BB7  00A0               	movwf	DATAEE_ReadByte@bAdd
 12788  0BB8  3000               	movlw	0
 12789  0BB9  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12790  0BBA  3195  258C  318B   	fcall	_DATAEE_ReadByte
 12791  0BBD  0020               	movlb	0	; select bank0
 12792  0BBE  00A2               	movwf	??_check_vars
 12793  0BBF  0822               	movf	??_check_vars,w
 12794  0BC0  0021               	movlb	1	; select bank1
 12795  0BC1  00B2               	movwf	_CSUM^(0+128)
 12796  0BC2                     l4200:
 12797                           
 12798                           ;main.c: 420: CSUM -= DATAEE_ReadByte(160);
 12799  0BC2  30A0               	movlw	160
 12800  0BC3  0020               	movlb	0	; select bank0
 12801  0BC4  00A0               	movwf	DATAEE_ReadByte@bAdd
 12802  0BC5  3000               	movlw	0
 12803  0BC6  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12804  0BC7  3195  258C  318B   	fcall	_DATAEE_ReadByte
 12805  0BCA  0020               	movlb	0	; select bank0
 12806  0BCB  00A2               	movwf	??_check_vars
 12807  0BCC  0822               	movf	??_check_vars,w
 12808  0BCD  0021               	movlb	1	; select bank1
 12809  0BCE  02B2               	subwf	_CSUM^(0+128),f
 12810  0BCF                     l4202:
 12811                           
 12812                           ;main.c: 421: CSUM -= DATAEE_ReadByte(159);
 12813  0BCF  309F               	movlw	159
 12814  0BD0  0020               	movlb	0	; select bank0
 12815  0BD1  00A0               	movwf	DATAEE_ReadByte@bAdd
 12816  0BD2  3000               	movlw	0
 12817  0BD3  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12818  0BD4  3195  258C  318B   	fcall	_DATAEE_ReadByte
 12819  0BD7  0020               	movlb	0	; select bank0
 12820  0BD8  00A2               	movwf	??_check_vars
 12821  0BD9  0822               	movf	??_check_vars,w
 12822  0BDA  0021               	movlb	1	; select bank1
 12823  0BDB  02B2               	subwf	_CSUM^(0+128),f
 12824  0BDC                     l4204:
 12825                           
 12826                           ;main.c: 422: CSUM -= DATAEE_ReadByte(158);
 12827  0BDC  309E               	movlw	158
 12828  0BDD  0020               	movlb	0	; select bank0
 12829  0BDE  00A0               	movwf	DATAEE_ReadByte@bAdd
 12830  0BDF  3000               	movlw	0
 12831  0BE0  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12832  0BE1  3195  258C  318B   	fcall	_DATAEE_ReadByte
 12833  0BE4  0020               	movlb	0	; select bank0
 12834  0BE5  00A2               	movwf	??_check_vars
 12835  0BE6  0822               	movf	??_check_vars,w
 12836  0BE7  0021               	movlb	1	; select bank1
 12837  0BE8  02B2               	subwf	_CSUM^(0+128),f
 12838  0BE9                     l4206:
 12839                           
 12840                           ;main.c: 423: CSUM -= DATAEE_ReadByte(157);
 12841  0BE9  309D               	movlw	157
 12842  0BEA  0020               	movlb	0	; select bank0
 12843  0BEB  00A0               	movwf	DATAEE_ReadByte@bAdd
 12844  0BEC  3000               	movlw	0
 12845  0BED  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12846  0BEE  3195  258C  318B   	fcall	_DATAEE_ReadByte
 12847  0BF1  0020               	movlb	0	; select bank0
 12848  0BF2  00A2               	movwf	??_check_vars
 12849  0BF3  0822               	movf	??_check_vars,w
 12850  0BF4  0021               	movlb	1	; select bank1
 12851  0BF5  02B2               	subwf	_CSUM^(0+128),f
 12852  0BF6                     l4208:
 12853                           
 12854                           ;main.c: 424: CSUM -= DATAEE_ReadByte(156);
 12855  0BF6  309C               	movlw	156
 12856  0BF7  0020               	movlb	0	; select bank0
 12857  0BF8  00A0               	movwf	DATAEE_ReadByte@bAdd
 12858  0BF9  3000               	movlw	0
 12859  0BFA  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12860  0BFB  3195  258C  318B   	fcall	_DATAEE_ReadByte
 12861  0BFE  0020               	movlb	0	; select bank0
 12862  0BFF  00A2               	movwf	??_check_vars
 12863  0C00  0822               	movf	??_check_vars,w
 12864  0C01  0021               	movlb	1	; select bank1
 12865  0C02  02B2               	subwf	_CSUM^(0+128),f
 12866  0C03                     l4210:
 12867                           
 12868                           ;main.c: 425: CSUM -= DATAEE_ReadByte(155);
 12869  0C03  309B               	movlw	155
 12870  0C04  0020               	movlb	0	; select bank0
 12871  0C05  00A0               	movwf	DATAEE_ReadByte@bAdd
 12872  0C06  3000               	movlw	0
 12873  0C07  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12874  0C08  3195  258C  318B   	fcall	_DATAEE_ReadByte
 12875  0C0B  0020               	movlb	0	; select bank0
 12876  0C0C  00A2               	movwf	??_check_vars
 12877  0C0D  0822               	movf	??_check_vars,w
 12878  0C0E  0021               	movlb	1	; select bank1
 12879  0C0F  02B2               	subwf	_CSUM^(0+128),f
 12880  0C10                     l4212:
 12881                           
 12882                           ;main.c: 426: CSUM -= DATAEE_ReadByte(154);
 12883  0C10  309A               	movlw	154
 12884  0C11  0020               	movlb	0	; select bank0
 12885  0C12  00A0               	movwf	DATAEE_ReadByte@bAdd
 12886  0C13  3000               	movlw	0
 12887  0C14  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12888  0C15  3195  258C  318B   	fcall	_DATAEE_ReadByte
 12889  0C18  0020               	movlb	0	; select bank0
 12890  0C19  00A2               	movwf	??_check_vars
 12891  0C1A  0822               	movf	??_check_vars,w
 12892  0C1B  0021               	movlb	1	; select bank1
 12893  0C1C  02B2               	subwf	_CSUM^(0+128),f
 12894  0C1D                     l4214:
 12895                           
 12896                           ;main.c: 427: CSUM -= DATAEE_ReadByte(153);
 12897  0C1D  3099               	movlw	153
 12898  0C1E  0020               	movlb	0	; select bank0
 12899  0C1F  00A0               	movwf	DATAEE_ReadByte@bAdd
 12900  0C20  3000               	movlw	0
 12901  0C21  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12902  0C22  3195  258C  318B   	fcall	_DATAEE_ReadByte
 12903  0C25  0020               	movlb	0	; select bank0
 12904  0C26  00A2               	movwf	??_check_vars
 12905  0C27  0822               	movf	??_check_vars,w
 12906  0C28  0021               	movlb	1	; select bank1
 12907  0C29  02B2               	subwf	_CSUM^(0+128),f
 12908  0C2A                     l4216:
 12909                           
 12910                           ;main.c: 428: CSUM -= DATAEE_ReadByte(152);
 12911  0C2A  3098               	movlw	152
 12912  0C2B  0020               	movlb	0	; select bank0
 12913  0C2C  00A0               	movwf	DATAEE_ReadByte@bAdd
 12914  0C2D  3000               	movlw	0
 12915  0C2E  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12916  0C2F  3195  258C  318B   	fcall	_DATAEE_ReadByte
 12917  0C32  0020               	movlb	0	; select bank0
 12918  0C33  00A2               	movwf	??_check_vars
 12919  0C34  0822               	movf	??_check_vars,w
 12920  0C35  0021               	movlb	1	; select bank1
 12921  0C36  02B2               	subwf	_CSUM^(0+128),f
 12922  0C37                     l4218:
 12923                           
 12924                           ;main.c: 429: CSUM -= DATAEE_ReadByte(151);
 12925  0C37  3097               	movlw	151
 12926  0C38  0020               	movlb	0	; select bank0
 12927  0C39  00A0               	movwf	DATAEE_ReadByte@bAdd
 12928  0C3A  3000               	movlw	0
 12929  0C3B  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12930  0C3C  3195  258C  318B   	fcall	_DATAEE_ReadByte
 12931  0C3F  0020               	movlb	0	; select bank0
 12932  0C40  00A2               	movwf	??_check_vars
 12933  0C41  0822               	movf	??_check_vars,w
 12934  0C42  0021               	movlb	1	; select bank1
 12935  0C43  02B2               	subwf	_CSUM^(0+128),f
 12936  0C44                     l4220:
 12937                           
 12938                           ;main.c: 431: if (CSUM == 0){
 12939  0C44  0832               	movf	_CSUM^(0+128),w
 12940  0C45  1D03               	btfss	3,2
 12941  0C46  2C48               	goto	u3201
 12942  0C47  2C49               	goto	u3200
 12943  0C48                     u3201:
 12944  0C48  2CC6               	goto	l620
 12945  0C49                     u3200:
 12946  0C49                     l4222:
 12947                           
 12948                           ;main.c: 432: PMON = DATAEE_ReadByte(151);
 12949  0C49  3097               	movlw	151
 12950  0C4A  0020               	movlb	0	; select bank0
 12951  0C4B  00A0               	movwf	DATAEE_ReadByte@bAdd
 12952  0C4C  3000               	movlw	0
 12953  0C4D  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12954  0C4E  3195  258C  318B   	fcall	_DATAEE_ReadByte
 12955  0C51  0020               	movlb	0	; select bank0
 12956  0C52  00A2               	movwf	??_check_vars
 12957  0C53  0822               	movf	??_check_vars,w
 12958  0C54  00FD               	movwf	_PMON
 12959                           
 12960                           ;main.c: 433: TALA = DATAEE_ReadByte(152);
 12961  0C55  3098               	movlw	152
 12962  0C56  00A0               	movwf	DATAEE_ReadByte@bAdd
 12963  0C57  3000               	movlw	0
 12964  0C58  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12965  0C59  3195  258C  318B   	fcall	_DATAEE_ReadByte
 12966  0C5C  0020               	movlb	0	; select bank0
 12967  0C5D  00A2               	movwf	??_check_vars
 12968  0C5E  0822               	movf	??_check_vars,w
 12969  0C5F  0021               	movlb	1	; select bank1
 12970  0C60  00B9               	movwf	_TALA^(0+128)
 12971                           
 12972                           ;main.c: 434: ALAH = DATAEE_ReadByte(153);
 12973  0C61  3099               	movlw	153
 12974  0C62  0020               	movlb	0	; select bank0
 12975  0C63  00A0               	movwf	DATAEE_ReadByte@bAdd
 12976  0C64  3000               	movlw	0
 12977  0C65  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12978  0C66  3195  258C  318B   	fcall	_DATAEE_ReadByte
 12979  0C69  0020               	movlb	0	; select bank0
 12980  0C6A  00A2               	movwf	??_check_vars
 12981  0C6B  0822               	movf	??_check_vars,w
 12982  0C6C  0021               	movlb	1	; select bank1
 12983  0C6D  00B8               	movwf	_ALAH^(0+128)
 12984                           
 12985                           ;main.c: 435: ALAM = DATAEE_ReadByte(154);
 12986  0C6E  309A               	movlw	154
 12987  0C6F  0020               	movlb	0	; select bank0
 12988  0C70  00A0               	movwf	DATAEE_ReadByte@bAdd
 12989  0C71  3000               	movlw	0
 12990  0C72  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12991  0C73  3195  258C  318B   	fcall	_DATAEE_ReadByte
 12992  0C76  0020               	movlb	0	; select bank0
 12993  0C77  00A2               	movwf	??_check_vars
 12994  0C78  0822               	movf	??_check_vars,w
 12995  0C79  0021               	movlb	1	; select bank1
 12996  0C7A  00B5               	movwf	_ALAM^(0+128)
 12997                           
 12998                           ;main.c: 436: ALAS = DATAEE_ReadByte(155);
 12999  0C7B  309B               	movlw	155
 13000  0C7C  0020               	movlb	0	; select bank0
 13001  0C7D  00A0               	movwf	DATAEE_ReadByte@bAdd
 13002  0C7E  3000               	movlw	0
 13003  0C7F  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 13004  0C80  3195  258C  318B   	fcall	_DATAEE_ReadByte
 13005  0C83  0020               	movlb	0	; select bank0
 13006  0C84  00A2               	movwf	??_check_vars
 13007  0C85  0822               	movf	??_check_vars,w
 13008  0C86  0021               	movlb	1	; select bank1
 13009  0C87  00B4               	movwf	_ALAS^(0+128)
 13010                           
 13011                           ;main.c: 437: ALAT = DATAEE_ReadByte(156);
 13012  0C88  309C               	movlw	156
 13013  0C89  0020               	movlb	0	; select bank0
 13014  0C8A  00A0               	movwf	DATAEE_ReadByte@bAdd
 13015  0C8B  3000               	movlw	0
 13016  0C8C  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 13017  0C8D  3195  258C  318B   	fcall	_DATAEE_ReadByte
 13018  0C90  0020               	movlb	0	; select bank0
 13019  0C91  00A2               	movwf	??_check_vars
 13020  0C92  0822               	movf	??_check_vars,w
 13021  0C93  0021               	movlb	1	; select bank1
 13022  0C94  00B7               	movwf	_ALAT^(0+128)
 13023                           
 13024                           ;main.c: 438: ALAL = DATAEE_ReadByte(157);
 13025  0C95  309D               	movlw	157
 13026  0C96  0020               	movlb	0	; select bank0
 13027  0C97  00A0               	movwf	DATAEE_ReadByte@bAdd
 13028  0C98  3000               	movlw	0
 13029  0C99  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 13030  0C9A  3195  258C  318B   	fcall	_DATAEE_ReadByte
 13031  0C9D  0020               	movlb	0	; select bank0
 13032  0C9E  00A2               	movwf	??_check_vars
 13033  0C9F  0822               	movf	??_check_vars,w
 13034  0CA0  0021               	movlb	1	; select bank1
 13035  0CA1  00B6               	movwf	_ALAL^(0+128)
 13036                           
 13037                           ;main.c: 439: ALAF = DATAEE_ReadByte(158);
 13038  0CA2  309E               	movlw	158
 13039  0CA3  0020               	movlb	0	; select bank0
 13040  0CA4  00A0               	movwf	DATAEE_ReadByte@bAdd
 13041  0CA5  3000               	movlw	0
 13042  0CA6  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 13043  0CA7  3195  258C  318B   	fcall	_DATAEE_ReadByte
 13044  0CAA  0020               	movlb	0	; select bank0
 13045  0CAB  00A2               	movwf	??_check_vars
 13046  0CAC  0822               	movf	??_check_vars,w
 13047  0CAD  0021               	movlb	1	; select bank1
 13048  0CAE  00B3               	movwf	_ALAF^(0+128)
 13049                           
 13050                           ;main.c: 440: CLKH = DATAEE_ReadByte(159);
 13051  0CAF  309F               	movlw	159
 13052  0CB0  0020               	movlb	0	; select bank0
 13053  0CB1  00A0               	movwf	DATAEE_ReadByte@bAdd
 13054  0CB2  3000               	movlw	0
 13055  0CB3  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 13056  0CB4  3195  258C  318B   	fcall	_DATAEE_ReadByte
 13057  0CB7  0020               	movlb	0	; select bank0
 13058  0CB8  00A2               	movwf	??_check_vars
 13059  0CB9  0822               	movf	??_check_vars,w
 13060  0CBA  00EF               	movwf	_CLKH
 13061                           
 13062                           ;main.c: 441: CLKM = DATAEE_ReadByte(160);
 13063  0CBB  30A0               	movlw	160
 13064  0CBC  00A0               	movwf	DATAEE_ReadByte@bAdd
 13065  0CBD  3000               	movlw	0
 13066  0CBE  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 13067  0CBF  3195  258C  318B   	fcall	_DATAEE_ReadByte
 13068  0CC2  0020               	movlb	0	; select bank0
 13069  0CC3  00A2               	movwf	??_check_vars
 13070  0CC4  0822               	movf	??_check_vars,w
 13071  0CC5  00EE               	movwf	_CLKM
 13072  0CC6                     l620:
 13073  0CC6  0008               	return
 13074  0CC7                     __end_of_check_vars:
 13075                           
 13076                           	psect	text28
 13077  158C                     __ptext28:	
 13078 ;; *************** function _DATAEE_ReadByte *****************
 13079 ;; Defined at:
 13080 ;;		line 202 in file "mcc_generated_files/memory.c"
 13081 ;; Parameters:    Size  Location     Type
 13082 ;;  bAdd            2    0[BANK0 ] unsigned int 
 13083 ;; Auto vars:     Size  Location     Type
 13084 ;;		None
 13085 ;; Return value:  Size  Location     Type
 13086 ;;                  1    wreg      unsigned char 
 13087 ;; Registers used:
 13088 ;;		wreg, status,2
 13089 ;; Tracked objects:
 13090 ;;		On entry : 0/0
 13091 ;;		On exit  : 0/0
 13092 ;;		Unchanged: 0/0
 13093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13094 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13097 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13098 ;;Total ram usage:        2 bytes
 13099 ;; Hardware stack levels used:    1
 13100 ;; Hardware stack levels required when called:    5
 13101 ;; This function calls:
 13102 ;;		Nothing
 13103 ;; This function is called by:
 13104 ;;		_check_vars
 13105 ;; This function uses a non-reentrant model
 13106 ;;
 13107                           
 13108                           
 13109                           ;psect for function _DATAEE_ReadByte
 13110  158C                     _DATAEE_ReadByte:
 13111  158C                     l3946:	
 13112                           ;incstack = 0
 13113                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 13114                           
 13115                           
 13116                           ;memory.c: 204: NVMADRH = ((bAdd >> 8) & 0xFF);
 13117  158C  0020               	movlb	0	; select bank0
 13118  158D  0821               	movf	DATAEE_ReadByte@bAdd+1,w
 13119  158E  0030               	movlb	16	; select bank16
 13120  158F  009B               	movwf	27	;volatile
 13121  1590                     l3948:
 13122                           
 13123                           ;memory.c: 205: NVMADRL = (bAdd & 0xFF);
 13124  1590  0020               	movlb	0	; select bank0
 13125  1591  0820               	movf	DATAEE_ReadByte@bAdd,w
 13126  1592  0030               	movlb	16	; select bank16
 13127  1593  009A               	movwf	26	;volatile
 13128  1594                     l3950:
 13129                           
 13130                           ;memory.c: 206: NVMCON1bits.NVMREGS = 1;
 13131  1594  171E               	bsf	30,6	;volsfr
 13132  1595                     l3952:
 13133                           
 13134                           ;memory.c: 207: NVMCON1bits.RD = 1;
 13135  1595  141E               	bsf	30,0	;volsfr
 13136  1596                     l3954:
 13137                           
 13138                           ;memory.c: 208: __nop();
 13139  1596  0000               	nop
 13140  1597                     l3956:
 13141                           
 13142                           ;memory.c: 209: __nop();
 13143  1597  0000               	nop
 13144  1598                     l3958:
 13145                           
 13146                           ;memory.c: 211: return (NVMDATL);
 13147  1598  0030               	movlb	16	; select bank16
 13148  1599  081C               	movf	28,w	;volatile
 13149  159A                     l441:
 13150  159A  0008               	return
 13151  159B                     __end_of_DATAEE_ReadByte:
 13152                           
 13153                           	psect	text29
 13154  1694                     __ptext29:	
 13155 ;; *************** function _checkButtonS2 *****************
 13156 ;; Defined at:
 13157 ;;		line 478 in file "main.c"
 13158 ;; Parameters:    Size  Location     Type
 13159 ;;		None
 13160 ;; Auto vars:     Size  Location     Type
 13161 ;;		None
 13162 ;; Return value:  Size  Location     Type
 13163 ;;                  1    wreg      void 
 13164 ;; Registers used:
 13165 ;;		wreg, status,2, status,0
 13166 ;; Tracked objects:
 13167 ;;		On entry : 0/0
 13168 ;;		On exit  : 0/0
 13169 ;;		Unchanged: 0/0
 13170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13173 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13174 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13175 ;;Total ram usage:        1 bytes
 13176 ;; Hardware stack levels used:    1
 13177 ;; Hardware stack levels required when called:    5
 13178 ;; This function calls:
 13179 ;;		Nothing
 13180 ;; This function is called by:
 13181 ;;		_main
 13182 ;; This function uses a non-reentrant model
 13183 ;;
 13184                           
 13185                           
 13186                           ;psect for function _checkButtonS2
 13187  1694                     _checkButtonS2:
 13188  1694                     l4302:	
 13189                           ;incstack = 0
 13190                           ; Regs used in _checkButtonS2: [wreg+status,2+status,0]
 13191                           
 13192                           
 13193                           ;main.c: 479: if (btn2State == 0) {
 13194  1694  0020               	movlb	0	; select bank0
 13195  1695  086C               	movf	_btn2State,w
 13196  1696  1D03               	btfss	3,2
 13197  1697  2E99               	goto	u3511
 13198  1698  2E9A               	goto	u3510
 13199  1699                     u3511:
 13200  1699  2EAB               	goto	l635
 13201  169A                     u3510:
 13202  169A                     l4304:
 13203                           
 13204                           ;main.c: 480: if (PORTCbits.RC5 == 0) {
 13205  169A  1A8E               	btfsc	14,5	;volatile
 13206  169B  2E9D               	goto	u3521
 13207  169C  2E9E               	goto	u3520
 13208  169D                     u3521:
 13209  169D  2EB0               	goto	l639
 13210  169E                     u3520:
 13211  169E                     l4306:
 13212                           
 13213                           ;main.c: 481: _delay((unsigned long)((200)*(1000000/4000.0)));
 13214  169E  3041               	movlw	65
 13215  169F  0020               	movlb	0	; select bank0
 13216  16A0  00A0               	movwf	??_checkButtonS2
 13217  16A1  30EE               	movlw	238
 13218  16A2                     u4427:
 13219  16A2  0B89               	decfsz	9,f
 13220  16A3  2EA2               	goto	u4427
 13221  16A4  0BA0               	decfsz	??_checkButtonS2,f
 13222  16A5  2EA2               	goto	u4427
 13223  16A6  0000               	nop
 13224  16A7                     l4308:
 13225                           
 13226                           ;main.c: 482: btn2State = 1;
 13227  16A7  0020               	movlb	0	; select bank0
 13228  16A8  01EC               	clrf	_btn2State
 13229  16A9  0AEC               	incf	_btn2State,f
 13230  16AA  2EB0               	goto	l639
 13231  16AB                     l635:
 13232  16AB  1E8E               	btfss	14,5	;volatile
 13233  16AC  2EAE               	goto	u3531
 13234  16AD  2EAF               	goto	u3530
 13235  16AE                     u3531:
 13236  16AE  2EB0               	goto	l639
 13237  16AF                     u3530:
 13238  16AF                     l4310:
 13239                           
 13240                           ;main.c: 486: btn2State = 0;
 13241  16AF  01EC               	clrf	_btn2State
 13242  16B0                     l639:
 13243  16B0  0008               	return
 13244  16B1                     __end_of_checkButtonS2:
 13245                           
 13246                           	psect	text30
 13247  1677                     __ptext30:	
 13248 ;; *************** function _checkButtonS1 *****************
 13249 ;; Defined at:
 13250 ;;		line 467 in file "main.c"
 13251 ;; Parameters:    Size  Location     Type
 13252 ;;		None
 13253 ;; Auto vars:     Size  Location     Type
 13254 ;;		None
 13255 ;; Return value:  Size  Location     Type
 13256 ;;                  1    wreg      void 
 13257 ;; Registers used:
 13258 ;;		wreg, status,2, status,0
 13259 ;; Tracked objects:
 13260 ;;		On entry : 0/0
 13261 ;;		On exit  : 0/0
 13262 ;;		Unchanged: 0/0
 13263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13266 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13267 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13268 ;;Total ram usage:        1 bytes
 13269 ;; Hardware stack levels used:    1
 13270 ;; Hardware stack levels required when called:    5
 13271 ;; This function calls:
 13272 ;;		Nothing
 13273 ;; This function is called by:
 13274 ;;		_main
 13275 ;; This function uses a non-reentrant model
 13276 ;;
 13277                           
 13278                           
 13279                           ;psect for function _checkButtonS1
 13280  1677                     _checkButtonS1:
 13281  1677                     l4292:	
 13282                           ;incstack = 0
 13283                           ; Regs used in _checkButtonS1: [wreg+status,2+status,0]
 13284                           
 13285                           
 13286                           ;main.c: 468: if (btn1State == 0) {
 13287  1677  0020               	movlb	0	; select bank0
 13288  1678  086D               	movf	_btn1State,w
 13289  1679  1D03               	btfss	3,2
 13290  167A  2E7C               	goto	u3481
 13291  167B  2E7D               	goto	u3480
 13292  167C                     u3481:
 13293  167C  2E8E               	goto	l628
 13294  167D                     u3480:
 13295  167D                     l4294:
 13296                           
 13297                           ;main.c: 469: if (PORTBbits.RB4 == 0) {
 13298  167D  1A0D               	btfsc	13,4	;volatile
 13299  167E  2E80               	goto	u3491
 13300  167F  2E81               	goto	u3490
 13301  1680                     u3491:
 13302  1680  2E93               	goto	l632
 13303  1681                     u3490:
 13304  1681                     l4296:
 13305                           
 13306                           ;main.c: 470: _delay((unsigned long)((200)*(1000000/4000.0)));
 13307  1681  3041               	movlw	65
 13308  1682  0020               	movlb	0	; select bank0
 13309  1683  00A0               	movwf	??_checkButtonS1
 13310  1684  30EE               	movlw	238
 13311  1685                     u4437:
 13312  1685  0B89               	decfsz	9,f
 13313  1686  2E85               	goto	u4437
 13314  1687  0BA0               	decfsz	??_checkButtonS1,f
 13315  1688  2E85               	goto	u4437
 13316  1689  0000               	nop
 13317  168A                     l4298:
 13318                           
 13319                           ;main.c: 471: btn1State = 1;
 13320  168A  0020               	movlb	0	; select bank0
 13321  168B  01ED               	clrf	_btn1State
 13322  168C  0AED               	incf	_btn1State,f
 13323  168D  2E93               	goto	l632
 13324  168E                     l628:
 13325  168E  1E0D               	btfss	13,4	;volatile
 13326  168F  2E91               	goto	u3501
 13327  1690  2E92               	goto	u3500
 13328  1691                     u3501:
 13329  1691  2E93               	goto	l632
 13330  1692                     u3500:
 13331  1692                     l4300:
 13332                           
 13333                           ;main.c: 474: btn1State = 0;
 13334  1692  01ED               	clrf	_btn1State
 13335  1693                     l632:
 13336  1693  0008               	return
 13337  1694                     __end_of_checkButtonS1:
 13338                           
 13339                           	psect	text31
 13340  159B                     __ptext31:	
 13341 ;; *************** function _SYSTEM_Initialize *****************
 13342 ;; Defined at:
 13343 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13344 ;; Parameters:    Size  Location     Type
 13345 ;;		None
 13346 ;; Auto vars:     Size  Location     Type
 13347 ;;		None
 13348 ;; Return value:  Size  Location     Type
 13349 ;;                  1    wreg      void 
 13350 ;; Registers used:
 13351 ;;		wreg, status,2, status,0, pclath, cstack
 13352 ;; Tracked objects:
 13353 ;;		On entry : 0/0
 13354 ;;		On exit  : 0/0
 13355 ;;		Unchanged: 0/0
 13356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13361 ;;Total ram usage:        0 bytes
 13362 ;; Hardware stack levels used:    1
 13363 ;; Hardware stack levels required when called:    7
 13364 ;; This function calls:
 13365 ;;		_ADCC_Initialize
 13366 ;;		_OSCILLATOR_Initialize
 13367 ;;		_PIN_MANAGER_Initialize
 13368 ;;		_PMD_Initialize
 13369 ;;		_TMR0_Initialize
 13370 ;; This function is called by:
 13371 ;;		_main
 13372 ;; This function uses a non-reentrant model
 13373 ;;
 13374                           
 13375                           
 13376                           ;psect for function _SYSTEM_Initialize
 13377  159B                     _SYSTEM_Initialize:
 13378  159B                     l4130:	
 13379                           ;incstack = 0
 13380                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13381                           
 13382                           
 13383                           ;mcc.c: 52: PMD_Initialize();
 13384  159B  3195  2520  3195   	fcall	_PMD_Initialize
 13385  159E                     l4132:
 13386                           
 13387                           ;mcc.c: 53: PIN_MANAGER_Initialize();
 13388  159E  3197  27C5  3195   	fcall	_PIN_MANAGER_Initialize
 13389  15A1                     l4134:
 13390                           
 13391                           ;mcc.c: 54: OSCILLATOR_Initialize();
 13392  15A1  3195  2538  3195   	fcall	_OSCILLATOR_Initialize
 13393  15A4                     l4136:
 13394                           
 13395                           ;mcc.c: 55: ADCC_Initialize();
 13396  15A4  3196  2634  3195   	fcall	_ADCC_Initialize
 13397  15A7                     l4138:
 13398                           
 13399                           ;mcc.c: 56: TMR0_Initialize();
 13400  15A7  3196  261F  3195   	fcall	_TMR0_Initialize
 13401  15AA                     l162:
 13402  15AA  0008               	return
 13403  15AB                     __end_of_SYSTEM_Initialize:
 13404                           
 13405                           	psect	text32
 13406  161F                     __ptext32:	
 13407 ;; *************** function _TMR0_Initialize *****************
 13408 ;; Defined at:
 13409 ;;		line 61 in file "mcc_generated_files/tmr0.c"
 13410 ;; Parameters:    Size  Location     Type
 13411 ;;		None
 13412 ;; Auto vars:     Size  Location     Type
 13413 ;;		None
 13414 ;; Return value:  Size  Location     Type
 13415 ;;                  1    wreg      void 
 13416 ;; Registers used:
 13417 ;;		wreg, status,2, status,0, pclath, cstack
 13418 ;; Tracked objects:
 13419 ;;		On entry : 0/0
 13420 ;;		On exit  : 0/0
 13421 ;;		Unchanged: 0/0
 13422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13427 ;;Total ram usage:        0 bytes
 13428 ;; Hardware stack levels used:    1
 13429 ;; Hardware stack levels required when called:    6
 13430 ;; This function calls:
 13431 ;;		_TMR0_SetInterruptHandler
 13432 ;; This function is called by:
 13433 ;;		_SYSTEM_Initialize
 13434 ;; This function uses a non-reentrant model
 13435 ;;
 13436                           
 13437                           
 13438                           ;psect for function _TMR0_Initialize
 13439  161F                     _TMR0_Initialize:
 13440  161F                     l3930:	
 13441                           ;incstack = 0
 13442                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13443                           
 13444                           
 13445                           ;tmr0.c: 66: T0CON1 = 0x86;
 13446  161F  3086               	movlw	134
 13447  1620  0020               	movlb	0	; select bank0
 13448  1621  009F               	movwf	31	;volatile
 13449                           
 13450                           ;tmr0.c: 69: TMR0H = 0x01;
 13451  1622  3001               	movlw	1
 13452  1623  009D               	movwf	29	;volatile
 13453  1624                     l3932:
 13454                           
 13455                           ;tmr0.c: 72: TMR0L = 0x00;
 13456  1624  019C               	clrf	28	;volatile
 13457  1625                     l3934:
 13458                           
 13459                           ;tmr0.c: 75: PIR0bits.TMR0IF = 0;
 13460  1625  002E               	movlb	14	; select bank14
 13461  1626  128C               	bcf	12,5	;volatile
 13462  1627                     l3936:
 13463                           
 13464                           ;tmr0.c: 78: PIE0bits.TMR0IE = 1;
 13465  1627  1696               	bsf	22,5	;volatile
 13466  1628                     l3938:
 13467                           
 13468                           ;tmr0.c: 81: TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandler);
 13469  1628  3002               	movlw	low _TMR0_DefaultInterruptHandler
 13470  1629  0020               	movlb	0	; select bank0
 13471  162A  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
 13472  162B  3000               	movlw	high _TMR0_DefaultInterruptHandler
 13473  162C  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
 13474  162D  3195  2541  3196   	fcall	_TMR0_SetInterruptHandler
 13475  1630                     l3940:
 13476                           
 13477                           ;tmr0.c: 84: T0CON0 = 0x80;
 13478  1630  3080               	movlw	128
 13479  1631  0020               	movlb	0	; select bank0
 13480  1632  009E               	movwf	30	;volatile
 13481  1633                     l363:
 13482  1633  0008               	return
 13483  1634                     __end_of_TMR0_Initialize:
 13484                           
 13485                           	psect	text33
 13486  1541                     __ptext33:	
 13487 ;; *************** function _TMR0_SetInterruptHandler *****************
 13488 ;; Defined at:
 13489 ;;		line 150 in file "mcc_generated_files/tmr0.c"
 13490 ;; Parameters:    Size  Location     Type
 13491 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 13492 ;;		 -> TMR0_callback(1), TMR0_DefaultInterruptHandler(1), 
 13493 ;; Auto vars:     Size  Location     Type
 13494 ;;		None
 13495 ;; Return value:  Size  Location     Type
 13496 ;;                  1    wreg      void 
 13497 ;; Registers used:
 13498 ;;		wreg
 13499 ;; Tracked objects:
 13500 ;;		On entry : 0/0
 13501 ;;		On exit  : 0/0
 13502 ;;		Unchanged: 0/0
 13503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13504 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13507 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13508 ;;Total ram usage:        2 bytes
 13509 ;; Hardware stack levels used:    1
 13510 ;; Hardware stack levels required when called:    5
 13511 ;; This function calls:
 13512 ;;		Nothing
 13513 ;; This function is called by:
 13514 ;;		_TMR0_Initialize
 13515 ;;		_main
 13516 ;; This function uses a non-reentrant model
 13517 ;;
 13518                           
 13519                           
 13520                           ;psect for function _TMR0_SetInterruptHandler
 13521  1541                     _TMR0_SetInterruptHandler:
 13522  1541                     l3748:	
 13523                           ;incstack = 0
 13524                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
 13525                           
 13526                           
 13527                           ;tmr0.c: 151: TMR0_InterruptHandler = InterruptHandler;
 13528  1541  0020               	movlb	0	; select bank0
 13529  1542  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
 13530  1543  0021               	movlb	1	; select bank1
 13531  1544  00BB               	movwf	(_TMR0_InterruptHandler+1)^(0+128)
 13532  1545  0020               	movlb	0	; select bank0
 13533  1546  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
 13534  1547  0021               	movlb	1	; select bank1
 13535  1548  00BA               	movwf	_TMR0_InterruptHandler^(0+128)
 13536  1549                     l391:
 13537  1549  0008               	return
 13538  154A                     __end_of_TMR0_SetInterruptHandler:
 13539                           
 13540                           	psect	text34
 13541  1520                     __ptext34:	
 13542 ;; *************** function _PMD_Initialize *****************
 13543 ;; Defined at:
 13544 ;;		line 73 in file "mcc_generated_files/mcc.c"
 13545 ;; Parameters:    Size  Location     Type
 13546 ;;		None
 13547 ;; Auto vars:     Size  Location     Type
 13548 ;;		None
 13549 ;; Return value:  Size  Location     Type
 13550 ;;                  1    wreg      void 
 13551 ;; Registers used:
 13552 ;;		status,2
 13553 ;; Tracked objects:
 13554 ;;		On entry : 0/0
 13555 ;;		On exit  : 0/0
 13556 ;;		Unchanged: 0/0
 13557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13562 ;;Total ram usage:        0 bytes
 13563 ;; Hardware stack levels used:    1
 13564 ;; Hardware stack levels required when called:    5
 13565 ;; This function calls:
 13566 ;;		Nothing
 13567 ;; This function is called by:
 13568 ;;		_SYSTEM_Initialize
 13569 ;; This function uses a non-reentrant model
 13570 ;;
 13571                           
 13572                           
 13573                           ;psect for function _PMD_Initialize
 13574  1520                     _PMD_Initialize:
 13575  1520                     l3914:	
 13576                           ;incstack = 0
 13577                           ; Regs used in _PMD_Initialize: [status,2]
 13578                           
 13579                           
 13580                           ;mcc.c: 76: PMD0 = 0x00;
 13581  1520  002F               	movlb	15	; select bank15
 13582  1521  0196               	clrf	22	;volatile
 13583                           
 13584                           ;mcc.c: 78: PMD1 = 0x00;
 13585  1522  0197               	clrf	23	;volatile
 13586                           
 13587                           ;mcc.c: 80: PMD2 = 0x00;
 13588  1523  0198               	clrf	24	;volatile
 13589                           
 13590                           ;mcc.c: 82: PMD3 = 0x00;
 13591  1524  0199               	clrf	25	;volatile
 13592                           
 13593                           ;mcc.c: 84: PMD4 = 0x00;
 13594  1525  019A               	clrf	26	;volatile
 13595                           
 13596                           ;mcc.c: 86: PMD5 = 0x00;
 13597  1526  019B               	clrf	27	;volatile
 13598  1527                     l168:
 13599  1527  0008               	return
 13600  1528                     __end_of_PMD_Initialize:
 13601                           
 13602                           	psect	text35
 13603  17C5                     __ptext35:	
 13604 ;; *************** function _PIN_MANAGER_Initialize *****************
 13605 ;; Defined at:
 13606 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 13607 ;; Parameters:    Size  Location     Type
 13608 ;;		None
 13609 ;; Auto vars:     Size  Location     Type
 13610 ;;		None
 13611 ;; Return value:  Size  Location     Type
 13612 ;;                  1    wreg      void 
 13613 ;; Registers used:
 13614 ;;		wreg, status,2
 13615 ;; Tracked objects:
 13616 ;;		On entry : 0/0
 13617 ;;		On exit  : 0/0
 13618 ;;		Unchanged: 0/0
 13619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13622 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13623 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13624 ;;Total ram usage:        0 bytes
 13625 ;; Hardware stack levels used:    1
 13626 ;; Hardware stack levels required when called:    5
 13627 ;; This function calls:
 13628 ;;		Nothing
 13629 ;; This function is called by:
 13630 ;;		_SYSTEM_Initialize
 13631 ;; This function uses a non-reentrant model
 13632 ;;
 13633                           
 13634                           
 13635                           ;psect for function _PIN_MANAGER_Initialize
 13636  17C5                     _PIN_MANAGER_Initialize:
 13637  17C5                     l3874:	
 13638                           ;incstack = 0
 13639                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 13640                           
 13641                           
 13642                           ;pin_manager.c: 62: LATE = 0x00;
 13643  17C5  0020               	movlb	0	; select bank0
 13644  17C6  019A               	clrf	26	;volatile
 13645                           
 13646                           ;pin_manager.c: 63: LATD = 0x00;
 13647  17C7  0199               	clrf	25	;volatile
 13648                           
 13649                           ;pin_manager.c: 64: LATA = 0x00;
 13650  17C8  0196               	clrf	22	;volatile
 13651                           
 13652                           ;pin_manager.c: 65: LATB = 0x00;
 13653  17C9  0197               	clrf	23	;volatile
 13654                           
 13655                           ;pin_manager.c: 66: LATC = 0x00;
 13656  17CA  0198               	clrf	24	;volatile
 13657  17CB                     l3876:
 13658                           
 13659                           ;pin_manager.c: 71: TRISE = 0x07;
 13660  17CB  3007               	movlw	7
 13661  17CC  0095               	movwf	21	;volatile
 13662  17CD                     l3878:
 13663                           
 13664                           ;pin_manager.c: 72: TRISA = 0xEF;
 13665  17CD  30EF               	movlw	239
 13666  17CE  0091               	movwf	17	;volatile
 13667  17CF                     l3880:
 13668                           
 13669                           ;pin_manager.c: 73: TRISB = 0xFF;
 13670  17CF  30FF               	movlw	255
 13671  17D0  0092               	movwf	18	;volatile
 13672  17D1                     l3882:
 13673                           
 13674                           ;pin_manager.c: 74: TRISC = 0xFF;
 13675  17D1  30FF               	movlw	255
 13676  17D2  0093               	movwf	19	;volatile
 13677  17D3                     l3884:
 13678                           
 13679                           ;pin_manager.c: 75: TRISD = 0xFF;
 13680  17D3  30FF               	movlw	255
 13681  17D4  0094               	movwf	20	;volatile
 13682  17D5                     l3886:
 13683                           
 13684                           ;pin_manager.c: 80: ANSELD = 0xFF;
 13685  17D5  30FF               	movlw	255
 13686  17D6  003E               	movlb	30	; select bank30
 13687  17D7  00D9               	movwf	89	;volatile
 13688  17D8                     l3888:
 13689                           
 13690                           ;pin_manager.c: 81: ANSELC = 0xC7;
 13691  17D8  30C7               	movlw	199
 13692  17D9  00CE               	movwf	78	;volatile
 13693  17DA                     l3890:
 13694                           
 13695                           ;pin_manager.c: 82: ANSELB = 0xEF;
 13696  17DA  30EF               	movlw	239
 13697  17DB  00C3               	movwf	67	;volatile
 13698  17DC                     l3892:
 13699                           
 13700                           ;pin_manager.c: 83: ANSELE = 0x07;
 13701  17DC  3007               	movlw	7
 13702  17DD  00E4               	movwf	100	;volatile
 13703  17DE                     l3894:
 13704                           
 13705                           ;pin_manager.c: 84: ANSELA = 0xEF;
 13706  17DE  30EF               	movlw	239
 13707  17DF  00B8               	movwf	56	;volatile
 13708                           
 13709                           ;pin_manager.c: 89: WPUD = 0x00;
 13710  17E0  01DA               	clrf	90	;volatile
 13711                           
 13712                           ;pin_manager.c: 90: WPUE = 0x00;
 13713  17E1  01E5               	clrf	101	;volatile
 13714                           
 13715                           ;pin_manager.c: 91: WPUB = 0x00;
 13716  17E2  01C4               	clrf	68	;volatile
 13717                           
 13718                           ;pin_manager.c: 92: WPUA = 0x00;
 13719  17E3  01B9               	clrf	57	;volatile
 13720                           
 13721                           ;pin_manager.c: 93: WPUC = 0x00;
 13722  17E4  01CF               	clrf	79	;volatile
 13723                           
 13724                           ;pin_manager.c: 98: ODCONE = 0x00;
 13725  17E5  01E6               	clrf	102	;volatile
 13726                           
 13727                           ;pin_manager.c: 99: ODCONA = 0x00;
 13728  17E6  01BA               	clrf	58	;volatile
 13729                           
 13730                           ;pin_manager.c: 100: ODCONB = 0x00;
 13731  17E7  01C5               	clrf	69	;volatile
 13732                           
 13733                           ;pin_manager.c: 101: ODCONC = 0x00;
 13734  17E8  01D0               	clrf	80	;volatile
 13735                           
 13736                           ;pin_manager.c: 102: ODCOND = 0x00;
 13737  17E9  01DB               	clrf	91	;volatile
 13738  17EA                     l3896:
 13739                           
 13740                           ;pin_manager.c: 107: SLRCONA = 0xFF;
 13741  17EA  30FF               	movlw	255
 13742  17EB  00BB               	movwf	59	;volatile
 13743  17EC                     l3898:
 13744                           
 13745                           ;pin_manager.c: 108: SLRCONB = 0xFF;
 13746  17EC  30FF               	movlw	255
 13747  17ED  00C6               	movwf	70	;volatile
 13748  17EE                     l3900:
 13749                           
 13750                           ;pin_manager.c: 109: SLRCONC = 0xFF;
 13751  17EE  30FF               	movlw	255
 13752  17EF  00D1               	movwf	81	;volatile
 13753  17F0                     l3902:
 13754                           
 13755                           ;pin_manager.c: 110: SLRCOND = 0xFF;
 13756  17F0  30FF               	movlw	255
 13757  17F1  00DC               	movwf	92	;volatile
 13758  17F2                     l3904:
 13759                           
 13760                           ;pin_manager.c: 111: SLRCONE = 0x07;
 13761  17F2  3007               	movlw	7
 13762  17F3  00E7               	movwf	103	;volatile
 13763  17F4                     l3906:
 13764                           
 13765                           ;pin_manager.c: 120: SSP1CLKPPS = 0x13;
 13766  17F4  3013               	movlw	19
 13767  17F5  003D               	movlb	29	; select bank29
 13768  17F6  00C5               	movwf	69	;volatile
 13769  17F7                     l3908:
 13770                           
 13771                           ;pin_manager.c: 121: RC3PPS = 0x14;
 13772  17F7  3014               	movlw	20
 13773  17F8  003E               	movlb	30	; select bank30
 13774  17F9  00A3               	movwf	35	;volatile
 13775  17FA                     l3910:
 13776                           
 13777                           ;pin_manager.c: 122: RC4PPS = 0x15;
 13778  17FA  3015               	movlw	21
 13779  17FB  00A4               	movwf	36	;volatile
 13780  17FC                     l3912:
 13781                           
 13782                           ;pin_manager.c: 123: SSP1DATPPS = 0x14;
 13783  17FC  3014               	movlw	20
 13784  17FD  003D               	movlb	29	; select bank29
 13785  17FE  00C6               	movwf	70	;volatile
 13786  17FF                     l120:
 13787  17FF  0008               	return
 13788  1800                     __end_of_PIN_MANAGER_Initialize:
 13789                           
 13790                           	psect	text36
 13791  1538                     __ptext36:	
 13792 ;; *************** function _OSCILLATOR_Initialize *****************
 13793 ;; Defined at:
 13794 ;;		line 59 in file "mcc_generated_files/mcc.c"
 13795 ;; Parameters:    Size  Location     Type
 13796 ;;		None
 13797 ;; Auto vars:     Size  Location     Type
 13798 ;;		None
 13799 ;; Return value:  Size  Location     Type
 13800 ;;                  1    wreg      void 
 13801 ;; Registers used:
 13802 ;;		wreg, status,2
 13803 ;; Tracked objects:
 13804 ;;		On entry : 0/0
 13805 ;;		On exit  : 0/0
 13806 ;;		Unchanged: 0/0
 13807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13812 ;;Total ram usage:        0 bytes
 13813 ;; Hardware stack levels used:    1
 13814 ;; Hardware stack levels required when called:    5
 13815 ;; This function calls:
 13816 ;;		Nothing
 13817 ;; This function is called by:
 13818 ;;		_SYSTEM_Initialize
 13819 ;; This function uses a non-reentrant model
 13820 ;;
 13821                           
 13822                           
 13823                           ;psect for function _OSCILLATOR_Initialize
 13824  1538                     _OSCILLATOR_Initialize:
 13825  1538                     l3916:	
 13826                           ;incstack = 0
 13827                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 13828                           
 13829                           
 13830                           ;mcc.c: 62: OSCCON1 = 0x62;
 13831  1538  3062               	movlw	98
 13832  1539  0031               	movlb	17	; select bank17
 13833  153A  008D               	movwf	13	;volatile
 13834  153B                     l3918:
 13835                           
 13836                           ;mcc.c: 64: OSCCON3 = 0x00;
 13837  153B  018F               	clrf	15	;volatile
 13838  153C                     l3920:
 13839                           
 13840                           ;mcc.c: 66: OSCEN = 0x00;
 13841  153C  0191               	clrf	17	;volatile
 13842                           
 13843                           ;mcc.c: 68: OSCFRQ = 0x02;
 13844  153D  3002               	movlw	2
 13845  153E  0093               	movwf	19	;volatile
 13846  153F                     l3922:
 13847                           
 13848                           ;mcc.c: 70: OSCTUNE = 0x00;
 13849  153F  0192               	clrf	18	;volatile
 13850  1540                     l165:
 13851  1540  0008               	return
 13852  1541                     __end_of_OSCILLATOR_Initialize:
 13853                           
 13854                           	psect	text37
 13855  1634                     __ptext37:	
 13856 ;; *************** function _ADCC_Initialize *****************
 13857 ;; Defined at:
 13858 ;;		line 63 in file "mcc_generated_files/adcc.c"
 13859 ;; Parameters:    Size  Location     Type
 13860 ;;		None
 13861 ;; Auto vars:     Size  Location     Type
 13862 ;;		None
 13863 ;; Return value:  Size  Location     Type
 13864 ;;                  1    wreg      void 
 13865 ;; Registers used:
 13866 ;;		wreg, status,2
 13867 ;; Tracked objects:
 13868 ;;		On entry : 0/0
 13869 ;;		On exit  : 0/0
 13870 ;;		Unchanged: 0/0
 13871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13876 ;;Total ram usage:        0 bytes
 13877 ;; Hardware stack levels used:    1
 13878 ;; Hardware stack levels required when called:    5
 13879 ;; This function calls:
 13880 ;;		Nothing
 13881 ;; This function is called by:
 13882 ;;		_SYSTEM_Initialize
 13883 ;;		_lumin
 13884 ;; This function uses a non-reentrant model
 13885 ;;
 13886                           
 13887                           
 13888                           ;psect for function _ADCC_Initialize
 13889  1634                     _ADCC_Initialize:
 13890  1634                     l3924:	
 13891                           ;incstack = 0
 13892                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 13893                           
 13894                           
 13895                           ;adcc.c: 67: ADLTHL = 0x00;
 13896  1634  0022               	movlb	2	; select bank2
 13897  1635  018E               	clrf	14	;volatile
 13898                           
 13899                           ;adcc.c: 69: ADLTHH = 0x00;
 13900  1636  018F               	clrf	15	;volatile
 13901                           
 13902                           ;adcc.c: 71: ADUTHL = 0x00;
 13903  1637  0190               	clrf	16	;volatile
 13904                           
 13905                           ;adcc.c: 73: ADUTHH = 0x00;
 13906  1638  0191               	clrf	17	;volatile
 13907                           
 13908                           ;adcc.c: 75: ADSTPTL = 0x00;
 13909  1639  0192               	clrf	18	;volatile
 13910                           
 13911                           ;adcc.c: 77: ADSTPTH = 0x00;
 13912  163A  0193               	clrf	19	;volatile
 13913                           
 13914                           ;adcc.c: 79: ADRPT = 0x00;
 13915  163B  018D               	clrf	13	;volatile
 13916                           
 13917                           ;adcc.c: 81: ADPCH = 0x00;
 13918  163C  0021               	movlb	1	; select bank1
 13919  163D  019E               	clrf	30	;volatile
 13920                           
 13921                           ;adcc.c: 83: ADCAP = 0x00;
 13922  163E  019B               	clrf	27	;volatile
 13923                           
 13924                           ;adcc.c: 85: ADCON1 = 0x00;
 13925  163F  0194               	clrf	20	;volatile
 13926                           
 13927                           ;adcc.c: 87: ADCON2 = 0x00;
 13928  1640  0195               	clrf	21	;volatile
 13929                           
 13930                           ;adcc.c: 89: ADCON3 = 0x00;
 13931  1641  0196               	clrf	22	;volatile
 13932                           
 13933                           ;adcc.c: 91: ADSTAT = 0x00;
 13934  1642  0197               	clrf	23	;volatile
 13935                           
 13936                           ;adcc.c: 93: ADREF = 0x00;
 13937  1643  019A               	clrf	26	;volatile
 13938                           
 13939                           ;adcc.c: 95: ADACT = 0x00;
 13940  1644  0199               	clrf	25	;volatile
 13941                           
 13942                           ;adcc.c: 97: ADCLK = 0x00;
 13943  1645  0198               	clrf	24	;volatile
 13944  1646                     l3926:
 13945                           
 13946                           ;adcc.c: 99: ADCON0 = 0x84;
 13947  1646  3084               	movlw	132
 13948  1647  0093               	movwf	19	;volatile
 13949  1648                     l3928:
 13950                           
 13951                           ;adcc.c: 101: ADACQ = 0x00;
 13952  1648  019D               	clrf	29	;volatile
 13953  1649                     l1047:
 13954  1649  0008               	return
 13955  164A                     __end_of_ADCC_Initialize:
 13956                           
 13957                           	psect	text38
 13958  09A9                     __ptext38:	
 13959 ;; *************** function _LCDinit *****************
 13960 ;; Defined at:
 13961 ;;		line 80 in file "LCD.c"
 13962 ;; Parameters:    Size  Location     Type
 13963 ;;		None
 13964 ;; Auto vars:     Size  Location     Type
 13965 ;;		None
 13966 ;; Return value:  Size  Location     Type
 13967 ;;                  1    wreg      void 
 13968 ;; Registers used:
 13969 ;;		wreg, status,2, status,0, pclath, cstack
 13970 ;; Tracked objects:
 13971 ;;		On entry : 0/0
 13972 ;;		On exit  : 0/0
 13973 ;;		Unchanged: 0/0
 13974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13977 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13978 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13979 ;;Total ram usage:        1 bytes
 13980 ;; Hardware stack levels used:    1
 13981 ;; Hardware stack levels required when called:    7
 13982 ;; This function calls:
 13983 ;;		_LCDsend
 13984 ;;		_LCDsend2x4
 13985 ;; This function is called by:
 13986 ;;		_main
 13987 ;; This function uses a non-reentrant model
 13988 ;;
 13989                           
 13990                           
 13991                           ;psect for function _LCDinit
 13992  09A9                     _LCDinit:
 13993  09A9                     l4160:	
 13994                           ;incstack = 0
 13995                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
 13996                           
 13997                           
 13998                           ;LCD.c: 82: _delay((unsigned long)((50)*(1000000/4000.0)));
 13999  09A9  3011               	movlw	17
 14000  09AA  0020               	movlb	0	; select bank0
 14001  09AB  00A8               	movwf	??_LCDinit
 14002  09AC  303A               	movlw	58
 14003  09AD                     u4447:
 14004  09AD  0B89               	decfsz	9,f
 14005  09AE  29AD               	goto	u4447
 14006  09AF  0BA8               	decfsz	??_LCDinit,f
 14007  09B0  29AD               	goto	u4447
 14008  09B1  0000               	nop
 14009  09B2                     l4162:
 14010                           
 14011                           ;LCD.c: 83: LCDsend(0x30);
 14012  09B2  3030               	movlw	48
 14013  09B3  3188  209E  3189   	fcall	_LCDsend
 14014  09B6                     l4164:
 14015                           
 14016                           ;LCD.c: 84: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend(0
      +                          x30);
 14017  09B6  3034               	movlw	52
 14018  09B7  3188  209E  3189   	fcall	_LCDsend
 14019  09BA  3029               	movlw	41
 14020  09BB                     u4457:
 14021  09BB  0B89               	decfsz	9,f
 14022  09BC  29BB               	goto	u4457
 14023  09BD  3200               	nop2
 14024  09BE                     l4166:
 14025  09BE  3030               	movlw	48
 14026  09BF  3188  209E  3189   	fcall	_LCDsend
 14027  09C2                     l4168:
 14028                           
 14029                           ;LCD.c: 85: _delay((unsigned long)((5)*(1000000/4000.0)));
 14030  09C2  30FA               	movlw	250
 14031  09C3                     u4467:
 14032  09C3  3200               	nop2
 14033  09C4  0B89               	decfsz	9,f
 14034  09C5  29C3               	goto	u4467
 14035                           
 14036                           ;LCD.c: 86: LCDsend(0x30);
 14037  09C6  3030               	movlw	48
 14038  09C7  3188  209E  3189   	fcall	_LCDsend
 14039                           
 14040                           ;LCD.c: 87: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend(0
      +                          x30);
 14041  09CA  3034               	movlw	52
 14042  09CB  3188  209E  3189   	fcall	_LCDsend
 14043  09CE                     l4170:
 14044  09CE  3029               	movlw	41
 14045  09CF                     u4477:
 14046  09CF  0B89               	decfsz	9,f
 14047  09D0  29CF               	goto	u4477
 14048  09D1  3200               	nop2
 14049  09D2                     l4172:
 14050  09D2  3030               	movlw	48
 14051  09D3  3188  209E  3189   	fcall	_LCDsend
 14052                           
 14053                           ;LCD.c: 88: _delay((unsigned long)((100)*(1000000/4000000.0)));
 14054  09D6  3008               	movlw	8
 14055  09D7                     u4487:
 14056  09D7  0B89               	decfsz	9,f
 14057  09D8  29D7               	goto	u4487
 14058  09D9  0000               	nop
 14059  09DA                     l4174:
 14060                           
 14061                           ;LCD.c: 89: LCDsend(0x30);
 14062  09DA  3030               	movlw	48
 14063  09DB  3188  209E  3189   	fcall	_LCDsend
 14064  09DE                     l4176:
 14065                           
 14066                           ;LCD.c: 90: LCDsend(0x34); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend(0
      +                          x30);
 14067  09DE  3034               	movlw	52
 14068  09DF  3188  209E  3189   	fcall	_LCDsend
 14069  09E2  3029               	movlw	41
 14070  09E3                     u4497:
 14071  09E3  0B89               	decfsz	9,f
 14072  09E4  29E3               	goto	u4497
 14073  09E5  3200               	nop2
 14074  09E6                     l4178:
 14075  09E6  3030               	movlw	48
 14076  09E7  3188  209E  3189   	fcall	_LCDsend
 14077  09EA                     l4180:
 14078                           
 14079                           ;LCD.c: 91: _delay((unsigned long)((100)*(1000000/4000000.0)));
 14080  09EA  3008               	movlw	8
 14081  09EB                     u4507:
 14082  09EB  0B89               	decfsz	9,f
 14083  09EC  29EB               	goto	u4507
 14084  09ED  0000               	nop
 14085                           
 14086                           ;LCD.c: 92: LCDsend(0x20);
 14087  09EE  3020               	movlw	32
 14088  09EF  3188  209E  3189   	fcall	_LCDsend
 14089                           
 14090                           ;LCD.c: 93: LCDsend(0x24); _delay((unsigned long)((500)*(1000000/4000000.0))); LCDsend(0
      +                          x20);
 14091  09F2  3024               	movlw	36
 14092  09F3  3188  209E  3189   	fcall	_LCDsend
 14093  09F6                     l4182:
 14094  09F6  3029               	movlw	41
 14095  09F7                     u4517:
 14096  09F7  0B89               	decfsz	9,f
 14097  09F8  29F7               	goto	u4517
 14098  09F9  3200               	nop2
 14099  09FA                     l4184:
 14100  09FA  3020               	movlw	32
 14101  09FB  3188  209E  3189   	fcall	_LCDsend
 14102                           
 14103                           ;LCD.c: 94: _delay((unsigned long)((5)*(1000000/4000.0)));
 14104  09FE  30FA               	movlw	250
 14105  09FF                     u4527:
 14106  09FF  3200               	nop2
 14107  0A00  0B89               	decfsz	9,f
 14108  0A01  29FF               	goto	u4527
 14109  0A02                     l4186:
 14110                           
 14111                           ;LCD.c: 96: LCDsend2x4(0x28, 0);
 14112  0A02  0020               	movlb	0	; select bank0
 14113  0A03  01A2               	clrf	LCDsend2x4@mode
 14114  0A04  3028               	movlw	40
 14115  0A05  318A  22D0  3189   	fcall	_LCDsend2x4
 14116  0A08                     l4188:
 14117                           
 14118                           ;LCD.c: 97: LCDsend2x4(0x06, 0);
 14119  0A08  0020               	movlb	0	; select bank0
 14120  0A09  01A2               	clrf	LCDsend2x4@mode
 14121  0A0A  3006               	movlw	6
 14122  0A0B  318A  22D0  3189   	fcall	_LCDsend2x4
 14123  0A0E                     l4190:
 14124                           
 14125                           ;LCD.c: 98: LCDsend2x4(0x0f, 0);
 14126  0A0E  0020               	movlb	0	; select bank0
 14127  0A0F  01A2               	clrf	LCDsend2x4@mode
 14128  0A10  300F               	movlw	15
 14129  0A11  318A  22D0  3189   	fcall	_LCDsend2x4
 14130  0A14                     l4192:
 14131                           
 14132                           ;LCD.c: 99: LCDsend2x4(0x01, 0);
 14133  0A14  0020               	movlb	0	; select bank0
 14134  0A15  01A2               	clrf	LCDsend2x4@mode
 14135  0A16  3001               	movlw	1
 14136  0A17  318A  22D0  3189   	fcall	_LCDsend2x4
 14137                           
 14138                           ;LCD.c: 100: _delay((unsigned long)((2)*(1000000/4000.0)));
 14139  0A1A  30A6               	movlw	166
 14140  0A1B                     u4537:
 14141  0A1B  0B89               	decfsz	9,f
 14142  0A1C  2A1B               	goto	u4537
 14143  0A1D  3200               	nop2
 14144  0A1E                     l924:
 14145  0A1E  0008               	return
 14146  0A1F                     __end_of_LCDinit:
 14147                           
 14148                           	psect	text39
 14149  0AD0                     __ptext39:	
 14150 ;; *************** function _LCDsend2x4 *****************
 14151 ;; Defined at:
 14152 ;;		line 57 in file "LCD.c"
 14153 ;; Parameters:    Size  Location     Type
 14154 ;;  c               1    wreg     unsigned char 
 14155 ;;  mode            1    2[BANK0 ] unsigned char 
 14156 ;; Auto vars:     Size  Location     Type
 14157 ;;  c               1    5[BANK0 ] unsigned char 
 14158 ;;  lc              1    7[BANK0 ] unsigned char 
 14159 ;;  hc              1    6[BANK0 ] unsigned char 
 14160 ;; Return value:  Size  Location     Type
 14161 ;;                  1    wreg      void 
 14162 ;; Registers used:
 14163 ;;		wreg, status,2, status,0, pclath, cstack
 14164 ;; Tracked objects:
 14165 ;;		On entry : 0/0
 14166 ;;		On exit  : 0/0
 14167 ;;		Unchanged: 0/0
 14168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14169 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14170 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14171 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14172 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14173 ;;Total ram usage:        6 bytes
 14174 ;; Hardware stack levels used:    1
 14175 ;; Hardware stack levels required when called:    6
 14176 ;; This function calls:
 14177 ;;		_WriteI2C
 14178 ;; This function is called by:
 14179 ;;		_LCDinit
 14180 ;;		_LCDcmd
 14181 ;;		_LCDchar
 14182 ;; This function uses a non-reentrant model
 14183 ;;
 14184                           
 14185                           
 14186                           ;psect for function _LCDsend2x4
 14187  0AD0                     _LCDsend2x4:
 14188                           
 14189                           ;incstack = 0
 14190                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 14191                           ;LCDsend2x4@c stored from wreg
 14192  0AD0  0020               	movlb	0	; select bank0
 14193  0AD1  00A5               	movwf	LCDsend2x4@c
 14194  0AD2                     l3614:
 14195                           
 14196                           ;LCD.c: 59: unsigned char hc;;LCD.c: 60: unsigned char lc;;LCD.c: 62: hc = c & 0xf0;
 14197  0AD2  0825               	movf	LCDsend2x4@c,w
 14198  0AD3  39F0               	andlw	240
 14199  0AD4  00A3               	movwf	??_LCDsend2x4
 14200  0AD5  0823               	movf	??_LCDsend2x4,w
 14201  0AD6  00A6               	movwf	LCDsend2x4@hc
 14202  0AD7                     l3616:
 14203                           
 14204                           ;LCD.c: 63: lc = (c << 4) & 0xf0;
 14205  0AD7  0825               	movf	LCDsend2x4@c,w
 14206  0AD8  00A3               	movwf	??_LCDsend2x4
 14207  0AD9  3003               	movlw	3
 14208  0ADA                     u2345:
 14209  0ADA  35A3               	lslf	??_LCDsend2x4,f
 14210  0ADB  3EFF               	addlw	-1
 14211  0ADC  1D03               	skipz
 14212  0ADD  2ADA               	goto	u2345
 14213  0ADE  3523               	lslf	??_LCDsend2x4,w
 14214  0ADF  39F0               	andlw	240
 14215  0AE0  00A4               	movwf	??_LCDsend2x4+1
 14216  0AE1  0824               	movf	??_LCDsend2x4+1,w
 14217  0AE2  00A7               	movwf	LCDsend2x4@lc
 14218  0AE3                     l3618:	
 14219                           ;LCD.c: 65: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14220                           
 14221  0AE3  0023               	movlb	3	; select bank3
 14222  0AE4  0C0F               	rrf	15,w	;volatile
 14223  0AE5  0C89               	rrf	9,f
 14224  0AE6  3901               	andlw	1
 14225  0AE7  0020               	movlb	0	; select bank0
 14226  0AE8  00A3               	movwf	??_LCDsend2x4
 14227  0AE9  0023               	movlb	3	; select bank3
 14228  0AEA  0811               	movf	17,w	;volatile
 14229  0AEB  391F               	andlw	31
 14230  0AEC  0020               	movlb	0	; select bank0
 14231  0AED  0423               	iorwf	??_LCDsend2x4,w
 14232  0AEE  1D03               	btfss	3,2
 14233  0AEF  2AF1               	goto	u2351
 14234  0AF0  2AF2               	goto	u2350
 14235  0AF1                     u2351:
 14236  0AF1  2AE3               	goto	l3618
 14237  0AF2                     u2350:
 14238  0AF2                     l890:
 14239                           
 14240                           ;LCD.c: 66: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP1
      +                          STATbits.R_W));
 14241  0AF2  0023               	movlb	3	; select bank3
 14242  0AF3  1411               	bsf	17,0	;volatile
 14243  0AF4                     l891:
 14244  0AF4  1811               	btfsc	17,0	;volatile
 14245  0AF5  2AF7               	goto	u2361
 14246  0AF6  2AF8               	goto	u2360
 14247  0AF7                     u2361:
 14248  0AF7  2AF4               	goto	l891
 14249  0AF8                     u2360:
 14250  0AF8                     l3620:
 14251  0AF8  0023               	movlb	3	; select bank3
 14252  0AF9  0C0F               	rrf	15,w	;volatile
 14253  0AFA  0C89               	rrf	9,f
 14254  0AFB  3901               	andlw	1
 14255  0AFC  0020               	movlb	0	; select bank0
 14256  0AFD  00A3               	movwf	??_LCDsend2x4
 14257  0AFE  0023               	movlb	3	; select bank3
 14258  0AFF  0811               	movf	17,w	;volatile
 14259  0B00  391F               	andlw	31
 14260  0B01  0020               	movlb	0	; select bank0
 14261  0B02  0423               	iorwf	??_LCDsend2x4,w
 14262  0B03  1D03               	btfss	3,2
 14263  0B04  2B06               	goto	u2371
 14264  0B05  2B07               	goto	u2370
 14265  0B06                     u2371:
 14266  0B06  2AF8               	goto	l3620
 14267  0B07                     u2370:
 14268  0B07                     l3622:
 14269                           
 14270                           ;LCD.c: 67: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14271  0B07  304E               	movlw	78
 14272  0B08  3188  20F1  318A   	fcall	_WriteI2C
 14273  0B0B                     l3624:
 14274  0B0B  0023               	movlb	3	; select bank3
 14275  0B0C  0C0F               	rrf	15,w	;volatile
 14276  0B0D  0C89               	rrf	9,f
 14277  0B0E  3901               	andlw	1
 14278  0B0F  0020               	movlb	0	; select bank0
 14279  0B10  00A3               	movwf	??_LCDsend2x4
 14280  0B11  0023               	movlb	3	; select bank3
 14281  0B12  0811               	movf	17,w	;volatile
 14282  0B13  391F               	andlw	31
 14283  0B14  0020               	movlb	0	; select bank0
 14284  0B15  0423               	iorwf	??_LCDsend2x4,w
 14285  0B16  1D03               	btfss	3,2
 14286  0B17  2B19               	goto	u2381
 14287  0B18  2B1A               	goto	u2380
 14288  0B19                     u2381:
 14289  0B19  2B0B               	goto	l3624
 14290  0B1A                     u2380:
 14291  0B1A                     l3626:
 14292                           
 14293                           ;LCD.c: 68: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14294  0B1A  0826               	movf	LCDsend2x4@hc,w
 14295  0B1B  0422               	iorwf	LCDsend2x4@mode,w
 14296  0B1C  3808               	iorlw	8
 14297  0B1D  3188  20F1  318A   	fcall	_WriteI2C
 14298  0B20                     l3628:
 14299  0B20  0023               	movlb	3	; select bank3
 14300  0B21  0C0F               	rrf	15,w	;volatile
 14301  0B22  0C89               	rrf	9,f
 14302  0B23  3901               	andlw	1
 14303  0B24  0020               	movlb	0	; select bank0
 14304  0B25  00A3               	movwf	??_LCDsend2x4
 14305  0B26  0023               	movlb	3	; select bank3
 14306  0B27  0811               	movf	17,w	;volatile
 14307  0B28  391F               	andlw	31
 14308  0B29  0020               	movlb	0	; select bank0
 14309  0B2A  0423               	iorwf	??_LCDsend2x4,w
 14310  0B2B  1D03               	btfss	3,2
 14311  0B2C  2B2E               	goto	u2391
 14312  0B2D  2B2F               	goto	u2390
 14313  0B2E                     u2391:
 14314  0B2E  2B20               	goto	l3628
 14315  0B2F                     u2390:
 14316  0B2F                     l3630:
 14317                           
 14318                           ;LCD.c: 69: WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.
      +                          R_W));
 14319  0B2F  0826               	movf	LCDsend2x4@hc,w
 14320  0B30  0422               	iorwf	LCDsend2x4@mode,w
 14321  0B31  380C               	iorlw	12
 14322  0B32  3188  20F1  318A   	fcall	_WriteI2C
 14323  0B35                     l3632:
 14324  0B35  0023               	movlb	3	; select bank3
 14325  0B36  0C0F               	rrf	15,w	;volatile
 14326  0B37  0C89               	rrf	9,f
 14327  0B38  3901               	andlw	1
 14328  0B39  0020               	movlb	0	; select bank0
 14329  0B3A  00A3               	movwf	??_LCDsend2x4
 14330  0B3B  0023               	movlb	3	; select bank3
 14331  0B3C  0811               	movf	17,w	;volatile
 14332  0B3D  391F               	andlw	31
 14333  0B3E  0020               	movlb	0	; select bank0
 14334  0B3F  0423               	iorwf	??_LCDsend2x4,w
 14335  0B40  1D03               	btfss	3,2
 14336  0B41  2B43               	goto	u2401
 14337  0B42  2B44               	goto	u2400
 14338  0B43                     u2401:
 14339  0B43  2B35               	goto	l3632
 14340  0B44                     u2400:
 14341  0B44                     l905:
 14342  0B44                     l3634:	
 14343                           ;LCD.c: 70: _delay((unsigned long)((1)*(1000000/4000000.0)));
 14344                           
 14345                           
 14346                           ;LCD.c: 71: WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14347  0B44  0020               	movlb	0	; select bank0
 14348  0B45  0826               	movf	LCDsend2x4@hc,w
 14349  0B46  0422               	iorwf	LCDsend2x4@mode,w
 14350  0B47  3808               	iorlw	8
 14351  0B48  3188  20F1  318A   	fcall	_WriteI2C
 14352  0B4B                     l3636:
 14353  0B4B  0023               	movlb	3	; select bank3
 14354  0B4C  0C0F               	rrf	15,w	;volatile
 14355  0B4D  0C89               	rrf	9,f
 14356  0B4E  3901               	andlw	1
 14357  0B4F  0020               	movlb	0	; select bank0
 14358  0B50  00A3               	movwf	??_LCDsend2x4
 14359  0B51  0023               	movlb	3	; select bank3
 14360  0B52  0811               	movf	17,w	;volatile
 14361  0B53  391F               	andlw	31
 14362  0B54  0020               	movlb	0	; select bank0
 14363  0B55  0423               	iorwf	??_LCDsend2x4,w
 14364  0B56  1D03               	btfss	3,2
 14365  0B57  2B59               	goto	u2411
 14366  0B58  2B5A               	goto	u2410
 14367  0B59                     u2411:
 14368  0B59  2B4B               	goto	l3636
 14369  0B5A                     u2410:
 14370  0B5A                     l3638:
 14371                           
 14372                           ;LCD.c: 72: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14373  0B5A  0827               	movf	LCDsend2x4@lc,w
 14374  0B5B  0422               	iorwf	LCDsend2x4@mode,w
 14375  0B5C  3808               	iorlw	8
 14376  0B5D  3188  20F1  318A   	fcall	_WriteI2C
 14377  0B60                     l3640:
 14378  0B60  0023               	movlb	3	; select bank3
 14379  0B61  0C0F               	rrf	15,w	;volatile
 14380  0B62  0C89               	rrf	9,f
 14381  0B63  3901               	andlw	1
 14382  0B64  0020               	movlb	0	; select bank0
 14383  0B65  00A3               	movwf	??_LCDsend2x4
 14384  0B66  0023               	movlb	3	; select bank3
 14385  0B67  0811               	movf	17,w	;volatile
 14386  0B68  391F               	andlw	31
 14387  0B69  0020               	movlb	0	; select bank0
 14388  0B6A  0423               	iorwf	??_LCDsend2x4,w
 14389  0B6B  1D03               	btfss	3,2
 14390  0B6C  2B6E               	goto	u2421
 14391  0B6D  2B6F               	goto	u2420
 14392  0B6E                     u2421:
 14393  0B6E  2B60               	goto	l3640
 14394  0B6F                     u2420:
 14395  0B6F                     l3642:
 14396                           
 14397                           ;LCD.c: 73: WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.
      +                          R_W));
 14398  0B6F  0827               	movf	LCDsend2x4@lc,w
 14399  0B70  0422               	iorwf	LCDsend2x4@mode,w
 14400  0B71  380C               	iorlw	12
 14401  0B72  3188  20F1  318A   	fcall	_WriteI2C
 14402  0B75                     l3644:
 14403  0B75  0023               	movlb	3	; select bank3
 14404  0B76  0C0F               	rrf	15,w	;volatile
 14405  0B77  0C89               	rrf	9,f
 14406  0B78  3901               	andlw	1
 14407  0B79  0020               	movlb	0	; select bank0
 14408  0B7A  00A3               	movwf	??_LCDsend2x4
 14409  0B7B  0023               	movlb	3	; select bank3
 14410  0B7C  0811               	movf	17,w	;volatile
 14411  0B7D  391F               	andlw	31
 14412  0B7E  0020               	movlb	0	; select bank0
 14413  0B7F  0423               	iorwf	??_LCDsend2x4,w
 14414  0B80  1D03               	btfss	3,2
 14415  0B81  2B83               	goto	u2431
 14416  0B82  2B84               	goto	u2430
 14417  0B83                     u2431:
 14418  0B83  2B75               	goto	l3644
 14419  0B84                     u2430:
 14420  0B84                     l914:
 14421  0B84                     l3646:	
 14422                           ;LCD.c: 74: _delay((unsigned long)((1)*(1000000/4000000.0)));
 14423                           
 14424                           
 14425                           ;LCD.c: 75: WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14426  0B84  0020               	movlb	0	; select bank0
 14427  0B85  0827               	movf	LCDsend2x4@lc,w
 14428  0B86  0422               	iorwf	LCDsend2x4@mode,w
 14429  0B87  3808               	iorlw	8
 14430  0B88  3188  20F1  318A   	fcall	_WriteI2C
 14431  0B8B                     l3648:
 14432  0B8B  0023               	movlb	3	; select bank3
 14433  0B8C  0C0F               	rrf	15,w	;volatile
 14434  0B8D  0C89               	rrf	9,f
 14435  0B8E  3901               	andlw	1
 14436  0B8F  0020               	movlb	0	; select bank0
 14437  0B90  00A3               	movwf	??_LCDsend2x4
 14438  0B91  0023               	movlb	3	; select bank3
 14439  0B92  0811               	movf	17,w	;volatile
 14440  0B93  391F               	andlw	31
 14441  0B94  0020               	movlb	0	; select bank0
 14442  0B95  0423               	iorwf	??_LCDsend2x4,w
 14443  0B96  1D03               	btfss	3,2
 14444  0B97  2B99               	goto	u2441
 14445  0B98  2B9A               	goto	u2440
 14446  0B99                     u2441:
 14447  0B99  2B8B               	goto	l3648
 14448  0B9A                     u2440:
 14449  0B9A                     l917:
 14450                           
 14451                           ;LCD.c: 76: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 14452  0B9A  0023               	movlb	3	; select bank3
 14453  0B9B  1511               	bsf	17,2	;volatile
 14454  0B9C                     l918:
 14455  0B9C  1911               	btfsc	17,2	;volatile
 14456  0B9D  2B9F               	goto	u2451
 14457  0B9E  2BA0               	goto	u2450
 14458  0B9F                     u2451:
 14459  0B9F  2B9C               	goto	l918
 14460  0BA0                     u2450:
 14461  0BA0                     l3650:
 14462                           
 14463                           ;LCD.c: 77: _delay((unsigned long)((50)*(1000000/4000000.0)));
 14464  0BA0  3004               	movlw	4
 14465  0BA1                     u4547:
 14466  0BA1  0B89               	decfsz	9,f
 14467  0BA2  2BA1               	goto	u4547
 14468  0BA3                     l921:
 14469  0BA3  0008               	return
 14470  0BA4                     __end_of_LCDsend2x4:
 14471                           
 14472                           	psect	text40
 14473  089E                     __ptext40:	
 14474 ;; *************** function _LCDsend *****************
 14475 ;; Defined at:
 14476 ;;		line 18 in file "LCD.c"
 14477 ;; Parameters:    Size  Location     Type
 14478 ;;  c               1    wreg     unsigned char 
 14479 ;; Auto vars:     Size  Location     Type
 14480 ;;  c               1    3[BANK0 ] unsigned char 
 14481 ;; Return value:  Size  Location     Type
 14482 ;;                  1    wreg      void 
 14483 ;; Registers used:
 14484 ;;		wreg, status,2, status,0, pclath, cstack
 14485 ;; Tracked objects:
 14486 ;;		On entry : 0/0
 14487 ;;		On exit  : 0/0
 14488 ;;		Unchanged: 0/0
 14489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14491 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14492 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14493 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14494 ;;Total ram usage:        2 bytes
 14495 ;; Hardware stack levels used:    1
 14496 ;; Hardware stack levels required when called:    6
 14497 ;; This function calls:
 14498 ;;		_WriteI2C
 14499 ;; This function is called by:
 14500 ;;		_LCDinit
 14501 ;; This function uses a non-reentrant model
 14502 ;;
 14503                           
 14504                           
 14505                           ;psect for function _LCDsend
 14506  089E                     _LCDsend:
 14507                           
 14508                           ;incstack = 0
 14509                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 14510                           ;LCDsend@c stored from wreg
 14511  089E  0020               	movlb	0	; select bank0
 14512  089F  00A3               	movwf	LCDsend@c
 14513  08A0                     l3988:
 14514  08A0                     l3990:	
 14515                           ;LCD.c: 20: while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14516                           
 14517  08A0  0023               	movlb	3	; select bank3
 14518  08A1  0C0F               	rrf	15,w	;volatile
 14519  08A2  0C89               	rrf	9,f
 14520  08A3  3901               	andlw	1
 14521  08A4  0020               	movlb	0	; select bank0
 14522  08A5  00A2               	movwf	??_LCDsend
 14523  08A6  0023               	movlb	3	; select bank3
 14524  08A7  0811               	movf	17,w	;volatile
 14525  08A8  391F               	andlw	31
 14526  08A9  0020               	movlb	0	; select bank0
 14527  08AA  0422               	iorwf	??_LCDsend,w
 14528  08AB  1D03               	btfss	3,2
 14529  08AC  28AE               	goto	u2921
 14530  08AD  28AF               	goto	u2920
 14531  08AE                     u2921:
 14532  08AE  28A0               	goto	l3990
 14533  08AF                     u2920:
 14534  08AF                     l788:
 14535                           
 14536                           ;LCD.c: 21: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); while ((SSP1CON2 & 0x1F) | (SSP1
      +                          STATbits.R_W));
 14537  08AF  0023               	movlb	3	; select bank3
 14538  08B0  1411               	bsf	17,0	;volatile
 14539  08B1                     l789:
 14540  08B1  1811               	btfsc	17,0	;volatile
 14541  08B2  28B4               	goto	u2931
 14542  08B3  28B5               	goto	u2930
 14543  08B4                     u2931:
 14544  08B4  28B1               	goto	l789
 14545  08B5                     u2930:
 14546  08B5                     l3992:
 14547  08B5  0023               	movlb	3	; select bank3
 14548  08B6  0C0F               	rrf	15,w	;volatile
 14549  08B7  0C89               	rrf	9,f
 14550  08B8  3901               	andlw	1
 14551  08B9  0020               	movlb	0	; select bank0
 14552  08BA  00A2               	movwf	??_LCDsend
 14553  08BB  0023               	movlb	3	; select bank3
 14554  08BC  0811               	movf	17,w	;volatile
 14555  08BD  391F               	andlw	31
 14556  08BE  0020               	movlb	0	; select bank0
 14557  08BF  0422               	iorwf	??_LCDsend,w
 14558  08C0  1D03               	btfss	3,2
 14559  08C1  28C3               	goto	u2941
 14560  08C2  28C4               	goto	u2940
 14561  08C3                     u2941:
 14562  08C3  28B5               	goto	l3992
 14563  08C4                     u2940:
 14564  08C4                     l3994:
 14565                           
 14566                           ;LCD.c: 22: WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14567  08C4  304E               	movlw	78
 14568  08C5  3188  20F1  3188   	fcall	_WriteI2C
 14569  08C8                     l3996:
 14570  08C8  0023               	movlb	3	; select bank3
 14571  08C9  0C0F               	rrf	15,w	;volatile
 14572  08CA  0C89               	rrf	9,f
 14573  08CB  3901               	andlw	1
 14574  08CC  0020               	movlb	0	; select bank0
 14575  08CD  00A2               	movwf	??_LCDsend
 14576  08CE  0023               	movlb	3	; select bank3
 14577  08CF  0811               	movf	17,w	;volatile
 14578  08D0  391F               	andlw	31
 14579  08D1  0020               	movlb	0	; select bank0
 14580  08D2  0422               	iorwf	??_LCDsend,w
 14581  08D3  1D03               	btfss	3,2
 14582  08D4  28D6               	goto	u2951
 14583  08D5  28D7               	goto	u2950
 14584  08D6                     u2951:
 14585  08D6  28C8               	goto	l3996
 14586  08D7                     u2950:
 14587  08D7                     l3998:
 14588                           
 14589                           ;LCD.c: 23: WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14590  08D7  0823               	movf	LCDsend@c,w
 14591  08D8  3188  20F1  3188   	fcall	_WriteI2C
 14592  08DB                     l4000:
 14593  08DB  0023               	movlb	3	; select bank3
 14594  08DC  0C0F               	rrf	15,w	;volatile
 14595  08DD  0C89               	rrf	9,f
 14596  08DE  3901               	andlw	1
 14597  08DF  0020               	movlb	0	; select bank0
 14598  08E0  00A2               	movwf	??_LCDsend
 14599  08E1  0023               	movlb	3	; select bank3
 14600  08E2  0811               	movf	17,w	;volatile
 14601  08E3  391F               	andlw	31
 14602  08E4  0020               	movlb	0	; select bank0
 14603  08E5  0422               	iorwf	??_LCDsend,w
 14604  08E6  1D03               	btfss	3,2
 14605  08E7  28E9               	goto	u2961
 14606  08E8  28EA               	goto	u2960
 14607  08E9                     u2961:
 14608  08E9  28DB               	goto	l4000
 14609  08EA                     u2960:
 14610  08EA                     l800:
 14611                           
 14612                           ;LCD.c: 24: SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN);
 14613  08EA  0023               	movlb	3	; select bank3
 14614  08EB  1511               	bsf	17,2	;volatile
 14615  08EC                     l801:
 14616  08EC  1911               	btfsc	17,2	;volatile
 14617  08ED  28EF               	goto	u2971
 14618  08EE  28F0               	goto	u2970
 14619  08EF                     u2971:
 14620  08EF  28EC               	goto	l801
 14621  08F0                     u2970:
 14622  08F0                     l804:
 14623  08F0  0008               	return
 14624  08F1                     __end_of_LCDsend:
 14625                           
 14626                           	psect	text41
 14627  08F1                     __ptext41:	
 14628 ;; *************** function _WriteI2C *****************
 14629 ;; Defined at:
 14630 ;;		line 47 in file "I2C/i2c.c"
 14631 ;; Parameters:    Size  Location     Type
 14632 ;;  data_out        1    wreg     unsigned char 
 14633 ;; Auto vars:     Size  Location     Type
 14634 ;;  data_out        1    1[BANK0 ] unsigned char 
 14635 ;; Return value:  Size  Location     Type
 14636 ;;                  1    wreg      char 
 14637 ;; Registers used:
 14638 ;;		wreg, status,2, status,0
 14639 ;; Tracked objects:
 14640 ;;		On entry : 0/0
 14641 ;;		On exit  : 0/0
 14642 ;;		Unchanged: 0/0
 14643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14645 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14646 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14647 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14648 ;;Total ram usage:        2 bytes
 14649 ;; Hardware stack levels used:    1
 14650 ;; Hardware stack levels required when called:    5
 14651 ;; This function calls:
 14652 ;;		Nothing
 14653 ;; This function is called by:
 14654 ;;		_tsttc
 14655 ;;		_LCDsend
 14656 ;;		_LCDsend2x4
 14657 ;;		_LCDrecv
 14658 ;; This function uses a non-reentrant model
 14659 ;;
 14660                           
 14661                           
 14662                           ;psect for function _WriteI2C
 14663  08F1                     _WriteI2C:
 14664                           
 14665                           ;incstack = 0
 14666                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 14667                           ;WriteI2C@data_out stored from wreg
 14668  08F1  0020               	movlb	0	; select bank0
 14669  08F2  00A1               	movwf	WriteI2C@data_out
 14670  08F3                     l3584:
 14671                           
 14672                           ;i2c.c: 49: SSP1BUF = data_out;
 14673  08F3  0821               	movf	WriteI2C@data_out,w
 14674  08F4  0023               	movlb	3	; select bank3
 14675  08F5  008C               	movwf	12	;volatile
 14676  08F6                     l3586:
 14677                           
 14678                           ;i2c.c: 50: if ( SSP1CON1bits.WCOL )
 14679  08F6  1F90               	btfss	16,7	;volatile
 14680  08F7  28F9               	goto	u2251
 14681  08F8  28FA               	goto	u2250
 14682  08F9                     u2251:
 14683  08F9  28FB               	goto	l3592
 14684  08FA                     u2250:
 14685  08FA  294A               	goto	l30
 14686  08FB                     l3592:
 14687                           
 14688                           ;i2c.c: 52: else;i2c.c: 53: {;i2c.c: 54: if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)
      +                          !=0x0B) )
 14689  08FB  300F               	movlw	15
 14690  08FC  0510               	andwf	16,w	;volatile
 14691  08FD  0020               	movlb	0	; select bank0
 14692  08FE  00A0               	movwf	??_WriteI2C
 14693  08FF  3008               	movlw	8
 14694  0900  0620               	xorwf	??_WriteI2C,w
 14695  0901  1903               	btfsc	3,2
 14696  0902  2904               	goto	u2261
 14697  0903  2905               	goto	u2260
 14698  0904                     u2261:
 14699  0904  291E               	goto	l3604
 14700  0905                     u2260:
 14701  0905                     l3594:
 14702  0905  300F               	movlw	15
 14703  0906  0023               	movlb	3	; select bank3
 14704  0907  0510               	andwf	16,w	;volatile
 14705  0908  0020               	movlb	0	; select bank0
 14706  0909  00A0               	movwf	??_WriteI2C
 14707  090A  300B               	movlw	11
 14708  090B  0620               	xorwf	??_WriteI2C,w
 14709  090C  1903               	btfsc	3,2
 14710  090D  290F               	goto	u2271
 14711  090E  2910               	goto	u2270
 14712  090F                     u2271:
 14713  090F  291E               	goto	l3604
 14714  0910                     u2270:
 14715  0910                     l3596:
 14716                           
 14717                           ;i2c.c: 55: {;i2c.c: 56: SSP1CON1bits.CKP = 1;
 14718  0910  0023               	movlb	3	; select bank3
 14719  0911  1610               	bsf	16,4	;volatile
 14720  0912                     l33:	
 14721                           ;i2c.c: 57: while ( !PIR3bits.SSP1IF );
 14722                           
 14723  0912  002E               	movlb	14	; select bank14
 14724  0913  1C0F               	btfss	15,0	;volatile
 14725  0914  2916               	goto	u2281
 14726  0915  2917               	goto	u2280
 14727  0916                     u2281:
 14728  0916  2912               	goto	l33
 14729  0917                     u2280:
 14730  0917                     l35:
 14731                           
 14732                           ;i2c.c: 59: if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 14733  0917  0023               	movlb	3	; select bank3
 14734  0918  190F               	btfsc	15,2	;volatile
 14735  0919  291B               	goto	u2291
 14736  091A  291C               	goto	u2290
 14737  091B                     u2291:
 14738  091B  294A               	goto	l30
 14739  091C                     u2290:
 14740  091C                     l3598:
 14741  091C  080F               	movf	15,w	;volatile
 14742  091D  294A               	goto	l30
 14743  091E                     l3604:
 14744                           
 14745                           ;i2c.c: 68: else if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 14746  091E  300F               	movlw	15
 14747  091F  0023               	movlb	3	; select bank3
 14748  0920  0510               	andwf	16,w	;volatile
 14749  0921  0020               	movlb	0	; select bank0
 14750  0922  00A0               	movwf	??_WriteI2C
 14751  0923  3008               	movlw	8
 14752  0924  0620               	xorwf	??_WriteI2C,w
 14753  0925  1903               	btfsc	3,2
 14754  0926  2928               	goto	u2301
 14755  0927  2929               	goto	u2300
 14756  0928                     u2301:
 14757  0928  2934               	goto	l42
 14758  0929                     u2300:
 14759  0929                     l3606:
 14760  0929  300F               	movlw	15
 14761  092A  0023               	movlb	3	; select bank3
 14762  092B  0510               	andwf	16,w	;volatile
 14763  092C  0020               	movlb	0	; select bank0
 14764  092D  00A0               	movwf	??_WriteI2C
 14765  092E  300B               	movlw	11
 14766  092F  0620               	xorwf	??_WriteI2C,w
 14767  0930  1D03               	btfss	3,2
 14768  0931  2933               	goto	u2311
 14769  0932  2934               	goto	u2310
 14770  0933                     u2311:
 14771  0933  294A               	goto	l30
 14772  0934                     u2310:
 14773  0934                     l42:
 14774  0934  0023               	movlb	3	; select bank3
 14775  0935  180F               	btfsc	15,0	;volatile
 14776  0936  2938               	goto	u2321
 14777  0937  2939               	goto	u2320
 14778  0938                     u2321:
 14779  0938  2934               	goto	l42
 14780  0939                     u2320:
 14781  0939                     l3608:
 14782  0939  0023               	movlb	3	; select bank3
 14783  093A  0C0F               	rrf	15,w	;volatile
 14784  093B  0C89               	rrf	9,f
 14785  093C  3901               	andlw	1
 14786  093D  0020               	movlb	0	; select bank0
 14787  093E  00A0               	movwf	??_WriteI2C
 14788  093F  0023               	movlb	3	; select bank3
 14789  0940  0811               	movf	17,w	;volatile
 14790  0941  391F               	andlw	31
 14791  0942  0020               	movlb	0	; select bank0
 14792  0943  0420               	iorwf	??_WriteI2C,w
 14793  0944  1D03               	btfss	3,2
 14794  0945  2947               	goto	u2331
 14795  0946  2948               	goto	u2330
 14796  0947                     u2331:
 14797  0947  2939               	goto	l3608
 14798  0948                     u2330:
 14799  0948                     l47:
 14800                           
 14801                           ;i2c.c: 72: if ( SSP1CON2bits.ACKSTAT )
 14802  0948  0023               	movlb	3	; select bank3
 14803  0949  0811               	movf	17,w	;volatile
 14804  094A                     l30:
 14805  094A  0008               	return
 14806  094B                     __end_of_WriteI2C:
 14807                           
 14808                           	psect	intentry
 14809  0004                     __pintentry:	
 14810 ;; *************** function _INTERRUPT_InterruptManager *****************
 14811 ;; Defined at:
 14812 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14813 ;; Parameters:    Size  Location     Type
 14814 ;;		None
 14815 ;; Auto vars:     Size  Location     Type
 14816 ;;		None
 14817 ;; Return value:  Size  Location     Type
 14818 ;;                  1    wreg      void 
 14819 ;; Registers used:
 14820 ;;		wreg, status,2, status,0, pclath, cstack
 14821 ;; Tracked objects:
 14822 ;;		On entry : 0/0
 14823 ;;		On exit  : 0/0
 14824 ;;		Unchanged: 0/0
 14825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14829 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14830 ;;Total ram usage:        0 bytes
 14831 ;; Hardware stack levels used:    1
 14832 ;; Hardware stack levels required when called:    4
 14833 ;; This function calls:
 14834 ;;		_TMR0_ISR
 14835 ;; This function is called by:
 14836 ;;		Interrupt level 1
 14837 ;; This function uses a non-reentrant model
 14838 ;;
 14839                           
 14840  0004                     _INTERRUPT_InterruptManager:
 14841                           
 14842                           ;incstack = 0
 14843  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 14844                           
 14845                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 14846  0005  3180               	pagesel	$
 14847  0006                     i1l4796:
 14848                           
 14849                           ;interrupt_manager.c: 55: if(PIE0bits.TMR0IE == 1 && PIR0bits.TMR0IF == 1)
 14850  0006  002E               	movlb	14	; select bank14
 14851  0007  1E96               	btfss	22,5	;volatile
 14852  0008  280A               	goto	u406_21
 14853  0009  280B               	goto	u406_20
 14854  000A                     u406_21:
 14855  000A  2813               	goto	i1l330
 14856  000B                     u406_20:
 14857  000B                     i1l4798:
 14858  000B  1E8C               	btfss	12,5	;volatile
 14859  000C  280E               	goto	u407_21
 14860  000D  280F               	goto	u407_20
 14861  000E                     u407_21:
 14862  000E  2813               	goto	i1l330
 14863  000F                     u407_20:
 14864  000F                     i1l4800:
 14865                           
 14866                           ;interrupt_manager.c: 56: {;interrupt_manager.c: 57: TMR0_ISR();
 14867  000F  3196  2660  3180   	fcall	_TMR0_ISR
 14868                           
 14869                           ;interrupt_manager.c: 58: }
 14870  0012  2826               	goto	i1l338
 14871  0013                     i1l330:
 14872                           
 14873                           ;interrupt_manager.c: 59: else if(INTCONbits.PEIE == 1)
 14874  0013  1F0B               	btfss	11,6	;volatile
 14875  0014  2816               	goto	u408_21
 14876  0015  2817               	goto	u408_20
 14877  0016                     u408_21:
 14878  0016  2826               	goto	i1l338
 14879  0017                     u408_20:
 14880  0017                     i1l4802:
 14881                           
 14882                           ;interrupt_manager.c: 60: {;interrupt_manager.c: 61: if(PIE3bits.BCL1IE == 1 && PIR3bits
      +                          .BCL1IF == 1)
 14883  0017  1C99               	btfss	25,1	;volatile
 14884  0018  281A               	goto	u409_21
 14885  0019  281B               	goto	u409_20
 14886  001A                     u409_21:
 14887  001A  2820               	goto	i1l333
 14888  001B                     u409_20:
 14889  001B                     i1l4804:
 14890                           
 14891                           ;interrupt_manager.c: 62: {;interrupt_manager.c: 63: i2c1_driver_busCollisionISR();
 14892  001B  1C8F               	btfss	15,1	;volatile
 14893  001C  281E               	goto	u410_21
 14894  001D  281F               	goto	u410_20
 14895  001E                     u410_21:
 14896  001E  2820               	goto	i1l333
 14897  001F                     u410_20:
 14898  001F  2826               	goto	i1l338
 14899  0020                     i1l333:
 14900                           
 14901                           ;interrupt_manager.c: 65: else if(PIE3bits.SSP1IE == 1 && PIR3bits.SSP1IF == 1)
 14902  0020  1C19               	btfss	25,0	;volatile
 14903  0021  2823               	goto	u411_21
 14904  0022  2824               	goto	u411_20
 14905  0023                     u411_21:
 14906  0023  2826               	goto	i1l337
 14907  0024                     u411_20:
 14908  0024                     i1l4808:
 14909                           
 14910                           ;interrupt_manager.c: 66: {;interrupt_manager.c: 67: i2c1_driver_i2cISR();
 14911  0024  080F               	movf	15,w	;volatile
 14912  0025  2826               	goto	i1l338
 14913  0026                     i1l337:	
 14914                           ;interrupt_manager.c: 74: else;interrupt_manager.c: 75: {
 14915                           
 14916  0026                     i1l338:
 14917  0026  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 14918  0027  0009               	retfie
 14919  0028                     __end_of_INTERRUPT_InterruptManager:
 14920                           
 14921                           	psect	text43
 14922  1660                     __ptext43:	
 14923 ;; *************** function _TMR0_ISR *****************
 14924 ;; Defined at:
 14925 ;;		line 121 in file "mcc_generated_files/tmr0.c"
 14926 ;; Parameters:    Size  Location     Type
 14927 ;;		None
 14928 ;; Auto vars:     Size  Location     Type
 14929 ;;		None
 14930 ;; Return value:  Size  Location     Type
 14931 ;;                  1    wreg      void 
 14932 ;; Registers used:
 14933 ;;		wreg, status,2, status,0, pclath, cstack
 14934 ;; Tracked objects:
 14935 ;;		On entry : 0/0
 14936 ;;		On exit  : 0/0
 14937 ;;		Unchanged: 0/0
 14938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14943 ;;Total ram usage:        0 bytes
 14944 ;; Hardware stack levels used:    1
 14945 ;; Hardware stack levels required when called:    3
 14946 ;; This function calls:
 14947 ;;		_TMR0_CallBack
 14948 ;; This function is called by:
 14949 ;;		_INTERRUPT_InterruptManager
 14950 ;; This function uses a non-reentrant model
 14951 ;;
 14952                           
 14953                           
 14954                           ;psect for function _TMR0_ISR
 14955  1660                     _TMR0_ISR:
 14956  1660                     i1l4152:	
 14957                           ;incstack = 0
 14958                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
 14959                           
 14960                           
 14961                           ;tmr0.c: 123: static volatile uint16_t CountCallBack = 0;;tmr0.c: 126: PIR0bits.TMR0IF =
      +                           0;
 14962  1660  002E               	movlb	14	; select bank14
 14963  1661  128C               	bcf	12,5	;volatile
 14964  1662                     i1l4154:
 14965                           
 14966                           ;tmr0.c: 128: if (++CountCallBack >= 244)
 14967  1662  3001               	movlw	1
 14968  1663  0021               	movlb	1	; select bank1
 14969  1664  07AC               	addwf	TMR0_ISR@CountCallBack^(0+128),f	;volatile
 14970  1665  3000               	movlw	0
 14971  1666  3DAD               	addwfc	(TMR0_ISR@CountCallBack+1)^(0+128),f	;volatile
 14972  1667  3000               	movlw	0
 14973  1668  022D               	subwf	(TMR0_ISR@CountCallBack+1)^(0+128),w	;volatile
 14974  1669  30F4               	movlw	244
 14975  166A  1903               	skipnz
 14976  166B  022C               	subwf	TMR0_ISR@CountCallBack^(0+128),w	;volatile
 14977  166C  1C03               	skipc
 14978  166D  2E6F               	goto	u318_21
 14979  166E  2E70               	goto	u318_20
 14980  166F                     u318_21:
 14981  166F  2E76               	goto	i1l384
 14982  1670                     u318_20:
 14983  1670                     i1l4156:
 14984                           
 14985                           ;tmr0.c: 129: {;tmr0.c: 131: TMR0_CallBack();
 14986  1670  3195  257F  3196   	fcall	_TMR0_CallBack
 14987  1673                     i1l4158:
 14988                           
 14989                           ;tmr0.c: 134: CountCallBack = 0;
 14990  1673  0021               	movlb	1	; select bank1
 14991  1674  01AC               	clrf	TMR0_ISR@CountCallBack^(0+128)	;volatile
 14992  1675  01AD               	clrf	(TMR0_ISR@CountCallBack+1)^(0+128)	;volatile
 14993  1676                     i1l384:
 14994  1676  0008               	return
 14995  1677                     __end_of_TMR0_ISR:
 14996                           
 14997                           	psect	text44
 14998  157F                     __ptext44:	
 14999 ;; *************** function _TMR0_CallBack *****************
 15000 ;; Defined at:
 15001 ;;		line 140 in file "mcc_generated_files/tmr0.c"
 15002 ;; Parameters:    Size  Location     Type
 15003 ;;		None
 15004 ;; Auto vars:     Size  Location     Type
 15005 ;;		None
 15006 ;; Return value:  Size  Location     Type
 15007 ;;                  1    wreg      void 
 15008 ;; Registers used:
 15009 ;;		wreg, status,2, status,0, pclath, cstack
 15010 ;; Tracked objects:
 15011 ;;		On entry : 0/0
 15012 ;;		On exit  : 0/0
 15013 ;;		Unchanged: 0/0
 15014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15019 ;;Total ram usage:        0 bytes
 15020 ;; Hardware stack levels used:    1
 15021 ;; Hardware stack levels required when called:    2
 15022 ;; This function calls:
 15023 ;;		Absolute function
 15024 ;;		_TMR0_DefaultInterruptHandler
 15025 ;;		_TMR0_callback
 15026 ;; This function is called by:
 15027 ;;		_TMR0_ISR
 15028 ;; This function uses a non-reentrant model
 15029 ;;
 15030                           
 15031                           
 15032                           ;psect for function _TMR0_CallBack
 15033  157F                     _TMR0_CallBack:
 15034  157F                     i1l3942:	
 15035                           ;incstack = 0
 15036                           ; Regs used in _TMR0_CallBack: [wreg+status,2+status,0+pclath+cstack]
 15037                           
 15038                           
 15039                           ;tmr0.c: 144: if(TMR0_InterruptHandler)
 15040  157F  0021               	movlb	1	; select bank1
 15041  1580  083A               	movf	_TMR0_InterruptHandler^(0+128),w
 15042  1581  043B               	iorwf	(_TMR0_InterruptHandler+1)^(0+128),w
 15043  1582  1903               	btfsc	3,2
 15044  1583  2D85               	goto	u291_21
 15045  1584  2D86               	goto	u291_20
 15046  1585                     u291_21:
 15047  1585  2D8B               	goto	i1l388
 15048  1586                     u291_20:
 15049  1586                     i1l3944:
 15050                           
 15051                           ;tmr0.c: 145: {;tmr0.c: 146: TMR0_InterruptHandler();
 15052  1586  083B               	movf	(_TMR0_InterruptHandler+1)^(0+128),w
 15053  1587  008A               	movwf	10
 15054  1588  083A               	movf	_TMR0_InterruptHandler^(0+128),w
 15055  1589  000A               	callw
 15056  158A  3195               	pagesel	$
 15057  158B                     i1l388:
 15058  158B  0008               	return
 15059  158C                     __end_of_TMR0_CallBack:
 15060                           
 15061                           	psect	text45
 15062  0002                     __ptext45:	
 15063 ;; *************** function _TMR0_DefaultInterruptHandler *****************
 15064 ;; Defined at:
 15065 ;;		line 154 in file "mcc_generated_files/tmr0.c"
 15066 ;; Parameters:    Size  Location     Type
 15067 ;;		None
 15068 ;; Auto vars:     Size  Location     Type
 15069 ;;		None
 15070 ;; Return value:  Size  Location     Type
 15071 ;;                  1    wreg      void 
 15072 ;; Registers used:
 15073 ;;		None
 15074 ;; Tracked objects:
 15075 ;;		On entry : 0/0
 15076 ;;		On exit  : 0/0
 15077 ;;		Unchanged: 0/0
 15078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15079 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15080 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15082 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15083 ;;Total ram usage:        0 bytes
 15084 ;; Hardware stack levels used:    1
 15085 ;; This function calls:
 15086 ;;		Nothing
 15087 ;; This function is called by:
 15088 ;;		_TMR0_Initialize
 15089 ;;		_TMR0_CallBack
 15090 ;; This function uses a non-reentrant model
 15091 ;;
 15092                           
 15093                           
 15094                           ;psect for function _TMR0_DefaultInterruptHandler
 15095  0002                     _TMR0_DefaultInterruptHandler:
 15096  0002                     i1l394:	
 15097                           ;incstack = 0
 15098                           ; Regs used in _TMR0_DefaultInterruptHandler: []
 15099                           
 15100  0002  0008               	return
 15101  0003                     __end_of_TMR0_DefaultInterruptHandler:
 15102                           
 15103                           	psect	text46
 15104  094B                     __ptext46:	
 15105 ;; *************** function _TMR0_callback *****************
 15106 ;; Defined at:
 15107 ;;		line 379 in file "main.c"
 15108 ;; Parameters:    Size  Location     Type
 15109 ;;		None
 15110 ;; Auto vars:     Size  Location     Type
 15111 ;;		None
 15112 ;; Return value:  Size  Location     Type
 15113 ;;                  1    wreg      void 
 15114 ;; Registers used:
 15115 ;;		wreg, status,2, status,0, pclath, cstack
 15116 ;; Tracked objects:
 15117 ;;		On entry : 0/0
 15118 ;;		On exit  : 0/0
 15119 ;;		Unchanged: 0/0
 15120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15123 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15124 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15125 ;;Total ram usage:        2 bytes
 15126 ;; Hardware stack levels used:    1
 15127 ;; Hardware stack levels required when called:    1
 15128 ;; This function calls:
 15129 ;;		___awmod
 15130 ;;		___lbmod
 15131 ;;		i1_DATAEE_WriteByte
 15132 ;;		i1___lwmod
 15133 ;; This function is called by:
 15134 ;;		_main
 15135 ;;		_TMR0_CallBack
 15136 ;; This function uses a non-reentrant model
 15137 ;;
 15138                           
 15139                           
 15140                           ;psect for function _TMR0_callback
 15141  094B                     _TMR0_callback:
 15142  094B                     i1l3770:	
 15143                           ;incstack = 0
 15144                           ; Regs used in _TMR0_callback: [wreg+status,2+status,0+pclath+cstack]
 15145                           
 15146                           
 15147                           ;main.c: 380: timer_flag++;
 15148  094B  3001               	movlw	1
 15149  094C  07FB               	addwf	_timer_flag,f	;volatile
 15150  094D  3000               	movlw	0
 15151  094E  3DFC               	addwfc	_timer_flag+1,f	;volatile
 15152  094F                     i1l3772:
 15153                           
 15154                           ;main.c: 381: if(timer_flag % 60 == 0){
 15155  094F  303C               	movlw	60
 15156  0950  00F0               	movwf	i1___lwmod@divisor
 15157  0951  3000               	movlw	0
 15158  0952  00F1               	movwf	i1___lwmod@divisor+1
 15159  0953  087C               	movf	_timer_flag+1,w	;volatile
 15160  0954  00F3               	movwf	i1___lwmod@dividend+1
 15161  0955  087B               	movf	_timer_flag,w	;volatile
 15162  0956  00F2               	movwf	i1___lwmod@dividend
 15163  0957  3197  275C  3189   	fcall	i1___lwmod
 15164  095A  0870               	movf	?i1___lwmod,w
 15165  095B  0471               	iorwf	?i1___lwmod+1,w
 15166  095C  1D03               	btfss	3,2
 15167  095D  295F               	goto	u266_21
 15168  095E  2960               	goto	u266_20
 15169  095F                     u266_21:
 15170  095F  2965               	goto	i1l3776
 15171  0960                     u266_20:
 15172  0960                     i1l3774:
 15173                           
 15174                           ;main.c: 382: CLKM++;
 15175  0960  3001               	movlw	1
 15176  0961  00F7               	movwf	??_TMR0_callback
 15177  0962  0877               	movf	??_TMR0_callback,w
 15178  0963  0020               	movlb	0	; select bank0
 15179  0964  07EE               	addwf	_CLKM,f
 15180  0965                     i1l3776:
 15181                           
 15182                           ;main.c: 384: };main.c: 385: if(CLKM % 60 == 0 && CLKM != 0){
 15183  0965  303C               	movlw	60
 15184  0966  00F0               	movwf	___awmod@divisor
 15185  0967  3000               	movlw	0
 15186  0968  00F1               	movwf	___awmod@divisor+1
 15187  0969  0020               	movlb	0	; select bank0
 15188  096A  086E               	movf	_CLKM,w
 15189  096B  00F7               	movwf	??_TMR0_callback
 15190  096C  01F8               	clrf	??_TMR0_callback+1
 15191  096D  0877               	movf	??_TMR0_callback,w
 15192  096E  00F2               	movwf	___awmod@dividend
 15193  096F  0878               	movf	??_TMR0_callback+1,w
 15194  0970  00F3               	movwf	___awmod@dividend+1
 15195  0971  3188  204B  3189   	fcall	___awmod
 15196  0974  0870               	movf	?___awmod,w
 15197  0975  0471               	iorwf	?___awmod+1,w
 15198  0976  1D03               	btfss	3,2
 15199  0977  2979               	goto	u267_21
 15200  0978  297A               	goto	u267_20
 15201  0979                     u267_21:
 15202  0979  29A8               	goto	i1l612
 15203  097A                     u267_20:
 15204  097A                     i1l3778:
 15205  097A  0020               	movlb	0	; select bank0
 15206  097B  086E               	movf	_CLKM,w
 15207  097C  1903               	btfsc	3,2
 15208  097D  297F               	goto	u268_21
 15209  097E  2980               	goto	u268_20
 15210  097F                     u268_21:
 15211  097F  29A8               	goto	i1l612
 15212  0980                     u268_20:
 15213  0980                     i1l3780:
 15214                           
 15215                           ;main.c: 386: CLKH++;
 15216  0980  3001               	movlw	1
 15217  0981  00F7               	movwf	??_TMR0_callback
 15218  0982  0877               	movf	??_TMR0_callback,w
 15219  0983  07EF               	addwf	_CLKH,f
 15220  0984                     i1l3782:
 15221                           
 15222                           ;main.c: 387: CLKH %= 24;
 15223  0984  3018               	movlw	24
 15224  0985  00F7               	movwf	??_TMR0_callback
 15225  0986  0877               	movf	??_TMR0_callback,w
 15226  0987  00F0               	movwf	___lbmod@divisor
 15227  0988  086F               	movf	_CLKH,w
 15228  0989  3197  270E  3189   	fcall	___lbmod
 15229  098C  00F8               	movwf	??_TMR0_callback+1
 15230  098D  0878               	movf	??_TMR0_callback+1,w
 15231  098E  0020               	movlb	0	; select bank0
 15232  098F  00EF               	movwf	_CLKH
 15233  0990                     i1l3784:
 15234                           
 15235                           ;main.c: 388: CLKM = 0;
 15236  0990  01EE               	clrf	_CLKM
 15237  0991                     i1l3786:
 15238                           
 15239                           ;main.c: 390: DATAEE_WriteByte(159,CLKH);
 15240  0991  309F               	movlw	159
 15241  0992  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 15242  0993  3000               	movlw	0
 15243  0994  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 15244  0995  086F               	movf	_CLKH,w
 15245  0996  00F7               	movwf	??_TMR0_callback
 15246  0997  0877               	movf	??_TMR0_callback,w
 15247  0998  00F2               	movwf	i1DATAEE_WriteByte@bData
 15248  0999  3196  26B1  3189   	fcall	i1_DATAEE_WriteByte
 15249  099C                     i1l3788:
 15250                           
 15251                           ;main.c: 391: DATAEE_WriteByte(160,CLKM);
 15252  099C  30A0               	movlw	160
 15253  099D  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 15254  099E  3000               	movlw	0
 15255  099F  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 15256  09A0  0020               	movlb	0	; select bank0
 15257  09A1  086E               	movf	_CLKM,w
 15258  09A2  00F7               	movwf	??_TMR0_callback
 15259  09A3  0877               	movf	??_TMR0_callback,w
 15260  09A4  00F2               	movwf	i1DATAEE_WriteByte@bData
 15261  09A5  3196  26B1  3189   	fcall	i1_DATAEE_WriteByte
 15262  09A8                     i1l612:
 15263  09A8  0008               	return
 15264  09A9                     __end_of_TMR0_callback:
 15265                           
 15266                           	psect	text47
 15267  175C                     __ptext47:	
 15268 ;; *************** function i1___lwmod *****************
 15269 ;; Defined at:
 15270 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwmod.c"
 15271 ;; Parameters:    Size  Location     Type
 15272 ;;  divisor         2    0[COMMON] unsigned int 
 15273 ;;  dividend        2    2[COMMON] unsigned int 
 15274 ;; Auto vars:     Size  Location     Type
 15275 ;;  counter         1    5[COMMON] unsigned char 
 15276 ;; Return value:  Size  Location     Type
 15277 ;;                  2    0[COMMON] unsigned int 
 15278 ;; Registers used:
 15279 ;;		wreg, status,2, status,0
 15280 ;; Tracked objects:
 15281 ;;		On entry : 0/0
 15282 ;;		On exit  : 0/0
 15283 ;;		Unchanged: 0/0
 15284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15285 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15286 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15287 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15288 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15289 ;;Total ram usage:        6 bytes
 15290 ;; Hardware stack levels used:    1
 15291 ;; This function calls:
 15292 ;;		Nothing
 15293 ;; This function is called by:
 15294 ;;		_TMR0_callback
 15295 ;; This function uses a non-reentrant model
 15296 ;;
 15297                           
 15298                           
 15299                           ;psect for function i1___lwmod
 15300  175C                     i1___lwmod:
 15301  175C                     i1l3726:	
 15302                           ;incstack = 0
 15303                           ; Regs used in i1___lwmod: [wreg+status,2+status,0]
 15304                           
 15305  175C  0870               	movf	i1___lwmod@divisor,w
 15306  175D  0471               	iorwf	i1___lwmod@divisor+1,w
 15307  175E  1903               	btfsc	3,2
 15308  175F  2F61               	goto	u259_21
 15309  1760  2F62               	goto	u259_20
 15310  1761                     u259_21:
 15311  1761  2F8B               	goto	i1l3744
 15312  1762                     u259_20:
 15313  1762                     i1l3728:
 15314  1762  01F5               	clrf	i1___lwmod@counter
 15315  1763  0AF5               	incf	i1___lwmod@counter,f
 15316  1764  2F6E               	goto	i1l3734
 15317  1765                     i1l3730:
 15318  1765  3001               	movlw	1
 15319  1766                     u260_25:
 15320  1766  35F0               	lslf	i1___lwmod@divisor,f
 15321  1767  0DF1               	rlf	i1___lwmod@divisor+1,f
 15322  1768  0B89               	decfsz	9,f
 15323  1769  2F66               	goto	u260_25
 15324  176A                     i1l3732:
 15325  176A  3001               	movlw	1
 15326  176B  00F4               	movwf	??i1___lwmod
 15327  176C  0874               	movf	??i1___lwmod,w
 15328  176D  07F5               	addwf	i1___lwmod@counter,f
 15329  176E                     i1l3734:
 15330  176E  1FF1               	btfss	i1___lwmod@divisor+1,7
 15331  176F  2F71               	goto	u261_21
 15332  1770  2F72               	goto	u261_20
 15333  1771                     u261_21:
 15334  1771  2F65               	goto	i1l3730
 15335  1772                     u261_20:
 15336  1772                     i1l3736:
 15337  1772  0871               	movf	i1___lwmod@divisor+1,w
 15338  1773  0273               	subwf	i1___lwmod@dividend+1,w
 15339  1774  1D03               	skipz
 15340  1775  2F78               	goto	u262_25
 15341  1776  0870               	movf	i1___lwmod@divisor,w
 15342  1777  0272               	subwf	i1___lwmod@dividend,w
 15343  1778                     u262_25:
 15344  1778  1C03               	skipc
 15345  1779  2F7B               	goto	u262_21
 15346  177A  2F7C               	goto	u262_20
 15347  177B                     u262_21:
 15348  177B  2F80               	goto	i1l3740
 15349  177C                     u262_20:
 15350  177C                     i1l3738:
 15351  177C  0870               	movf	i1___lwmod@divisor,w
 15352  177D  02F2               	subwf	i1___lwmod@dividend,f
 15353  177E  0871               	movf	i1___lwmod@divisor+1,w
 15354  177F  3BF3               	subwfb	i1___lwmod@dividend+1,f
 15355  1780                     i1l3740:
 15356  1780  3001               	movlw	1
 15357  1781                     u263_25:
 15358  1781  36F1               	lsrf	i1___lwmod@divisor+1,f
 15359  1782  0CF0               	rrf	i1___lwmod@divisor,f
 15360  1783  0B89               	decfsz	9,f
 15361  1784  2F81               	goto	u263_25
 15362  1785                     i1l3742:
 15363  1785  3001               	movlw	1
 15364  1786  02F5               	subwf	i1___lwmod@counter,f
 15365  1787  1D03               	btfss	3,2
 15366  1788  2F8A               	goto	u264_21
 15367  1789  2F8B               	goto	u264_20
 15368  178A                     u264_21:
 15369  178A  2F72               	goto	i1l3736
 15370  178B                     u264_20:
 15371  178B                     i1l3744:
 15372  178B  0873               	movf	i1___lwmod@dividend+1,w
 15373  178C  00F1               	movwf	?i1___lwmod+1
 15374  178D  0872               	movf	i1___lwmod@dividend,w
 15375  178E  00F0               	movwf	?i1___lwmod
 15376  178F                     i1l1613:
 15377  178F  0008               	return
 15378  1790                     __end_ofi1___lwmod:
 15379                           
 15380                           	psect	text48
 15381  16B1                     __ptext48:	
 15382 ;; *************** function i1_DATAEE_WriteByte *****************
 15383 ;; Defined at:
 15384 ;;		line 180 in file "mcc_generated_files/memory.c"
 15385 ;; Parameters:    Size  Location     Type
 15386 ;;  bAdd            2    0[COMMON] unsigned int 
 15387 ;;  bData           1    2[COMMON] unsigned char 
 15388 ;; Auto vars:     Size  Location     Type
 15389 ;;  GIEBitValue     1    3[COMMON] unsigned char 
 15390 ;; Return value:  Size  Location     Type
 15391 ;;                  1    wreg      void 
 15392 ;; Registers used:
 15393 ;;		wreg, status,2, status,0
 15394 ;; Tracked objects:
 15395 ;;		On entry : 0/0
 15396 ;;		On exit  : 0/0
 15397 ;;		Unchanged: 0/0
 15398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15399 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15400 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15402 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15403 ;;Total ram usage:        4 bytes
 15404 ;; Hardware stack levels used:    1
 15405 ;; This function calls:
 15406 ;;		Nothing
 15407 ;; This function is called by:
 15408 ;;		_TMR0_callback
 15409 ;; This function uses a non-reentrant model
 15410 ;;
 15411                           
 15412                           
 15413                           ;psect for function i1_DATAEE_WriteByte
 15414  16B1                     i1_DATAEE_WriteByte:
 15415  16B1                     i1l3706:	
 15416                           ;incstack = 0
 15417                           ; Regs used in i1_DATAEE_WriteByte: [wreg+status,2+status,0]
 15418                           
 15419                           
 15420                           ;memory.c: 182: uint8_t GIEBitValue = INTCONbits.GIE;
 15421  16B1  3000               	movlw	0
 15422  16B2  1B8B               	btfsc	11,7	;volatile
 15423  16B3  3001               	movlw	1
 15424  16B4  00F3               	movwf	i1DATAEE_WriteByte@GIEBitValue
 15425                           
 15426                           ;memory.c: 184: NVMADRH = ((bAdd >> 8) & 0xFF);
 15427  16B5  0871               	movf	i1DATAEE_WriteByte@bAdd+1,w
 15428  16B6  0030               	movlb	16	; select bank16
 15429  16B7  009B               	movwf	27	;volatile
 15430  16B8                     i1l3708:
 15431                           
 15432                           ;memory.c: 185: NVMADRL = (bAdd & 0xFF);
 15433  16B8  0870               	movf	i1DATAEE_WriteByte@bAdd,w
 15434  16B9  009A               	movwf	26	;volatile
 15435  16BA                     i1l3710:
 15436                           
 15437                           ;memory.c: 186: NVMDATL = bData;
 15438  16BA  0872               	movf	i1DATAEE_WriteByte@bData,w
 15439  16BB  009C               	movwf	28	;volatile
 15440  16BC                     i1l3712:
 15441                           
 15442                           ;memory.c: 187: NVMCON1bits.NVMREGS = 1;
 15443  16BC  171E               	bsf	30,6	;volsfr
 15444  16BD                     i1l3714:
 15445                           
 15446                           ;memory.c: 188: NVMCON1bits.WREN = 1;
 15447  16BD  151E               	bsf	30,2	;volsfr
 15448  16BE                     i1l3716:
 15449                           
 15450                           ;memory.c: 189: INTCONbits.GIE = 0;
 15451  16BE  138B               	bcf	11,7	;volatile
 15452  16BF                     i1l3718:
 15453                           
 15454                           ;memory.c: 190: NVMCON2 = 0x55;
 15455  16BF  3055               	movlw	85
 15456  16C0  009F               	movwf	31	;volsfr
 15457  16C1                     i1l3720:
 15458                           
 15459                           ;memory.c: 191: NVMCON2 = 0xAA;
 15460  16C1  30AA               	movlw	170
 15461  16C2  009F               	movwf	31	;volsfr
 15462  16C3                     i1l3722:
 15463                           
 15464                           ;memory.c: 192: NVMCON1bits.WR = 1;
 15465  16C3  149E               	bsf	30,1	;volsfr
 15466  16C4                     i1l435:	
 15467                           ;memory.c: 195: {
 15468                           
 15469  16C4  189E               	btfsc	30,1	;volsfr
 15470  16C5  2EC7               	goto	u258_21
 15471  16C6  2EC8               	goto	u258_20
 15472  16C7                     u258_21:
 15473  16C7  2EC4               	goto	i1l435
 15474  16C8                     u258_20:
 15475  16C8                     i1l437:
 15476                           
 15477                           ;memory.c: 196: };memory.c: 198: NVMCON1bits.WREN = 0;
 15478  16C8  111E               	bcf	30,2	;volsfr
 15479  16C9                     i1l3724:
 15480                           
 15481                           ;memory.c: 199: INTCONbits.GIE = GIEBitValue;
 15482  16C9  0C73               	rrf	i1DATAEE_WriteByte@GIEBitValue,w
 15483  16CA  1C03               	skipc
 15484  16CB  138B               	bcf	11,7	;volatile
 15485  16CC  1803               	skipnc
 15486  16CD  178B               	bsf	11,7	;volatile
 15487  16CE                     i1l438:
 15488  16CE  0008               	return
 15489  16CF                     __end_ofi1_DATAEE_WriteByte:
 15490                           
 15491                           	psect	text49
 15492  170E                     __ptext49:	
 15493 ;; *************** function ___lbmod *****************
 15494 ;; Defined at:
 15495 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lbmod.c"
 15496 ;; Parameters:    Size  Location     Type
 15497 ;;  dividend        1    wreg     unsigned char 
 15498 ;;  divisor         1    0[COMMON] unsigned char 
 15499 ;; Auto vars:     Size  Location     Type
 15500 ;;  dividend        1    3[COMMON] unsigned char 
 15501 ;;  rem             1    5[COMMON] unsigned char 
 15502 ;;  counter         1    4[COMMON] unsigned char 
 15503 ;; Return value:  Size  Location     Type
 15504 ;;                  1    wreg      unsigned char 
 15505 ;; Registers used:
 15506 ;;		wreg, status,2, status,0
 15507 ;; Tracked objects:
 15508 ;;		On entry : 0/0
 15509 ;;		On exit  : 0/0
 15510 ;;		Unchanged: 0/0
 15511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15512 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15513 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15514 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15515 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15516 ;;Total ram usage:        6 bytes
 15517 ;; Hardware stack levels used:    1
 15518 ;; This function calls:
 15519 ;;		Nothing
 15520 ;; This function is called by:
 15521 ;;		_TMR0_callback
 15522 ;; This function uses a non-reentrant model
 15523 ;;
 15524                           
 15525                           
 15526                           ;psect for function ___lbmod
 15527  170E                     ___lbmod:
 15528                           
 15529                           ;incstack = 0
 15530                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
 15531                           ;___lbmod@dividend stored from wreg
 15532  170E  00F3               	movwf	___lbmod@dividend
 15533  170F                     i1l3690:
 15534  170F  3008               	movlw	8
 15535  1710  00F1               	movwf	??___lbmod
 15536  1711  0871               	movf	??___lbmod,w
 15537  1712  00F4               	movwf	___lbmod@counter
 15538  1713                     i1l3692:
 15539  1713  01F5               	clrf	___lbmod@rem
 15540  1714                     i1l3694:
 15541  1714  0873               	movf	___lbmod@dividend,w
 15542  1715  00F1               	movwf	??___lbmod
 15543  1716  3007               	movlw	7
 15544  1717                     u255_25:
 15545  1717  36F1               	lsrf	??___lbmod,f
 15546  1718  0B89               	decfsz	9,f
 15547  1719  2F17               	goto	u255_25
 15548  171A  3575               	lslf	___lbmod@rem,w
 15549  171B  0471               	iorwf	??___lbmod,w
 15550  171C  00F2               	movwf	??___lbmod+1
 15551  171D  0872               	movf	??___lbmod+1,w
 15552  171E  00F5               	movwf	___lbmod@rem
 15553  171F                     i1l3696:
 15554  171F  1003               	clrc
 15555  1720  0DF3               	rlf	___lbmod@dividend,f
 15556  1721                     i1l3698:
 15557  1721  0870               	movf	___lbmod@divisor,w
 15558  1722  0275               	subwf	___lbmod@rem,w
 15559  1723  1C03               	skipc
 15560  1724  2F26               	goto	u256_21
 15561  1725  2F27               	goto	u256_20
 15562  1726                     u256_21:
 15563  1726  2F29               	goto	i1l1541
 15564  1727                     u256_20:
 15565  1727                     i1l3700:
 15566  1727  0870               	movf	___lbmod@divisor,w
 15567  1728  02F5               	subwf	___lbmod@rem,f
 15568  1729                     i1l1541:
 15569  1729  3001               	movlw	1
 15570  172A  02F4               	subwf	___lbmod@counter,f
 15571  172B  1D03               	btfss	3,2
 15572  172C  2F2E               	goto	u257_21
 15573  172D  2F2F               	goto	u257_20
 15574  172E                     u257_21:
 15575  172E  2F14               	goto	i1l3694
 15576  172F                     u257_20:
 15577  172F                     i1l3702:
 15578  172F  0875               	movf	___lbmod@rem,w
 15579  1730                     i1l1543:
 15580  1730  0008               	return
 15581  1731                     __end_of___lbmod:
 15582                           
 15583                           	psect	text50
 15584  084B                     __ptext50:	
 15585 ;; *************** function ___awmod *****************
 15586 ;; Defined at:
 15587 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awmod.c"
 15588 ;; Parameters:    Size  Location     Type
 15589 ;;  divisor         2    0[COMMON] int 
 15590 ;;  dividend        2    2[COMMON] int 
 15591 ;; Auto vars:     Size  Location     Type
 15592 ;;  sign            1    6[COMMON] unsigned char 
 15593 ;;  counter         1    5[COMMON] unsigned char 
 15594 ;; Return value:  Size  Location     Type
 15595 ;;                  2    0[COMMON] int 
 15596 ;; Registers used:
 15597 ;;		wreg, status,2, status,0
 15598 ;; Tracked objects:
 15599 ;;		On entry : 0/0
 15600 ;;		On exit  : 0/0
 15601 ;;		Unchanged: 0/0
 15602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15603 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15604 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15605 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15606 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15607 ;;Total ram usage:        7 bytes
 15608 ;; Hardware stack levels used:    1
 15609 ;; This function calls:
 15610 ;;		Nothing
 15611 ;; This function is called by:
 15612 ;;		_TMR0_callback
 15613 ;; This function uses a non-reentrant model
 15614 ;;
 15615                           
 15616                           
 15617                           ;psect for function ___awmod
 15618  084B                     ___awmod:
 15619  084B                     i1l3652:	
 15620                           ;incstack = 0
 15621                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 15622                           
 15623  084B  01F6               	clrf	___awmod@sign
 15624  084C                     i1l3654:
 15625  084C  1FF3               	btfss	___awmod@dividend+1,7
 15626  084D  284F               	goto	u246_21
 15627  084E  2850               	goto	u246_20
 15628  084F                     u246_21:
 15629  084F  2857               	goto	i1l3660
 15630  0850                     u246_20:
 15631  0850                     i1l3656:
 15632  0850  09F2               	comf	___awmod@dividend,f
 15633  0851  09F3               	comf	___awmod@dividend+1,f
 15634  0852  0AF2               	incf	___awmod@dividend,f
 15635  0853  1903               	skipnz
 15636  0854  0AF3               	incf	___awmod@dividend+1,f
 15637  0855                     i1l3658:
 15638  0855  01F6               	clrf	___awmod@sign
 15639  0856  0AF6               	incf	___awmod@sign,f
 15640  0857                     i1l3660:
 15641  0857  1FF1               	btfss	___awmod@divisor+1,7
 15642  0858  285A               	goto	u247_21
 15643  0859  285B               	goto	u247_20
 15644  085A                     u247_21:
 15645  085A  2860               	goto	i1l3664
 15646  085B                     u247_20:
 15647  085B                     i1l3662:
 15648  085B  09F0               	comf	___awmod@divisor,f
 15649  085C  09F1               	comf	___awmod@divisor+1,f
 15650  085D  0AF0               	incf	___awmod@divisor,f
 15651  085E  1903               	skipnz
 15652  085F  0AF1               	incf	___awmod@divisor+1,f
 15653  0860                     i1l3664:
 15654  0860  0870               	movf	___awmod@divisor,w
 15655  0861  0471               	iorwf	___awmod@divisor+1,w
 15656  0862  1903               	btfsc	3,2
 15657  0863  2865               	goto	u248_21
 15658  0864  2866               	goto	u248_20
 15659  0865                     u248_21:
 15660  0865  288F               	goto	i1l3682
 15661  0866                     u248_20:
 15662  0866                     i1l3666:
 15663  0866  01F5               	clrf	___awmod@counter
 15664  0867  0AF5               	incf	___awmod@counter,f
 15665  0868  2872               	goto	i1l3672
 15666  0869                     i1l3668:
 15667  0869  3001               	movlw	1
 15668  086A                     u249_25:
 15669  086A  35F0               	lslf	___awmod@divisor,f
 15670  086B  0DF1               	rlf	___awmod@divisor+1,f
 15671  086C  0B89               	decfsz	9,f
 15672  086D  286A               	goto	u249_25
 15673  086E                     i1l3670:
 15674  086E  3001               	movlw	1
 15675  086F  00F4               	movwf	??___awmod
 15676  0870  0874               	movf	??___awmod,w
 15677  0871  07F5               	addwf	___awmod@counter,f
 15678  0872                     i1l3672:
 15679  0872  1FF1               	btfss	___awmod@divisor+1,7
 15680  0873  2875               	goto	u250_21
 15681  0874  2876               	goto	u250_20
 15682  0875                     u250_21:
 15683  0875  2869               	goto	i1l3668
 15684  0876                     u250_20:
 15685  0876                     i1l3674:
 15686  0876  0871               	movf	___awmod@divisor+1,w
 15687  0877  0273               	subwf	___awmod@dividend+1,w
 15688  0878  1D03               	skipz
 15689  0879  287C               	goto	u251_25
 15690  087A  0870               	movf	___awmod@divisor,w
 15691  087B  0272               	subwf	___awmod@dividend,w
 15692  087C                     u251_25:
 15693  087C  1C03               	skipc
 15694  087D  287F               	goto	u251_21
 15695  087E  2880               	goto	u251_20
 15696  087F                     u251_21:
 15697  087F  2884               	goto	i1l3678
 15698  0880                     u251_20:
 15699  0880                     i1l3676:
 15700  0880  0870               	movf	___awmod@divisor,w
 15701  0881  02F2               	subwf	___awmod@dividend,f
 15702  0882  0871               	movf	___awmod@divisor+1,w
 15703  0883  3BF3               	subwfb	___awmod@dividend+1,f
 15704  0884                     i1l3678:
 15705  0884  3001               	movlw	1
 15706  0885                     u252_25:
 15707  0885  36F1               	lsrf	___awmod@divisor+1,f
 15708  0886  0CF0               	rrf	___awmod@divisor,f
 15709  0887  0B89               	decfsz	9,f
 15710  0888  2885               	goto	u252_25
 15711  0889                     i1l3680:
 15712  0889  3001               	movlw	1
 15713  088A  02F5               	subwf	___awmod@counter,f
 15714  088B  1D03               	btfss	3,2
 15715  088C  288E               	goto	u253_21
 15716  088D  288F               	goto	u253_20
 15717  088E                     u253_21:
 15718  088E  2876               	goto	i1l3674
 15719  088F                     u253_20:
 15720  088F                     i1l3682:
 15721  088F  0876               	movf	___awmod@sign,w
 15722  0890  1903               	btfsc	3,2
 15723  0891  2893               	goto	u254_21
 15724  0892  2894               	goto	u254_20
 15725  0893                     u254_21:
 15726  0893  2899               	goto	i1l3686
 15727  0894                     u254_20:
 15728  0894                     i1l3684:
 15729  0894  09F2               	comf	___awmod@dividend,f
 15730  0895  09F3               	comf	___awmod@dividend+1,f
 15731  0896  0AF2               	incf	___awmod@dividend,f
 15732  0897  1903               	skipnz
 15733  0898  0AF3               	incf	___awmod@dividend+1,f
 15734  0899                     i1l3686:
 15735  0899  0873               	movf	___awmod@dividend+1,w
 15736  089A  00F1               	movwf	?___awmod+1
 15737  089B  0872               	movf	___awmod@dividend,w
 15738  089C  00F0               	movwf	?___awmod
 15739  089D                     i1l1497:
 15740  089D  0008               	return
 15741  089E                     __end_of___awmod:
 15742  007E                     btemp	set	126	;btemp
 15743  007E                     int$flags	set	126
 15744  007E                     wtemp0	set	126
 15745  2373                     
 15746                           	psect	config
 15747                           
 15748                           ;Config register CONFIG1 @ 0x8007
 15749                           ;	External Oscillator mode selection bits
 15750                           ;	FEXTOSC = OFF, Oscillator not enabled
 15751                           ;	Power-up default value for COSC bits
 15752                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 15753                           ;	Clock Out Enable bit
 15754                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 15755                           ;	Clock Switch Enable bit
 15756                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 15757                           ;	Fail-Safe Clock Monitor Enable bit
 15758                           ;	FCMEN = ON, FSCM timer enabled
 15759  8007                     	org	32775
 15760  8007  3FEC               	dw	16364
 15761                           
 15762                           ;Config register CONFIG2 @ 0x8008
 15763                           ;	Master Clear Enable bit
 15764                           ;	MCLRE = ON, MCLR pin is Master Clear function
 15765                           ;	Power-up Timer Enable bit
 15766                           ;	PWRTE = OFF, PWRT disabled
 15767                           ;	Low-Power BOR enable bit
 15768                           ;	LPBOREN = OFF, ULPBOR disabled
 15769                           ;	Brown-out reset enable bits
 15770                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 15771                           ;	Brown-out Reset Voltage Selection
 15772                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 15773                           ;	Zero-cross detect disable
 15774                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 15775                           ;	Peripheral Pin Select one-way control
 15776                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 15777                           ;	Stack Overflow/Underflow Reset Enable bit
 15778                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 15779                           ;	Background Debugger
 15780                           ;	DEBUG = OFF, Background Debugger disabled
 15781  8008                     	org	32776
 15782  8008  3FFF               	dw	16383
 15783                           
 15784                           ;Config register CONFIG3 @ 0x8009
 15785                           ;	WDT Period Select bits
 15786                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 15787                           ;	WDT operating mode
 15788                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 15789                           ;	WDT Window Select bits
 15790                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 15791                           ;	WDT input clock selector
 15792                           ;	WDTCCS = SC, Software Control
 15793  8009                     	org	32777
 15794  8009  3F9F               	dw	16287
 15795                           
 15796                           ;Config register CONFIG4 @ 0x800A
 15797                           ;	UserNVM self-write protection bits
 15798                           ;	WRT = OFF, Write protection off
 15799                           ;	Scanner Enable bit
 15800                           ;	SCANE = available, Scanner module is available for use
 15801                           ;	Low Voltage Programming Enable bit
 15802                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 15803  800A                     	org	32778
 15804  800A  3FFF               	dw	16383
 15805                           
 15806                           ;Config register CONFIG5 @ 0x800B
 15807                           ;	UserNVM Program memory code protection bit
 15808                           ;	CP = OFF, Program Memory code protection disabled
 15809                           ;	DataNVM code protection bit
 15810                           ;	CPD = OFF, Data EEPROM code protection disabled
 15811  800B                     	org	32779
 15812  800B  3FFF               	dw	16383

Data Sizes:
    Strings     38
    Constant    10
    Data        5
    BSS         18
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     76      80
    BANK1            80     12      28
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11            3      0       0
    BANK12            0      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_52(CODE[6]), STR_51(CODE[7]), STR_50(CODE[4]), STR_49(CODE[15]), 
		 -> STR_48(CODE[6]), STR_47(CODE[7]), STR_46(CODE[4]), STR_45(CODE[15]), 
		 -> STR_44(CODE[7]), STR_43(CODE[6]), STR_42(CODE[4]), STR_41(CODE[15]), 
		 -> STR_40(CODE[7]), STR_39(CODE[6]), STR_38(CODE[4]), STR_37(CODE[15]), 
		 -> STR_36(CODE[15]), STR_35(CODE[6]), STR_34(CODE[7]), STR_33(CODE[4]), 
		 -> STR_32(CODE[15]), STR_31(CODE[6]), STR_30(CODE[7]), STR_29(CODE[4]), 
		 -> STR_28(CODE[15]), STR_27(CODE[6]), STR_26(CODE[7]), STR_25(CODE[4]), 
		 -> STR_24(CODE[15]), STR_23(CODE[6]), STR_22(CODE[7]), STR_21(CODE[4]), 
		 -> STR_20(CODE[6]), STR_19(CODE[7]), STR_18(CODE[4]), STR_17(CODE[15]), 
		 -> STR_16(CODE[6]), STR_15(CODE[7]), STR_14(CODE[4]), STR_13(CODE[15]), 
		 -> STR_12(CODE[6]), STR_11(CODE[7]), STR_10(CODE[4]), STR_9(CODE[15]), 
		 -> STR_8(CODE[2]), STR_7(CODE[2]), STR_6(CODE[2]), STR_5(CODE[6]), 
		 -> STR_4(CODE[7]), STR_3(CODE[15]), STR_2(CODE[2]), STR_1(CODE[2]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> lcd@buf(BANK0[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCDstr@p	PTR unsigned char  size(1) Largest target is 17
		 -> lcd@buf(BANK0[17]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_callback(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_callback(), Absolute function(), TMR0_DefaultInterruptHandler(), 

    i2c1_driver_i2cISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    i2c1_driver_busCollisionISR	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_CallBack->_TMR0_callback
    _TMR0_callback->___awmod

Critical Paths under _main in BANK0

    _main->_lcd
    _tsttc->_WriteI2C
    _lumin->_ADCC_GetConversionResult
    _lcd->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _LCDstr->_LCDchar
    _LCDchar->_LCDsend2x4
    _LCDcmd->_LCDsend2x4
    _conf_clock_hh->_save_vars
    _save_vars->_DATAEE_WriteByte
    _check_vars->_DATAEE_ReadByte
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                38    38      0   26682
                                             71 BANK0      5     5      0
                                              0 BANK1     12    12      0
                            _LCDinit
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
                            ___lwmod
                      _checkButtonS1
                      _checkButtonS2
                         _check_vars
                    _conf_alarm_flag
                      _conf_alarm_hh
                      _conf_alarm_mm
                      _conf_alarm_ss
                      _conf_clock_hh
                      _conf_clock_mm
                      _conf_clock_ss
                         _conf_lumin
                          _conf_temp
                   _i2c1_driver_open
                                _lcd
                              _lumin
                          _save_vars
                              _tsttc
 ---------------------------------------------------------------------------------
 (1) _tsttc                                                2     2      0      68
                                              2 BANK0      2     2      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _lumin                                                4     4      0      92
                                              2 BANK0      4     4      0
           _ADCC_GetConversionResult
                    _ADCC_Initialize
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADCC_StartConversion                                 1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetConversionResult                             2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _lcd                                                 36    24     12   16663
                                             35 BANK0     36    24     12
                             _LCDcmd
                             _LCDstr
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             29    21      8    8373
                                             14 BANK0     21    13      8
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     396
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4    1019
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (2) _LCDstr                                               3     3      0    2571
                                              9 BANK0      3     3      0
                            _LCDchar
 ---------------------------------------------------------------------------------
 (3) _LCDchar                                              1     1      0     810
                                              8 BANK0      1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDcmd                                               1     1      0     810
                                              8 BANK0      1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (1) _i2c1_driver_open                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conf_temp                                            1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _conf_lumin                                           1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _conf_clock_ss                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _conf_clock_mm                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _conf_clock_hh                                        1     1      0    2873
                                              5 BANK0      1     1      0
                          _save_vars
 ---------------------------------------------------------------------------------
 (1) _save_vars                                            1     1      0    2873
                                              4 BANK0      1     1      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3    2873
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _conf_alarm_ss                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _conf_alarm_mm                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _conf_alarm_hh                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _conf_alarm_flag                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_vars                                           2     2      0    1739
                                              2 BANK0      2     2      0
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2    1716
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _checkButtonS2                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _checkButtonS1                                        1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
                    _ADCC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR0_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     832
                                              8 BANK0      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (4) _LCDsend2x4                                           6     5      1     788
                                              2 BANK0      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 BANK0      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _INTERRUPT_InterruptManager                           0     0      0    1087
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (7) _TMR0_ISR                                             0     0      0    1087
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (8) _TMR0_CallBack                                        0     0      0    1087
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                      _TMR0_callback *
 ---------------------------------------------------------------------------------
 (9) _TMR0_callback                                        2     2      0    1087
                                              7 COMMON     2     2      0
                            ___awmod
                            ___lbmod
                 i1_DATAEE_WriteByte
                          i1___lwmod
 ---------------------------------------------------------------------------------
 (10) i1___lwmod                                           6     2      4     211
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (10) i1_DATAEE_WriteByte                                  4     1      3     193
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (10) ___lbmod                                             6     5      1     235
                                              0 COMMON     6     5      1
 ---------------------------------------------------------------------------------
 (10) ___awmod                                             7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (9) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _SYSTEM_Initialize
     _ADCC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
   _TMR0_SetInterruptHandler
   ___lwmod
     ___lwdiv (ARG)
   _checkButtonS1
   _checkButtonS2
   _check_vars
     _DATAEE_ReadByte
   _conf_alarm_flag
   _conf_alarm_hh
   _conf_alarm_mm
   _conf_alarm_ss
   _conf_clock_hh
     _save_vars
       _DATAEE_WriteByte
   _conf_clock_mm
   _conf_clock_ss
   _conf_lumin
   _conf_temp
   _i2c1_driver_open
   _lcd
     _LCDcmd
       _LCDsend2x4
         _WriteI2C
     _LCDstr
       _LCDchar
         _LCDsend2x4
           _WriteI2C
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _lumin
     _ADCC_GetConversionResult
     _ADCC_Initialize
     _ADCC_StartConversion
   _save_vars
     _DATAEE_WriteByte
   _tsttc
     _ReadI2C
     _WriteI2C

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       Absolute function(Fake) *
       _TMR0_DefaultInterruptHandler *
       _TMR0_callback *
         ___awmod
         ___lbmod
         i1_DATAEE_WriteByte
         i1___lwmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      C      1C       7       35.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      7A      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11               3      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      7A      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Sun Nov 15 19:17:34 2020

                                      l30 094A                                        l22 16E5  
                                      l23 16E7                                        l33 0912  
                                      l42 0934                                        l26 16ED  
                                      l35 0917                                        l47 0948  
                     ___wmul@multiplicand 0022                                       l120 17FF  
                                     l162 15AA                                       l165 1540  
                                     l229 1572                                       l168 1527  
                                     l441 159A                                       l363 1633  
                                     l435 07EF                                       l620 0CC6  
                                     l604 0F95                                       l437 07F3  
                                     l438 07FA                                       l391 1549  
                                     l615 0ACF                                       l551 0E65  
                                     l800 08EA                                       l632 1693  
                                     l712 0E0E                                       l801 08EC  
                                     l721 160B                                       l713 0E10  
                                     l706 0DF8                                       l642 0CC7  
                                     l635 16AB                                       l707 0DFB  
                                     l804 08F0                                       l628 168E  
                                     l716 0E16                                       l645 0CD6  
                                     l734 15BA                                       l726 080D  
                                     l670 0D52                                       l646 0CD8  
                                     l639 16B0                                       l744 15DA  
                                     l921 0BA3                                       l905 0B44  
                                     l729 07FF                                       l657 0D11  
                                     l914 0B84                                       l754 15EA  
                                     l930 1552                                       l682 0D7F  
                                     l658 0D13                                       l739 15CA  
                                     l683 0D81                                       l675 0D65  
                                     l924 0A1E                                       l676 0D67  
                                     l917 0B9A                                       l749 15FA  
                                     l669 0D4F                                       l918 0B9C  
                                     l694 0DBA                                       l678 0D6B  
                                     l759 1566                                       l927 152F  
                                     l695 0DBC                                       l936 165F  
                                     l890 0AF2                                       l891 0AF4  
                                     l947 013C                                       l788 08AF  
                                     l789 08B1                                       l965 0638  
                                     l968 175B                                       _lcd 0062  
                                     _reg 2373                   __size_of_PMD_Initialize 0008  
                            ___awmod@sign 0076                                       wreg 0009  
                             ?_LCDsend2x4 0022                           __end_of_LCDchar 1553  
                                    l1050 1537                                      l1310 0709  
                                    l1047 1649                                      l1056 155B  
                                    l1331 16F9                                      l1333 170D  
                                    l1327 07D6                                      l4000 08DB  
                                    l4002 152A                                      l4010 063B  
                                    l1603 084A                                      l4004 164C  
                                    l4100 0772                                      l4020 0657  
                                    l1292 0656                                      l4012 0640  
                                    l1613 17C4                                      l4006 164D  
                                    l4110 07B1                                      l4102 0779  
                                    l4030 0673                                      l4014 0646  
                                    l4200 0BC2                                      l4008 1651  
                                    l4112 07B5                                      l4104 077D  
                                    l4032 0684                                      l4040 06A3  
                                    l4024 065B                                      l4016 064D  
                                    l4120 1532                                      l4130 159B  
                                    l4210 0C03                                      l4202 0BCF  
                                    l4106 0782                                      l4050 06CE  
                                    l4042 06BB                                      l4034 0693  
                                    l4026 0664                                      l4018 0652  
                                    l4114 07BE                                      l4122 1535  
                                    l4132 159E                                      l4300 1692  
                                    l4220 0C44                                      l4212 0C10  
                                    l4204 0BDC                                      l4140 1567  
                                    l4108 07AA                                      l4052 06D3  
                                    l4044 06C2                                      l4116 07D2  
                                    l4036 0697                                      l4028 0670  
                                    l4124 1536                                      l4134 15A1  
                                    l4310 16AF                                      l4302 1694  
                                    l4222 0C49                                      l4214 0C1D  
                                    l4206 0BE9                                      l4142 156C  
                                    l4070 0714                                      l4062 06EF  
                                    l4046 06C6                                      l4126 1553  
                                    l4230 0CEB                                      l4160 09A9  
                                    l4136 15A4                                      l4304 169A  
                                    l4216 0C2A                                      l4208 0BF6  
                                    l4312 15FB                                      l4144 156D  
                                    l4080 0731                                      l4072 071D  
                                    l4064 06F9                                      l4048 06CA  
                                    l4400 0096                                      l4240 0D26  
                                    l4232 0CEF                                      l4170 09CE  
                                    l4162 09B2                                      l4138 15A7  
                                    l4306 169E                                      l4218 0C37  
                                    l4314 1602                                      l4322 0800  
                                    l4330 07FB                                      l4146 156F  
                                    l4082 0735                                      l4090 0751  
                                    l4074 0720                                      l4066 06FF  
                                    l4058 06D5                                      l4410 00D4  
                                    l4402 00B4                                      l4250 0D70  
                                    l4242 0D2A                                      l4234 0CFE  
                                    l4226 0CC7                                      ?_lcd 0043  
                                    l3604 091E                                      l3620 0AF8  
                                    l4180 09EA                                      l4172 09D2  
                                    l4164 09B6                                      l4308 16A7  
                                    l4316 1604                                      l4324 0807  
                                    l4092 0757                                      l4084 073B  
                                    l4076 0724                                      l4068 0705  
                                    l4500 024C                                      l4420 00FB  
                                    l4412 00E4                                      l4404 00B8  
                                    l4260 0DAB                                      l4252 0D85  
                                    l4244 0D39                                      l4236 0D02  
                                    l4228 0CDC                                      l3606 0929  
                                    l3630 0B2F                                      l3622 0B07  
                                    l3614 0AD2                                      l4190 0A0E  
                                    l4182 09F6                                      l4174 09DA  
                                    l4166 09BE                                      l4334 15AB  
                                    l4342 15BB                                      l4350 15CB  
                                    l4318 1608                                      l4326 0809  
                                    l4094 075E                                      l4086 0742  
                                    l4078 072A                                      l4510 0275  
                                    l4502 0250                                      l4430 0117  
                                    l4422 00FF                                      l4414 00E8  
                                    l4406 00BC                                      l4270 0DE9  
                                    l4262 0DC0                                      l4254 0D94  
                                    l4246 0D40                                      l4238 0D17  
                    _ADCC_StartConversion 1530                                      l3608 0939  
                                    l3640 0B60                                      l3632 0B35  
                                    l3624 0B0B                                      l3616 0AD7  
                                    l4192 0A14                                      l4184 09FA  
                                    l4176 09DE                                      l4168 09C2  
                                    l4336 15B2                                      l4344 15C2  
                                    l4352 15D2                                      l4360 15F2  
                                    l1784 161E                                      l3800 161D  
                                    l4096 0762                                      l4088 0746  
                                    l4600 0417                                      l4520 029C  
                                    l4512 0289                                      l4504 025D  
                                    l4440 0133                                      l4432 011B  
                                    l4416 00EE                                      l4424 0104  
                                    l4408 00D0                                      l4280 1738  
                                    l4272 0DFF                                      l4264 0DCF  
                                    l4256 0D98                                      l4248 0D56  
                                    l3650 0BA0                                      l3642 0B6F  
                                    l3634 0B44                                      l3626 0B1A  
                                    l3618 0AE3                                      l4186 0A02  
                                    l4178 09E6                                      l4194 0BA4  
                                    l4338 15B4                                      l4346 15C4  
                                    l4354 15D4                                      l4370 15E4  
                                    l4362 15F4                                      l3810 16FE  
                                    l4098 076C                                      l4610 0437  
                                    l4602 041B                                      l4530 02C5  
                                    l4522 02A5                                      l4514 028D  
                                    l4506 0261                                      l4450 0164  
                                    l4442 0137                                      l4426 010A  
                                    l4434 0120                                      l4418 00F2  
                                    l4282 1738                                      l4274 0E14  
                                    l4266 0DD3                                      l4258 0DA7  
                                    l3644 0B75                                      l3636 0B4B  
                                    l3628 0B20                                      l4188 0A08  
                                    l3900 17EE                                      l4292 1677  
                                    l4196 0BB0                                      l3820 0811  
                                    l3812 1703                                      l3804 16EE  
                                    l4700 05C6                                      l4620 0468  
                                    l4612 0455                                      l4604 042B  
                                    l4532 02D5                                      l4524 02A9  
                                    l4540 0303                                      l4508 0271  
                                    l4516 0291                                      l4460 018D  
                                    l4452 0168                                      l4436 0126  
                                    l4428 010E                                      l4444 013D  
                                    l4284 1740                                      l4268 0DE2  
                                    l3646 0B84                                      l3638 0B5A  
                                    l3910 17FA                                      l3902 17F0  
                                    l4294 167D                                      l4198 0BB6  
                                    l4374 155C                                      l3750 07D7  
                                    l4366 15DB                                      l4358 15EB  
                                    l3830 0827                                      l3822 0817  
                                    l3814 1709                                      l3806 16F1  
                                    l4710 05FD                                      l4702 05E4  
                                    l4630 049F                                      l4622 0486  
                                    l4614 0459                                      l4606 042F  
                                    l4550 031F                                      l4542 030A  
                                    l4534 02D9                                      l4526 02AD  
                                    l4518 0298                                      l4470 01B4  
                                    l4462 0191                                      l4454 016C  
                                    l4446 0142                                      l4438 012A  
                                    l4390 007B                                      l4382 0064  
                                    l4286 174D                                      l4278 1731  
                                    l3592 08FB                                      l3584 08F3  
                                    l3648 0B8B                                      l3920 153C  
                                    l3912 17FC                                      l3904 17F2  
                                    l4296 1681                                      l4376 1562  
                                    l3760 07E9                                      l3752 07DF  
                                    l4368 15E2                                      l3832 0836  
                                    l3824 081A                                      l3840 0846  
                                    l3808 16F5                                      l4712 060D  
                                    l4704 05E8                                      l4720 062D  
                                    l4640 04CB                                      l4632 04AF  
                                    l4624 048A                                      l4608 0433  
                                    l4616 045D                                      l4560 036D  
                                    l4552 0333                                      l4544 030E  
                                    l4536 02FB                                      l4528 02C1  
                                    l4480 01EB                                      l4472 01B8  
                                    l4464 01A5                                      l4456 0179  
                                    l4448 0146                                      l4392 007F  
                                    l4384 0069                                      l4288 175A  
                         __end_of_LCDinit 0A1F                                      l3594 0905  
                                    l3586 08F6                                      l3922 153F  
                                    l3906 17F4                                      l3914 1520  
                                    l3930 161F                                      l4298 168A  
                                    l4378 1565                                      l3762 07EA  
                                    l3754 07E3                                      l3834 083A  
                                    l3826 081F                                      l3818 080E  
                                    l3850 179F                                      l4722 0634  
                                    l4714 0611                                      l4706 05EC  
                                    l4650 04FC                                      l4642 04CF  
                                    l4634 04B3                                      l4626 048E  
                                    l4618 0464                                      l4570 0389  
                                    l4562 0371                                      l4554 0337  
                                    l4546 0317                                      l4538 02FF  
                                    l4490 021B                                      l4482 01EF  
                                    l4474 01D6                                      l4466 01A9  
                                    l4458 017D                                      l4394 0088  
                                    l4386 006D                                      l3596 0910  
                                    l3924 1634                                      l3916 1538  
                                    l3908 17F7                                      l3748 1541  
                                    l3940 1630                                      l3932 1624  
                                    l3764 07EC                                      l3756 07E7  
                                    l3836 083B                                      l3828 0823  
                                    l3860 17BA                                      l3852 17A3  
                                    l3844 1790                                      l4716 0625  
                                    l4708 05F9                                      l4660 0525  
                                    l4652 0500                                      l4636 04B7  
                                    l4628 049B                                      l4644 04D3  
                                    l4580 03B9                                      l4572 038D  
                                    l4556 0347                                      l4548 031B  
                                    l4564 0375                                      l4484 01FF  
                                    l4476 01DA                                      l4492 021F  
                                    l4468 01AD                                      l4396 008C  
                                    l4388 0076                                      l4900 0F04  
                                    l4820 0E25                                      l4812 0E17  
                                    l3598 091C                                      l3926 1646  
                                    l3918 153B                                      l3934 1625  
                                    l3950 1594                                      l3766 07EE  
                                    l3758 07E8                                      l3790 154C  
                                    l3838 0840                                      l3854 17A7  
                                    l3846 1797                                      l3862 17C0  
                                    l4718 0629                                      l4670 0545  
                                    l4662 0529                                      l4654 0504  
                                    l4646 04DA                                      l4638 04BB  
                                    l4590 03EE                                      l4582 03BD  
                                    l4574 0391                                      l4566 037C  
                                    l4558 034B                                      l4494 0226  
                                    l4486 0203                                      l4478 01DE  
                                    l4398 0092                                      l3870 16EC  
                                    l4910 0F21                                      l4902 0F09  
                                    l4830 0E2E                                      l4822 0E26  
                                    l4814 0E19                                      l3928 1648  
                                    l3880 17CF                                      l3936 1627  
                                    l3952 1595                                      l3768 07F4  
                                    l3856 17B1                                      l3848 179A  
                                    l3792 160E                                      l4680 0576  
                                    l4664 052D                                      l4656 0511  
                                    l4648 04DE                                      l4672 0549  
                                    l4592 03F2                                      l4584 03DF  
                                    l4576 03A5                                      l4568 0380  
                                    l4496 022A                                      l4488 0217  
                                    l4920 0F37                                      l4912 0F25  
                                    l4904 0F10                                      l4840 0E6C  
                                    l4832 0E2F                                      l4824 0E29  
                                    l4816 0E1C                                      l3890 17DA  
                                    l3882 17D1                                      l3874 17C5  
                                    l3938 1628                                      l3954 1596  
                                    l3946 158C                                      l3970 0A55  
                                    l3962 0A1F                                      l3858 17B5  
                                    l3794 160F                                      l4690 059F  
                                    l4682 057A                                      l4674 0550  
                                    l4666 0531                                      l4658 0515  
                                    l4594 03FB                                      l4586 03E3  
                                    l4578 03A9                                      l4498 0248  
                                    l3866 16CF                                      l4922 0F3C  
                                    l4906 0F15                                      l4850 0E82  
                                    l4842 0E71                                      l4834 0E37  
                                    l4826 0E2B                                      l4818 0E24  
                                    l3892 17DC                                      l3884 17D3  
                                    l3876 17CB                                      l3956 1597  
                                    l3948 1590                                      l3980 0A9B  
                                    l3972 0A63                                      l3964 0A2F  
                                    l3796 1615                                      l4692 05B3  
                                    l4684 0587                                      l4676 0554  
                                    l4668 0541                                      l4596 03FF  
                                    l4588 03E7                                      l3868 16DA  
                                    l4932 0F52                                      l4924 0F43  
                                    l4916 0F2B                                      l4908 0F1C  
                                    l4860 0E9E                                      l4852 0E89  
                                    l4844 0E74                                      l4836 0E3C  
                                    l4828 0E2C                                      l3990 08A0  
                                    l3894 17DE                                      l3886 17D5  
                                    l3878 17CD                                      l3958 1598  
                                    l3982 0AA9                                      l3974 0A71  
                                    l3966 0A3B                                      l3798 161B  
                                    l4694 05B7                                      l4686 058B  
                                    l4678 0572                                      l4598 0403  
                                    l4950 0FF4                                      l4934 0F57  
                                    l4926 0F48                                      l4918 0F30  
                                    l4870 0EB8                                      l4862 0EA3  
                                    l4854 0E8E                                      l4846 0E79  
                                    l4942 0F62                                      l4838 0E55  
                                    l3992 08B5                                      l3896 17EA  
                                    l3888 17D8                                      l3984 0AB5  
                                    l3976 0A7F                                      l3968 0A47  
                                    l4688 059B                                      l4696 05BB  
                                    l4936 0F5B                                      l4928 0F4C  
                                    l4880 0ED4                                      l4872 0EBF  
                                    l4864 0EA7                                      l4856 0E92  
                                    l4848 0E7D                                      l4944 0F8C  
                                    l3994 08C4                                      l3898 17EC  
                                    l3986 0AC1                                      l3978 0A8D  
                                    l4698 05C2                                      l4946 0F92  
                                    l4938 0F60                                      l4890 0EEE  
                                    l4882 0ED9                                      l4874 0EC4  
                                    l4866 0EAC                                      l4858 0E97  
                                    l3996 08C8                                      l3988 08A0  
                                    l4948 0FA8                                      l4892 0EF5  
                                    l4884 0EE0                                      l4876 0ECB  
                                    l4868 0EB3                                      l3998 08D7  
                                    l4894 0EFA                                      l4886 0EE5  
                                    l4878 0ED0                                      l4896 0EFE  
                                    l4888 0EE9                                      _ALAF 00B3  
                                    _ALAH 00B8                                      _ALAL 00B6  
                         __end_of_LCDsend 08F1                                      _ALAM 00B5  
                                    _ALAS 00B4                                      _ALAT 00B7  
                                    STR_1 182A                                      STR_2 182E  
                                    STR_3 1800                                      STR_4 1819  
                                    STR_5 1820                                      STR_6 181E  
                                    STR_7 182C                                      STR_8 1828  
                                    STR_9 1800                                      _CLKH 006F  
                                    _CLKM 006E                                      u3000 0670  
                                    u3001 066F                                      u3010 06A3  
                                    u3011 06A2                                      u2300 0929  
                                    u3100 073B                                      u3020 06CA  
                                    u2301 0928                                      u3101 073A  
                                    u3021 06C9                                      _LATA 0016  
                                    u2310 0934                                      u3110 0750  
                                    u3030 06EE                                      _LATB 0017  
                                    u2311 0933                                      u3111 074F  
                                    u3031 06ED                                      _LATC 0018  
                                    u2320 0939                                      u2400 0B44  
                                    u3200 0C49                                      u3120 0757  
                                    u3040 06F9                                      _LATD 0019  
                                    u2321 0938                                      u2401 0B43  
                                    u3201 0C48                                      u3121 0756  
                                    u3041 06F8                                      _LATE 001A  
                                    u2330 0948                                      u2250 08FA  
                                    u2410 0B5A                                      u3130 076C  
                                    u3050 06FF                                      u3210 0CD6  
                                    u2331 0947                                      u2251 08F9  
                                    u2411 0B59                                      u3131 076B  
                                    u3051 06FE                                      u3035 06EA  
                                    u3211 0CD5                                      u2260 0905  
                                    u2420 0B6F                                      u3140 0772  
                                    u3060 0705                                      u3300 0D56  
                                    u3220 0CDC                                      u2261 0904  
                                    u2421 0B6E                                      u3141 0771  
                                    u3061 0704                                      u3301 0D55  
                                    u3221 0CDB                                      u2270 0910  
                                    u2430 0B84                                      u2350 0AF2  
                                    u3150 07BE                                      u3070 0714  
                                    u3310 0D65                                      u3230 0CEB  
                                    u2271 090F                                      u2431 0B83  
                                    u2351 0AF1                                      u3151 07BD  
                                    u3071 0713                                      u3311 0D64  
                                    u3231 0CEA                                      u2280 0917  
                                    u2440 0B9A                                      u2360 0AF8  
                                    u3160 07D2                                      u3080 0724  
                                    u3400 0DCF                                      u3320 0D6B  
                                    u3240 0CFE                                      u4200 0EAC  
                                    u4120 0E3C                                      u2281 0916  
                                    u2441 0B99                                      u2361 0AF7  
                                    u2345 0ADA                                      u3161 07D1  
                                    u3081 0723                                      u3401 0DCE  
                                    u3321 0D6A                                      u3241 0CFD  
                                    u4201 0EAB                                      u4121 0E3B  
                                    u2290 091C                                      u2450 0BA0  
                                    u2370 0B07                                      u3170 156C  
                                    u3090 072A                                      u3410 0DE2  
                                    u3330 0D70                                      u3250 0D11  
                                    u4210 0EB8                                      u4130 0E55  
                                    u2291 091B                                      u2451 0B9F  
                                    u2371 0B06                                      u3171 156B  
                                    u3091 0729                                      u3075 0710  
                                    u3411 0DE1                                      u3331 0D6F  
                                    u3251 0D10                                      u4211 0EB7  
                                    u4131 0E54                                      _CSUM 00B2  
                                    u2380 0B1A                                      u3500 1692  
                                    u2700 161B                                      u3420 0DF8  
                                    u3340 0D7F                                      u3260 0D17  
                                    u4300 0F15                                      u4220 0EC4  
                                    u4140 0E71                                      u2381 0B19  
                                    u3501 1691                                      u2701 161A  
                                    u3421 0DF7                                      u3341 0D7E  
                                    u3261 0D16                                      u4301 0F14  
                                    u4221 0EC3                                      u4141 0E70  
                                    u2390 0B2F                                      u3510 169A  
                                    u3190 0BB6                                      u2710 16F5  
                                    u3430 0DFF                                      u3350 0D85  
                                    u3270 0D26                                      u4310 0F21  
                                    u4230 0ED0                                      u4150 0E79  
                                    u2391 0B2E                                      u3511 1699  
                                    u3191 0BB5                                      u2711 16F4  
                                    u3431 0DFE                                      u3351 0D84  
                                    u3271 0D25                                      u4311 0F20  
                                    u4231 0ECF                                      u4151 0E78  
                                    u3520 169E                                      u3600 15E2  
                                    u3440 0E0E                                      u3360 0D94  
                                    u3280 0D39                                      u4320 0F2A  
                                    u4240 0ED9                                      u4160 0E82  
                                    u3521 169D                                      u3601 15E1  
                                    u3441 0E0D                                      u3361 0D93  
                                    u3281 0D38                                      u4321 0F29  
                                    u4241 0ED8                                      u4161 0E81  
                                    u3530 16AF                                      u3610 1562  
                                    u2650 07F3                                      u2810 0846  
                                    u3450 0E14                                      u3370 0DA7  
                                    u3290 0D4F                                      u4330 0F30  
                                    u4250 0EE5                                      u4170 0E8E  
                                    u3531 16AE                                      u3611 1561  
                                    u2651 07F2                                      u2811 0845  
                                    u3451 0E13                                      u3371 0DA6  
                                    u3291 0D4E                                      u4331 0F2F  
                                    u4251 0EE4                                      u4171 0E8D  
                                    u3540 1602                                      u2820 1797  
                                    u2740 1709                                      u3700 0298  
                                    u3620 0069                                      u2900 16EC  
                                    u3380 0DBA                                      u4340 0F3C  
                                    u4260 0EEE                                      u4180 0E97  
                                    u3541 1601                                      u2805 083C  
                                    u2821 1796                                      u2741 1708  
                                    u2725 16FA                                      u3701 0297  
                                    u3621 0068                                      u2901 16EB  
                                    u3381 0DB9                                      u4341 0F3B  
                                    u4261 0EED                                      u4181 0E96  
                                    u3550 0807                                      u2750 0817  
                                    u3710 030A                                      u3630 0092  
                                    u3390 0DC0                                      u4350 0F48  
                                    u4270 0EFA                                      u4190 0EA3  
                                    u3551 0806                                      u2751 0816  
                                    u2735 16FF                                      u3711 0309  
                                    u3631 0091                                      u3391 0DBF  
                                    u4351 0F47                                      u4271 0EF9  
                                    u4191 0EA2                                      u2920 08AF  
                                    u3480 167D                                      u3560 15B2  
                                    u2840 17A7                                      u3720 037C  
                                    u3640 00EE                                      u4360 0F51  
                                    u4280 0F03                                      u2921 08AE  
                                    u3481 167C                                      u3561 15B1  
                                    u2841 17A6                                      u3721 037B  
                                    u3641 00ED                                      u3465 1745  
                                    u4417 0FF8                                      u4361 0F50  
                                    u4281 0F02                                      u2930 08B5  
                                    u3490 1681                                      u3570 15C2  
                                    u2770 0827                                      u2850 17B1  
                                    u2690 1615                                      u3730 03EE  
                                    u3650 010A                                      u4370 0F57  
                                    u4290 0F09                                      u2931 08B4  
                                    u4507 09EB                                      u3491 1680  
                                    u4427 16A2                                      u3571 15C1  
                                    u2771 0826                                      u2851 17B0  
                                    u2835 179B                                      u2691 1614  
                                    u3731 03ED                                      u3651 0109  
                                    u3475 1752                                      u4371 0F56  
                                    u4291 0F08                                      u2940 08C4  
                                    u3580 15D2                                      u3740 0464  
                                    u3660 0126                                      u4380 0F60  
                                    _PMD0 0796                                      u2941 08C3  
                                    u4517 09F7                                      u4437 1685  
                                    u3581 15D1                                      u2765 081B  
                                    u3741 0463                                      u3661 0125  
                                    u4381 0F5F                                      _PMD1 0797  
                                    u2950 08D7                                      u3590 15F2  
                                    u2790 0836                                      u2870 17C0  
                                    u3750 04DA                                      u3670 0142  
                                    u4390 0F92                                      _PMD2 0798  
                                    u2951 08D6                                      u4527 09FF  
                                    u4447 09AD                                      u3591 15F1  
                                    u2791 0835                                      u2871 17BF  
                                    u2855 17AD                                      u3751 04D9  
                                    u3671 0141                                      u4391 0F91  
                                    _PMD3 0799                                      u2960 08EA  
                                    u3760 0550                                      u3680 01B4  
                                    u2880 16DA                                      _PMD4 079A  
                                    u2961 08E9                                      u4537 0A1B  
                                    u4457 09BB                                      u2785 0828  
                                    u2865 17B6                                      u3761 054F  
                                    u3681 01B3                                      u2881 16D9  
                                    _PMD5 079B                                      u2970 08F0  
                                    u3770 05C2                                      u3690 0226  
                                    u2890 16E5                                      u2971 08EF  
                                    u4547 0BA1                                      u4467 09C3  
                                    u2795 0832                                      u3771 05C1  
                                    u3691 0225                                      u2891 16E4  
                                    u2980 165F                                      u3780 0634  
                                    u4477 09CF                                      u2981 165E  
                                    u3781 0633                                      u2990 0646  
                                    u4487 09D7                                      u2991 0645  
                                    u4497 09E3                                      _TALA 00B9  
                                    _PMON 007D                                      _WPUA 0F39  
                                    _WPUB 0F44                                      _WPUC 0F4F  
                                    _WPUD 0F5A                                      _WPUE 0F65  
                                    _main 0E17                                      lcd@h 0046  
                                    lcd@m 0047                                      lcd@s 0048  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                                      start 0028  
                         __end_of_ReadI2C 16EE                           ??_conf_alarm_hh 0020  
                         ??_conf_alarm_mm 0020                           ??_conf_alarm_ss 0020  
                                   ??_lcd 004F                 __size_of_DATAEE_WriteByte 0024  
                 __end_of_TMR0_Initialize 1634                           ??_conf_clock_hh 0025  
                         ??_conf_clock_mm 0020                           ??_conf_clock_ss 0020  
          ??_TMR0_DefaultInterruptHandler 0070            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 1541                                     _ADACQ 009D  
                                   _ADCAP 009B                                     _ADACT 0099  
                __end_of_i2c1_driver_open 1573                                     ?_main 0070  
                                   _ADCLK 0098                                     _ADCNT 010C  
                                   _ADPCH 009E                                     _ADREF 009A  
                                   _ADPRE 009C                                     STR_10 1826  
                                   STR_11 1819                                     STR_20 1820  
                                   STR_12 1820                                     STR_21 1826  
                                   STR_13 1800                                     STR_30 1819  
                                   STR_22 1819                                     STR_14 1826  
                                   STR_15 1819                                     STR_31 1820  
                                   STR_23 1820                                     STR_40 1819  
                                   STR_16 1820                                     STR_32 1800  
                                   STR_24 1800                                     STR_33 1826  
                                   STR_25 1826                                     STR_41 1800  
                                   STR_17 1800                                     STR_34 1819  
                                   STR_26 1819                                     STR_50 1826  
                                   STR_42 1826                                     STR_18 1826  
                                   STR_51 1819                                     STR_19 1819  
                                   STR_43 1820                                     STR_35 1820  
                                   STR_27 1820                                     STR_44 1819  
                                   STR_52 1820                                     STR_36 1800  
                                   STR_28 1800                           __end_of___awmod 089E  
                                   STR_29 1826                                     STR_45 1800  
                                   STR_37 1800                                     STR_46 1826  
                                   STR_38 1826                                     STR_47 1819  
                                   STR_39 1820                                     STR_48 1820  
                                   _ADRPT 010D                                     STR_49 1800  
                         __end_of___lbmod 1731                           __end_of___lwdiv 084B  
                                   i1l330 0013                                     i1l333 0020  
                                   i1l337 0026                           __end_of___lwmod 17C5  
                                   i1l338 0026                                     i1l435 16C4  
                                   i1l612 09A8                                     i1l437 16C8  
                                   i1l438 16CE                                     i1l384 1676  
                                   i1l394 0002                                     i1l388 158B  
                                   _OSCEN 0891                                     _TMR0H 001D  
                                   _TMR0L 001C                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                                   _WPUC3 7A7B                                     _WPUC4 7A7C  
       __size_of_TMR0_SetInterruptHandler 0009                 ?_TMR0_SetInterruptHandler 0020  
                        __end_of_TMR0_ISR 1677                        i1___lwmod@dividend 0072  
                         _DATAEE_ReadByte 158C                           __end_of_dpowers 1819  
                   ?_ADCC_StartConversion 0070                           __end_of_isdigit 161F  
                                   _lumin 1731                                     main@c 0067  
                                   main@l 0068                                     _tsttc 0CC7  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                           __end_of_sprintf 07D7  
                      __size_ofi1___lwmod 0034                  __size_of_conf_alarm_flag 000B  
                         __initialization 002A                              __end_of_main 1000  
                          save_register@n 0079                       __size_of_LCDsend2x4 00D4  
             ?_INTERRUPT_InterruptManager 0070                                    ??_main 00A0  
                               ??_LCDchar 0028                                 ??_LCDinit 0028  
                               ??_LCDsend 0022                __end_ofi1_DATAEE_WriteByte 16CF  
                                  _ADACCH 0091                                    _ADACCL 0090  
                                  _ADCON0 0093                                    _ADCON1 0094  
                                  _ADCON2 0095                                    _ADCON3 0096  
                                  _ADERRH 0117                                    _ADERRL 0116  
                                  _ADLTHH 010F                                    _ADLTHL 010E  
                                  _ADRESH 008D                                    _ADRESL 008C  
                                  _ADSTAT 0097                                    _ADUTHH 0111  
                                  _ADUTHL 0110                                    ?_lumin 0070  
                        __end_of_WriteI2C 094B                                    _ANSELA 0F38  
                                  _ANSELB 0F43                                    _ANSELC 0F4E  
                                  _ANSELD 0F59                                    _ANSELE 0F64  
                                  _T0CON0 001E                                    _T0CON1 001F  
                                  ?_tsttc 0070                                    _RC3PPS 0F23  
                                  _RC4PPS 0F24                                    _ODCONA 0F3A  
                                  _ODCONB 0F45                                    _ODCONC 0F50  
                                  _ODCOND 0F5B                                    i1l1541 1729  
                                  i1l1613 178F                                    _ODCONE 0F66  
                                  i1l1543 1730                                    i1l4152 1660  
                                  i1l1497 089D                                    i1l4154 1662  
                                  i1l3700 1727                                    i1l4156 1670  
                                  i1l3702 172F                                    i1l3710 16BA  
                                  i1l4158 1673                                    i1l3720 16C1  
                                  i1l3712 16BC                                    i1l3722 16C3  
                                  i1l3714 16BD                                    i1l3706 16B1  
                                  i1l3730 1765                                    i1l3660 0857  
                                  i1l3652 084B                                    i1l3724 16C9  
                                  i1l3716 16BE                                    i1l3708 16B8  
                                  i1l3740 1780                                    i1l3732 176A  
                                  i1l3670 086E                                    i1l3662 085B  
                                  i1l3654 084C                                    i1l3718 16BF  
                                  i1l3742 1785                                    i1l3734 176E  
                                  i1l3726 175C                                    i1l3680 0889  
                                  i1l3672 0872                                    i1l3664 0860  
                                  i1l3656 0850                                    i1l3736 1772  
                                  i1l3728 1762                                    i1l3744 178B  
                                  i1l4800 000F                                    i1l3674 0876  
                                  i1l3666 0866                                    i1l3682 088F  
                                  i1l3658 0855                                    i1l3690 170F  
                                  i1l3738 177C                                    i1l3770 094B  
                                  i1l4802 0017                                    i1l3684 0894  
                                  i1l3676 0880                                    i1l3668 0869  
                                  i1l3692 1713                                    i1l3780 0980  
                                  i1l3772 094F                                    i1l4804 001B  
                                  i1l3686 0899                                    i1l3678 0884  
                                  i1l3694 1714                                    i1l3782 0984  
                                  i1l3774 0960                                    i1l3942 157F  
                                  i1l3696 171F                                    i1l3784 0990  
                                  i1l3776 0965                                    i1l3944 1586  
                                  i1l4808 0024                                    i1l3698 1721  
                                  i1l3786 0991                                    i1l3778 097A  
                                  i1l3788 099C                                    i1l4796 0006  
                                  i1l4798 000B                                    _LCDcmd 1528  
                                  u250_20 0876                                    u410_20 001F  
                                  u250_21 0875                                    u410_21 001E  
                                  u251_20 0880                                    u411_20 0024  
                                  u251_21 087F                                    u411_21 0023  
                                  u251_25 087C                                    u252_25 0885  
                                  u260_25 1766                                    u253_20 088F  
                                  u261_20 1772                                    u253_21 088E  
                                  u261_21 1771                                    u254_20 0894  
                                  u246_20 0850                                    u262_20 177C  
                                  u318_20 1670                                    u406_20 000B  
                                  u254_21 0893                                    u246_21 084F  
                                  u262_21 177B                                    u318_21 166F  
                                  u406_21 000A                                    u262_25 1778  
                                  u247_20 085B                                    u407_20 000F  
                                  u247_21 085A                                    u407_21 000E  
                                  u255_25 1717                                    u263_25 1781  
                                  u248_20 0866                                    u256_20 1727  
                                  u264_20 178B                                    u408_20 0017  
                                  u248_21 0865                                    u256_21 1726  
                                  u264_21 178A                                    u408_21 0016  
                                  u257_20 172F                                    u409_20 001B  
                                  u257_21 172E                                    u409_21 001A  
                                  u249_25 086A                                    u258_20 16C8  
                                  u266_20 0960                                    u258_21 16C7  
                                  u266_21 095F                                    u259_20 1762  
                                  u267_20 097A                                    u291_20 1586  
                                  u259_21 1761                                    u267_21 0979  
                                  u291_21 1585                                    u268_20 0980  
                                  u268_21 097F                                    _LCDstr 164A  
                                  _OSCFRQ 0893                                 ??_ReadI2C 0020  
                             LCDsend2x4@c 0025                ??_ADCC_GetConversionResult 0022  
                                  ___wmul 16EE                                 ??___awmod 0074  
                               ??___lbmod 0071                                 ??___lwdiv 0024  
                               ??___lwmod 002C                          ?_TMR0_Initialize 0070  
                                  lcd@buf 0055                                    lcd@ctl 0045  
                         ___awmod@divisor 0070                           ___awmod@counter 0075  
                 __end_of_DATAEE_ReadByte 159B                           _ADCC_Initialize 1634  
                          _PMD_Initialize 1520                              __pdataCOMMON 007D  
                       __end_ofi1___lwmod 1790                                 ??_isdigit 0020  
                  ??_ADCC_StartConversion 0020             i1DATAEE_WriteByte@GIEBitValue 0073  
                   __end_of_TMR0_CallBack 158C  TMR0_SetInterruptHandler@InterruptHandler 0020  
                               ??_sprintf 0036                         _SYSTEM_Initialize 159B  
                         ___lbmod@divisor 0070                   __end_of__initialization 005E  
                         ___lbmod@counter 0074                        ?_SYSTEM_Initialize 0070  
                          __pcstackCOMMON 0070                              __pidataBANK1 151C  
                     ??_SYSTEM_Initialize 0022                                 ?_TMR0_ISR 0070  
                        _DATAEE_WriteByte 07D7                             __end_of_lumin 175C  
                           __end_of_tsttc 0E17                    __end_of_PMD_Initialize 1528  
                       ??_conf_alarm_flag 0020                     TMR0_ISR@CountCallBack 00AC  
                      __size_of_conf_temp 0010               ADCC_StartConversion@channel 0020  
                            ??_LCDsend2x4 0023                 __end_of_SYSTEM_Initialize 15AB  
                                 ??_lumin 0022                              sprintf@width 003F  
                   __end_of_TMR0_callback 09A9                                   ??_tsttc 0022  
                              __pbssBANK0 006C                                __pbssBANK1 00AC  
                  i1DATAEE_WriteByte@bAdd 0070                                   ?_LCDcmd 0070  
                              _check_vars 0BA4                                   ?_LCDstr 0070  
                                 LCDcmd@c 0028                                   LCDstr@c 002A  
                                 LCDstr@p 002B                                __pmaintext 0E17  
                          lcd@temperature 0066          __end_of_TMR0_SetInterruptHandler 154A  
                                 ?___wmul 0020                                ??_TMR0_ISR 0079  
                 __end_of_ADCC_Initialize 164A                                __pintentry 0004  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                      __end_of_LCDsend2x4 0BA4                        __size_of_save_vars 00B1  
                                 _ADPREVH 008F                                   _ADPREVL 008E  
                               ?_WriteI2C 0070                                   _ADSTPTH 0113  
                                 _ADSTPTL 0112                           ?_PMD_Initialize 0070  
                        ?_DATAEE_ReadByte 0020                         ?_i2c1_driver_open 0070  
                                 _LCDchar 154A                                   _LCDinit 09A9  
                                 _LCDsend 089E                        ??_i2c1_driver_open 0020  
                              _conf_lumin 15DB                                   _OSCCON1 088D  
                                 _OSCCON3 088F                                   _NVMADRH 081B  
                                 _NVMADRL 081A                                   _NVMDATH 081D  
                                 _OSCTUNE 0892                                   _NVMDATL 081C  
                                 _NVMCON2 081F                                   _SSP1ADD 018D  
                                 _SLRCONA 0F3B                                   _SLRCONB 0F46  
                                 _SLRCONC 0F51                                   _SLRCOND 0F5C  
                                 _SLRCONE 0F67                                   _SSP1BUF 018C  
                                 _SSP1MSK 018E                    __size_of_checkButtonS1 001D  
                  __size_of_checkButtonS2 001D                              LCDsend2x4@hc 0026  
                            LCDsend2x4@lc 0027                           __size_of_LCDcmd 0008  
                    DATAEE_WriteByte@bAdd 0020                        _i2c1_driver_i2cISR 00AE  
                         __size_of_LCDstr 0016                                   _ReadI2C 16CF  
                       __end_of_conf_temp 15FB                                   ___awmod 084B  
                                 ___lbmod 170E                           __size_of___wmul 0020  
                                 ___lwdiv 080E                                   ___lwmod 1790  
                   __end_of_conf_alarm_hh 15BB                     __end_of_conf_alarm_mm 15CB  
                   __end_of_conf_alarm_ss 15DB                                ??_WriteI2C 0020  
                   __end_of_conf_clock_hh 160C                     __end_of_conf_clock_mm 080E  
                                 __ptext1 0CC7                                   __ptext2 16CF  
                                 __ptext3 1731                                   __ptext4 1530  
                                 __ptext5 1553                                   __ptext6 0062  
                                 __ptext7 0639                                   __ptext8 160C  
                                 __ptext9 16EE                     __end_of_conf_clock_ss 0800  
                                 _dpowers 180F                     _OSCILLATOR_Initialize 1538  
                            __size_of_lcd 05D7                                   _isdigit 160C  
                        ___awmod@dividend 0072                                   lcd@alah 004C  
                                 lcd@alam 004D                                   lcd@alas 004E  
                ??_PIN_MANAGER_Initialize 0020                      lcd@temperature_alarm 004A  
                                 main@ctl 0069                __size_of_SYSTEM_Initialize 0010  
                                 _sprintf 0639                                   clrloop0 1574  
                    end_of_initialization 005E                               ?_check_vars 0070  
                       __end_of_save_vars 0AD0                        i1_DATAEE_WriteByte 16B1  
                           _checkButtonS1 1677                             _checkButtonS2 1694  
                     ?i1_DATAEE_WriteByte 0070                          ?_ADCC_Initialize 0070  
                              _timer_flag 007B                  _TMR0_SetInterruptHandler 1541  
                               _PORTBbits 000D                                 _PORTCbits 000E  
                        ___lbmod@dividend 0073                               ?_conf_lumin 0070  
                               _TRISCbits 0013                                 i1___lwmod 175C  
                    ??i1_DATAEE_WriteByte 0073                  __end_of_DATAEE_WriteByte 07FB  
                             ___lbmod@rem 0075                            __end_of_LCDcmd 1530  
                          __end_of_LCDstr 1660                            LCDsend2x4@mode 0022  
                         _conf_alarm_flag 155C                            ?_checkButtonS1 0070  
                          ?_checkButtonS2 0070                            __end_of___wmul 170E  
                           __pidataCOMMON 0003                         __size_of_TMR0_ISR 0017  
                       i1___lwmod@divisor 0070                    ?_OSCILLATOR_Initialize 0070  
                     __size_of_check_vars 0123                         i1___lwmod@counter 0075  
       __size_of_ADCC_GetConversionResult 0009                 ?_ADCC_GetConversionResult 0020  
                     start_initialization 002A                  __size_of_TMR0_Initialize 0015  
         __size_of_PIN_MANAGER_Initialize 003B                               __end_of_lcd 0639  
                              ?i1___lwmod 0070                          WriteI2C@data_out 0021  
           __size_of_ADCC_StartConversion 0008                                  ??_LCDcmd 0028  
                                ??_LCDstr 0029                       DATAEE_ReadByte@bAdd 0020  
                     __size_of_conf_lumin 0010                          ??_PMD_Initialize 0020  
                                ??___wmul 0024                       lcd@luminosity_alarm 004B  
                  __size_of_TMR0_CallBack 000D                               __pdataBANK1 00B6  
                       __size_of_WriteI2C 005A                   i1DATAEE_WriteByte@bData 0072  
                             __pbssBIGRAM 2373                                  ?_LCDchar 0070  
                             __pbssCOMMON 0079                                  ?_LCDinit 0070  
                                ?_LCDsend 0070                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                          check_vars@pass 0023                              _isdigit$2407 0020  
                                LCDchar@c 0028                   __end_of_conf_alarm_flag 1567  
                                LCDsend@c 0023                               sprintf@flag 003E  
               __size_of_i2c1_driver_open 000C                               sprintf@prec 003B  
                                ?_ReadI2C 0070                     _TMR0_InterruptHandler 00BA  
                               _btn1State 006D                                 _btn2State 006C  
                               __pnvBANK1 00BA                           ??_checkButtonS1 0020  
                         ??_checkButtonS2 0020                                 _main$2802 006A  
                        ___lwdiv@dividend 0022                    _PIN_MANAGER_Initialize 17C5  
                           lcd@luminosity 0043                                  ?___awmod 0070  
                                ?___lbmod 0070                                  ?___lwdiv 0020  
                                ?___lwmod 0028               _i2c1_driver_busCollisionISR 00B0  
                  __size_of_TMR0_callback 005E                                 _conf_temp 15EB  
            ??_INTERRUPT_InterruptManager 0079                                  ?_isdigit 0070  
                        ___lwdiv@quotient 0025                               ??i1___lwmod 0074  
                                ?_sprintf 002E                             _TMR0_CallBack 157F  
                __size_of_DATAEE_ReadByte 000F                            __size_of_lumin 002B  
                          __size_of_tsttc 0150                              ??_check_vars 0022  
                       ??_TMR0_Initialize 0022                            ___wmul@product 0024  
                               clear_ram0 1573                                  _PIE0bits 0716  
                                _PIE3bits 0719                                 _save_vars 0A1F  
     __size_of_INTERRUPT_InterruptManager 0024                ??_TMR0_SetInterruptHandler 0022  
                                _PIR0bits 070C                                  _PIR3bits 070F  
                         lumin@luminosity 0024                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR0_ISR 1660  
                                _SSP1STAT 018F                                ?_conf_temp 0070  
                              _ADCON0bits 0093                                _ADCON1bits 0094  
                              _ADCON2bits 0095                                _ADCON3bits 0096  
                       ___wmul@multiplier 0020                        __end_of_check_vars 0CC7  
                            ??_conf_lumin 0020                                 main@state 006B  
                        __size_of_LCDchar 0009                     DATAEE_WriteByte@bData 0022  
                        __size_of_LCDinit 0076                          __size_of_LCDsend 0053  
                          ?_TMR0_CallBack 0070                             _TMR0_callback 094B  
                       ?_DATAEE_WriteByte 0020                          ?_conf_alarm_flag 0070  
                  __size_of_conf_alarm_hh 0010                    __size_of_conf_alarm_mm 0010  
                  __size_of_conf_alarm_ss 0010                        ??_DATAEE_WriteByte 0023  
                  __size_of_conf_clock_hh 0011                    __size_of_conf_clock_mm 000E  
                  __size_of_conf_clock_ss 0005                          __size_of_ReadI2C 001F  
                              _ADSTATbits 0097                                ?_save_vars 0070  
        __end_of_ADCC_GetConversionResult 155C                        __end_of_conf_lumin 15EB  
                 ??_OSCILLATOR_Initialize 0020                          __size_of___awmod 0053  
                        __size_of___lbmod 0023                          __size_of___lwdiv 003D  
                        __size_of___lwmod 0035                                  _WriteI2C 08F1  
                              sprintf@val 003C                                _T0CON0bits 001E  
                __size_of_ADCC_Initialize 0016                          __size_of_isdigit 0013  
                         ___lwdiv@divisor 0020                           ___lwdiv@counter 0027  
                                __ptext10 1790                                  __ptext11 080E  
                                __ptext20 15FB                                  __ptext12 164A  
                                __ptext21 0A1F                                  __ptext13 154A  
                                __ptext30 1677                                  __ptext22 07D7  
                                __ptext14 1528                                  __ptext31 159B  
                                __ptext23 15CB                                  __ptext15 1567  
                                __ptext40 089E                                  __ptext32 161F  
                                __ptext24 15BB                                  __ptext16 15EB  
                                __ptext41 08F1                                  __ptext33 1541  
                                __ptext25 15AB                                  __ptext17 15DB  
                                __ptext50 084B                                  __ptext34 1520  
                                __ptext26 155C                                  __ptext18 07FB  
                                __ptext43 1660                                  __ptext35 17C5  
                                __ptext27 0BA4                                  __ptext19 0800  
                                __ptext44 157F                                  __ptext36 1538  
                                __ptext28 158C                                  __ptext45 0002  
                                __ptext37 1634                                  __ptext29 1694  
                                __ptext46 094B                                  __ptext38 09A9  
                                __ptext47 175C                                  __ptext39 0AD0  
                                __ptext48 16B1                                  __ptext49 170E  
                            _SSP1CON1bits 0190                              _SSP1CON2bits 0191  
             __size_ofi1_DATAEE_WriteByte 001E                            ?_TMR0_callback 0070  
                        __size_of_sprintf 019E               DATAEE_WriteByte@GIEBitValue 0023  
                        _i2c1_driver_open 1567                             __size_of_main 01E9  
    __end_of_TMR0_DefaultInterruptHandler 0003     __size_of_TMR0_DefaultInterruptHandler 0001  
            _TMR0_DefaultInterruptHandler 0002                         ??_DATAEE_ReadByte 0022  
                                lcd@alarm 0044                                  lcd@state 0049  
                              tsttc@value 0023              __end_of_ADCC_StartConversion 1538  
                                int$flags 007E        __end_of_INTERRUPT_InterruptManager 0028  
              _INTERRUPT_InterruptManager 0004                              _SSP1STATbits 018F  
                             ??_conf_temp 0020                             _conf_alarm_hh 15AB  
                           _conf_alarm_mm 15BB                             _conf_alarm_ss 15CB  
                           _conf_clock_hh 15FB                             _conf_clock_mm 0800  
                           _conf_clock_ss 07FB                                _INTCONbits 000B  
                         ??_TMR0_CallBack 0079                               _NVMCON1bits 081E  
                                isdigit@c 0021                                _LCDsend2x4 0AD0  
                                intlevel1 0000                                 sprintf@ap 003A  
                               sprintf@sp 0042                          ___lwmod@dividend 002A  
                 ?_PIN_MANAGER_Initialize 0070                               ??_save_vars 0024  
           ?_TMR0_DefaultInterruptHandler 0070                  _ADCC_GetConversionResult 1553  
                          ?_conf_alarm_hh 0070                            ?_conf_alarm_mm 0070  
                          ?_conf_alarm_ss 0070                             __pstringtext1 180F  
                           __pstringtext2 1800                             __pstringtext3 1819  
                           __pstringtext4 1820                             __pstringtext5 1826  
                           __pstringtext6 182A                             __pstringtext7 182C  
                           __pstringtext8 182E                             __pstringtext9 0000  
                          ?_conf_clock_hh 0070                            ?_conf_clock_mm 0070  
                          ?_conf_clock_ss 0070                                  sprintf@c 0041  
                                sprintf@f 002E                                _SSP1DATPPS 0EC6  
                              _SSP1CLKPPS 0EC5                           ___lwmod@divisor 0028  
                         _TMR0_Initialize 161F                           ___lwmod@counter 002D  
                         ??_TMR0_callback 0077            __end_of_PIN_MANAGER_Initialize 1800  
                       ??_ADCC_Initialize 0020                     __end_of_checkButtonS1 1694  
                   __end_of_checkButtonS2 16B1  
